#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       1                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(403,18)
_dummy
_derdummy
f
fs
N
matDim_fft[1]
matDim_fft[2]
dataFFT_mag[1, 1]
dataFFT_mag[2, 1]
dataFFT_mag[3, 1]
dataFFT_mag[4, 1]
dataFFT_mag[5, 1]
dataFFT_mag[6, 1]
dataFFT_mag[7, 1]
dataFFT_mag[8, 1]
dataFFT_mag[9, 1]
dataFFT_mag[10, 1]
dataFFT_mag[11, 1]
dataFFT_mag[12, 1]
dataFFT_mag[13, 1]
dataFFT_mag[14, 1]
dataFFT_mag[15, 1]
dataFFT_mag[16, 1]
dataFFT_mag[17, 1]
dataFFT_mag[18, 1]
dataFFT_mag[19, 1]
dataFFT_mag[20, 1]
dataFFT_mag[21, 1]
dataFFT_mag[22, 1]
dataFFT_mag[23, 1]
dataFFT_mag[24, 1]
dataFFT_mag[25, 1]
dataFFT_mag[26, 1]
dataFFT_mag[27, 1]
dataFFT_mag[28, 1]
dataFFT_mag[29, 1]
dataFFT_mag[30, 1]
dataFFT_mag[31, 1]
dataFFT_mag[32, 1]
dataFFT_arg[1, 1]
dataFFT_arg[2, 1]
dataFFT_arg[3, 1]
dataFFT_arg[4, 1]
dataFFT_arg[5, 1]
dataFFT_arg[6, 1]
dataFFT_arg[7, 1]
dataFFT_arg[8, 1]
dataFFT_arg[9, 1]
dataFFT_arg[10, 1]
dataFFT_arg[11, 1]
dataFFT_arg[12, 1]
dataFFT_arg[13, 1]
dataFFT_arg[14, 1]
dataFFT_arg[15, 1]
dataFFT_arg[16, 1]
dataFFT_arg[17, 1]
dataFFT_arg[18, 1]
dataFFT_arg[19, 1]
dataFFT_arg[20, 1]
dataFFT_arg[21, 1]
dataFFT_arg[22, 1]
dataFFT_arg[23, 1]
dataFFT_arg[24, 1]
dataFFT_arg[25, 1]
dataFFT_arg[26, 1]
dataFFT_arg[27, 1]
dataFFT_arg[28, 1]
dataFFT_arg[29, 1]
dataFFT_arg[30, 1]
dataFFT_arg[31, 1]
dataFFT_arg[32, 1]
yRe[1]
yRe[2]
yRe[3]
yRe[4]
yRe[5]
yRe[6]
yRe[7]
yRe[8]
yRe[9]
yRe[10]
yRe[11]
yRe[12]
yRe[13]
yRe[14]
yRe[15]
yRe[16]
yRe[17]
yRe[18]
yRe[19]
yRe[20]
yRe[21]
yRe[22]
yRe[23]
yRe[24]
yRe[25]
yRe[26]
yRe[27]
yRe[28]
yRe[29]
yRe[30]
yRe[31]
yRe[32]
yRe[33]
yRe[34]
yRe[35]
yRe[36]
yRe[37]
yRe[38]
yRe[39]
yRe[40]
yRe[41]
yRe[42]
yRe[43]
yRe[44]
yRe[45]
yRe[46]
yRe[47]
yRe[48]
yRe[49]
yRe[50]
yRe[51]
yRe[52]
yRe[53]
yRe[54]
yRe[55]
yRe[56]
yRe[57]
yRe[58]
yRe[59]
yRe[60]
yRe[61]
yRe[62]
yRe[63]
yRe[64]
yRe[65]
yRe[66]
yRe[67]
yRe[68]
yRe[69]
yRe[70]
yRe[71]
yRe[72]
yRe[73]
yRe[74]
yRe[75]
yRe[76]
yRe[77]
yRe[78]
yRe[79]
yRe[80]
yRe[81]
yRe[82]
yRe[83]
yRe[84]
yRe[85]
yRe[86]
yRe[87]
yRe[88]
yRe[89]
yRe[90]
yRe[91]
yRe[92]
yRe[93]
yRe[94]
yRe[95]
yRe[96]
yRe[97]
yRe[98]
yRe[99]
yRe[100]
yRe[101]
yRe[102]
yRe[103]
yRe[104]
yRe[105]
yRe[106]
yRe[107]
yRe[108]
yRe[109]
yRe[110]
yRe[111]
yRe[112]
yRe[113]
yRe[114]
yRe[115]
yRe[116]
yRe[117]
yRe[118]
yRe[119]
yRe[120]
yRe[121]
yRe[122]
yRe[123]
yRe[124]
yRe[125]
yRe[126]
yRe[127]
yRe[128]
yRe[129]
yRe[130]
yRe[131]
yRe[132]
yRe[133]
yRe[134]
yRe[135]
yRe[136]
yRe[137]
yRe[138]
yRe[139]
yRe[140]
yRe[141]
yRe[142]
yRe[143]
yRe[144]
yRe[145]
yRe[146]
yRe[147]
yRe[148]
yRe[149]
yRe[150]
yRe[151]
yRe[152]
yRe[153]
yRe[154]
yRe[155]
yRe[156]
yRe[157]
yRe[158]
yRe[159]
yRe[160]
yRe[161]
yRe[162]
yRe[163]
yRe[164]
yRe[165]
yRe[166]
yIm[1]
yIm[2]
yIm[3]
yIm[4]
yIm[5]
yIm[6]
yIm[7]
yIm[8]
yIm[9]
yIm[10]
yIm[11]
yIm[12]
yIm[13]
yIm[14]
yIm[15]
yIm[16]
yIm[17]
yIm[18]
yIm[19]
yIm[20]
yIm[21]
yIm[22]
yIm[23]
yIm[24]
yIm[25]
yIm[26]
yIm[27]
yIm[28]
yIm[29]
yIm[30]
yIm[31]
yIm[32]
yIm[33]
yIm[34]
yIm[35]
yIm[36]
yIm[37]
yIm[38]
yIm[39]
yIm[40]
yIm[41]
yIm[42]
yIm[43]
yIm[44]
yIm[45]
yIm[46]
yIm[47]
yIm[48]
yIm[49]
yIm[50]
yIm[51]
yIm[52]
yIm[53]
yIm[54]
yIm[55]
yIm[56]
yIm[57]
yIm[58]
yIm[59]
yIm[60]
yIm[61]
yIm[62]
yIm[63]
yIm[64]
yIm[65]
yIm[66]
yIm[67]
yIm[68]
yIm[69]
yIm[70]
yIm[71]
yIm[72]
yIm[73]
yIm[74]
yIm[75]
yIm[76]
yIm[77]
yIm[78]
yIm[79]
yIm[80]
yIm[81]
yIm[82]
yIm[83]
yIm[84]
yIm[85]
yIm[86]
yIm[87]
yIm[88]
yIm[89]
yIm[90]
yIm[91]
yIm[92]
yIm[93]
yIm[94]
yIm[95]
yIm[96]
yIm[97]
yIm[98]
yIm[99]
yIm[100]
yIm[101]
yIm[102]
yIm[103]
yIm[104]
yIm[105]
yIm[106]
yIm[107]
yIm[108]
yIm[109]
yIm[110]
yIm[111]
yIm[112]
yIm[113]
yIm[114]
yIm[115]
yIm[116]
yIm[117]
yIm[118]
yIm[119]
yIm[120]
yIm[121]
yIm[122]
yIm[123]
yIm[124]
yIm[125]
yIm[126]
yIm[127]
yIm[128]
yIm[129]
yIm[130]
yIm[131]
yIm[132]
yIm[133]
yIm[134]
yIm[135]
yIm[136]
yIm[137]
yIm[138]
yIm[139]
yIm[140]
yIm[141]
yIm[142]
yIm[143]
yIm[144]
yIm[145]
yIm[146]
yIm[147]
yIm[148]
yIm[149]
yIm[150]
yIm[151]
yIm[152]
yIm[153]
yIm[154]
yIm[155]
yIm[156]
yIm[157]
yIm[158]
yIm[159]
yIm[160]
yIm[161]
yIm[162]
yIm[163]
yIm[164]
yIm[165]
yIm[166]

double initialValue(403,6)
 -1      1  0  0  2    0   # _dummy
  0      0  0  0  3    0   # _derdummy
  0     60  0  0  6  256   # f
  0  10000  0  0  6  256   # fs
  0    166  0  0  6  258   # N
  0     32  0  0  6  258   # matDim_fft[1]
  0      1  0  0  6  258   # matDim_fft[2]
  0      0  0  0  6  256   # dataFFT_mag[1, 1]
  0      0  0  0  6  256   # dataFFT_mag[2, 1]
  0      0  0  0  6  256   # dataFFT_mag[3, 1]
  0      0  0  0  6  256   # dataFFT_mag[4, 1]
  0      0  0  0  6  256   # dataFFT_mag[5, 1]
  0      0  0  0  6  256   # dataFFT_mag[6, 1]
  0      0  0  0  6  256   # dataFFT_mag[7, 1]
  0      0  0  0  6  256   # dataFFT_mag[8, 1]
  0      0  0  0  6  256   # dataFFT_mag[9, 1]
  0      0  0  0  6  256   # dataFFT_mag[10, 1]
  0      0  0  0  6  256   # dataFFT_mag[11, 1]
  0      0  0  0  6  256   # dataFFT_mag[12, 1]
  0      0  0  0  6  256   # dataFFT_mag[13, 1]
  0      0  0  0  6  256   # dataFFT_mag[14, 1]
  0      0  0  0  6  256   # dataFFT_mag[15, 1]
  0      0  0  0  6  256   # dataFFT_mag[16, 1]
  0      0  0  0  6  256   # dataFFT_mag[17, 1]
  0      0  0  0  6  256   # dataFFT_mag[18, 1]
  0      0  0  0  6  256   # dataFFT_mag[19, 1]
  0      0  0  0  6  256   # dataFFT_mag[20, 1]
  0      0  0  0  6  256   # dataFFT_mag[21, 1]
  0      0  0  0  6  256   # dataFFT_mag[22, 1]
  0      0  0  0  6  256   # dataFFT_mag[23, 1]
  0      0  0  0  6  256   # dataFFT_mag[24, 1]
  0      0  0  0  6  256   # dataFFT_mag[25, 1]
  0      0  0  0  6  256   # dataFFT_mag[26, 1]
  0      0  0  0  6  256   # dataFFT_mag[27, 1]
  0      0  0  0  6  256   # dataFFT_mag[28, 1]
  0      0  0  0  6  256   # dataFFT_mag[29, 1]
  0      0  0  0  6  256   # dataFFT_mag[30, 1]
  0      0  0  0  6  256   # dataFFT_mag[31, 1]
  0      0  0  0  6  256   # dataFFT_mag[32, 1]
  0      0  0  0  6  256   # dataFFT_arg[1, 1]
  0      0  0  0  6  256   # dataFFT_arg[2, 1]
  0      0  0  0  6  256   # dataFFT_arg[3, 1]
  0      0  0  0  6  256   # dataFFT_arg[4, 1]
  0      0  0  0  6  256   # dataFFT_arg[5, 1]
  0      0  0  0  6  256   # dataFFT_arg[6, 1]
  0      0  0  0  6  256   # dataFFT_arg[7, 1]
  0      0  0  0  6  256   # dataFFT_arg[8, 1]
  0      0  0  0  6  256   # dataFFT_arg[9, 1]
  0      0  0  0  6  256   # dataFFT_arg[10, 1]
  0      0  0  0  6  256   # dataFFT_arg[11, 1]
  0      0  0  0  6  256   # dataFFT_arg[12, 1]
  0      0  0  0  6  256   # dataFFT_arg[13, 1]
  0      0  0  0  6  256   # dataFFT_arg[14, 1]
  0      0  0  0  6  256   # dataFFT_arg[15, 1]
  0      0  0  0  6  256   # dataFFT_arg[16, 1]
  0      0  0  0  6  256   # dataFFT_arg[17, 1]
  0      0  0  0  6  256   # dataFFT_arg[18, 1]
  0      0  0  0  6  256   # dataFFT_arg[19, 1]
  0      0  0  0  6  256   # dataFFT_arg[20, 1]
  0      0  0  0  6  256   # dataFFT_arg[21, 1]
  0      0  0  0  6  256   # dataFFT_arg[22, 1]
  0      0  0  0  6  256   # dataFFT_arg[23, 1]
  0      0  0  0  6  256   # dataFFT_arg[24, 1]
  0      0  0  0  6  256   # dataFFT_arg[25, 1]
  0      0  0  0  6  256   # dataFFT_arg[26, 1]
  0      0  0  0  6  256   # dataFFT_arg[27, 1]
  0      0  0  0  6  256   # dataFFT_arg[28, 1]
  0      0  0  0  6  256   # dataFFT_arg[29, 1]
  0      0  0  0  6  256   # dataFFT_arg[30, 1]
  0      0  0  0  6  256   # dataFFT_arg[31, 1]
  0      0  0  0  6  256   # dataFFT_arg[32, 1]
  0      0  0  0  6  256   # yRe[1]
  0      0  0  0  6  256   # yRe[2]
  0      0  0  0  6  256   # yRe[3]
  0      0  0  0  6  256   # yRe[4]
  0      0  0  0  6  256   # yRe[5]
  0      0  0  0  6  256   # yRe[6]
  0      0  0  0  6  256   # yRe[7]
  0      0  0  0  6  256   # yRe[8]
  0      0  0  0  6  256   # yRe[9]
  0      0  0  0  6  256   # yRe[10]
  0      0  0  0  6  256   # yRe[11]
  0      0  0  0  6  256   # yRe[12]
  0      0  0  0  6  256   # yRe[13]
  0      0  0  0  6  256   # yRe[14]
  0      0  0  0  6  256   # yRe[15]
  0      0  0  0  6  256   # yRe[16]
  0      0  0  0  6  256   # yRe[17]
  0      0  0  0  6  256   # yRe[18]
  0      0  0  0  6  256   # yRe[19]
  0      0  0  0  6  256   # yRe[20]
  0      0  0  0  6  256   # yRe[21]
  0      0  0  0  6  256   # yRe[22]
  0      0  0  0  6  256   # yRe[23]
  0      0  0  0  6  256   # yRe[24]
  0      0  0  0  6  256   # yRe[25]
  0      0  0  0  6  256   # yRe[26]
  0      0  0  0  6  256   # yRe[27]
  0      0  0  0  6  256   # yRe[28]
  0      0  0  0  6  256   # yRe[29]
  0      0  0  0  6  256   # yRe[30]
  0      0  0  0  6  256   # yRe[31]
  0      0  0  0  6  256   # yRe[32]
  0      0  0  0  6  256   # yRe[33]
  0      0  0  0  6  256   # yRe[34]
  0      0  0  0  6  256   # yRe[35]
  0      0  0  0  6  256   # yRe[36]
  0      0  0  0  6  256   # yRe[37]
  0      0  0  0  6  256   # yRe[38]
  0      0  0  0  6  256   # yRe[39]
  0      0  0  0  6  256   # yRe[40]
  0      0  0  0  6  256   # yRe[41]
  0      0  0  0  6  256   # yRe[42]
  0      0  0  0  6  256   # yRe[43]
  0      0  0  0  6  256   # yRe[44]
  0      0  0  0  6  256   # yRe[45]
  0      0  0  0  6  256   # yRe[46]
  0      0  0  0  6  256   # yRe[47]
  0      0  0  0  6  256   # yRe[48]
  0      0  0  0  6  256   # yRe[49]
  0      0  0  0  6  256   # yRe[50]
  0      0  0  0  6  256   # yRe[51]
  0      0  0  0  6  256   # yRe[52]
  0      0  0  0  6  256   # yRe[53]
  0      0  0  0  6  256   # yRe[54]
  0      0  0  0  6  256   # yRe[55]
  0      0  0  0  6  256   # yRe[56]
  0      0  0  0  6  256   # yRe[57]
  0      0  0  0  6  256   # yRe[58]
  0      0  0  0  6  256   # yRe[59]
  0      0  0  0  6  256   # yRe[60]
  0      0  0  0  6  256   # yRe[61]
  0      0  0  0  6  256   # yRe[62]
  0      0  0  0  6  256   # yRe[63]
  0      0  0  0  6  256   # yRe[64]
  0      0  0  0  6  256   # yRe[65]
  0      0  0  0  6  256   # yRe[66]
  0      0  0  0  6  256   # yRe[67]
  0      0  0  0  6  256   # yRe[68]
  0      0  0  0  6  256   # yRe[69]
  0      0  0  0  6  256   # yRe[70]
  0      0  0  0  6  256   # yRe[71]
  0      0  0  0  6  256   # yRe[72]
  0      0  0  0  6  256   # yRe[73]
  0      0  0  0  6  256   # yRe[74]
  0      0  0  0  6  256   # yRe[75]
  0      0  0  0  6  256   # yRe[76]
  0      0  0  0  6  256   # yRe[77]
  0      0  0  0  6  256   # yRe[78]
  0      0  0  0  6  256   # yRe[79]
  0      0  0  0  6  256   # yRe[80]
  0      0  0  0  6  256   # yRe[81]
  0      0  0  0  6  256   # yRe[82]
  0      0  0  0  6  256   # yRe[83]
  0      0  0  0  6  256   # yRe[84]
  0      0  0  0  6  256   # yRe[85]
  0      0  0  0  6  256   # yRe[86]
  0      0  0  0  6  256   # yRe[87]
  0      0  0  0  6  256   # yRe[88]
  0      0  0  0  6  256   # yRe[89]
  0      0  0  0  6  256   # yRe[90]
  0      0  0  0  6  256   # yRe[91]
  0      0  0  0  6  256   # yRe[92]
  0      0  0  0  6  256   # yRe[93]
  0      0  0  0  6  256   # yRe[94]
  0      0  0  0  6  256   # yRe[95]
  0      0  0  0  6  256   # yRe[96]
  0      0  0  0  6  256   # yRe[97]
  0      0  0  0  6  256   # yRe[98]
  0      0  0  0  6  256   # yRe[99]
  0      0  0  0  6  256   # yRe[100]
  0      0  0  0  6  256   # yRe[101]
  0      0  0  0  6  256   # yRe[102]
  0      0  0  0  6  256   # yRe[103]
  0      0  0  0  6  256   # yRe[104]
  0      0  0  0  6  256   # yRe[105]
  0      0  0  0  6  256   # yRe[106]
  0      0  0  0  6  256   # yRe[107]
  0      0  0  0  6  256   # yRe[108]
  0      0  0  0  6  256   # yRe[109]
  0      0  0  0  6  256   # yRe[110]
  0      0  0  0  6  256   # yRe[111]
  0      0  0  0  6  256   # yRe[112]
  0      0  0  0  6  256   # yRe[113]
  0      0  0  0  6  256   # yRe[114]
  0      0  0  0  6  256   # yRe[115]
  0      0  0  0  6  256   # yRe[116]
  0      0  0  0  6  256   # yRe[117]
  0      0  0  0  6  256   # yRe[118]
  0      0  0  0  6  256   # yRe[119]
  0      0  0  0  6  256   # yRe[120]
  0      0  0  0  6  256   # yRe[121]
  0      0  0  0  6  256   # yRe[122]
  0      0  0  0  6  256   # yRe[123]
  0      0  0  0  6  256   # yRe[124]
  0      0  0  0  6  256   # yRe[125]
  0      0  0  0  6  256   # yRe[126]
  0      0  0  0  6  256   # yRe[127]
  0      0  0  0  6  256   # yRe[128]
  0      0  0  0  6  256   # yRe[129]
  0      0  0  0  6  256   # yRe[130]
  0      0  0  0  6  256   # yRe[131]
  0      0  0  0  6  256   # yRe[132]
  0      0  0  0  6  256   # yRe[133]
  0      0  0  0  6  256   # yRe[134]
  0      0  0  0  6  256   # yRe[135]
  0      0  0  0  6  256   # yRe[136]
  0      0  0  0  6  256   # yRe[137]
  0      0  0  0  6  256   # yRe[138]
  0      0  0  0  6  256   # yRe[139]
  0      0  0  0  6  256   # yRe[140]
  0      0  0  0  6  256   # yRe[141]
  0      0  0  0  6  256   # yRe[142]
  0      0  0  0  6  256   # yRe[143]
  0      0  0  0  6  256   # yRe[144]
  0      0  0  0  6  256   # yRe[145]
  0      0  0  0  6  256   # yRe[146]
  0      0  0  0  6  256   # yRe[147]
  0      0  0  0  6  256   # yRe[148]
  0      0  0  0  6  256   # yRe[149]
  0      0  0  0  6  256   # yRe[150]
  0      0  0  0  6  256   # yRe[151]
  0      0  0  0  6  256   # yRe[152]
  0      0  0  0  6  256   # yRe[153]
  0      0  0  0  6  256   # yRe[154]
  0      0  0  0  6  256   # yRe[155]
  0      0  0  0  6  256   # yRe[156]
  0      0  0  0  6  256   # yRe[157]
  0      0  0  0  6  256   # yRe[158]
  0      0  0  0  6  256   # yRe[159]
  0      0  0  0  6  256   # yRe[160]
  0      0  0  0  6  256   # yRe[161]
  0      0  0  0  6  256   # yRe[162]
  0      0  0  0  6  256   # yRe[163]
  0      0  0  0  6  256   # yRe[164]
  0      0  0  0  6  256   # yRe[165]
  0      0  0  0  6  256   # yRe[166]
  0      0  0  0  6  256   # yIm[1]
  0      0  0  0  6  256   # yIm[2]
  0      0  0  0  6  256   # yIm[3]
  0      0  0  0  6  256   # yIm[4]
  0      0  0  0  6  256   # yIm[5]
  0      0  0  0  6  256   # yIm[6]
  0      0  0  0  6  256   # yIm[7]
  0      0  0  0  6  256   # yIm[8]
  0      0  0  0  6  256   # yIm[9]
  0      0  0  0  6  256   # yIm[10]
  0      0  0  0  6  256   # yIm[11]
  0      0  0  0  6  256   # yIm[12]
  0      0  0  0  6  256   # yIm[13]
  0      0  0  0  6  256   # yIm[14]
  0      0  0  0  6  256   # yIm[15]
  0      0  0  0  6  256   # yIm[16]
  0      0  0  0  6  256   # yIm[17]
  0      0  0  0  6  256   # yIm[18]
  0      0  0  0  6  256   # yIm[19]
  0      0  0  0  6  256   # yIm[20]
  0      0  0  0  6  256   # yIm[21]
  0      0  0  0  6  256   # yIm[22]
  0      0  0  0  6  256   # yIm[23]
  0      0  0  0  6  256   # yIm[24]
  0      0  0  0  6  256   # yIm[25]
  0      0  0  0  6  256   # yIm[26]
  0      0  0  0  6  256   # yIm[27]
  0      0  0  0  6  256   # yIm[28]
  0      0  0  0  6  256   # yIm[29]
  0      0  0  0  6  256   # yIm[30]
  0      0  0  0  6  256   # yIm[31]
  0      0  0  0  6  256   # yIm[32]
  0      0  0  0  6  256   # yIm[33]
  0      0  0  0  6  256   # yIm[34]
  0      0  0  0  6  256   # yIm[35]
  0      0  0  0  6  256   # yIm[36]
  0      0  0  0  6  256   # yIm[37]
  0      0  0  0  6  256   # yIm[38]
  0      0  0  0  6  256   # yIm[39]
  0      0  0  0  6  256   # yIm[40]
  0      0  0  0  6  256   # yIm[41]
  0      0  0  0  6  256   # yIm[42]
  0      0  0  0  6  256   # yIm[43]
  0      0  0  0  6  256   # yIm[44]
  0      0  0  0  6  256   # yIm[45]
  0      0  0  0  6  256   # yIm[46]
  0      0  0  0  6  256   # yIm[47]
  0      0  0  0  6  256   # yIm[48]
  0      0  0  0  6  256   # yIm[49]
  0      0  0  0  6  256   # yIm[50]
  0      0  0  0  6  256   # yIm[51]
  0      0  0  0  6  256   # yIm[52]
  0      0  0  0  6  256   # yIm[53]
  0      0  0  0  6  256   # yIm[54]
  0      0  0  0  6  256   # yIm[55]
  0      0  0  0  6  256   # yIm[56]
  0      0  0  0  6  256   # yIm[57]
  0      0  0  0  6  256   # yIm[58]
  0      0  0  0  6  256   # yIm[59]
  0      0  0  0  6  256   # yIm[60]
  0      0  0  0  6  256   # yIm[61]
  0      0  0  0  6  256   # yIm[62]
  0      0  0  0  6  256   # yIm[63]
  0      0  0  0  6  256   # yIm[64]
  0      0  0  0  6  256   # yIm[65]
  0      0  0  0  6  256   # yIm[66]
  0      0  0  0  6  256   # yIm[67]
  0      0  0  0  6  256   # yIm[68]
  0      0  0  0  6  256   # yIm[69]
  0      0  0  0  6  256   # yIm[70]
  0      0  0  0  6  256   # yIm[71]
  0      0  0  0  6  256   # yIm[72]
  0      0  0  0  6  256   # yIm[73]
  0      0  0  0  6  256   # yIm[74]
  0      0  0  0  6  256   # yIm[75]
  0      0  0  0  6  256   # yIm[76]
  0      0  0  0  6  256   # yIm[77]
  0      0  0  0  6  256   # yIm[78]
  0      0  0  0  6  256   # yIm[79]
  0      0  0  0  6  256   # yIm[80]
  0      0  0  0  6  256   # yIm[81]
  0      0  0  0  6  256   # yIm[82]
  0      0  0  0  6  256   # yIm[83]
  0      0  0  0  6  256   # yIm[84]
  0      0  0  0  6  256   # yIm[85]
  0      0  0  0  6  256   # yIm[86]
  0      0  0  0  6  256   # yIm[87]
  0      0  0  0  6  256   # yIm[88]
  0      0  0  0  6  256   # yIm[89]
  0      0  0  0  6  256   # yIm[90]
  0      0  0  0  6  256   # yIm[91]
  0      0  0  0  6  256   # yIm[92]
  0      0  0  0  6  256   # yIm[93]
  0      0  0  0  6  256   # yIm[94]
  0      0  0  0  6  256   # yIm[95]
  0      0  0  0  6  256   # yIm[96]
  0      0  0  0  6  256   # yIm[97]
  0      0  0  0  6  256   # yIm[98]
  0      0  0  0  6  256   # yIm[99]
  0      0  0  0  6  256   # yIm[100]
  0      0  0  0  6  256   # yIm[101]
  0      0  0  0  6  256   # yIm[102]
  0      0  0  0  6  256   # yIm[103]
  0      0  0  0  6  256   # yIm[104]
  0      0  0  0  6  256   # yIm[105]
  0      0  0  0  6  256   # yIm[106]
  0      0  0  0  6  256   # yIm[107]
  0      0  0  0  6  256   # yIm[108]
  0      0  0  0  6  256   # yIm[109]
  0      0  0  0  6  256   # yIm[110]
  0      0  0  0  6  256   # yIm[111]
  0      0  0  0  6  256   # yIm[112]
  0      0  0  0  6  256   # yIm[113]
  0      0  0  0  6  256   # yIm[114]
  0      0  0  0  6  256   # yIm[115]
  0      0  0  0  6  256   # yIm[116]
  0      0  0  0  6  256   # yIm[117]
  0      0  0  0  6  256   # yIm[118]
  0      0  0  0  6  256   # yIm[119]
  0      0  0  0  6  256   # yIm[120]
  0      0  0  0  6  256   # yIm[121]
  0      0  0  0  6  256   # yIm[122]
  0      0  0  0  6  256   # yIm[123]
  0      0  0  0  6  256   # yIm[124]
  0      0  0  0  6  256   # yIm[125]
  0      0  0  0  6  256   # yIm[126]
  0      0  0  0  6  256   # yIm[127]
  0      0  0  0  6  256   # yIm[128]
  0      0  0  0  6  256   # yIm[129]
  0      0  0  0  6  256   # yIm[130]
  0      0  0  0  6  256   # yIm[131]
  0      0  0  0  6  256   # yIm[132]
  0      0  0  0  6  256   # yIm[133]
  0      0  0  0  6  256   # yIm[134]
  0      0  0  0  6  256   # yIm[135]
  0      0  0  0  6  256   # yIm[136]
  0      0  0  0  6  256   # yIm[137]
  0      0  0  0  6  256   # yIm[138]
  0      0  0  0  6  256   # yIm[139]
  0      0  0  0  6  256   # yIm[140]
  0      0  0  0  6  256   # yIm[141]
  0      0  0  0  6  256   # yIm[142]
  0      0  0  0  6  256   # yIm[143]
  0      0  0  0  6  256   # yIm[144]
  0      0  0  0  6  256   # yIm[145]
  0      0  0  0  6  256   # yIm[146]
  0      0  0  0  6  256   # yIm[147]
  0      0  0  0  6  256   # yIm[148]
  0      0  0  0  6  256   # yIm[149]
  0      0  0  0  6  256   # yIm[150]
  0      0  0  0  6  256   # yIm[151]
  0      0  0  0  6  256   # yIm[152]
  0      0  0  0  6  256   # yIm[153]
  0      0  0  0  6  256   # yIm[154]
  0      0  0  0  6  256   # yIm[155]
  0      0  0  0  6  256   # yIm[156]
  0      0  0  0  6  256   # yIm[157]
  0      0  0  0  6  256   # yIm[158]
  0      0  0  0  6  256   # yIm[159]
  0      0  0  0  6  256   # yIm[160]
  0      0  0  0  6  256   # yIm[161]
  0      0  0  0  6  256   # yIm[162]
  0      0  0  0  6  256   # yIm[163]
  0      0  0  0  6  256   # yIm[164]
  0      0  0  0  6  256   # yIm[165]
  0      0  0  0  6  256   # yIm[166]


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(403,18)
dummy
derdummy


[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]













































































































































































































































































































































































































