Compiler arguments:
  -log=verbose: compile_log.txt,w|xml|stderr -target=me -version=2.0 -platform=linux64 -out=. -modelicapath=/home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL ../../../../HPF HPF.Examples.DC_Testbed.Configuration_3 
Current working directory:
  /media/avpreetsingh/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/HPF/Examples/DC_Testbed/Configuration_3.pyjmi
Compiler version: r12669
Java version: 11.0.4
OS name: Linux
OS architecture: amd64
MODELICAPATH    = 
JAVA_HOME       = /usr/lib/jvm/java-11-openjdk-amd64
JMODELICA_HOME  = /home/avpreetsingh/programfiles/jModelica/
======= Compiling model =======
Parsing ../../../../HPF/package.mo...
Checking for errors...
MODELICAPATH = /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL
extra_lib_dirs = 
Reading file: ../../../../HPF/package.mo
Reading file: ../../../../HPF/Examples/package.mo
Reading file: ../../../../HPF/Examples/DC_Testbed/package.mo
Reading file: ../../../../HPF/Examples/DC_Testbed/Configuration_3.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/package.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Icons.mo
Reading file: ../../../../HPF/SystemDef.mo
Reading file: ../../../../HPF/SinglePhase/package.mo
Reading file: ../../../../HPF/SinglePhase/Sources/package.mo
Reading file: ../../../../HPF/SinglePhase/Sources/VoltageSource.mo
Reading file: ../../../../HPF/SinglePhase/Interface.mo
Reading file: ../../../../HPF/SinglePhase/Components/package.mo
Reading file: ../../../../HPF/SinglePhase/Components/Ground.mo
Reading file: ../../../../HPF/SinglePhase/NonlinearLoads/package.mo
Reading file: ../../../../HPF/SinglePhase/NonlinearLoads/Rectifier.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Electrical/package.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Electrical/Analog/package.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Electrical/Analog/Basic.mo
Reading file: ../../../../HPF/SinglePhase/Components/Resistor.mo
Reading file: ../../../../HPF/SinglePhase/Components/Impedance.mo
Reading file: ../../../../HPF/Machines/package.mo
Reading file: ../../../../HPF/Machines/Transformers_iPh/package.mo
Reading file: ../../../../HPF/Machines/Transformers_iPh/Test_DY.mo
Reading file: ../../../../HPF/DC/package.mo
Reading file: ../../../../HPF/DC/DC_Load.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Electrical/Analog/Interfaces.mo
Reading file: ../../../../HPF/Utilities.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/SIunits.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Complex.mo
Reading file: ../../../../HPF/Types.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Constants.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Math/package.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/Electrical/Analog/Sources.mo
Reading file: /home/avpreetsingh/programfiles/jModelica/ThirdParty/MSL/Modelica/ComplexMath.mo
Reading file: ../../../../HPF/SinglePhase/Components/IdealTransformer.mo
Flattening model...
Raw flattened model:
fclass HPF.Examples.DC_Testbed.Configuration_3
 parameter Integer systemDef.hrms[3] = {1, 3, 5} "Harmonics to simulate" /* { 1, 3, 5 } */;
 structural parameter Integer systemDef.numHrm = 3 "Number of harmonics. (Automatically generated from hrms. Do not alter)" /* 3 */;
 parameter Real systemDef.fFund = 60 "Fundamental frequency" /* 60 */;
 parameter Real systemDef.smplFreq = 5000.0 "Sampling frequency (Hz)" /* 5000.0 */;
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 discrete Boolean systemDef.modeSelect(start = false);
 discrete Boolean systemDef.eventWriteData(start = false);
 discrete Boolean systemDef.eventReadData(start = false);
 discrete HPF.Utilities.ComponentProperties PhA.properties(ComponentType = "VoltageSource");
 parameter Real PhA.vMag[3] = {125, 0.25, 0.5} "Voltage Magnitude (Volts rms)" /* { 125, 0.25, 0.5 } */;
 parameter Real PhA.vArg[3] = {0, 1, 0.53} "Voltage angle (rad)" /* { 0, 1, 0.53 } */;
 Real PhA.P = PhA.v[1:3].re * PhA.i[1:3].re + PhA.v[1:3].im * PhA.i[1:3].im "Real Power";
 Modelica.SIunits.Angle PhA.theta(start = 0) = PhA.pin_p.reference.theta;
 Complex PhA.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex PhA.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real PhA.omega;
 HPF.Types.Reference PhA.pin_p.reference "Reference";
 structural parameter Integer PhA.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex PhA.pin_p.v[3] "Complex potential at the node";
 Real PhA.pin_p.iIm[3];
 Real PhA.pin_p.iRe[3];
 HPF.Types.Reference PhA.pin_n.reference "Reference";
 structural parameter Integer PhA.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex PhA.pin_n.v[3] "Complex potential at the node";
 Real PhA.pin_n.iIm[3];
 Real PhA.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties PhB.properties(ComponentType = "VoltageSource");
 parameter Real PhB.vMag[3] = {125, 0.25, 0.5} "Voltage Magnitude (Volts rms)" /* { 125, 0.25, 0.5 } */;
 parameter Real PhB.vArg[3] = {1.2, 2.5, 0.3} "Voltage angle (rad)" /* { 1.2, 2.5, 0.3 } */;
 Real PhB.P = PhB.v[1:3].re * PhB.i[1:3].re + PhB.v[1:3].im * PhB.i[1:3].im "Real Power";
 Modelica.SIunits.Angle PhB.theta(start = 0) = PhB.pin_p.reference.theta;
 Complex PhB.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex PhB.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real PhB.omega;
 HPF.Types.Reference PhB.pin_p.reference "Reference";
 structural parameter Integer PhB.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex PhB.pin_p.v[3] "Complex potential at the node";
 Real PhB.pin_p.iIm[3];
 Real PhB.pin_p.iRe[3];
 HPF.Types.Reference PhB.pin_n.reference "Reference";
 structural parameter Integer PhB.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex PhB.pin_n.v[3] "Complex potential at the node";
 Real PhB.pin_n.iIm[3];
 Real PhB.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties PhC.properties(ComponentType = "VoltageSource");
 parameter Real PhC.vMag[3] = {125, 2, 0.3} "Voltage Magnitude (Volts rms)" /* { 125, 2, 0.3 } */;
 parameter Real PhC.vArg[3] = {1.9, 2, -0.5} "Voltage angle (rad)" /* { 1.9, 2, -0.5 } */;
 Real PhC.P = PhC.v[1:3].re * PhC.i[1:3].re + PhC.v[1:3].im * PhC.i[1:3].im "Real Power";
 Modelica.SIunits.Angle PhC.theta(start = 0) = PhC.pin_p.reference.theta;
 Complex PhC.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex PhC.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real PhC.omega;
 HPF.Types.Reference PhC.pin_p.reference "Reference";
 structural parameter Integer PhC.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex PhC.pin_p.v[3] "Complex potential at the node";
 Real PhC.pin_p.iIm[3];
 Real PhC.pin_p.iRe[3];
 HPF.Types.Reference PhC.pin_n.reference "Reference";
 structural parameter Integer PhC.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex PhC.pin_n.v[3] "Complex potential at the node";
 Real PhC.pin_n.iIm[3];
 Real PhC.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties ground1.properties(ComponentType = "Ground");
 HPF.Types.Reference ground1.pin.reference "Reference";
 structural parameter Integer ground1.pin.h = 3 "Numbder of harmonics" /* 3 */;
 Complex ground1.pin.v[3] "Complex potential at the node";
 Real ground1.pin.iIm[3];
 Real ground1.pin.iRe[3];
 discrete HPF.Utilities.ComponentProperties ground2.properties(ComponentType = "Ground");
 HPF.Types.Reference ground2.pin.reference "Reference";
 structural parameter Integer ground2.pin.h = 3 "Numbder of harmonics" /* 3 */;
 Complex ground2.pin.v[3] "Complex potential at the node";
 Real ground2.pin.iIm[3];
 Real ground2.pin.iRe[3];
 discrete HPF.Utilities.ComponentProperties laptop_adpt_1.properties(ComponentType = "NonlinearLoad");
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_1.constantVoltage1.V(start = 1) = laptop_adpt_1.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential laptop_adpt_1.constantVoltage1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop_adpt_1.constantVoltage1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop_adpt_1.constantVoltage1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_1.constantVoltage1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_1.constantVoltage1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_1.constantVoltage1.n.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_1.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_1.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_1.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_1.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference laptop_adpt_1.hPin_P.reference "Reference";
 structural parameter Integer laptop_adpt_1.hPin_P.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_1.hPin_P.v[3] "Complex potential at the node";
 Real laptop_adpt_1.hPin_P.iIm[3];
 Real laptop_adpt_1.hPin_P.iRe[3];
 HPF.Types.Reference laptop_adpt_1.hPin_N.reference "Reference";
 structural parameter Integer laptop_adpt_1.hPin_N.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_1.hPin_N.v[3] "Complex potential at the node";
 Real laptop_adpt_1.hPin_N.iIm[3];
 Real laptop_adpt_1.hPin_N.iRe[3];
 parameter Real laptop_adpt_1.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_1.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[4] = {2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768} "Harmonic model magnitude polynomial coefficient" /* { 2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768 } */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[4] = {-5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008} "Harmonic model argument (angle, [rad]) polynomial coefficient" /* { -5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008 } */;
 parameter Real laptop_adpt_1.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real laptop_adpt_1.P = laptop_adpt_1.constantVoltage1.v * laptop_adpt_1.constantVoltage1.i;
 Complex laptop_adpt_1.loadBase1.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex laptop_adpt_1.loadBase1.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real laptop_adpt_1.loadBase1.omega;
 HPF.Types.Reference laptop_adpt_1.loadBase1.pin_p.reference "Reference";
 structural parameter Integer laptop_adpt_1.loadBase1.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_1.loadBase1.pin_p.v[3] "Complex potential at the node";
 Real laptop_adpt_1.loadBase1.pin_p.iIm[3];
 Real laptop_adpt_1.loadBase1.pin_p.iRe[3];
 HPF.Types.Reference laptop_adpt_1.loadBase1.pin_n.reference "Reference";
 structural parameter Integer laptop_adpt_1.loadBase1.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_1.loadBase1.pin_n.v[3] "Complex potential at the node";
 Real laptop_adpt_1.loadBase1.pin_n.iIm[3];
 Real laptop_adpt_1.loadBase1.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties laptop_adpt_3.properties(ComponentType = "NonlinearLoad");
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_3.constantVoltage1.V(start = 1) = laptop_adpt_3.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential laptop_adpt_3.constantVoltage1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop_adpt_3.constantVoltage1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop_adpt_3.constantVoltage1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_3.constantVoltage1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_3.constantVoltage1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_3.constantVoltage1.n.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_3.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_3.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_3.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_3.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference laptop_adpt_3.hPin_P.reference "Reference";
 structural parameter Integer laptop_adpt_3.hPin_P.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_3.hPin_P.v[3] "Complex potential at the node";
 Real laptop_adpt_3.hPin_P.iIm[3];
 Real laptop_adpt_3.hPin_P.iRe[3];
 HPF.Types.Reference laptop_adpt_3.hPin_N.reference "Reference";
 structural parameter Integer laptop_adpt_3.hPin_N.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_3.hPin_N.v[3] "Complex potential at the node";
 Real laptop_adpt_3.hPin_N.iIm[3];
 Real laptop_adpt_3.hPin_N.iRe[3];
 parameter Real laptop_adpt_3.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_3.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[4] = {2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768} "Harmonic model magnitude polynomial coefficient" /* { 2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768 } */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[4] = {-5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008} "Harmonic model argument (angle, [rad]) polynomial coefficient" /* { -5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008 } */;
 parameter Real laptop_adpt_3.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real laptop_adpt_3.P = laptop_adpt_3.constantVoltage1.v * laptop_adpt_3.constantVoltage1.i;
 Complex laptop_adpt_3.loadBase1.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex laptop_adpt_3.loadBase1.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real laptop_adpt_3.loadBase1.omega;
 HPF.Types.Reference laptop_adpt_3.loadBase1.pin_p.reference "Reference";
 structural parameter Integer laptop_adpt_3.loadBase1.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_3.loadBase1.pin_p.v[3] "Complex potential at the node";
 Real laptop_adpt_3.loadBase1.pin_p.iIm[3];
 Real laptop_adpt_3.loadBase1.pin_p.iRe[3];
 HPF.Types.Reference laptop_adpt_3.loadBase1.pin_n.reference "Reference";
 structural parameter Integer laptop_adpt_3.loadBase1.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_3.loadBase1.pin_n.v[3] "Complex potential at the node";
 Real laptop_adpt_3.loadBase1.pin_n.iIm[3];
 Real laptop_adpt_3.loadBase1.pin_n.iRe[3];
 Modelica.SIunits.ElectricPotential ground6.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground6.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential ground8.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground8.p.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties terminal.properties(ComponentType = "Resistor");
 parameter Real terminal.r(start = 1) = 1000000.0 "Resistance (ohm)" /* 1000000.0 */;
 Real terminal.vFundAbs = Modelica.ComplexMath.'abs'(terminal.v[1]);
 Real terminal.vFundArg = Modelica.ComplexMath.arg(terminal.v[1], 0);
 Real terminal.iFundAbs = Modelica.ComplexMath.'abs'(terminal.i[1]);
 Real terminal.iFundArg = Modelica.ComplexMath.arg(terminal.i[1], 0);
 Complex terminal.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex terminal.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real terminal.omega;
 HPF.Types.Reference terminal.pin_p.reference "Reference";
 structural parameter Integer terminal.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex terminal.pin_p.v[3] "Complex potential at the node";
 Real terminal.pin_p.iIm[3];
 Real terminal.pin_p.iRe[3];
 HPF.Types.Reference terminal.pin_n.reference "Reference";
 structural parameter Integer terminal.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex terminal.pin_n.v[3] "Complex potential at the node";
 Real terminal.pin_n.iIm[3];
 Real terminal.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties z.properties(ComponentType = "Impedance");
 parameter Complex z.z(re(start = 1),im(start = 0)) = Complex.'+'(Complex.'constructor'.fromReal(2, 0), Complex.'*'.multiply(Complex.'constructor'.fromReal(3.2, 0), Complex(0, 1))) "Impedance, R + jX";
 Real z.vFundAbs = Modelica.ComplexMath.'abs'(z.v[1]);
 Real z.vFundArg = Modelica.ComplexMath.arg(z.v[1], 0);
 Real z.iFundAbs = Modelica.ComplexMath.'abs'(z.i[1]);
 Real z.iFundArg = Modelica.ComplexMath.arg(z.i[1], 0);
 Complex z.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex z.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real z.omega;
 HPF.Types.Reference z.pin_p.reference "Reference";
 structural parameter Integer z.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex z.pin_p.v[3] "Complex potential at the node";
 Real z.pin_p.iIm[3];
 Real z.pin_p.iRe[3];
 HPF.Types.Reference z.pin_n.reference "Reference";
 structural parameter Integer z.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex z.pin_n.v[3] "Complex potential at the node";
 Real z.pin_n.iIm[3];
 Real z.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties z1.properties(ComponentType = "Impedance");
 parameter Complex z1.z(re(start = 1),im(start = 0)) = Complex.'+'(Complex.'constructor'.fromReal(2, 0), Complex.'*'.multiply(Complex.'constructor'.fromReal(3, 0), Complex(0, 1))) "Impedance, R + jX";
 Real z1.vFundAbs = Modelica.ComplexMath.'abs'(z1.v[1]);
 Real z1.vFundArg = Modelica.ComplexMath.arg(z1.v[1], 0);
 Real z1.iFundAbs = Modelica.ComplexMath.'abs'(z1.i[1]);
 Real z1.iFundArg = Modelica.ComplexMath.arg(z1.i[1], 0);
 Complex z1.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex z1.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real z1.omega;
 HPF.Types.Reference z1.pin_p.reference "Reference";
 structural parameter Integer z1.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex z1.pin_p.v[3] "Complex potential at the node";
 Real z1.pin_p.iIm[3];
 Real z1.pin_p.iRe[3];
 HPF.Types.Reference z1.pin_n.reference "Reference";
 structural parameter Integer z1.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex z1.pin_n.v[3] "Complex potential at the node";
 Real z1.pin_n.iIm[3];
 Real z1.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties test_DY.properties(ComponentType = "MultiPhaseTransformer");
 parameter Integer test_DY.N = 10 "Turns ration" /* 10 */;
 discrete HPF.Utilities.ComponentProperties test_DY.idealTransformer1.properties(ComponentType = "Transformer");
 parameter Real test_DY.idealTransformer1.N = test_DY.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 Complex test_DY.idealTransformer1.vPrim[3] "Complex voltage primary winding";
 Complex test_DY.idealTransformer1.iPrim[3] "Complex current primary winding";
 Complex test_DY.idealTransformer1.vSec[3] "Complex voltage secondary winding";
 Complex test_DY.idealTransformer1.iSec[3] "Complex current secondary winding";
 HPF.Types.Reference test_DY.idealTransformer1.pinP_Prim.reference "Reference";
 structural parameter Integer test_DY.idealTransformer1.pinP_Prim.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer1.pinP_Prim.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer1.pinP_Prim.iIm[3];
 Real test_DY.idealTransformer1.pinP_Prim.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer1.pinN_Prim.reference "Reference";
 structural parameter Integer test_DY.idealTransformer1.pinN_Prim.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer1.pinN_Prim.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer1.pinN_Prim.iIm[3];
 Real test_DY.idealTransformer1.pinN_Prim.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer1.pinP_Sec.reference "Reference";
 structural parameter Integer test_DY.idealTransformer1.pinP_Sec.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer1.pinP_Sec.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer1.pinP_Sec.iIm[3];
 Real test_DY.idealTransformer1.pinP_Sec.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer1.pinN_Sec.reference "Reference";
 structural parameter Integer test_DY.idealTransformer1.pinN_Sec.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer1.pinN_Sec.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer1.pinN_Sec.iIm[3];
 Real test_DY.idealTransformer1.pinN_Sec.iRe[3];
 discrete HPF.Utilities.ComponentProperties test_DY.idealTransformer2.properties(ComponentType = "Transformer");
 parameter Real test_DY.idealTransformer2.N = test_DY.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 Complex test_DY.idealTransformer2.vPrim[3] "Complex voltage primary winding";
 Complex test_DY.idealTransformer2.iPrim[3] "Complex current primary winding";
 Complex test_DY.idealTransformer2.vSec[3] "Complex voltage secondary winding";
 Complex test_DY.idealTransformer2.iSec[3] "Complex current secondary winding";
 HPF.Types.Reference test_DY.idealTransformer2.pinP_Prim.reference "Reference";
 structural parameter Integer test_DY.idealTransformer2.pinP_Prim.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer2.pinP_Prim.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer2.pinP_Prim.iIm[3];
 Real test_DY.idealTransformer2.pinP_Prim.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer2.pinN_Prim.reference "Reference";
 structural parameter Integer test_DY.idealTransformer2.pinN_Prim.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer2.pinN_Prim.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer2.pinN_Prim.iIm[3];
 Real test_DY.idealTransformer2.pinN_Prim.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer2.pinP_Sec.reference "Reference";
 structural parameter Integer test_DY.idealTransformer2.pinP_Sec.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer2.pinP_Sec.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer2.pinP_Sec.iIm[3];
 Real test_DY.idealTransformer2.pinP_Sec.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer2.pinN_Sec.reference "Reference";
 structural parameter Integer test_DY.idealTransformer2.pinN_Sec.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer2.pinN_Sec.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer2.pinN_Sec.iIm[3];
 Real test_DY.idealTransformer2.pinN_Sec.iRe[3];
 discrete HPF.Utilities.ComponentProperties test_DY.idealTransformer3.properties(ComponentType = "Transformer");
 parameter Real test_DY.idealTransformer3.N = test_DY.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 Complex test_DY.idealTransformer3.vPrim[3] "Complex voltage primary winding";
 Complex test_DY.idealTransformer3.iPrim[3] "Complex current primary winding";
 Complex test_DY.idealTransformer3.vSec[3] "Complex voltage secondary winding";
 Complex test_DY.idealTransformer3.iSec[3] "Complex current secondary winding";
 HPF.Types.Reference test_DY.idealTransformer3.pinP_Prim.reference "Reference";
 structural parameter Integer test_DY.idealTransformer3.pinP_Prim.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer3.pinP_Prim.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer3.pinP_Prim.iIm[3];
 Real test_DY.idealTransformer3.pinP_Prim.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer3.pinN_Prim.reference "Reference";
 structural parameter Integer test_DY.idealTransformer3.pinN_Prim.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer3.pinN_Prim.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer3.pinN_Prim.iIm[3];
 Real test_DY.idealTransformer3.pinN_Prim.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer3.pinP_Sec.reference "Reference";
 structural parameter Integer test_DY.idealTransformer3.pinP_Sec.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer3.pinP_Sec.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer3.pinP_Sec.iIm[3];
 Real test_DY.idealTransformer3.pinP_Sec.iRe[3];
 HPF.Types.Reference test_DY.idealTransformer3.pinN_Sec.reference "Reference";
 structural parameter Integer test_DY.idealTransformer3.pinN_Sec.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.idealTransformer3.pinN_Sec.v[3] "Complex potential at the node";
 Real test_DY.idealTransformer3.pinN_Sec.iIm[3];
 Real test_DY.idealTransformer3.pinN_Sec.iRe[3];
 HPF.Types.Reference test_DY.pinPrim_A.reference "Reference";
 structural parameter Integer test_DY.pinPrim_A.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.pinPrim_A.v[3] "Complex potential at the node";
 Real test_DY.pinPrim_A.iIm[3];
 Real test_DY.pinPrim_A.iRe[3];
 HPF.Types.Reference test_DY.pinPrim_B.reference "Reference";
 structural parameter Integer test_DY.pinPrim_B.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.pinPrim_B.v[3] "Complex potential at the node";
 Real test_DY.pinPrim_B.iIm[3];
 Real test_DY.pinPrim_B.iRe[3];
 HPF.Types.Reference test_DY.pinPrim_C.reference "Reference";
 structural parameter Integer test_DY.pinPrim_C.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.pinPrim_C.v[3] "Complex potential at the node";
 Real test_DY.pinPrim_C.iIm[3];
 Real test_DY.pinPrim_C.iRe[3];
 HPF.Types.Reference test_DY.pinSec_A.reference "Reference";
 structural parameter Integer test_DY.pinSec_A.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.pinSec_A.v[3] "Complex potential at the node";
 Real test_DY.pinSec_A.iIm[3];
 Real test_DY.pinSec_A.iRe[3];
 HPF.Types.Reference test_DY.pinSec_B.reference "Reference";
 structural parameter Integer test_DY.pinSec_B.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.pinSec_B.v[3] "Complex potential at the node";
 Real test_DY.pinSec_B.iIm[3];
 Real test_DY.pinSec_B.iRe[3];
 HPF.Types.Reference test_DY.pinSec_C.reference "Reference";
 structural parameter Integer test_DY.pinSec_C.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.pinSec_C.v[3] "Complex potential at the node";
 Real test_DY.pinSec_C.iIm[3];
 Real test_DY.pinSec_C.iRe[3];
 HPF.Types.Reference test_DY.hPin_N.reference "Reference";
 structural parameter Integer test_DY.hPin_N.h = 3 "Numbder of harmonics" /* 3 */;
 Complex test_DY.hPin_N.v[3] "Complex potential at the node";
 Real test_DY.hPin_N.iIm[3];
 Real test_DY.hPin_N.iRe[3];
 Modelica.SIunits.ElectricPotential ground3.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground3.p.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties laptop_adpt_2.properties(ComponentType = "NonlinearLoad");
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_2.constantVoltage1.V(start = 1) = laptop_adpt_2.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential laptop_adpt_2.constantVoltage1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop_adpt_2.constantVoltage1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop_adpt_2.constantVoltage1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_2.constantVoltage1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_2.constantVoltage1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_2.constantVoltage1.n.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_2.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_2.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adpt_2.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adpt_2.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference laptop_adpt_2.hPin_P.reference "Reference";
 structural parameter Integer laptop_adpt_2.hPin_P.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_2.hPin_P.v[3] "Complex potential at the node";
 Real laptop_adpt_2.hPin_P.iIm[3];
 Real laptop_adpt_2.hPin_P.iRe[3];
 HPF.Types.Reference laptop_adpt_2.hPin_N.reference "Reference";
 structural parameter Integer laptop_adpt_2.hPin_N.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_2.hPin_N.v[3] "Complex potential at the node";
 Real laptop_adpt_2.hPin_N.iIm[3];
 Real laptop_adpt_2.hPin_N.iRe[3];
 parameter Real laptop_adpt_2.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_2.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[4] = {2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768} "Harmonic model magnitude polynomial coefficient" /* { 2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768 } */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[4] = {-5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008} "Harmonic model argument (angle, [rad]) polynomial coefficient" /* { -5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008 } */;
 parameter Real laptop_adpt_2.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real laptop_adpt_2.P = laptop_adpt_2.constantVoltage1.v * laptop_adpt_2.constantVoltage1.i;
 Complex laptop_adpt_2.loadBase1.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex laptop_adpt_2.loadBase1.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real laptop_adpt_2.loadBase1.omega;
 HPF.Types.Reference laptop_adpt_2.loadBase1.pin_p.reference "Reference";
 structural parameter Integer laptop_adpt_2.loadBase1.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_2.loadBase1.pin_p.v[3] "Complex potential at the node";
 Real laptop_adpt_2.loadBase1.pin_p.iIm[3];
 Real laptop_adpt_2.loadBase1.pin_p.iRe[3];
 HPF.Types.Reference laptop_adpt_2.loadBase1.pin_n.reference "Reference";
 structural parameter Integer laptop_adpt_2.loadBase1.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex laptop_adpt_2.loadBase1.pin_n.v[3] "Complex potential at the node";
 Real laptop_adpt_2.loadBase1.pin_n.iIm[3];
 Real laptop_adpt_2.loadBase1.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties led_driver_1.properties(ComponentType = "NonlinearLoad");
 parameter Modelica.SIunits.ElectricPotential led_driver_1.constantVoltage1.V(start = 1) = led_driver_1.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential led_driver_1.constantVoltage1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent led_driver_1.constantVoltage1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential led_driver_1.constantVoltage1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_1.constantVoltage1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_1.constantVoltage1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_1.constantVoltage1.n.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_1.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_1.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_1.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_1.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference led_driver_1.hPin_P.reference "Reference";
 structural parameter Integer led_driver_1.hPin_P.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_1.hPin_P.v[3] "Complex potential at the node";
 Real led_driver_1.hPin_P.iIm[3];
 Real led_driver_1.hPin_P.iRe[3];
 HPF.Types.Reference led_driver_1.hPin_N.reference "Reference";
 structural parameter Integer led_driver_1.hPin_N.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_1.hPin_N.v[3] "Complex potential at the node";
 Real led_driver_1.hPin_N.iIm[3];
 Real led_driver_1.hPin_N.iRe[3];
 parameter Real led_driver_1.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_1.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_1.hrmMdl_coefMag[4] = {2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768} "Harmonic model magnitude polynomial coefficient" /* { 2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768 } */;
 parameter Real led_driver_1.hrmMdl_coefArg[4] = {-5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008} "Harmonic model argument (angle, [rad]) polynomial coefficient" /* { -5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008 } */;
 parameter Real led_driver_1.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real led_driver_1.P = led_driver_1.constantVoltage1.v * led_driver_1.constantVoltage1.i;
 Complex led_driver_1.loadBase1.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex led_driver_1.loadBase1.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real led_driver_1.loadBase1.omega;
 HPF.Types.Reference led_driver_1.loadBase1.pin_p.reference "Reference";
 structural parameter Integer led_driver_1.loadBase1.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_1.loadBase1.pin_p.v[3] "Complex potential at the node";
 Real led_driver_1.loadBase1.pin_p.iIm[3];
 Real led_driver_1.loadBase1.pin_p.iRe[3];
 HPF.Types.Reference led_driver_1.loadBase1.pin_n.reference "Reference";
 structural parameter Integer led_driver_1.loadBase1.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_1.loadBase1.pin_n.v[3] "Complex potential at the node";
 Real led_driver_1.loadBase1.pin_n.iIm[3];
 Real led_driver_1.loadBase1.pin_n.iRe[3];
 Modelica.SIunits.ElectricPotential ground4.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground4.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential ground5.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground5.p.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties led_driver_3.properties(ComponentType = "NonlinearLoad");
 parameter Modelica.SIunits.ElectricPotential led_driver_3.constantVoltage1.V(start = 1) = led_driver_3.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential led_driver_3.constantVoltage1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent led_driver_3.constantVoltage1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential led_driver_3.constantVoltage1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_3.constantVoltage1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_3.constantVoltage1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_3.constantVoltage1.n.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_3.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_3.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_3.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_3.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference led_driver_3.hPin_P.reference "Reference";
 structural parameter Integer led_driver_3.hPin_P.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_3.hPin_P.v[3] "Complex potential at the node";
 Real led_driver_3.hPin_P.iIm[3];
 Real led_driver_3.hPin_P.iRe[3];
 HPF.Types.Reference led_driver_3.hPin_N.reference "Reference";
 structural parameter Integer led_driver_3.hPin_N.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_3.hPin_N.v[3] "Complex potential at the node";
 Real led_driver_3.hPin_N.iIm[3];
 Real led_driver_3.hPin_N.iRe[3];
 parameter Real led_driver_3.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_3.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_3.hrmMdl_coefMag[4] = {2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768} "Harmonic model magnitude polynomial coefficient" /* { 2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768 } */;
 parameter Real led_driver_3.hrmMdl_coefArg[4] = {-5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008} "Harmonic model argument (angle, [rad]) polynomial coefficient" /* { -5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008 } */;
 parameter Real led_driver_3.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real led_driver_3.P = led_driver_3.constantVoltage1.v * led_driver_3.constantVoltage1.i;
 Complex led_driver_3.loadBase1.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex led_driver_3.loadBase1.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real led_driver_3.loadBase1.omega;
 HPF.Types.Reference led_driver_3.loadBase1.pin_p.reference "Reference";
 structural parameter Integer led_driver_3.loadBase1.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_3.loadBase1.pin_p.v[3] "Complex potential at the node";
 Real led_driver_3.loadBase1.pin_p.iIm[3];
 Real led_driver_3.loadBase1.pin_p.iRe[3];
 HPF.Types.Reference led_driver_3.loadBase1.pin_n.reference "Reference";
 structural parameter Integer led_driver_3.loadBase1.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_3.loadBase1.pin_n.v[3] "Complex potential at the node";
 Real led_driver_3.loadBase1.pin_n.iIm[3];
 Real led_driver_3.loadBase1.pin_n.iRe[3];
 Modelica.SIunits.ElectricPotential ground7.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground7.p.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties led_driver_2.properties(ComponentType = "NonlinearLoad");
 parameter Modelica.SIunits.ElectricPotential led_driver_2.constantVoltage1.V(start = 1) = led_driver_2.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential led_driver_2.constantVoltage1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent led_driver_2.constantVoltage1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential led_driver_2.constantVoltage1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_2.constantVoltage1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_2.constantVoltage1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_2.constantVoltage1.n.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_2.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_2.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver_2.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver_2.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference led_driver_2.hPin_P.reference "Reference";
 structural parameter Integer led_driver_2.hPin_P.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_2.hPin_P.v[3] "Complex potential at the node";
 Real led_driver_2.hPin_P.iIm[3];
 Real led_driver_2.hPin_P.iRe[3];
 HPF.Types.Reference led_driver_2.hPin_N.reference "Reference";
 structural parameter Integer led_driver_2.hPin_N.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_2.hPin_N.v[3] "Complex potential at the node";
 Real led_driver_2.hPin_N.iIm[3];
 Real led_driver_2.hPin_N.iRe[3];
 parameter Real led_driver_2.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_2.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_2.hrmMdl_coefMag[4] = {2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768} "Harmonic model magnitude polynomial coefficient" /* { 2.70064268049248E-5, -0.0015697610131034, -0.00600037080602108, 0.995516922015768 } */;
 parameter Real led_driver_2.hrmMdl_coefArg[4] = {-5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008} "Harmonic model argument (angle, [rad]) polynomial coefficient" /* { -5.02372881045404E-5, 0.00237063924944842, -1.49993957428169, 1.71994407623008 } */;
 parameter Real led_driver_2.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real led_driver_2.P = led_driver_2.constantVoltage1.v * led_driver_2.constantVoltage1.i;
 Complex led_driver_2.loadBase1.v[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex voltage";
 Complex led_driver_2.loadBase1.i[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) "Complex current";
 Real led_driver_2.loadBase1.omega;
 HPF.Types.Reference led_driver_2.loadBase1.pin_p.reference "Reference";
 structural parameter Integer led_driver_2.loadBase1.pin_p.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_2.loadBase1.pin_p.v[3] "Complex potential at the node";
 Real led_driver_2.loadBase1.pin_p.iIm[3];
 Real led_driver_2.loadBase1.pin_p.iRe[3];
 HPF.Types.Reference led_driver_2.loadBase1.pin_n.reference "Reference";
 structural parameter Integer led_driver_2.loadBase1.pin_n.h = 3 "Numbder of harmonics" /* 3 */;
 Complex led_driver_2.loadBase1.pin_n.v[3] "Complex potential at the node";
 Real led_driver_2.loadBase1.pin_n.iIm[3];
 Real led_driver_2.loadBase1.pin_n.iRe[3];
 discrete HPF.Utilities.ComponentProperties laptop_1.properties(ComponentType = "DC_Load");
 parameter Real laptop_1.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 Modelica.SIunits.ElectricPotential laptop_1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop_1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop_1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_1.n.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties laptop_2.properties(ComponentType = "DC_Load");
 parameter Real laptop_2.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 Modelica.SIunits.ElectricPotential laptop_2.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop_2.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop_2.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_2.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_2.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_2.n.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties laptop_3.properties(ComponentType = "DC_Load");
 parameter Real laptop_3.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 Modelica.SIunits.ElectricPotential laptop_3.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop_3.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop_3.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_3.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_3.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_3.n.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties led_3.properties(ComponentType = "DC_Load");
 parameter Real led_3.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 Modelica.SIunits.ElectricPotential led_3.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent led_3.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential led_3.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_3.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_3.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_3.n.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties led_1.properties(ComponentType = "DC_Load");
 parameter Real led_1.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 Modelica.SIunits.ElectricPotential led_1.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent led_1.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential led_1.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_1.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_1.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_1.n.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties led_2.properties(ComponentType = "DC_Load");
 parameter Real led_2.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 Modelica.SIunits.ElectricPotential led_2.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent led_2.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential led_2.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_2.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_2.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_2.n.i "Current flowing into the pin";
protected
 Real laptop_adpt_1.Q = 0.5;
 Complex laptop_adpt_1.S_vect[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) = cat(1, {Complex.'constructor'.fromReal(laptop_adpt_1.P * laptop_adpt_1.efficiency, laptop_adpt_1.Q)}, {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)});
 Real laptop_adpt_1.globalSeed = 9854;
 Real laptop_adpt_3.Q = 0.5;
 Complex laptop_adpt_3.S_vect[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) = cat(1, {Complex.'constructor'.fromReal(laptop_adpt_3.P * laptop_adpt_3.efficiency, laptop_adpt_3.Q)}, {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)});
 Real laptop_adpt_3.globalSeed = 9854;
 Real laptop_adpt_2.Q = 0.5;
 Complex laptop_adpt_2.S_vect[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) = cat(1, {Complex.'constructor'.fromReal(laptop_adpt_2.P * laptop_adpt_2.efficiency, laptop_adpt_2.Q)}, {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)});
 Real laptop_adpt_2.globalSeed = 9854;
 Real led_driver_1.Q = 0.5;
 Complex led_driver_1.S_vect[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) = cat(1, {Complex.'constructor'.fromReal(led_driver_1.P * led_driver_1.efficiency, led_driver_1.Q)}, {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)});
 Real led_driver_1.globalSeed = 9854;
 Real led_driver_3.Q = 0.5;
 Complex led_driver_3.S_vect[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) = cat(1, {Complex.'constructor'.fromReal(led_driver_3.P * led_driver_3.efficiency, led_driver_3.Q)}, {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)});
 Real led_driver_3.globalSeed = 9854;
 Real led_driver_2.Q = 0.5;
 Complex led_driver_2.S_vect[3](each re(start = 0,nominal = 1),each im(start = 0,nominal = 1)) = cat(1, {Complex.'constructor'.fromReal(led_driver_2.P * led_driver_2.efficiency, led_driver_2.Q)}, {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)});
 Real led_driver_2.globalSeed = 9854;
initial equation
 algorithm
;
algorithm
 when time > 0.5 then
  systemDef.modeSelect := true;
 end when;
 when time > 0.25 then
  systemDef.eventWriteData := true;
 end when;
 when time > 0.4 then
  systemDef.eventReadData := true;
 end when;
equation
 PhA.omega = 2 * 3.141592653589793 * systemDef.fFund;
 PhA.v[1:3].re = PhA.vMag[1:3] .* cos(PhA.vArg[1:3]);
 PhA.v[1:3].im = PhA.vMag[1:3] .* sin(PhA.vArg[1:3]);
 PhA.pin_p.reference.theta = PhA.pin_n.reference.theta;
 PhA.omega = der(PhA.pin_p.reference.theta);
 PhA.v[1:3] = {Complex.'-'.subtract(PhA.pin_p.v[1], PhA.pin_n.v[1]), Complex.'-'.subtract(PhA.pin_p.v[2], PhA.pin_n.v[2]), Complex.'-'.subtract(PhA.pin_p.v[3], PhA.pin_n.v[3])};
 PhA.i[1:3].re = PhA.pin_p.iRe[1:3];
 PhA.i[1:3].im = PhA.pin_p.iIm[1:3];
 PhA.pin_p.iRe[1:3] + PhA.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 PhA.pin_p.iIm[1:3] + PhA.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 PhB.omega = 2 * 3.141592653589793 * systemDef.fFund;
 PhB.v[1:3].re = PhB.vMag[1:3] .* cos(PhB.vArg[1:3]);
 PhB.v[1:3].im = PhB.vMag[1:3] .* sin(PhB.vArg[1:3]);
 PhB.pin_p.reference.theta = PhB.pin_n.reference.theta;
 PhB.omega = der(PhB.pin_p.reference.theta);
 PhB.v[1:3] = {Complex.'-'.subtract(PhB.pin_p.v[1], PhB.pin_n.v[1]), Complex.'-'.subtract(PhB.pin_p.v[2], PhB.pin_n.v[2]), Complex.'-'.subtract(PhB.pin_p.v[3], PhB.pin_n.v[3])};
 PhB.i[1:3].re = PhB.pin_p.iRe[1:3];
 PhB.i[1:3].im = PhB.pin_p.iIm[1:3];
 PhB.pin_p.iRe[1:3] + PhB.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 PhB.pin_p.iIm[1:3] + PhB.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 PhC.omega = 2 * 3.141592653589793 * systemDef.fFund;
 PhC.v[1:3].re = PhC.vMag[1:3] .* cos(PhC.vArg[1:3]);
 PhC.v[1:3].im = PhC.vMag[1:3] .* sin(PhC.vArg[1:3]);
 PhC.pin_p.reference.theta = PhC.pin_n.reference.theta;
 PhC.omega = der(PhC.pin_p.reference.theta);
 PhC.v[1:3] = {Complex.'-'.subtract(PhC.pin_p.v[1], PhC.pin_n.v[1]), Complex.'-'.subtract(PhC.pin_p.v[2], PhC.pin_n.v[2]), Complex.'-'.subtract(PhC.pin_p.v[3], PhC.pin_n.v[3])};
 PhC.i[1:3].re = PhC.pin_p.iRe[1:3];
 PhC.i[1:3].im = PhC.pin_p.iIm[1:3];
 PhC.pin_p.iRe[1:3] + PhC.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 PhC.pin_p.iIm[1:3] + PhC.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 if Connections.isRoot(ground1.pin.reference) then
  ground1.pin.reference.theta = 0;
 end if;
 ground1.pin.v[1:3] = {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)};
 if Connections.isRoot(ground2.pin.reference) then
  ground2.pin.reference.theta = 0;
 end if;
 ground2.pin.v[1:3] = {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)};
 if systemDef.modeSelect == false then
  laptop_adpt_1.S_vect[1:3].re = laptop_adpt_1.loadBase1.v[1:3].re .* laptop_adpt_1.loadBase1.i[1:3].re;
  laptop_adpt_1.S_vect[1:3].im = laptop_adpt_1.loadBase1.v[1:3].im .* (- laptop_adpt_1.loadBase1.i[1:3].im);
 else
  laptop_adpt_1.loadBase1.i[1:3].re = {HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefMag[1:4], 5)} .* sin({HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefArg[1:4], 5)});
  laptop_adpt_1.loadBase1.i[1:3].im = {HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefMag[1:4], 5)} .* cos({HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(laptop_adpt_1.hrmMdl_coefArg[1:4], 5)});
 end if;
algorithm
 when systemDef.eventWriteData <> pre(systemDef.eventWriteData) then
 end when;
 when systemDef.eventReadData <> pre(systemDef.eventReadData) then
 end when;
equation
 laptop_adpt_1.constantVoltage1.v = laptop_adpt_1.constantVoltage1.V;
 laptop_adpt_1.constantVoltage1.v = laptop_adpt_1.constantVoltage1.p.v - laptop_adpt_1.constantVoltage1.n.v;
 0 = laptop_adpt_1.constantVoltage1.p.i + laptop_adpt_1.constantVoltage1.n.i;
 laptop_adpt_1.constantVoltage1.i = laptop_adpt_1.constantVoltage1.p.i;
 laptop_adpt_1.loadBase1.pin_p.reference.theta = laptop_adpt_1.loadBase1.pin_n.reference.theta;
 laptop_adpt_1.loadBase1.omega = der(laptop_adpt_1.loadBase1.pin_p.reference.theta);
 laptop_adpt_1.loadBase1.v[1:3] = {Complex.'-'.subtract(laptop_adpt_1.loadBase1.pin_p.v[1], laptop_adpt_1.loadBase1.pin_n.v[1]), Complex.'-'.subtract(laptop_adpt_1.loadBase1.pin_p.v[2], laptop_adpt_1.loadBase1.pin_n.v[2]), Complex.'-'.subtract(laptop_adpt_1.loadBase1.pin_p.v[3], laptop_adpt_1.loadBase1.pin_n.v[3])};
 laptop_adpt_1.loadBase1.i[1:3].re = laptop_adpt_1.loadBase1.pin_p.iRe[1:3];
 laptop_adpt_1.loadBase1.i[1:3].im = laptop_adpt_1.loadBase1.pin_p.iIm[1:3];
 laptop_adpt_1.loadBase1.pin_p.iRe[1:3] + laptop_adpt_1.loadBase1.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 laptop_adpt_1.loadBase1.pin_p.iIm[1:3] + laptop_adpt_1.loadBase1.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 if systemDef.modeSelect == false then
  laptop_adpt_3.S_vect[1:3].re = laptop_adpt_3.loadBase1.v[1:3].re .* laptop_adpt_3.loadBase1.i[1:3].re;
  laptop_adpt_3.S_vect[1:3].im = laptop_adpt_3.loadBase1.v[1:3].im .* (- laptop_adpt_3.loadBase1.i[1:3].im);
 else
  laptop_adpt_3.loadBase1.i[1:3].re = {HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefMag[1:4], 5)} .* sin({HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefArg[1:4], 5)});
  laptop_adpt_3.loadBase1.i[1:3].im = {HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefMag[1:4], 5)} .* cos({HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(laptop_adpt_3.hrmMdl_coefArg[1:4], 5)});
 end if;
algorithm
 when systemDef.eventWriteData <> pre(systemDef.eventWriteData) then
 end when;
 when systemDef.eventReadData <> pre(systemDef.eventReadData) then
 end when;
equation
 laptop_adpt_3.constantVoltage1.v = laptop_adpt_3.constantVoltage1.V;
 laptop_adpt_3.constantVoltage1.v = laptop_adpt_3.constantVoltage1.p.v - laptop_adpt_3.constantVoltage1.n.v;
 0 = laptop_adpt_3.constantVoltage1.p.i + laptop_adpt_3.constantVoltage1.n.i;
 laptop_adpt_3.constantVoltage1.i = laptop_adpt_3.constantVoltage1.p.i;
 laptop_adpt_3.loadBase1.pin_p.reference.theta = laptop_adpt_3.loadBase1.pin_n.reference.theta;
 laptop_adpt_3.loadBase1.omega = der(laptop_adpt_3.loadBase1.pin_p.reference.theta);
 laptop_adpt_3.loadBase1.v[1:3] = {Complex.'-'.subtract(laptop_adpt_3.loadBase1.pin_p.v[1], laptop_adpt_3.loadBase1.pin_n.v[1]), Complex.'-'.subtract(laptop_adpt_3.loadBase1.pin_p.v[2], laptop_adpt_3.loadBase1.pin_n.v[2]), Complex.'-'.subtract(laptop_adpt_3.loadBase1.pin_p.v[3], laptop_adpt_3.loadBase1.pin_n.v[3])};
 laptop_adpt_3.loadBase1.i[1:3].re = laptop_adpt_3.loadBase1.pin_p.iRe[1:3];
 laptop_adpt_3.loadBase1.i[1:3].im = laptop_adpt_3.loadBase1.pin_p.iIm[1:3];
 laptop_adpt_3.loadBase1.pin_p.iRe[1:3] + laptop_adpt_3.loadBase1.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 laptop_adpt_3.loadBase1.pin_p.iIm[1:3] + laptop_adpt_3.loadBase1.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 ground6.p.v = 0;
 ground8.p.v = 0;
 terminal.v[1:3].re = terminal.r .* terminal.i[1:3].re;
 terminal.v[1:3].im = terminal.r .* terminal.i[1:3].im;
 terminal.pin_p.reference.theta = terminal.pin_n.reference.theta;
 terminal.omega = der(terminal.pin_p.reference.theta);
 terminal.v[1:3] = {Complex.'-'.subtract(terminal.pin_p.v[1], terminal.pin_n.v[1]), Complex.'-'.subtract(terminal.pin_p.v[2], terminal.pin_n.v[2]), Complex.'-'.subtract(terminal.pin_p.v[3], terminal.pin_n.v[3])};
 terminal.i[1:3].re = terminal.pin_p.iRe[1:3];
 terminal.i[1:3].im = terminal.pin_p.iIm[1:3];
 terminal.pin_p.iRe[1:3] + terminal.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 terminal.pin_p.iIm[1:3] + terminal.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 z.v[1:3].re = z.z.re .* z.i[1:3].re - z.z.im .* systemDef.hrms[1:3] .* z.i[1:3].im;
 z.v[1:3].im = z.z.re .* z.i[1:3].im + z.z.im .* systemDef.hrms[1:3] .* z.i[1:3].re;
 z.pin_p.reference.theta = z.pin_n.reference.theta;
 z.omega = der(z.pin_p.reference.theta);
 z.v[1:3] = {Complex.'-'.subtract(z.pin_p.v[1], z.pin_n.v[1]), Complex.'-'.subtract(z.pin_p.v[2], z.pin_n.v[2]), Complex.'-'.subtract(z.pin_p.v[3], z.pin_n.v[3])};
 z.i[1:3].re = z.pin_p.iRe[1:3];
 z.i[1:3].im = z.pin_p.iIm[1:3];
 z.pin_p.iRe[1:3] + z.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 z.pin_p.iIm[1:3] + z.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 z1.v[1:3].re = z1.z.re .* z1.i[1:3].re - z1.z.im .* systemDef.hrms[1:3] .* z1.i[1:3].im;
 z1.v[1:3].im = z1.z.re .* z1.i[1:3].im + z1.z.im .* systemDef.hrms[1:3] .* z1.i[1:3].re;
 z1.pin_p.reference.theta = z1.pin_n.reference.theta;
 z1.omega = der(z1.pin_p.reference.theta);
 z1.v[1:3] = {Complex.'-'.subtract(z1.pin_p.v[1], z1.pin_n.v[1]), Complex.'-'.subtract(z1.pin_p.v[2], z1.pin_n.v[2]), Complex.'-'.subtract(z1.pin_p.v[3], z1.pin_n.v[3])};
 z1.i[1:3].re = z1.pin_p.iRe[1:3];
 z1.i[1:3].im = z1.pin_p.iIm[1:3];
 z1.pin_p.iRe[1:3] + z1.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 z1.pin_p.iIm[1:3] + z1.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer1.vSec[1:3] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer1.N, 0), test_DY.idealTransformer1.vPrim[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer1.N, 0), test_DY.idealTransformer1.vPrim[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer1.N, 0), test_DY.idealTransformer1.vPrim[3])};
 test_DY.idealTransformer1.iSec[1:3] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer1.N, 0), test_DY.idealTransformer1.iPrim[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer1.N, 0), test_DY.idealTransformer1.iPrim[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer1.N, 0), test_DY.idealTransformer1.iPrim[3])};
 test_DY.idealTransformer1.pinP_Prim.reference.theta = test_DY.idealTransformer1.pinN_Prim.reference.theta;
 test_DY.idealTransformer1.pinP_Prim.reference.theta = test_DY.idealTransformer1.pinP_Sec.reference.theta;
 test_DY.idealTransformer1.pinN_Prim.reference.theta = test_DY.idealTransformer1.pinN_Sec.reference.theta;
 test_DY.idealTransformer1.vPrim[1:3] = {Complex.'-'.subtract(test_DY.idealTransformer1.pinP_Prim.v[1], test_DY.idealTransformer1.pinN_Prim.v[1]), Complex.'-'.subtract(test_DY.idealTransformer1.pinP_Prim.v[2], test_DY.idealTransformer1.pinN_Prim.v[2]), Complex.'-'.subtract(test_DY.idealTransformer1.pinP_Prim.v[3], test_DY.idealTransformer1.pinN_Prim.v[3])};
 test_DY.idealTransformer1.vSec[1:3] = {Complex.'-'.subtract(test_DY.idealTransformer1.pinP_Sec.v[1], test_DY.idealTransformer1.pinN_Sec.v[1]), Complex.'-'.subtract(test_DY.idealTransformer1.pinP_Sec.v[2], test_DY.idealTransformer1.pinN_Sec.v[2]), Complex.'-'.subtract(test_DY.idealTransformer1.pinP_Sec.v[3], test_DY.idealTransformer1.pinN_Sec.v[3])};
 test_DY.idealTransformer1.iPrim[1:3].re = test_DY.idealTransformer1.pinP_Prim.iRe[1:3];
 test_DY.idealTransformer1.iPrim[1:3].im = test_DY.idealTransformer1.pinP_Prim.iIm[1:3];
 test_DY.idealTransformer1.iSec[1:3].re = test_DY.idealTransformer1.pinP_Sec.iRe[1:3];
 test_DY.idealTransformer1.iSec[1:3].im = test_DY.idealTransformer1.pinP_Sec.iIm[1:3];
 test_DY.idealTransformer1.pinP_Prim.iRe[1:3] + test_DY.idealTransformer1.pinN_Prim.iRe[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer1.pinP_Prim.iIm[1:3] + test_DY.idealTransformer1.pinN_Prim.iIm[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer1.pinP_Sec.iRe[1:3] + test_DY.idealTransformer1.pinN_Sec.iRe[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer1.pinP_Sec.iIm[1:3] + test_DY.idealTransformer1.pinN_Sec.iIm[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer2.vSec[1:3] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer2.N, 0), test_DY.idealTransformer2.vPrim[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer2.N, 0), test_DY.idealTransformer2.vPrim[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer2.N, 0), test_DY.idealTransformer2.vPrim[3])};
 test_DY.idealTransformer2.iSec[1:3] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer2.N, 0), test_DY.idealTransformer2.iPrim[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer2.N, 0), test_DY.idealTransformer2.iPrim[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer2.N, 0), test_DY.idealTransformer2.iPrim[3])};
 test_DY.idealTransformer2.pinP_Prim.reference.theta = test_DY.idealTransformer2.pinN_Prim.reference.theta;
 test_DY.idealTransformer2.pinP_Prim.reference.theta = test_DY.idealTransformer2.pinP_Sec.reference.theta;
 test_DY.idealTransformer2.pinN_Prim.reference.theta = test_DY.idealTransformer2.pinN_Sec.reference.theta;
 test_DY.idealTransformer2.vPrim[1:3] = {Complex.'-'.subtract(test_DY.idealTransformer2.pinP_Prim.v[1], test_DY.idealTransformer2.pinN_Prim.v[1]), Complex.'-'.subtract(test_DY.idealTransformer2.pinP_Prim.v[2], test_DY.idealTransformer2.pinN_Prim.v[2]), Complex.'-'.subtract(test_DY.idealTransformer2.pinP_Prim.v[3], test_DY.idealTransformer2.pinN_Prim.v[3])};
 test_DY.idealTransformer2.vSec[1:3] = {Complex.'-'.subtract(test_DY.idealTransformer2.pinP_Sec.v[1], test_DY.idealTransformer2.pinN_Sec.v[1]), Complex.'-'.subtract(test_DY.idealTransformer2.pinP_Sec.v[2], test_DY.idealTransformer2.pinN_Sec.v[2]), Complex.'-'.subtract(test_DY.idealTransformer2.pinP_Sec.v[3], test_DY.idealTransformer2.pinN_Sec.v[3])};
 test_DY.idealTransformer2.iPrim[1:3].re = test_DY.idealTransformer2.pinP_Prim.iRe[1:3];
 test_DY.idealTransformer2.iPrim[1:3].im = test_DY.idealTransformer2.pinP_Prim.iIm[1:3];
 test_DY.idealTransformer2.iSec[1:3].re = test_DY.idealTransformer2.pinP_Sec.iRe[1:3];
 test_DY.idealTransformer2.iSec[1:3].im = test_DY.idealTransformer2.pinP_Sec.iIm[1:3];
 test_DY.idealTransformer2.pinP_Prim.iRe[1:3] + test_DY.idealTransformer2.pinN_Prim.iRe[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer2.pinP_Prim.iIm[1:3] + test_DY.idealTransformer2.pinN_Prim.iIm[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer2.pinP_Sec.iRe[1:3] + test_DY.idealTransformer2.pinN_Sec.iRe[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer2.pinP_Sec.iIm[1:3] + test_DY.idealTransformer2.pinN_Sec.iIm[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer3.vSec[1:3] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer3.N, 0), test_DY.idealTransformer3.vPrim[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer3.N, 0), test_DY.idealTransformer3.vPrim[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(1 / test_DY.idealTransformer3.N, 0), test_DY.idealTransformer3.vPrim[3])};
 test_DY.idealTransformer3.iSec[1:3] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer3.N, 0), test_DY.idealTransformer3.iPrim[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer3.N, 0), test_DY.idealTransformer3.iPrim[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(test_DY.idealTransformer3.N, 0), test_DY.idealTransformer3.iPrim[3])};
 test_DY.idealTransformer3.pinP_Prim.reference.theta = test_DY.idealTransformer3.pinN_Prim.reference.theta;
 test_DY.idealTransformer3.pinP_Prim.reference.theta = test_DY.idealTransformer3.pinP_Sec.reference.theta;
 test_DY.idealTransformer3.pinN_Prim.reference.theta = test_DY.idealTransformer3.pinN_Sec.reference.theta;
 test_DY.idealTransformer3.vPrim[1:3] = {Complex.'-'.subtract(test_DY.idealTransformer3.pinP_Prim.v[1], test_DY.idealTransformer3.pinN_Prim.v[1]), Complex.'-'.subtract(test_DY.idealTransformer3.pinP_Prim.v[2], test_DY.idealTransformer3.pinN_Prim.v[2]), Complex.'-'.subtract(test_DY.idealTransformer3.pinP_Prim.v[3], test_DY.idealTransformer3.pinN_Prim.v[3])};
 test_DY.idealTransformer3.vSec[1:3] = {Complex.'-'.subtract(test_DY.idealTransformer3.pinP_Sec.v[1], test_DY.idealTransformer3.pinN_Sec.v[1]), Complex.'-'.subtract(test_DY.idealTransformer3.pinP_Sec.v[2], test_DY.idealTransformer3.pinN_Sec.v[2]), Complex.'-'.subtract(test_DY.idealTransformer3.pinP_Sec.v[3], test_DY.idealTransformer3.pinN_Sec.v[3])};
 test_DY.idealTransformer3.iPrim[1:3].re = test_DY.idealTransformer3.pinP_Prim.iRe[1:3];
 test_DY.idealTransformer3.iPrim[1:3].im = test_DY.idealTransformer3.pinP_Prim.iIm[1:3];
 test_DY.idealTransformer3.iSec[1:3].re = test_DY.idealTransformer3.pinP_Sec.iRe[1:3];
 test_DY.idealTransformer3.iSec[1:3].im = test_DY.idealTransformer3.pinP_Sec.iIm[1:3];
 test_DY.idealTransformer3.pinP_Prim.iRe[1:3] + test_DY.idealTransformer3.pinN_Prim.iRe[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer3.pinP_Prim.iIm[1:3] + test_DY.idealTransformer3.pinN_Prim.iIm[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer3.pinP_Sec.iRe[1:3] + test_DY.idealTransformer3.pinN_Sec.iRe[1:3] = {0.0, 0.0, 0.0};
 test_DY.idealTransformer3.pinP_Sec.iIm[1:3] + test_DY.idealTransformer3.pinN_Sec.iIm[1:3] = {0.0, 0.0, 0.0};
 ground3.p.v = 0;
 if systemDef.modeSelect == false then
  laptop_adpt_2.S_vect[1:3].re = laptop_adpt_2.loadBase1.v[1:3].re .* laptop_adpt_2.loadBase1.i[1:3].re;
  laptop_adpt_2.S_vect[1:3].im = laptop_adpt_2.loadBase1.v[1:3].im .* (- laptop_adpt_2.loadBase1.i[1:3].im);
 else
  laptop_adpt_2.loadBase1.i[1:3].re = {HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefMag[1:4], 5)} .* sin({HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefArg[1:4], 5)});
  laptop_adpt_2.loadBase1.i[1:3].im = {HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefMag[1:4], 5)} .* cos({HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(laptop_adpt_2.hrmMdl_coefArg[1:4], 5)});
 end if;
algorithm
 when systemDef.eventWriteData <> pre(systemDef.eventWriteData) then
 end when;
 when systemDef.eventReadData <> pre(systemDef.eventReadData) then
 end when;
equation
 laptop_adpt_2.constantVoltage1.v = laptop_adpt_2.constantVoltage1.V;
 laptop_adpt_2.constantVoltage1.v = laptop_adpt_2.constantVoltage1.p.v - laptop_adpt_2.constantVoltage1.n.v;
 0 = laptop_adpt_2.constantVoltage1.p.i + laptop_adpt_2.constantVoltage1.n.i;
 laptop_adpt_2.constantVoltage1.i = laptop_adpt_2.constantVoltage1.p.i;
 laptop_adpt_2.loadBase1.pin_p.reference.theta = laptop_adpt_2.loadBase1.pin_n.reference.theta;
 laptop_adpt_2.loadBase1.omega = der(laptop_adpt_2.loadBase1.pin_p.reference.theta);
 laptop_adpt_2.loadBase1.v[1:3] = {Complex.'-'.subtract(laptop_adpt_2.loadBase1.pin_p.v[1], laptop_adpt_2.loadBase1.pin_n.v[1]), Complex.'-'.subtract(laptop_adpt_2.loadBase1.pin_p.v[2], laptop_adpt_2.loadBase1.pin_n.v[2]), Complex.'-'.subtract(laptop_adpt_2.loadBase1.pin_p.v[3], laptop_adpt_2.loadBase1.pin_n.v[3])};
 laptop_adpt_2.loadBase1.i[1:3].re = laptop_adpt_2.loadBase1.pin_p.iRe[1:3];
 laptop_adpt_2.loadBase1.i[1:3].im = laptop_adpt_2.loadBase1.pin_p.iIm[1:3];
 laptop_adpt_2.loadBase1.pin_p.iRe[1:3] + laptop_adpt_2.loadBase1.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 laptop_adpt_2.loadBase1.pin_p.iIm[1:3] + laptop_adpt_2.loadBase1.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 if systemDef.modeSelect == false then
  led_driver_1.S_vect[1:3].re = led_driver_1.loadBase1.v[1:3].re .* led_driver_1.loadBase1.i[1:3].re;
  led_driver_1.S_vect[1:3].im = led_driver_1.loadBase1.v[1:3].im .* (- led_driver_1.loadBase1.i[1:3].im);
 else
  led_driver_1.loadBase1.i[1:3].re = {HPF.Utilities.polyval(led_driver_1.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefMag[1:4], 5)} .* sin({HPF.Utilities.polyval(led_driver_1.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefArg[1:4], 5)});
  led_driver_1.loadBase1.i[1:3].im = {HPF.Utilities.polyval(led_driver_1.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefMag[1:4], 5)} .* cos({HPF.Utilities.polyval(led_driver_1.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(led_driver_1.hrmMdl_coefArg[1:4], 5)});
 end if;
algorithm
 when systemDef.eventWriteData <> pre(systemDef.eventWriteData) then
 end when;
 when systemDef.eventReadData <> pre(systemDef.eventReadData) then
 end when;
equation
 led_driver_1.constantVoltage1.v = led_driver_1.constantVoltage1.V;
 led_driver_1.constantVoltage1.v = led_driver_1.constantVoltage1.p.v - led_driver_1.constantVoltage1.n.v;
 0 = led_driver_1.constantVoltage1.p.i + led_driver_1.constantVoltage1.n.i;
 led_driver_1.constantVoltage1.i = led_driver_1.constantVoltage1.p.i;
 led_driver_1.loadBase1.pin_p.reference.theta = led_driver_1.loadBase1.pin_n.reference.theta;
 led_driver_1.loadBase1.omega = der(led_driver_1.loadBase1.pin_p.reference.theta);
 led_driver_1.loadBase1.v[1:3] = {Complex.'-'.subtract(led_driver_1.loadBase1.pin_p.v[1], led_driver_1.loadBase1.pin_n.v[1]), Complex.'-'.subtract(led_driver_1.loadBase1.pin_p.v[2], led_driver_1.loadBase1.pin_n.v[2]), Complex.'-'.subtract(led_driver_1.loadBase1.pin_p.v[3], led_driver_1.loadBase1.pin_n.v[3])};
 led_driver_1.loadBase1.i[1:3].re = led_driver_1.loadBase1.pin_p.iRe[1:3];
 led_driver_1.loadBase1.i[1:3].im = led_driver_1.loadBase1.pin_p.iIm[1:3];
 led_driver_1.loadBase1.pin_p.iRe[1:3] + led_driver_1.loadBase1.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 led_driver_1.loadBase1.pin_p.iIm[1:3] + led_driver_1.loadBase1.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 ground4.p.v = 0;
 ground5.p.v = 0;
 if systemDef.modeSelect == false then
  led_driver_3.S_vect[1:3].re = led_driver_3.loadBase1.v[1:3].re .* led_driver_3.loadBase1.i[1:3].re;
  led_driver_3.S_vect[1:3].im = led_driver_3.loadBase1.v[1:3].im .* (- led_driver_3.loadBase1.i[1:3].im);
 else
  led_driver_3.loadBase1.i[1:3].re = {HPF.Utilities.polyval(led_driver_3.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefMag[1:4], 5)} .* sin({HPF.Utilities.polyval(led_driver_3.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefArg[1:4], 5)});
  led_driver_3.loadBase1.i[1:3].im = {HPF.Utilities.polyval(led_driver_3.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefMag[1:4], 5)} .* cos({HPF.Utilities.polyval(led_driver_3.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(led_driver_3.hrmMdl_coefArg[1:4], 5)});
 end if;
algorithm
 when systemDef.eventWriteData <> pre(systemDef.eventWriteData) then
 end when;
 when systemDef.eventReadData <> pre(systemDef.eventReadData) then
 end when;
equation
 led_driver_3.constantVoltage1.v = led_driver_3.constantVoltage1.V;
 led_driver_3.constantVoltage1.v = led_driver_3.constantVoltage1.p.v - led_driver_3.constantVoltage1.n.v;
 0 = led_driver_3.constantVoltage1.p.i + led_driver_3.constantVoltage1.n.i;
 led_driver_3.constantVoltage1.i = led_driver_3.constantVoltage1.p.i;
 led_driver_3.loadBase1.pin_p.reference.theta = led_driver_3.loadBase1.pin_n.reference.theta;
 led_driver_3.loadBase1.omega = der(led_driver_3.loadBase1.pin_p.reference.theta);
 led_driver_3.loadBase1.v[1:3] = {Complex.'-'.subtract(led_driver_3.loadBase1.pin_p.v[1], led_driver_3.loadBase1.pin_n.v[1]), Complex.'-'.subtract(led_driver_3.loadBase1.pin_p.v[2], led_driver_3.loadBase1.pin_n.v[2]), Complex.'-'.subtract(led_driver_3.loadBase1.pin_p.v[3], led_driver_3.loadBase1.pin_n.v[3])};
 led_driver_3.loadBase1.i[1:3].re = led_driver_3.loadBase1.pin_p.iRe[1:3];
 led_driver_3.loadBase1.i[1:3].im = led_driver_3.loadBase1.pin_p.iIm[1:3];
 led_driver_3.loadBase1.pin_p.iRe[1:3] + led_driver_3.loadBase1.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 led_driver_3.loadBase1.pin_p.iIm[1:3] + led_driver_3.loadBase1.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 ground7.p.v = 0;
 if systemDef.modeSelect == false then
  led_driver_2.S_vect[1:3].re = led_driver_2.loadBase1.v[1:3].re .* led_driver_2.loadBase1.i[1:3].re;
  led_driver_2.S_vect[1:3].im = led_driver_2.loadBase1.v[1:3].im .* (- led_driver_2.loadBase1.i[1:3].im);
 else
  led_driver_2.loadBase1.i[1:3].re = {HPF.Utilities.polyval(led_driver_2.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefMag[1:4], 5)} .* sin({HPF.Utilities.polyval(led_driver_2.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefArg[1:4], 5)});
  led_driver_2.loadBase1.i[1:3].im = {HPF.Utilities.polyval(led_driver_2.hrmMdl_coefMag[1:4], 1), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefMag[1:4], 3), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefMag[1:4], 5)} .* cos({HPF.Utilities.polyval(led_driver_2.hrmMdl_coefArg[1:4], 1), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefArg[1:4], 3), HPF.Utilities.polyval(led_driver_2.hrmMdl_coefArg[1:4], 5)});
 end if;
algorithm
 when systemDef.eventWriteData <> pre(systemDef.eventWriteData) then
 end when;
 when systemDef.eventReadData <> pre(systemDef.eventReadData) then
 end when;
equation
 led_driver_2.constantVoltage1.v = led_driver_2.constantVoltage1.V;
 led_driver_2.constantVoltage1.v = led_driver_2.constantVoltage1.p.v - led_driver_2.constantVoltage1.n.v;
 0 = led_driver_2.constantVoltage1.p.i + led_driver_2.constantVoltage1.n.i;
 led_driver_2.constantVoltage1.i = led_driver_2.constantVoltage1.p.i;
 led_driver_2.loadBase1.pin_p.reference.theta = led_driver_2.loadBase1.pin_n.reference.theta;
 led_driver_2.loadBase1.omega = der(led_driver_2.loadBase1.pin_p.reference.theta);
 led_driver_2.loadBase1.v[1:3] = {Complex.'-'.subtract(led_driver_2.loadBase1.pin_p.v[1], led_driver_2.loadBase1.pin_n.v[1]), Complex.'-'.subtract(led_driver_2.loadBase1.pin_p.v[2], led_driver_2.loadBase1.pin_n.v[2]), Complex.'-'.subtract(led_driver_2.loadBase1.pin_p.v[3], led_driver_2.loadBase1.pin_n.v[3])};
 led_driver_2.loadBase1.i[1:3].re = led_driver_2.loadBase1.pin_p.iRe[1:3];
 led_driver_2.loadBase1.i[1:3].im = led_driver_2.loadBase1.pin_p.iIm[1:3];
 led_driver_2.loadBase1.pin_p.iRe[1:3] + led_driver_2.loadBase1.pin_n.iRe[1:3] = {0.0, 0.0, 0.0};
 led_driver_2.loadBase1.pin_p.iIm[1:3] + led_driver_2.loadBase1.pin_n.iIm[1:3] = {0.0, 0.0, 0.0};
 laptop_1.pwr = laptop_1.v * laptop_1.i;
 laptop_1.v = laptop_1.p.v - laptop_1.n.v;
 0 = laptop_1.p.i + laptop_1.n.i;
 laptop_1.i = laptop_1.p.i;
 laptop_2.pwr = laptop_2.v * laptop_2.i;
 laptop_2.v = laptop_2.p.v - laptop_2.n.v;
 0 = laptop_2.p.i + laptop_2.n.i;
 laptop_2.i = laptop_2.p.i;
 laptop_3.pwr = laptop_3.v * laptop_3.i;
 laptop_3.v = laptop_3.p.v - laptop_3.n.v;
 0 = laptop_3.p.i + laptop_3.n.i;
 laptop_3.i = laptop_3.p.i;
 led_3.pwr = led_3.v * led_3.i;
 led_3.v = led_3.p.v - led_3.n.v;
 0 = led_3.p.i + led_3.n.i;
 led_3.i = led_3.p.i;
 led_1.pwr = led_1.v * led_1.i;
 led_1.v = led_1.p.v - led_1.n.v;
 0 = led_1.p.i + led_1.n.i;
 led_1.i = led_1.p.i;
 led_2.pwr = led_2.v * led_2.i;
 led_2.v = led_2.p.v - led_2.n.v;
 0 = led_2.p.i + led_2.n.i;
 led_2.i = led_2.p.i;
 PhA.pin_n.iIm[1:3] + PhB.pin_n.iIm[1:3] + PhC.pin_n.iIm[1:3] + ground1.pin.iIm[1:3] = zeros(3);
 PhA.pin_n.iRe[1:3] + PhB.pin_n.iRe[1:3] + PhC.pin_n.iRe[1:3] + ground1.pin.iRe[1:3] = zeros(3);
 PhA.pin_n.v[1].im = PhB.pin_n.v[1].im;
 PhB.pin_n.v[1].im = PhC.pin_n.v[1].im;
 PhC.pin_n.v[1].im = ground1.pin.v[1].im;
 PhA.pin_n.v[1].re = PhB.pin_n.v[1].re;
 PhB.pin_n.v[1].re = PhC.pin_n.v[1].re;
 PhC.pin_n.v[1].re = ground1.pin.v[1].re;
 PhA.pin_n.v[2].im = PhB.pin_n.v[2].im;
 PhB.pin_n.v[2].im = PhC.pin_n.v[2].im;
 PhC.pin_n.v[2].im = ground1.pin.v[2].im;
 PhA.pin_n.v[2].re = PhB.pin_n.v[2].re;
 PhB.pin_n.v[2].re = PhC.pin_n.v[2].re;
 PhC.pin_n.v[2].re = ground1.pin.v[2].re;
 PhA.pin_n.v[3].im = PhB.pin_n.v[3].im;
 PhB.pin_n.v[3].im = PhC.pin_n.v[3].im;
 PhC.pin_n.v[3].im = ground1.pin.v[3].im;
 PhA.pin_n.v[3].re = PhB.pin_n.v[3].re;
 PhB.pin_n.v[3].re = PhC.pin_n.v[3].re;
 PhC.pin_n.v[3].re = ground1.pin.v[3].re;
 laptop_adpt_1.hPin_P.iIm[1:3] + laptop_adpt_2.hPin_P.iIm[1:3] + led_driver_1.hPin_P.iIm[1:3] + led_driver_2.hPin_P.iIm[1:3] + z.pin_n.iIm[1:3] = zeros(3);
 laptop_adpt_1.hPin_P.iRe[1:3] + laptop_adpt_2.hPin_P.iRe[1:3] + led_driver_1.hPin_P.iRe[1:3] + led_driver_2.hPin_P.iRe[1:3] + z.pin_n.iRe[1:3] = zeros(3);
 laptop_adpt_1.hPin_P.v[1].im = laptop_adpt_2.hPin_P.v[1].im;
 laptop_adpt_2.hPin_P.v[1].im = led_driver_1.hPin_P.v[1].im;
 led_driver_1.hPin_P.v[1].im = led_driver_2.hPin_P.v[1].im;
 led_driver_2.hPin_P.v[1].im = z.pin_n.v[1].im;
 laptop_adpt_1.hPin_P.v[1].re = laptop_adpt_2.hPin_P.v[1].re;
 laptop_adpt_2.hPin_P.v[1].re = led_driver_1.hPin_P.v[1].re;
 led_driver_1.hPin_P.v[1].re = led_driver_2.hPin_P.v[1].re;
 led_driver_2.hPin_P.v[1].re = z.pin_n.v[1].re;
 laptop_adpt_1.hPin_P.v[2].im = laptop_adpt_2.hPin_P.v[2].im;
 laptop_adpt_2.hPin_P.v[2].im = led_driver_1.hPin_P.v[2].im;
 led_driver_1.hPin_P.v[2].im = led_driver_2.hPin_P.v[2].im;
 led_driver_2.hPin_P.v[2].im = z.pin_n.v[2].im;
 laptop_adpt_1.hPin_P.v[2].re = laptop_adpt_2.hPin_P.v[2].re;
 laptop_adpt_2.hPin_P.v[2].re = led_driver_1.hPin_P.v[2].re;
 led_driver_1.hPin_P.v[2].re = led_driver_2.hPin_P.v[2].re;
 led_driver_2.hPin_P.v[2].re = z.pin_n.v[2].re;
 laptop_adpt_1.hPin_P.v[3].im = laptop_adpt_2.hPin_P.v[3].im;
 laptop_adpt_2.hPin_P.v[3].im = led_driver_1.hPin_P.v[3].im;
 led_driver_1.hPin_P.v[3].im = led_driver_2.hPin_P.v[3].im;
 led_driver_2.hPin_P.v[3].im = z.pin_n.v[3].im;
 laptop_adpt_1.hPin_P.v[3].re = laptop_adpt_2.hPin_P.v[3].re;
 laptop_adpt_2.hPin_P.v[3].re = led_driver_1.hPin_P.v[3].re;
 led_driver_1.hPin_P.v[3].re = led_driver_2.hPin_P.v[3].re;
 led_driver_2.hPin_P.v[3].re = z.pin_n.v[3].re;
 laptop_adpt_3.hPin_P.iIm[1:3] + led_driver_3.hPin_P.iIm[1:3] + z1.pin_n.iIm[1:3] = zeros(3);
 laptop_adpt_3.hPin_P.iRe[1:3] + led_driver_3.hPin_P.iRe[1:3] + z1.pin_n.iRe[1:3] = zeros(3);
 laptop_adpt_3.hPin_P.v[1].im = led_driver_3.hPin_P.v[1].im;
 led_driver_3.hPin_P.v[1].im = z1.pin_n.v[1].im;
 laptop_adpt_3.hPin_P.v[1].re = led_driver_3.hPin_P.v[1].re;
 led_driver_3.hPin_P.v[1].re = z1.pin_n.v[1].re;
 laptop_adpt_3.hPin_P.v[2].im = led_driver_3.hPin_P.v[2].im;
 led_driver_3.hPin_P.v[2].im = z1.pin_n.v[2].im;
 laptop_adpt_3.hPin_P.v[2].re = led_driver_3.hPin_P.v[2].re;
 led_driver_3.hPin_P.v[2].re = z1.pin_n.v[2].re;
 laptop_adpt_3.hPin_P.v[3].im = led_driver_3.hPin_P.v[3].im;
 led_driver_3.hPin_P.v[3].im = z1.pin_n.v[3].im;
 laptop_adpt_3.hPin_P.v[3].re = led_driver_3.hPin_P.v[3].re;
 led_driver_3.hPin_P.v[3].re = z1.pin_n.v[3].re;
 PhA.pin_p.iIm[1:3] + test_DY.pinPrim_A.iIm[1:3] = zeros(3);
 PhA.pin_p.iRe[1:3] + test_DY.pinPrim_A.iRe[1:3] = zeros(3);
 PhA.pin_p.v[1].im = test_DY.pinPrim_A.v[1].im;
 PhA.pin_p.v[1].re = test_DY.pinPrim_A.v[1].re;
 PhA.pin_p.v[2].im = test_DY.pinPrim_A.v[2].im;
 PhA.pin_p.v[2].re = test_DY.pinPrim_A.v[2].re;
 PhA.pin_p.v[3].im = test_DY.pinPrim_A.v[3].im;
 PhA.pin_p.v[3].re = test_DY.pinPrim_A.v[3].re;
 PhB.pin_p.iIm[1:3] + test_DY.pinPrim_B.iIm[1:3] = zeros(3);
 PhB.pin_p.iRe[1:3] + test_DY.pinPrim_B.iRe[1:3] = zeros(3);
 PhB.pin_p.v[1].im = test_DY.pinPrim_B.v[1].im;
 PhB.pin_p.v[1].re = test_DY.pinPrim_B.v[1].re;
 PhB.pin_p.v[2].im = test_DY.pinPrim_B.v[2].im;
 PhB.pin_p.v[2].re = test_DY.pinPrim_B.v[2].re;
 PhB.pin_p.v[3].im = test_DY.pinPrim_B.v[3].im;
 PhB.pin_p.v[3].re = test_DY.pinPrim_B.v[3].re;
 PhC.pin_p.iIm[1:3] + test_DY.pinPrim_C.iIm[1:3] = zeros(3);
 PhC.pin_p.iRe[1:3] + test_DY.pinPrim_C.iRe[1:3] = zeros(3);
 PhC.pin_p.v[1].im = test_DY.pinPrim_C.v[1].im;
 PhC.pin_p.v[1].re = test_DY.pinPrim_C.v[1].re;
 PhC.pin_p.v[2].im = test_DY.pinPrim_C.v[2].im;
 PhC.pin_p.v[2].re = test_DY.pinPrim_C.v[2].re;
 PhC.pin_p.v[3].im = test_DY.pinPrim_C.v[3].im;
 PhC.pin_p.v[3].re = test_DY.pinPrim_C.v[3].re;
 ground2.pin.iIm[1:3] + laptop_adpt_1.hPin_N.iIm[1:3] + laptop_adpt_2.hPin_N.iIm[1:3] + laptop_adpt_3.hPin_N.iIm[1:3] + led_driver_1.hPin_N.iIm[1:3] + led_driver_2.hPin_N.iIm[1:3] + led_driver_3.hPin_N.iIm[1:3] + terminal.pin_n.iIm[1:3] + test_DY.hPin_N.iIm[1:3] = zeros(3);
 ground2.pin.iRe[1:3] + laptop_adpt_1.hPin_N.iRe[1:3] + laptop_adpt_2.hPin_N.iRe[1:3] + laptop_adpt_3.hPin_N.iRe[1:3] + led_driver_1.hPin_N.iRe[1:3] + led_driver_2.hPin_N.iRe[1:3] + led_driver_3.hPin_N.iRe[1:3] + terminal.pin_n.iRe[1:3] + test_DY.hPin_N.iRe[1:3] = zeros(3);
 ground2.pin.v[1].im = laptop_adpt_1.hPin_N.v[1].im;
 laptop_adpt_1.hPin_N.v[1].im = laptop_adpt_2.hPin_N.v[1].im;
 laptop_adpt_2.hPin_N.v[1].im = laptop_adpt_3.hPin_N.v[1].im;
 laptop_adpt_3.hPin_N.v[1].im = led_driver_1.hPin_N.v[1].im;
 led_driver_1.hPin_N.v[1].im = led_driver_2.hPin_N.v[1].im;
 led_driver_2.hPin_N.v[1].im = led_driver_3.hPin_N.v[1].im;
 led_driver_3.hPin_N.v[1].im = terminal.pin_n.v[1].im;
 terminal.pin_n.v[1].im = test_DY.hPin_N.v[1].im;
 ground2.pin.v[1].re = laptop_adpt_1.hPin_N.v[1].re;
 laptop_adpt_1.hPin_N.v[1].re = laptop_adpt_2.hPin_N.v[1].re;
 laptop_adpt_2.hPin_N.v[1].re = laptop_adpt_3.hPin_N.v[1].re;
 laptop_adpt_3.hPin_N.v[1].re = led_driver_1.hPin_N.v[1].re;
 led_driver_1.hPin_N.v[1].re = led_driver_2.hPin_N.v[1].re;
 led_driver_2.hPin_N.v[1].re = led_driver_3.hPin_N.v[1].re;
 led_driver_3.hPin_N.v[1].re = terminal.pin_n.v[1].re;
 terminal.pin_n.v[1].re = test_DY.hPin_N.v[1].re;
 ground2.pin.v[2].im = laptop_adpt_1.hPin_N.v[2].im;
 laptop_adpt_1.hPin_N.v[2].im = laptop_adpt_2.hPin_N.v[2].im;
 laptop_adpt_2.hPin_N.v[2].im = laptop_adpt_3.hPin_N.v[2].im;
 laptop_adpt_3.hPin_N.v[2].im = led_driver_1.hPin_N.v[2].im;
 led_driver_1.hPin_N.v[2].im = led_driver_2.hPin_N.v[2].im;
 led_driver_2.hPin_N.v[2].im = led_driver_3.hPin_N.v[2].im;
 led_driver_3.hPin_N.v[2].im = terminal.pin_n.v[2].im;
 terminal.pin_n.v[2].im = test_DY.hPin_N.v[2].im;
 ground2.pin.v[2].re = laptop_adpt_1.hPin_N.v[2].re;
 laptop_adpt_1.hPin_N.v[2].re = laptop_adpt_2.hPin_N.v[2].re;
 laptop_adpt_2.hPin_N.v[2].re = laptop_adpt_3.hPin_N.v[2].re;
 laptop_adpt_3.hPin_N.v[2].re = led_driver_1.hPin_N.v[2].re;
 led_driver_1.hPin_N.v[2].re = led_driver_2.hPin_N.v[2].re;
 led_driver_2.hPin_N.v[2].re = led_driver_3.hPin_N.v[2].re;
 led_driver_3.hPin_N.v[2].re = terminal.pin_n.v[2].re;
 terminal.pin_n.v[2].re = test_DY.hPin_N.v[2].re;
 ground2.pin.v[3].im = laptop_adpt_1.hPin_N.v[3].im;
 laptop_adpt_1.hPin_N.v[3].im = laptop_adpt_2.hPin_N.v[3].im;
 laptop_adpt_2.hPin_N.v[3].im = laptop_adpt_3.hPin_N.v[3].im;
 laptop_adpt_3.hPin_N.v[3].im = led_driver_1.hPin_N.v[3].im;
 led_driver_1.hPin_N.v[3].im = led_driver_2.hPin_N.v[3].im;
 led_driver_2.hPin_N.v[3].im = led_driver_3.hPin_N.v[3].im;
 led_driver_3.hPin_N.v[3].im = terminal.pin_n.v[3].im;
 terminal.pin_n.v[3].im = test_DY.hPin_N.v[3].im;
 ground2.pin.v[3].re = laptop_adpt_1.hPin_N.v[3].re;
 laptop_adpt_1.hPin_N.v[3].re = laptop_adpt_2.hPin_N.v[3].re;
 laptop_adpt_2.hPin_N.v[3].re = laptop_adpt_3.hPin_N.v[3].re;
 laptop_adpt_3.hPin_N.v[3].re = led_driver_1.hPin_N.v[3].re;
 led_driver_1.hPin_N.v[3].re = led_driver_2.hPin_N.v[3].re;
 led_driver_2.hPin_N.v[3].re = led_driver_3.hPin_N.v[3].re;
 led_driver_3.hPin_N.v[3].re = terminal.pin_n.v[3].re;
 terminal.pin_n.v[3].re = test_DY.hPin_N.v[3].re;
 test_DY.pinSec_C.iIm[1:3] + z1.pin_p.iIm[1:3] = zeros(3);
 test_DY.pinSec_C.iRe[1:3] + z1.pin_p.iRe[1:3] = zeros(3);
 test_DY.pinSec_C.v[1].im = z1.pin_p.v[1].im;
 test_DY.pinSec_C.v[1].re = z1.pin_p.v[1].re;
 test_DY.pinSec_C.v[2].im = z1.pin_p.v[2].im;
 test_DY.pinSec_C.v[2].re = z1.pin_p.v[2].re;
 test_DY.pinSec_C.v[3].im = z1.pin_p.v[3].im;
 test_DY.pinSec_C.v[3].re = z1.pin_p.v[3].re;
 test_DY.pinSec_B.iIm[1:3] + z.pin_p.iIm[1:3] = zeros(3);
 test_DY.pinSec_B.iRe[1:3] + z.pin_p.iRe[1:3] = zeros(3);
 test_DY.pinSec_B.v[1].im = z.pin_p.v[1].im;
 test_DY.pinSec_B.v[1].re = z.pin_p.v[1].re;
 test_DY.pinSec_B.v[2].im = z.pin_p.v[2].im;
 test_DY.pinSec_B.v[2].re = z.pin_p.v[2].re;
 test_DY.pinSec_B.v[3].im = z.pin_p.v[3].im;
 test_DY.pinSec_B.v[3].re = z.pin_p.v[3].re;
 terminal.pin_p.iIm[1:3] + test_DY.pinSec_A.iIm[1:3] = zeros(3);
 terminal.pin_p.iRe[1:3] + test_DY.pinSec_A.iRe[1:3] = zeros(3);
 terminal.pin_p.v[1].im = test_DY.pinSec_A.v[1].im;
 terminal.pin_p.v[1].re = test_DY.pinSec_A.v[1].re;
 terminal.pin_p.v[2].im = test_DY.pinSec_A.v[2].im;
 terminal.pin_p.v[2].re = test_DY.pinSec_A.v[2].re;
 terminal.pin_p.v[3].im = test_DY.pinSec_A.v[3].im;
 terminal.pin_p.v[3].re = test_DY.pinSec_A.v[3].re;
 laptop_1.p.i + laptop_adpt_1.pin_p.i = 0.0;
 laptop_1.p.v = laptop_adpt_1.pin_p.v;
 ground6.p.i + laptop_1.n.i + laptop_adpt_1.pin_n.i = 0.0;
 ground6.p.v = laptop_1.n.v;
 laptop_1.n.v = laptop_adpt_1.pin_n.v;
 laptop_2.p.i + laptop_adpt_2.pin_p.i = 0.0;
 laptop_2.p.v = laptop_adpt_2.pin_p.v;
 ground3.p.i + laptop_2.n.i + laptop_adpt_2.pin_n.i = 0.0;
 ground3.p.v = laptop_2.n.v;
 laptop_2.n.v = laptop_adpt_2.pin_n.v;
 laptop_3.p.i + laptop_adpt_3.pin_p.i = 0.0;
 laptop_3.p.v = laptop_adpt_3.pin_p.v;
 ground8.p.i + laptop_3.n.i + laptop_adpt_3.pin_n.i = 0.0;
 ground8.p.v = laptop_3.n.v;
 laptop_3.n.v = laptop_adpt_3.pin_n.v;
 led_3.p.i + led_driver_3.pin_p.i = 0.0;
 led_3.p.v = led_driver_3.pin_p.v;
 ground5.p.i + led_3.n.i + led_driver_3.pin_n.i = 0.0;
 ground5.p.v = led_3.n.v;
 led_3.n.v = led_driver_3.pin_n.v;
 led_1.p.i + led_driver_1.pin_p.i = 0.0;
 led_1.p.v = led_driver_1.pin_p.v;
 ground4.p.i + led_1.n.i + led_driver_1.pin_n.i = 0.0;
 ground4.p.v = led_1.n.v;
 led_1.n.v = led_driver_1.pin_n.v;
 led_2.p.i + led_driver_2.pin_p.i = 0.0;
 led_2.p.v = led_driver_2.pin_p.v;
 ground7.p.i + led_2.n.i + led_driver_2.pin_n.i = 0.0;
 ground7.p.v = led_2.n.v;
 led_2.n.v = led_driver_2.pin_n.v;
 laptop_adpt_1.constantVoltage1.p.i - laptop_adpt_1.pin_p.i = 0.0;
 laptop_adpt_1.constantVoltage1.p.v = laptop_adpt_1.pin_p.v;
 laptop_adpt_1.constantVoltage1.n.i - laptop_adpt_1.pin_n.i = 0.0;
 laptop_adpt_1.constantVoltage1.n.v = laptop_adpt_1.pin_n.v;
 - laptop_adpt_1.hPin_P.iIm[1:3] + laptop_adpt_1.loadBase1.pin_p.iIm[1:3] = zeros(3);
 - laptop_adpt_1.hPin_P.iRe[1:3] + laptop_adpt_1.loadBase1.pin_p.iRe[1:3] = zeros(3);
 laptop_adpt_1.hPin_P.v[1].im = laptop_adpt_1.loadBase1.pin_p.v[1].im;
 laptop_adpt_1.hPin_P.v[1].re = laptop_adpt_1.loadBase1.pin_p.v[1].re;
 laptop_adpt_1.hPin_P.v[2].im = laptop_adpt_1.loadBase1.pin_p.v[2].im;
 laptop_adpt_1.hPin_P.v[2].re = laptop_adpt_1.loadBase1.pin_p.v[2].re;
 laptop_adpt_1.hPin_P.v[3].im = laptop_adpt_1.loadBase1.pin_p.v[3].im;
 laptop_adpt_1.hPin_P.v[3].re = laptop_adpt_1.loadBase1.pin_p.v[3].re;
 - laptop_adpt_1.hPin_N.iIm[1:3] + laptop_adpt_1.loadBase1.pin_n.iIm[1:3] = zeros(3);
 - laptop_adpt_1.hPin_N.iRe[1:3] + laptop_adpt_1.loadBase1.pin_n.iRe[1:3] = zeros(3);
 laptop_adpt_1.hPin_N.v[1].im = laptop_adpt_1.loadBase1.pin_n.v[1].im;
 laptop_adpt_1.hPin_N.v[1].re = laptop_adpt_1.loadBase1.pin_n.v[1].re;
 laptop_adpt_1.hPin_N.v[2].im = laptop_adpt_1.loadBase1.pin_n.v[2].im;
 laptop_adpt_1.hPin_N.v[2].re = laptop_adpt_1.loadBase1.pin_n.v[2].re;
 laptop_adpt_1.hPin_N.v[3].im = laptop_adpt_1.loadBase1.pin_n.v[3].im;
 laptop_adpt_1.hPin_N.v[3].re = laptop_adpt_1.loadBase1.pin_n.v[3].re;
 laptop_adpt_3.constantVoltage1.p.i - laptop_adpt_3.pin_p.i = 0.0;
 laptop_adpt_3.constantVoltage1.p.v = laptop_adpt_3.pin_p.v;
 laptop_adpt_3.constantVoltage1.n.i - laptop_adpt_3.pin_n.i = 0.0;
 laptop_adpt_3.constantVoltage1.n.v = laptop_adpt_3.pin_n.v;
 - laptop_adpt_3.hPin_P.iIm[1:3] + laptop_adpt_3.loadBase1.pin_p.iIm[1:3] = zeros(3);
 - laptop_adpt_3.hPin_P.iRe[1:3] + laptop_adpt_3.loadBase1.pin_p.iRe[1:3] = zeros(3);
 laptop_adpt_3.hPin_P.v[1].im = laptop_adpt_3.loadBase1.pin_p.v[1].im;
 laptop_adpt_3.hPin_P.v[1].re = laptop_adpt_3.loadBase1.pin_p.v[1].re;
 laptop_adpt_3.hPin_P.v[2].im = laptop_adpt_3.loadBase1.pin_p.v[2].im;
 laptop_adpt_3.hPin_P.v[2].re = laptop_adpt_3.loadBase1.pin_p.v[2].re;
 laptop_adpt_3.hPin_P.v[3].im = laptop_adpt_3.loadBase1.pin_p.v[3].im;
 laptop_adpt_3.hPin_P.v[3].re = laptop_adpt_3.loadBase1.pin_p.v[3].re;
 - laptop_adpt_3.hPin_N.iIm[1:3] + laptop_adpt_3.loadBase1.pin_n.iIm[1:3] = zeros(3);
 - laptop_adpt_3.hPin_N.iRe[1:3] + laptop_adpt_3.loadBase1.pin_n.iRe[1:3] = zeros(3);
 laptop_adpt_3.hPin_N.v[1].im = laptop_adpt_3.loadBase1.pin_n.v[1].im;
 laptop_adpt_3.hPin_N.v[1].re = laptop_adpt_3.loadBase1.pin_n.v[1].re;
 laptop_adpt_3.hPin_N.v[2].im = laptop_adpt_3.loadBase1.pin_n.v[2].im;
 laptop_adpt_3.hPin_N.v[2].re = laptop_adpt_3.loadBase1.pin_n.v[2].re;
 laptop_adpt_3.hPin_N.v[3].im = laptop_adpt_3.loadBase1.pin_n.v[3].im;
 laptop_adpt_3.hPin_N.v[3].re = laptop_adpt_3.loadBase1.pin_n.v[3].re;
 test_DY.idealTransformer1.pinP_Prim.iIm[1:3] + test_DY.idealTransformer2.pinN_Prim.iIm[1:3] - test_DY.pinPrim_A.iIm[1:3] = zeros(3);
 test_DY.idealTransformer1.pinP_Prim.iRe[1:3] + test_DY.idealTransformer2.pinN_Prim.iRe[1:3] - test_DY.pinPrim_A.iRe[1:3] = zeros(3);
 test_DY.idealTransformer1.pinP_Prim.v[1].im = test_DY.idealTransformer2.pinN_Prim.v[1].im;
 test_DY.idealTransformer2.pinN_Prim.v[1].im = test_DY.pinPrim_A.v[1].im;
 test_DY.idealTransformer1.pinP_Prim.v[1].re = test_DY.idealTransformer2.pinN_Prim.v[1].re;
 test_DY.idealTransformer2.pinN_Prim.v[1].re = test_DY.pinPrim_A.v[1].re;
 test_DY.idealTransformer1.pinP_Prim.v[2].im = test_DY.idealTransformer2.pinN_Prim.v[2].im;
 test_DY.idealTransformer2.pinN_Prim.v[2].im = test_DY.pinPrim_A.v[2].im;
 test_DY.idealTransformer1.pinP_Prim.v[2].re = test_DY.idealTransformer2.pinN_Prim.v[2].re;
 test_DY.idealTransformer2.pinN_Prim.v[2].re = test_DY.pinPrim_A.v[2].re;
 test_DY.idealTransformer1.pinP_Prim.v[3].im = test_DY.idealTransformer2.pinN_Prim.v[3].im;
 test_DY.idealTransformer2.pinN_Prim.v[3].im = test_DY.pinPrim_A.v[3].im;
 test_DY.idealTransformer1.pinP_Prim.v[3].re = test_DY.idealTransformer2.pinN_Prim.v[3].re;
 test_DY.idealTransformer2.pinN_Prim.v[3].re = test_DY.pinPrim_A.v[3].re;
 test_DY.idealTransformer1.pinN_Prim.iIm[1:3] + test_DY.idealTransformer3.pinP_Prim.iIm[1:3] - test_DY.pinPrim_C.iIm[1:3] = zeros(3);
 test_DY.idealTransformer1.pinN_Prim.iRe[1:3] + test_DY.idealTransformer3.pinP_Prim.iRe[1:3] - test_DY.pinPrim_C.iRe[1:3] = zeros(3);
 test_DY.idealTransformer1.pinN_Prim.v[1].im = test_DY.idealTransformer3.pinP_Prim.v[1].im;
 test_DY.idealTransformer3.pinP_Prim.v[1].im = test_DY.pinPrim_C.v[1].im;
 test_DY.idealTransformer1.pinN_Prim.v[1].re = test_DY.idealTransformer3.pinP_Prim.v[1].re;
 test_DY.idealTransformer3.pinP_Prim.v[1].re = test_DY.pinPrim_C.v[1].re;
 test_DY.idealTransformer1.pinN_Prim.v[2].im = test_DY.idealTransformer3.pinP_Prim.v[2].im;
 test_DY.idealTransformer3.pinP_Prim.v[2].im = test_DY.pinPrim_C.v[2].im;
 test_DY.idealTransformer1.pinN_Prim.v[2].re = test_DY.idealTransformer3.pinP_Prim.v[2].re;
 test_DY.idealTransformer3.pinP_Prim.v[2].re = test_DY.pinPrim_C.v[2].re;
 test_DY.idealTransformer1.pinN_Prim.v[3].im = test_DY.idealTransformer3.pinP_Prim.v[3].im;
 test_DY.idealTransformer3.pinP_Prim.v[3].im = test_DY.pinPrim_C.v[3].im;
 test_DY.idealTransformer1.pinN_Prim.v[3].re = test_DY.idealTransformer3.pinP_Prim.v[3].re;
 test_DY.idealTransformer3.pinP_Prim.v[3].re = test_DY.pinPrim_C.v[3].re;
 test_DY.idealTransformer2.pinP_Prim.iIm[1:3] + test_DY.idealTransformer3.pinN_Prim.iIm[1:3] - test_DY.pinPrim_B.iIm[1:3] = zeros(3);
 test_DY.idealTransformer2.pinP_Prim.iRe[1:3] + test_DY.idealTransformer3.pinN_Prim.iRe[1:3] - test_DY.pinPrim_B.iRe[1:3] = zeros(3);
 test_DY.idealTransformer2.pinP_Prim.v[1].im = test_DY.idealTransformer3.pinN_Prim.v[1].im;
 test_DY.idealTransformer3.pinN_Prim.v[1].im = test_DY.pinPrim_B.v[1].im;
 test_DY.idealTransformer2.pinP_Prim.v[1].re = test_DY.idealTransformer3.pinN_Prim.v[1].re;
 test_DY.idealTransformer3.pinN_Prim.v[1].re = test_DY.pinPrim_B.v[1].re;
 test_DY.idealTransformer2.pinP_Prim.v[2].im = test_DY.idealTransformer3.pinN_Prim.v[2].im;
 test_DY.idealTransformer3.pinN_Prim.v[2].im = test_DY.pinPrim_B.v[2].im;
 test_DY.idealTransformer2.pinP_Prim.v[2].re = test_DY.idealTransformer3.pinN_Prim.v[2].re;
 test_DY.idealTransformer3.pinN_Prim.v[2].re = test_DY.pinPrim_B.v[2].re;
 test_DY.idealTransformer2.pinP_Prim.v[3].im = test_DY.idealTransformer3.pinN_Prim.v[3].im;
 test_DY.idealTransformer3.pinN_Prim.v[3].im = test_DY.pinPrim_B.v[3].im;
 test_DY.idealTransformer2.pinP_Prim.v[3].re = test_DY.idealTransformer3.pinN_Prim.v[3].re;
 test_DY.idealTransformer3.pinN_Prim.v[3].re = test_DY.pinPrim_B.v[3].re;
 - test_DY.hPin_N.iIm[1:3] + test_DY.idealTransformer1.pinN_Sec.iIm[1:3] + test_DY.idealTransformer2.pinN_Sec.iIm[1:3] + test_DY.idealTransformer3.pinN_Sec.iIm[1:3] = zeros(3);
 - test_DY.hPin_N.iRe[1:3] + test_DY.idealTransformer1.pinN_Sec.iRe[1:3] + test_DY.idealTransformer2.pinN_Sec.iRe[1:3] + test_DY.idealTransformer3.pinN_Sec.iRe[1:3] = zeros(3);
 test_DY.hPin_N.v[1].im = test_DY.idealTransformer1.pinN_Sec.v[1].im;
 test_DY.idealTransformer1.pinN_Sec.v[1].im = test_DY.idealTransformer2.pinN_Sec.v[1].im;
 test_DY.idealTransformer2.pinN_Sec.v[1].im = test_DY.idealTransformer3.pinN_Sec.v[1].im;
 test_DY.hPin_N.v[1].re = test_DY.idealTransformer1.pinN_Sec.v[1].re;
 test_DY.idealTransformer1.pinN_Sec.v[1].re = test_DY.idealTransformer2.pinN_Sec.v[1].re;
 test_DY.idealTransformer2.pinN_Sec.v[1].re = test_DY.idealTransformer3.pinN_Sec.v[1].re;
 test_DY.hPin_N.v[2].im = test_DY.idealTransformer1.pinN_Sec.v[2].im;
 test_DY.idealTransformer1.pinN_Sec.v[2].im = test_DY.idealTransformer2.pinN_Sec.v[2].im;
 test_DY.idealTransformer2.pinN_Sec.v[2].im = test_DY.idealTransformer3.pinN_Sec.v[2].im;
 test_DY.hPin_N.v[2].re = test_DY.idealTransformer1.pinN_Sec.v[2].re;
 test_DY.idealTransformer1.pinN_Sec.v[2].re = test_DY.idealTransformer2.pinN_Sec.v[2].re;
 test_DY.idealTransformer2.pinN_Sec.v[2].re = test_DY.idealTransformer3.pinN_Sec.v[2].re;
 test_DY.hPin_N.v[3].im = test_DY.idealTransformer1.pinN_Sec.v[3].im;
 test_DY.idealTransformer1.pinN_Sec.v[3].im = test_DY.idealTransformer2.pinN_Sec.v[3].im;
 test_DY.idealTransformer2.pinN_Sec.v[3].im = test_DY.idealTransformer3.pinN_Sec.v[3].im;
 test_DY.hPin_N.v[3].re = test_DY.idealTransformer1.pinN_Sec.v[3].re;
 test_DY.idealTransformer1.pinN_Sec.v[3].re = test_DY.idealTransformer2.pinN_Sec.v[3].re;
 test_DY.idealTransformer2.pinN_Sec.v[3].re = test_DY.idealTransformer3.pinN_Sec.v[3].re;
 test_DY.idealTransformer1.pinP_Sec.iIm[1:3] - test_DY.pinSec_A.iIm[1:3] = zeros(3);
 test_DY.idealTransformer1.pinP_Sec.iRe[1:3] - test_DY.pinSec_A.iRe[1:3] = zeros(3);
 test_DY.idealTransformer1.pinP_Sec.v[1].im = test_DY.pinSec_A.v[1].im;
 test_DY.idealTransformer1.pinP_Sec.v[1].re = test_DY.pinSec_A.v[1].re;
 test_DY.idealTransformer1.pinP_Sec.v[2].im = test_DY.pinSec_A.v[2].im;
 test_DY.idealTransformer1.pinP_Sec.v[2].re = test_DY.pinSec_A.v[2].re;
 test_DY.idealTransformer1.pinP_Sec.v[3].im = test_DY.pinSec_A.v[3].im;
 test_DY.idealTransformer1.pinP_Sec.v[3].re = test_DY.pinSec_A.v[3].re;
 test_DY.idealTransformer2.pinP_Sec.iIm[1:3] - test_DY.pinSec_B.iIm[1:3] = zeros(3);
 test_DY.idealTransformer2.pinP_Sec.iRe[1:3] - test_DY.pinSec_B.iRe[1:3] = zeros(3);
 test_DY.idealTransformer2.pinP_Sec.v[1].im = test_DY.pinSec_B.v[1].im;
 test_DY.idealTransformer2.pinP_Sec.v[1].re = test_DY.pinSec_B.v[1].re;
 test_DY.idealTransformer2.pinP_Sec.v[2].im = test_DY.pinSec_B.v[2].im;
 test_DY.idealTransformer2.pinP_Sec.v[2].re = test_DY.pinSec_B.v[2].re;
 test_DY.idealTransformer2.pinP_Sec.v[3].im = test_DY.pinSec_B.v[3].im;
 test_DY.idealTransformer2.pinP_Sec.v[3].re = test_DY.pinSec_B.v[3].re;
 test_DY.idealTransformer3.pinP_Sec.iIm[1:3] - test_DY.pinSec_C.iIm[1:3] = zeros(3);
 test_DY.idealTransformer3.pinP_Sec.iRe[1:3] - test_DY.pinSec_C.iRe[1:3] = zeros(3);
 test_DY.idealTransformer3.pinP_Sec.v[1].im = test_DY.pinSec_C.v[1].im;
 test_DY.idealTransformer3.pinP_Sec.v[1].re = test_DY.pinSec_C.v[1].re;
 test_DY.idealTransformer3.pinP_Sec.v[2].im = test_DY.pinSec_C.v[2].im;
 test_DY.idealTransformer3.pinP_Sec.v[2].re = test_DY.pinSec_C.v[2].re;
 test_DY.idealTransformer3.pinP_Sec.v[3].im = test_DY.pinSec_C.v[3].im;
 test_DY.idealTransformer3.pinP_Sec.v[3].re = test_DY.pinSec_C.v[3].re;
 laptop_adpt_2.constantVoltage1.p.i - laptop_adpt_2.pin_p.i = 0.0;
 laptop_adpt_2.constantVoltage1.p.v = laptop_adpt_2.pin_p.v;
 laptop_adpt_2.constantVoltage1.n.i - laptop_adpt_2.pin_n.i = 0.0;
 laptop_adpt_2.constantVoltage1.n.v = laptop_adpt_2.pin_n.v;
 - laptop_adpt_2.hPin_P.iIm[1:3] + laptop_adpt_2.loadBase1.pin_p.iIm[1:3] = zeros(3);
 - laptop_adpt_2.hPin_P.iRe[1:3] + laptop_adpt_2.loadBase1.pin_p.iRe[1:3] = zeros(3);
 laptop_adpt_2.hPin_P.v[1].im = laptop_adpt_2.loadBase1.pin_p.v[1].im;
 laptop_adpt_2.hPin_P.v[1].re = laptop_adpt_2.loadBase1.pin_p.v[1].re;
 laptop_adpt_2.hPin_P.v[2].im = laptop_adpt_2.loadBase1.pin_p.v[2].im;
 laptop_adpt_2.hPin_P.v[2].re = laptop_adpt_2.loadBase1.pin_p.v[2].re;
 laptop_adpt_2.hPin_P.v[3].im = laptop_adpt_2.loadBase1.pin_p.v[3].im;
 laptop_adpt_2.hPin_P.v[3].re = laptop_adpt_2.loadBase1.pin_p.v[3].re;
 - laptop_adpt_2.hPin_N.iIm[1:3] + laptop_adpt_2.loadBase1.pin_n.iIm[1:3] = zeros(3);
 - laptop_adpt_2.hPin_N.iRe[1:3] + laptop_adpt_2.loadBase1.pin_n.iRe[1:3] = zeros(3);
 laptop_adpt_2.hPin_N.v[1].im = laptop_adpt_2.loadBase1.pin_n.v[1].im;
 laptop_adpt_2.hPin_N.v[1].re = laptop_adpt_2.loadBase1.pin_n.v[1].re;
 laptop_adpt_2.hPin_N.v[2].im = laptop_adpt_2.loadBase1.pin_n.v[2].im;
 laptop_adpt_2.hPin_N.v[2].re = laptop_adpt_2.loadBase1.pin_n.v[2].re;
 laptop_adpt_2.hPin_N.v[3].im = laptop_adpt_2.loadBase1.pin_n.v[3].im;
 laptop_adpt_2.hPin_N.v[3].re = laptop_adpt_2.loadBase1.pin_n.v[3].re;
 led_driver_1.constantVoltage1.p.i - led_driver_1.pin_p.i = 0.0;
 led_driver_1.constantVoltage1.p.v = led_driver_1.pin_p.v;
 led_driver_1.constantVoltage1.n.i - led_driver_1.pin_n.i = 0.0;
 led_driver_1.constantVoltage1.n.v = led_driver_1.pin_n.v;
 - led_driver_1.hPin_P.iIm[1:3] + led_driver_1.loadBase1.pin_p.iIm[1:3] = zeros(3);
 - led_driver_1.hPin_P.iRe[1:3] + led_driver_1.loadBase1.pin_p.iRe[1:3] = zeros(3);
 led_driver_1.hPin_P.v[1].im = led_driver_1.loadBase1.pin_p.v[1].im;
 led_driver_1.hPin_P.v[1].re = led_driver_1.loadBase1.pin_p.v[1].re;
 led_driver_1.hPin_P.v[2].im = led_driver_1.loadBase1.pin_p.v[2].im;
 led_driver_1.hPin_P.v[2].re = led_driver_1.loadBase1.pin_p.v[2].re;
 led_driver_1.hPin_P.v[3].im = led_driver_1.loadBase1.pin_p.v[3].im;
 led_driver_1.hPin_P.v[3].re = led_driver_1.loadBase1.pin_p.v[3].re;
 - led_driver_1.hPin_N.iIm[1:3] + led_driver_1.loadBase1.pin_n.iIm[1:3] = zeros(3);
 - led_driver_1.hPin_N.iRe[1:3] + led_driver_1.loadBase1.pin_n.iRe[1:3] = zeros(3);
 led_driver_1.hPin_N.v[1].im = led_driver_1.loadBase1.pin_n.v[1].im;
 led_driver_1.hPin_N.v[1].re = led_driver_1.loadBase1.pin_n.v[1].re;
 led_driver_1.hPin_N.v[2].im = led_driver_1.loadBase1.pin_n.v[2].im;
 led_driver_1.hPin_N.v[2].re = led_driver_1.loadBase1.pin_n.v[2].re;
 led_driver_1.hPin_N.v[3].im = led_driver_1.loadBase1.pin_n.v[3].im;
 led_driver_1.hPin_N.v[3].re = led_driver_1.loadBase1.pin_n.v[3].re;
 led_driver_3.constantVoltage1.p.i - led_driver_3.pin_p.i = 0.0;
 led_driver_3.constantVoltage1.p.v = led_driver_3.pin_p.v;
 led_driver_3.constantVoltage1.n.i - led_driver_3.pin_n.i = 0.0;
 led_driver_3.constantVoltage1.n.v = led_driver_3.pin_n.v;
 - led_driver_3.hPin_P.iIm[1:3] + led_driver_3.loadBase1.pin_p.iIm[1:3] = zeros(3);
 - led_driver_3.hPin_P.iRe[1:3] + led_driver_3.loadBase1.pin_p.iRe[1:3] = zeros(3);
 led_driver_3.hPin_P.v[1].im = led_driver_3.loadBase1.pin_p.v[1].im;
 led_driver_3.hPin_P.v[1].re = led_driver_3.loadBase1.pin_p.v[1].re;
 led_driver_3.hPin_P.v[2].im = led_driver_3.loadBase1.pin_p.v[2].im;
 led_driver_3.hPin_P.v[2].re = led_driver_3.loadBase1.pin_p.v[2].re;
 led_driver_3.hPin_P.v[3].im = led_driver_3.loadBase1.pin_p.v[3].im;
 led_driver_3.hPin_P.v[3].re = led_driver_3.loadBase1.pin_p.v[3].re;
 - led_driver_3.hPin_N.iIm[1:3] + led_driver_3.loadBase1.pin_n.iIm[1:3] = zeros(3);
 - led_driver_3.hPin_N.iRe[1:3] + led_driver_3.loadBase1.pin_n.iRe[1:3] = zeros(3);
 led_driver_3.hPin_N.v[1].im = led_driver_3.loadBase1.pin_n.v[1].im;
 led_driver_3.hPin_N.v[1].re = led_driver_3.loadBase1.pin_n.v[1].re;
 led_driver_3.hPin_N.v[2].im = led_driver_3.loadBase1.pin_n.v[2].im;
 led_driver_3.hPin_N.v[2].re = led_driver_3.loadBase1.pin_n.v[2].re;
 led_driver_3.hPin_N.v[3].im = led_driver_3.loadBase1.pin_n.v[3].im;
 led_driver_3.hPin_N.v[3].re = led_driver_3.loadBase1.pin_n.v[3].re;
 led_driver_2.constantVoltage1.p.i - led_driver_2.pin_p.i = 0.0;
 led_driver_2.constantVoltage1.p.v = led_driver_2.pin_p.v;
 led_driver_2.constantVoltage1.n.i - led_driver_2.pin_n.i = 0.0;
 led_driver_2.constantVoltage1.n.v = led_driver_2.pin_n.v;
 - led_driver_2.hPin_P.iIm[1:3] + led_driver_2.loadBase1.pin_p.iIm[1:3] = zeros(3);
 - led_driver_2.hPin_P.iRe[1:3] + led_driver_2.loadBase1.pin_p.iRe[1:3] = zeros(3);
 led_driver_2.hPin_P.v[1].im = led_driver_2.loadBase1.pin_p.v[1].im;
 led_driver_2.hPin_P.v[1].re = led_driver_2.loadBase1.pin_p.v[1].re;
 led_driver_2.hPin_P.v[2].im = led_driver_2.loadBase1.pin_p.v[2].im;
 led_driver_2.hPin_P.v[2].re = led_driver_2.loadBase1.pin_p.v[2].re;
 led_driver_2.hPin_P.v[3].im = led_driver_2.loadBase1.pin_p.v[3].im;
 led_driver_2.hPin_P.v[3].re = led_driver_2.loadBase1.pin_p.v[3].re;
 - led_driver_2.hPin_N.iIm[1:3] + led_driver_2.loadBase1.pin_n.iIm[1:3] = zeros(3);
 - led_driver_2.hPin_N.iRe[1:3] + led_driver_2.loadBase1.pin_n.iRe[1:3] = zeros(3);
 led_driver_2.hPin_N.v[1].im = led_driver_2.loadBase1.pin_n.v[1].im;
 led_driver_2.hPin_N.v[1].re = led_driver_2.loadBase1.pin_n.v[1].re;
 led_driver_2.hPin_N.v[2].im = led_driver_2.loadBase1.pin_n.v[2].im;
 led_driver_2.hPin_N.v[2].re = led_driver_2.loadBase1.pin_n.v[2].re;
 led_driver_2.hPin_N.v[3].im = led_driver_2.loadBase1.pin_n.v[3].im;
 led_driver_2.hPin_N.v[3].re = led_driver_2.loadBase1.pin_n.v[3].re;
 PhA.pin_p.reference.theta = test_DY.pinPrim_A.reference.theta;
 test_DY.idealTransformer1.pinP_Prim.reference.theta = test_DY.idealTransformer2.pinN_Prim.reference.theta;
 test_DY.idealTransformer2.pinN_Prim.reference.theta = test_DY.pinPrim_A.reference.theta;
 PhA.pin_n.reference.theta = ground1.pin.reference.theta;
 test_DY.idealTransformer1.pinN_Prim.reference.theta = test_DY.idealTransformer3.pinP_Prim.reference.theta;
 test_DY.idealTransformer3.pinP_Prim.reference.theta = test_DY.pinPrim_C.reference.theta;
 test_DY.hPin_N.reference.theta = test_DY.idealTransformer1.pinN_Sec.reference.theta;
 test_DY.idealTransformer1.pinP_Sec.reference.theta = test_DY.pinSec_A.reference.theta;
 test_DY.idealTransformer2.pinP_Prim.reference.theta = test_DY.pinPrim_B.reference.theta;
 test_DY.idealTransformer2.pinP_Sec.reference.theta = test_DY.pinSec_B.reference.theta;
 test_DY.idealTransformer3.pinP_Sec.reference.theta = test_DY.pinSec_C.reference.theta;
 ground2.pin.reference.theta = laptop_adpt_1.hPin_N.reference.theta;
 laptop_adpt_1.hPin_N.reference.theta = laptop_adpt_2.hPin_N.reference.theta;
 laptop_adpt_2.hPin_N.reference.theta = laptop_adpt_3.hPin_N.reference.theta;
 laptop_adpt_3.hPin_N.reference.theta = led_driver_1.hPin_N.reference.theta;
 led_driver_1.hPin_N.reference.theta = led_driver_2.hPin_N.reference.theta;
 led_driver_2.hPin_N.reference.theta = led_driver_3.hPin_N.reference.theta;
 led_driver_3.hPin_N.reference.theta = test_DY.hPin_N.reference.theta;
 terminal.pin_p.reference.theta = test_DY.pinSec_A.reference.theta;
 test_DY.pinSec_B.reference.theta = z.pin_p.reference.theta;
 test_DY.pinSec_C.reference.theta = z1.pin_p.reference.theta;
 laptop_adpt_1.hPin_P.reference.theta = laptop_adpt_2.hPin_P.reference.theta;
 laptop_adpt_2.hPin_P.reference.theta = led_driver_1.hPin_P.reference.theta;
 led_driver_1.hPin_P.reference.theta = led_driver_2.hPin_P.reference.theta;
 led_driver_2.hPin_P.reference.theta = z.pin_n.reference.theta;
 laptop_adpt_3.hPin_P.reference.theta = led_driver_3.hPin_P.reference.theta;
 led_driver_3.hPin_P.reference.theta = z1.pin_n.reference.theta;
 laptop_adpt_1.hPin_N.reference.theta = laptop_adpt_1.loadBase1.pin_n.reference.theta;
 laptop_adpt_3.hPin_N.reference.theta = laptop_adpt_3.loadBase1.pin_n.reference.theta;
 laptop_adpt_2.hPin_N.reference.theta = laptop_adpt_2.loadBase1.pin_n.reference.theta;
 led_driver_3.hPin_N.reference.theta = led_driver_3.loadBase1.pin_n.reference.theta;
 led_driver_2.hPin_N.reference.theta = led_driver_2.loadBase1.pin_n.reference.theta;
 led_driver_1.hPin_P.reference.theta = led_driver_1.loadBase1.pin_p.reference.theta;
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(test_DY.idealTransformer2.pinN_Sec.reference, test_DY.idealTransformer1.pinN_Sec.reference);
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(test_DY.idealTransformer3.pinN_Sec.reference, test_DY.idealTransformer1.pinN_Sec.reference);
 HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(ground1.pin.reference, PhC.pin_n.reference);
 HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(PhB.pin_n.reference, ground1.pin.reference);
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(test_DY.idealTransformer3.pinN_Prim.reference, test_DY.idealTransformer2.pinP_Prim.reference);
 HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(PhB.pin_p.reference, test_DY.pinPrim_B.reference);
 HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(PhC.pin_p.reference, test_DY.pinPrim_C.reference);
 HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(terminal.pin_n.reference, ground2.pin.reference);
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(laptop_adpt_1.hPin_P.reference, laptop_adpt_1.loadBase1.pin_p.reference);
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(laptop_adpt_2.hPin_P.reference, laptop_adpt_2.loadBase1.pin_p.reference);
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(led_driver_2.hPin_P.reference, led_driver_2.loadBase1.pin_p.reference);
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(laptop_adpt_3.hPin_P.reference, laptop_adpt_3.loadBase1.pin_p.reference);
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(led_driver_3.hPin_P.reference, led_driver_3.loadBase1.pin_p.reference);
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(led_driver_1.loadBase1.pin_n.reference, led_driver_1.hPin_N.reference);

public
 function Modelica.ComplexMath.'abs'
  input Complex c;
  output Real result;
 algorithm
  result := (c.re ^ 2 + c.im ^ 2) ^ 0.5;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.'abs';

 function Modelica.ComplexMath.arg
  input Complex c;
  input Real phi0;
  output Real phi;
 algorithm
  phi := Modelica.Math.atan3(c.im, c.re, phi0);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.arg;

 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function Complex.'-'.subtract
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re - c2.re, c1.im - c2.im);
  return;
 annotation(Inline = true);
 end Complex.'-'.subtract;

 function Complex.'constructor'.fromReal
  input Real re;
  input Real im;
  output Complex result;
 algorithm
  result.re := re;
  result.im := im;
  return;
 annotation(Inline = true);
 end Complex.'constructor'.fromReal;

 function HPF.Utilities.polyval
  input Real[:] a;
  input Real x;
  output Real y;
 algorithm
  y := a[:] * {x ^ i for i in size(a, 1) - 1:-1:0};
  return;
 end HPF.Utilities.polyval;

 function Complex.'*'.multiply
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re * c2.re - c1.im * c2.im, c1.re * c2.im + c1.im * c2.re);
  return;
 annotation(Inline = true);
 end Complex.'*'.multiply;

 function Complex.'+'
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re + c2.re, c1.im + c2.im);
  return;
 annotation(Inline = true);
 end Complex.'+';

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint;

 record HPF.Utilities.ComponentProperties
  discrete String ComponentType "Type of the component";
 end HPF.Utilities.ComponentProperties;

 record Complex
  Real re "Real part of complex number";
  Real im "Imaginary part of complex number";
 end Complex;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
end HPF.Examples.DC_Testbed.Configuration_3;

Applying transformation: enableIfEquationElimination...
Applying transformation: genInitArrayStatements...
Applying transformation: scalarize...
Applying transformation: MakeReinitedVarsStates...
Applying transformation: enableIfEquationElimination...
Applying transformation: enableStreamsRewrite...
Applying transformation: ExtractEventGeneratingExpressions...
Applying transformation: GenerateEventIndicators...
Applying transformation: convertWhenToIf...
Applying transformation: FunctionInliningIfSet...
Applying transformation: setFDerivativeVariables...
Applying transformation: addFPreVariables...
Applying transformation: enableIfEquationRewrite...
Applying transformation: aliasEliminationIfSet...
Applying transformation: variabilityPropagationIfSet...
Applying transformation: aliasEliminationIfSet...
Applying transformation: eliminateLinearEquations...
Applying transformation: aliasEliminationIfSet...
Applying transformation: enableExpandedInStreamRewrite...
Applying transformation: evaluateAsserts...
Applying transformation: enableSemiLinearRewrite...
Applying transformation: eliminateEqualSwitches...
Applying transformation: genInitialEquations...
Applying transformation: setFDerivativeVariablesPreBLT...
Applying transformation: indexReduction...
Applying transformation: LateFunctionInliningIfSet...
Applying transformation: commonSubexpressionEliminationIfSet...
Applying transformation: addFPreVariables...
Applying transformation: aliasEliminationIfSet...
Applying transformation: eliminateLinearEquations...
Applying transformation: sortDependentParameters...
Applying transformation: addRuntimeOptionParameters...
Applying transformation: computeMatchingsAndBLT...
Flat tree before matching and BLT:
fclass HPF.Examples.DC_Testbed.Configuration_3
 parameter Integer systemDef.hrms[1] = 1 "Harmonics to simulate" /* 1 */;
 parameter Integer systemDef.hrms[2] = 3 "Harmonics to simulate" /* 3 */;
 parameter Integer systemDef.hrms[3] = 5 "Harmonics to simulate" /* 5 */;
 structural parameter Integer systemDef.numHrm = 3 "Number of harmonics. (Automatically generated from hrms. Do not alter)" /* 3 */;
 parameter Real systemDef.fFund = 60 "Fundamental frequency" /* 60 */;
 parameter Real systemDef.smplFreq = 5000.0 "Sampling frequency (Hz)" /* 5000.0 */;
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 discrete Boolean systemDef.modeSelect(start = false);
 discrete Boolean systemDef.eventWriteData(start = false);
 discrete Boolean systemDef.eventReadData(start = false);
 constant String PhA.properties.ComponentType = "VoltageSource" "Type of the component";
 parameter Real PhA.vMag[1] = 125 "Voltage Magnitude (Volts rms)" /* 125 */;
 parameter Real PhA.vMag[2] = 0.25 "Voltage Magnitude (Volts rms)" /* 0.25 */;
 parameter Real PhA.vMag[3] = 0.5 "Voltage Magnitude (Volts rms)" /* 0.5 */;
 parameter Real PhA.vArg[1] = 0 "Voltage angle (rad)" /* 0 */;
 parameter Real PhA.vArg[2] = 1 "Voltage angle (rad)" /* 1 */;
 parameter Real PhA.vArg[3] = 0.53 "Voltage angle (rad)" /* 0.53 */;
 Real PhA.P "Real Power";
 Modelica.SIunits.Angle PhA.theta(start = 0);
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_1.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_3.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Real test_DY.idealTransformer1.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 parameter Real test_DY.idealTransformer2.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 parameter Real test_DY.idealTransformer3.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_2.constantVoltage1.V(start = 1) "Value of constant voltage";
 Real PhA.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhA.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhA.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhA.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhA.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhA.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhA.omega;
 parameter Real PhB.vMag[1] = 125 "Voltage Magnitude (Volts rms)" /* 125 */;
 parameter Real PhB.vMag[2] = 0.25 "Voltage Magnitude (Volts rms)" /* 0.25 */;
 parameter Real PhB.vMag[3] = 0.5 "Voltage Magnitude (Volts rms)" /* 0.5 */;
 parameter Real PhB.vArg[1] = 1.2 "Voltage angle (rad)" /* 1.2 */;
 parameter Real PhB.vArg[2] = 2.5 "Voltage angle (rad)" /* 2.5 */;
 parameter Real PhB.vArg[3] = 0.3 "Voltage angle (rad)" /* 0.3 */;
 Real PhB.P "Real Power";
 Modelica.SIunits.Angle PhB.theta(start = 0);
 parameter Modelica.SIunits.ElectricPotential led_driver_1.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Modelica.SIunits.ElectricPotential led_driver_3.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Modelica.SIunits.ElectricPotential led_driver_2.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Real PhA.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhA.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhA.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhB.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhB.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhB.omega;
 parameter Real PhC.vMag[1] = 125 "Voltage Magnitude (Volts rms)" /* 125 */;
 parameter Real PhC.vMag[2] = 2 "Voltage Magnitude (Volts rms)" /* 2 */;
 parameter Real PhC.vMag[3] = 0.3 "Voltage Magnitude (Volts rms)" /* 0.3 */;
 parameter Real PhC.vArg[1] = 1.9 "Voltage angle (rad)" /* 1.9 */;
 parameter Real PhC.vArg[2] = 2 "Voltage angle (rad)" /* 2 */;
 parameter Real PhC.vArg[3] = -0.5 "Voltage angle (rad)" /* -0.5 */;
 Real PhC.P "Real Power";
 Modelica.SIunits.Angle PhC.theta(start = 0);
 parameter Real PhA.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhA.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhA.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhB.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhB.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhB.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhC.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhC.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhC.omega;
 constant String ground1.properties.ComponentType = "Ground" "Type of the component";
 Real ground1.pin.iIm[1];
 Real ground1.pin.iIm[2];
 Real ground1.pin.iIm[3];
 Real ground1.pin.iRe[1];
 Real ground1.pin.iRe[2];
 Real ground1.pin.iRe[3];
 Real ground2.pin.iIm[1];
 Real ground2.pin.iIm[2];
 Real ground2.pin.iIm[3];
 Real ground2.pin.iRe[1];
 Real ground2.pin.iRe[2];
 Real ground2.pin.iRe[3];
 constant String laptop_adpt_1.properties.ComponentType = "NonlinearLoad" "Type of the component";
 parameter Real PhB.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real laptop_adpt_1.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_1.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real laptop_adpt_1.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real PhB.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.omega;
 parameter Real PhB.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhC.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_3.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_3.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real laptop_adpt_3.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real PhC.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.omega;
 parameter Real PhC.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhC.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhC.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 constant String terminal.properties.ComponentType = "Resistor" "Type of the component";
 parameter Real terminal.r(start = 1) = 1000000.0 "Resistance (ohm)" /* 1000000.0 */;
 parameter Real PhC.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Modelica.SIunits.ElectricCurrent laptop_1.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent laptop_3.i "Current flowing from pin p to pin n";
 parameter Real temp_387;
 parameter Real temp_402;
 parameter Real temp_417;
 parameter Real temp_537;
 parameter Real temp_552;
 parameter Real temp_567;
 parameter Real temp_687;
 parameter Real temp_702;
 parameter Real temp_717;
 parameter Modelica.SIunits.ElectricCurrent laptop_2.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent led_1.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent led_3.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent led_2.i "Current flowing from pin p to pin n";
 Real terminal.omega;
 constant String z.properties.ComponentType = "Impedance" "Type of the component";
 parameter Real z.z.re(start = 1) = 2.0 "Real part of complex number" /* 2.0 */;
 parameter Real z.z.im(start = 0) = 3.2 "Imaginary part of complex number" /* 3.2 */;
 Real z.vFundAbs;
 Real z.vFundArg;
 Real z.iFundAbs;
 Real z.iFundArg;
 Real z.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.omega;
 parameter Real z1.z.re(start = 1) = 2.0 "Real part of complex number" /* 2.0 */;
 parameter Real z1.z.im(start = 0) = 3.0 "Imaginary part of complex number" /* 3.0 */;
 Real z1.vFundAbs;
 Real z1.vFundArg;
 Real z1.iFundAbs;
 Real z1.iFundArg;
 Real z1.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.omega;
 constant String test_DY.properties.ComponentType = "MultiPhaseTransformer" "Type of the component";
 parameter Integer test_DY.N = 10 "Turns ration" /* 10 */;
 constant String test_DY.idealTransformer1.properties.ComponentType = "Transformer" "Type of the component";
 parameter Real test_DY.idealTransformer2.vPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[3].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[3].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[3].re "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[3].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[3].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[3].im "Imaginary part of complex number";
 parameter Modelica.SIunits.ElectricCurrent ground6.p.i "Current flowing into the pin";
 parameter Real laptop_adpt_1.P;
 Real test_DY.idealTransformer2.iPrim[1].re "Real part of complex number";
 Real test_DY.idealTransformer2.iPrim[1].im "Imaginary part of complex number";
 Real test_DY.idealTransformer2.iPrim[2].re "Real part of complex number";
 Real test_DY.idealTransformer2.iPrim[2].im "Imaginary part of complex number";
 Real test_DY.idealTransformer2.iPrim[3].re "Real part of complex number";
 Real test_DY.idealTransformer2.iPrim[3].im "Imaginary part of complex number";
 parameter Modelica.SIunits.ElectricCurrent ground8.p.i "Current flowing into the pin";
 parameter Real laptop_adpt_3.P;
 parameter Modelica.SIunits.ElectricCurrent ground3.p.i "Current flowing into the pin";
 parameter Real laptop_adpt_2.P;
 parameter Modelica.SIunits.ElectricCurrent ground4.p.i "Current flowing into the pin";
 parameter Real led_driver_1.P;
 parameter Modelica.SIunits.ElectricCurrent ground5.p.i "Current flowing into the pin";
 parameter Real led_driver_3.P;
 parameter Modelica.SIunits.ElectricCurrent ground7.p.i "Current flowing into the pin";
 parameter Real led_driver_2.P;
 parameter Real test_DY.idealTransformer2.vSec[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[3].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[1].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[1].im "Imaginary part of complex number";
 Real test_DY.idealTransformer3.iPrim[2].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[2].im "Imaginary part of complex number";
 Real test_DY.idealTransformer3.iPrim[3].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[3].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[3].im "Imaginary part of complex number";
 parameter Real terminal.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vSec[1].re "Real part of complex number";
 parameter Real terminal.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real test_DY.hPin_N.iIm[1];
 Real test_DY.hPin_N.iIm[2];
 Real test_DY.hPin_N.iIm[3];
 Real test_DY.hPin_N.iRe[1];
 Real test_DY.hPin_N.iRe[2];
 Real test_DY.hPin_N.iRe[3];
 parameter Real test_DY.idealTransformer3.vSec[2].re "Real part of complex number";
 parameter Real terminal.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_2.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_2.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real laptop_adpt_2.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real test_DY.idealTransformer3.vSec[3].re "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_2.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_2.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_2.loadBase1.omega;
 parameter Real terminal.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vSec[1].im "Imaginary part of complex number";
 parameter Real led_driver_1.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_1.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_1.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real led_driver_1.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real led_driver_1.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real led_driver_1.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real led_driver_1.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real led_driver_1.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real led_driver_1.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real led_driver_1.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real led_driver_1.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real terminal.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_1.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_1.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_1.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.omega;
 parameter Real test_DY.idealTransformer3.vSec[2].im "Imaginary part of complex number";
 parameter Real terminal.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vSec[3].im "Imaginary part of complex number";
 parameter Real led_driver_3.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_3.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_3.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real led_driver_3.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real led_driver_3.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real led_driver_3.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real led_driver_3.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real led_driver_3.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real led_driver_3.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real led_driver_3.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real led_driver_3.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real led_driver_3.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_3.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_3.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_3.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_3.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_3.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_3.loadBase1.omega;
 parameter Real led_driver_2.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_2.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_2.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real led_driver_2.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real led_driver_2.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real led_driver_2.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real led_driver_2.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real led_driver_2.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real led_driver_2.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real led_driver_2.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real led_driver_2.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real led_driver_2.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_2.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_2.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_2.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_2.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_2.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_2.loadBase1.omega;
 parameter Real terminal.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 constant String laptop_1.properties.ComponentType = "DC_Load" "Type of the component";
 parameter Real laptop_1.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_2.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_3.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.vFundAbs;
 parameter Real led_3.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.vFundArg;
 parameter Real led_1.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real led_2.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 discrete Boolean temp_99;
 discrete Boolean temp_100;
 discrete Boolean temp_101;
 discrete Boolean temp_102;
 discrete Boolean temp_103;
 discrete Boolean temp_104;
 discrete Boolean temp_105;
 discrete Boolean temp_106;
 discrete Boolean temp_107;
 discrete Boolean temp_108;
 discrete Boolean temp_109;
 discrete Boolean temp_110;
 discrete Boolean temp_111;
 discrete Boolean temp_112;
 discrete Boolean temp_113;
 parameter Real terminal.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[3].re "Real part of complex number";
 parameter Real terminal.iFundAbs;
 parameter Real terminal.iFundArg;
 parameter Real test_DY.idealTransformer1.iPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[3].im "Imaginary part of complex number";
protected
 constant Real laptop_adpt_1.S_vect[1].im(start = 0,nominal = 1) = 0.5 "Imaginary part of complex number";
 constant Real laptop_adpt_1.S_vect[2].re(start = 0,nominal = 1) = 0.0 "Real part of complex number";
 constant Real laptop_adpt_1.S_vect[2].im(start = 0,nominal = 1) = 0 "Imaginary part of complex number";
 constant Real laptop_adpt_1.globalSeed = 9854;
 parameter Real laptop_adpt_1.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_3.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_2.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real led_driver_1.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real led_driver_3.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real led_driver_2.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
initial equation
 algorithm
;
parameter equation
 laptop_adpt_1.constantVoltage1.V = laptop_adpt_1.V_Rect;
 laptop_adpt_3.constantVoltage1.V = laptop_adpt_3.V_Rect;
 test_DY.idealTransformer1.N = test_DY.N;
 test_DY.idealTransformer2.N = test_DY.N;
 test_DY.idealTransformer3.N = test_DY.N;
 laptop_adpt_2.constantVoltage1.V = laptop_adpt_2.V_Rect;
 led_driver_1.constantVoltage1.V = led_driver_1.V_Rect;
 led_driver_3.constantVoltage1.V = led_driver_3.V_Rect;
 led_driver_2.constantVoltage1.V = led_driver_2.V_Rect;
 PhA.v[1].re = PhA.vMag[1] .* cos(PhA.vArg[1]);
 PhA.v[2].re = PhA.vMag[2] .* cos(PhA.vArg[2]);
 PhA.v[3].re = PhA.vMag[3] .* cos(PhA.vArg[3]);
 PhA.v[1].im = PhA.vMag[1] .* sin(PhA.vArg[1]);
 PhA.v[2].im = PhA.vMag[2] .* sin(PhA.vArg[2]);
 PhA.v[3].im = PhA.vMag[3] .* sin(PhA.vArg[3]);
 PhB.v[1].re = PhB.vMag[1] .* cos(PhB.vArg[1]);
 PhB.v[2].re = PhB.vMag[2] .* cos(PhB.vArg[2]);
 PhB.v[3].re = PhB.vMag[3] .* cos(PhB.vArg[3]);
 PhB.v[1].im = PhB.vMag[1] .* sin(PhB.vArg[1]);
 PhB.v[2].im = PhB.vMag[2] .* sin(PhB.vArg[2]);
 PhB.v[3].im = PhB.vMag[3] .* sin(PhB.vArg[3]);
 PhC.v[1].re = PhC.vMag[1] .* cos(PhC.vArg[1]);
 PhC.v[2].re = PhC.vMag[2] .* cos(PhC.vArg[2]);
 PhC.v[3].re = PhC.vMag[3] .* cos(PhC.vArg[3]);
 PhC.v[1].im = PhC.vMag[1] .* sin(PhC.vArg[1]);
 PhC.v[2].im = PhC.vMag[2] .* sin(PhC.vArg[2]);
 PhC.v[3].im = PhC.vMag[3] .* sin(PhC.vArg[3]);
 laptop_1.i = (- laptop_1.pwr) / (- laptop_adpt_1.constantVoltage1.V);
 laptop_3.i = (- laptop_3.pwr) / (- laptop_adpt_3.constantVoltage1.V);
 temp_387 = 1 / test_DY.idealTransformer1.N;
 temp_402 = 1 / test_DY.idealTransformer1.N;
 temp_417 = 1 / test_DY.idealTransformer1.N;
 temp_537 = 1 / test_DY.idealTransformer2.N;
 temp_552 = 1 / test_DY.idealTransformer2.N;
 temp_567 = 1 / test_DY.idealTransformer2.N;
 temp_687 = 1 / test_DY.idealTransformer3.N;
 temp_702 = 1 / test_DY.idealTransformer3.N;
 temp_717 = 1 / test_DY.idealTransformer3.N;
 laptop_2.i = (- laptop_2.pwr) / (- laptop_adpt_2.constantVoltage1.V);
 led_1.i = (- led_1.pwr) / (- led_driver_1.constantVoltage1.V);
 led_3.i = (- led_3.pwr) / (- led_driver_3.constantVoltage1.V);
 led_2.i = (- led_2.pwr) / (- led_driver_2.constantVoltage1.V);
 test_DY.idealTransformer2.vPrim[1].re = PhB.v[1].re + (- PhA.v[1].re);
 test_DY.idealTransformer2.vPrim[2].re = PhB.v[2].re + (- PhA.v[2].re);
 test_DY.idealTransformer2.vPrim[3].re = PhB.v[3].re + (- PhA.v[3].re);
 test_DY.idealTransformer2.vPrim[1].im = PhB.v[1].im + (- PhA.v[1].im);
 test_DY.idealTransformer2.vPrim[2].im = PhB.v[2].im + (- PhA.v[2].im);
 test_DY.idealTransformer2.vPrim[3].im = PhB.v[3].im + (- PhA.v[3].im);
 test_DY.idealTransformer1.vPrim[1].re = PhA.v[1].re + (- PhC.v[1].re);
 test_DY.idealTransformer3.vPrim[1].re = PhC.v[1].re + (- PhB.v[1].re);
 test_DY.idealTransformer1.vPrim[2].re = PhA.v[2].re + (- PhC.v[2].re);
 test_DY.idealTransformer3.vPrim[2].re = PhC.v[2].re + (- PhB.v[2].re);
 test_DY.idealTransformer1.vPrim[3].re = PhA.v[3].re + (- PhC.v[3].re);
 test_DY.idealTransformer3.vPrim[3].re = PhC.v[3].re + (- PhB.v[3].re);
 test_DY.idealTransformer1.vPrim[1].im = PhA.v[1].im + (- PhC.v[1].im);
 test_DY.idealTransformer3.vPrim[1].im = PhC.v[1].im + (- PhB.v[1].im);
 test_DY.idealTransformer1.vPrim[2].im = PhA.v[2].im + (- PhC.v[2].im);
 test_DY.idealTransformer3.vPrim[2].im = PhC.v[2].im + (- PhB.v[2].im);
 test_DY.idealTransformer1.vPrim[3].im = PhA.v[3].im + (- PhC.v[3].im);
 test_DY.idealTransformer3.vPrim[3].im = PhC.v[3].im + (- PhB.v[3].im);
 ground6.p.i = laptop_1.i + (- laptop_1.i);
 laptop_adpt_1.P = laptop_adpt_1.constantVoltage1.V * (- laptop_1.i);
 ground8.p.i = laptop_3.i + (- laptop_3.i);
 laptop_adpt_3.P = laptop_adpt_3.constantVoltage1.V * (- laptop_3.i);
 ground3.p.i = laptop_2.i + (- laptop_2.i);
 laptop_adpt_2.P = laptop_adpt_2.constantVoltage1.V * (- laptop_2.i);
 ground4.p.i = led_1.i + (- led_1.i);
 led_driver_1.P = led_driver_1.constantVoltage1.V * (- led_1.i);
 ground5.p.i = led_3.i + (- led_3.i);
 led_driver_3.P = led_driver_3.constantVoltage1.V * (- led_3.i);
 ground7.p.i = led_2.i + (- led_2.i);
 led_driver_2.P = led_driver_2.constantVoltage1.V * (- led_2.i);
 test_DY.idealTransformer2.vSec[1].re = temp_537 * test_DY.idealTransformer2.vPrim[1].re;
 test_DY.idealTransformer2.vSec[2].re = temp_552 * test_DY.idealTransformer2.vPrim[2].re;
 test_DY.idealTransformer2.vSec[3].re = temp_567 * test_DY.idealTransformer2.vPrim[3].re;
 test_DY.idealTransformer2.vSec[1].im = temp_537 * test_DY.idealTransformer2.vPrim[1].im;
 test_DY.idealTransformer2.vSec[2].im = temp_552 * test_DY.idealTransformer2.vPrim[2].im;
 test_DY.idealTransformer2.vSec[3].im = temp_567 * test_DY.idealTransformer2.vPrim[3].im;
 terminal.v[1].re = temp_387 * test_DY.idealTransformer1.vPrim[1].re;
 test_DY.idealTransformer3.vSec[1].re = temp_687 * test_DY.idealTransformer3.vPrim[1].re;
 terminal.v[2].re = temp_402 * test_DY.idealTransformer1.vPrim[2].re;
 test_DY.idealTransformer3.vSec[2].re = temp_702 * test_DY.idealTransformer3.vPrim[2].re;
 terminal.v[3].re = temp_417 * test_DY.idealTransformer1.vPrim[3].re;
 test_DY.idealTransformer3.vSec[3].re = temp_717 * test_DY.idealTransformer3.vPrim[3].re;
 terminal.v[1].im = temp_387 * test_DY.idealTransformer1.vPrim[1].im;
 test_DY.idealTransformer3.vSec[1].im = temp_687 * test_DY.idealTransformer3.vPrim[1].im;
 terminal.v[2].im = temp_402 * test_DY.idealTransformer1.vPrim[2].im;
 test_DY.idealTransformer3.vSec[2].im = temp_702 * test_DY.idealTransformer3.vPrim[2].im;
 terminal.v[3].im = temp_417 * test_DY.idealTransformer1.vPrim[3].im;
 test_DY.idealTransformer3.vSec[3].im = temp_717 * test_DY.idealTransformer3.vPrim[3].im;
 laptop_adpt_1.S_vect[1].re = laptop_adpt_1.P * laptop_adpt_1.efficiency;
 laptop_adpt_3.S_vect[1].re = laptop_adpt_3.P * laptop_adpt_3.efficiency;
 laptop_adpt_2.S_vect[1].re = laptop_adpt_2.P * laptop_adpt_2.efficiency;
 led_driver_1.S_vect[1].re = led_driver_1.P * led_driver_1.efficiency;
 led_driver_3.S_vect[1].re = led_driver_3.P * led_driver_3.efficiency;
 led_driver_2.S_vect[1].re = led_driver_2.P * led_driver_2.efficiency;
 terminal.i[1].re = (- terminal.v[1].re) / (- terminal.r);
 terminal.i[2].re = (- terminal.v[2].re) / (- terminal.r);
 terminal.i[3].re = (- terminal.v[3].re) / (- terminal.r);
 terminal.vFundAbs = (terminal.v[1].re ^ 2 + terminal.v[1].im ^ 2) ^ 0.5;
 terminal.vFundArg = Modelica.Math.atan3(terminal.v[1].im, terminal.v[1].re, 0);
 terminal.i[1].im = (- terminal.v[1].im) / (- terminal.r);
 terminal.i[2].im = (- terminal.v[2].im) / (- terminal.r);
 terminal.i[3].im = (- terminal.v[3].im) / (- terminal.r);
 test_DY.idealTransformer1.iPrim[1].re = terminal.i[1].re / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[2].re = terminal.i[2].re / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[3].re = terminal.i[3].re / (- test_DY.idealTransformer1.N);
 terminal.iFundAbs = (terminal.i[1].re ^ 2 + terminal.i[1].im ^ 2) ^ 0.5;
 terminal.iFundArg = Modelica.Math.atan3(terminal.i[1].im, terminal.i[1].re, 0);
 test_DY.idealTransformer1.iPrim[1].im = terminal.i[1].im / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[2].im = terminal.i[2].im / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[3].im = terminal.i[3].im / (- test_DY.idealTransformer1.N);
equation
 temp_99 = time > 0.5;
 temp_100 = time > 0.25;
 temp_101 = time > 0.4;
algorithm
 if temp_99 and not pre(temp_99) then
  systemDef.modeSelect := true;
 end if;
 if temp_100 and not pre(temp_100) then
  systemDef.eventWriteData := true;
 end if;
 if temp_101 and not pre(temp_101) then
  systemDef.eventReadData := true;
 end if;
equation
 der(PhA.theta) = 6.283185307179586 * systemDef.fFund;
 PhA.omega = der(PhA.theta);
 der(PhB.theta) = 6.283185307179586 * systemDef.fFund;
 PhB.omega = der(PhB.theta);
 der(PhC.theta) = 6.283185307179586 * systemDef.fFund;
 PhC.omega = der(PhC.theta);
 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5));
 temp_102 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_103 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_102 and not pre(temp_102) then
 end if;
 if temp_103 and not pre(temp_103) then
 end if;
equation
 laptop_adpt_1.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5));
 temp_104 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_105 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_104 and not pre(temp_104) then
 end if;
 if temp_105 and not pre(temp_105) then
 end if;
equation
 laptop_adpt_3.loadBase1.omega = der(PhA.theta);
 terminal.omega = der(PhA.theta);
 z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im;
 z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im;
 z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im;
 z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re;
 z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re;
 z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re;
 z.omega = der(PhA.theta);
 z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re;
 z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im;
 z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re;
 z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im;
 z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re;
 z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im;
 z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im;
 z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im;
 z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im;
 z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re;
 z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re;
 z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re;
 z1.omega = der(PhA.theta);
 z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re;
 z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im;
 z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re;
 z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im;
 z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re;
 z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im;
 - z.i[1].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].re;
 - z.i[1].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].im;
 - z.i[2].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].re;
 - z.i[2].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].im;
 - z.i[3].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].re;
 - z.i[3].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].im;
 - z1.i[1].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].re;
 - z1.i[1].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].im;
 - z1.i[2].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].re;
 - z1.i[2].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].im;
 - z1.i[3].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].re;
 - z1.i[3].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].im;
 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5));
 temp_106 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_107 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_106 and not pre(temp_106) then
 end if;
 if temp_107 and not pre(temp_107) then
 end if;
equation
 laptop_adpt_2.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5));
 temp_108 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_109 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_108 and not pre(temp_108) then
 end if;
 if temp_109 and not pre(temp_109) then
 end if;
equation
 led_driver_1.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5));
 temp_110 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_111 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_110 and not pre(temp_110) then
 end if;
 if temp_111 and not pre(temp_111) then
 end if;
equation
 led_driver_3.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5));
 temp_112 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_113 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_112 and not pre(temp_112) then
 end if;
 if temp_113 and not pre(temp_113) then
 end if;
equation
 led_driver_2.loadBase1.omega = der(PhA.theta);
 - PhA.i[1].im + (- PhB.i[1].im) + (- PhC.i[1].im) + ground1.pin.iIm[1] = 0;
 - PhA.i[2].im + (- PhB.i[2].im) + (- PhC.i[2].im) + ground1.pin.iIm[2] = 0;
 - PhA.i[3].im + (- PhB.i[3].im) + (- PhC.i[3].im) + ground1.pin.iIm[3] = 0;
 - PhA.i[1].re + (- PhB.i[1].re) + (- PhC.i[1].re) + ground1.pin.iRe[1] = 0;
 - PhA.i[2].re + (- PhB.i[2].re) + (- PhC.i[2].re) + ground1.pin.iRe[2] = 0;
 - PhA.i[3].re + (- PhB.i[3].re) + (- PhC.i[3].re) + ground1.pin.iRe[3] = 0;
 laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0;
 laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0;
 laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0;
 laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0;
 laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0;
 laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0;
 laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0;
 laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0;
 laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0;
 laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0;
 laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0;
 laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0;
 ground2.pin.iIm[1] + (- laptop_adpt_1.loadBase1.i[1].im) + (- laptop_adpt_2.loadBase1.i[1].im) + (- laptop_adpt_3.loadBase1.i[1].im) + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + (- led_driver_3.loadBase1.i[1].im) + (- terminal.i[1].im) + test_DY.hPin_N.iIm[1] = 0;
 ground2.pin.iIm[2] + (- laptop_adpt_1.loadBase1.i[2].im) + (- laptop_adpt_2.loadBase1.i[2].im) + (- laptop_adpt_3.loadBase1.i[2].im) + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + (- led_driver_3.loadBase1.i[2].im) + (- terminal.i[2].im) + test_DY.hPin_N.iIm[2] = 0;
 ground2.pin.iIm[3] + (- laptop_adpt_1.loadBase1.i[3].im) + (- laptop_adpt_2.loadBase1.i[3].im) + (- laptop_adpt_3.loadBase1.i[3].im) + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + (- led_driver_3.loadBase1.i[3].im) + (- terminal.i[3].im) + test_DY.hPin_N.iIm[3] = 0;
 ground2.pin.iRe[1] + (- laptop_adpt_1.loadBase1.i[1].re) + (- laptop_adpt_2.loadBase1.i[1].re) + (- laptop_adpt_3.loadBase1.i[1].re) + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + (- led_driver_3.loadBase1.i[1].re) + (- terminal.i[1].re) + test_DY.hPin_N.iRe[1] = 0;
 ground2.pin.iRe[2] + (- laptop_adpt_1.loadBase1.i[2].re) + (- laptop_adpt_2.loadBase1.i[2].re) + (- laptop_adpt_3.loadBase1.i[2].re) + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + (- led_driver_3.loadBase1.i[2].re) + (- terminal.i[2].re) + test_DY.hPin_N.iRe[2] = 0;
 ground2.pin.iRe[3] + (- laptop_adpt_1.loadBase1.i[3].re) + (- laptop_adpt_2.loadBase1.i[3].re) + (- laptop_adpt_3.loadBase1.i[3].re) + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + (- led_driver_3.loadBase1.i[3].re) + (- terminal.i[3].re) + test_DY.hPin_N.iRe[3] = 0;
 test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer2.iPrim[1].im) + PhA.i[1].im = 0;
 test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer2.iPrim[2].im) + PhA.i[2].im = 0;
 test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer2.iPrim[3].im) + PhA.i[3].im = 0;
 test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer2.iPrim[1].re) + PhA.i[1].re = 0;
 test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer2.iPrim[2].re) + PhA.i[2].re = 0;
 test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer2.iPrim[3].re) + PhA.i[3].re = 0;
 - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im + PhC.i[1].im = 0;
 - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im + PhC.i[2].im = 0;
 - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im + PhC.i[3].im = 0;
 - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re + PhC.i[1].re = 0;
 - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re + PhC.i[2].re = 0;
 - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re + PhC.i[3].re = 0;
 test_DY.idealTransformer2.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im) + PhB.i[1].im = 0;
 test_DY.idealTransformer2.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im) + PhB.i[2].im = 0;
 test_DY.idealTransformer2.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im) + PhB.i[3].im = 0;
 test_DY.idealTransformer2.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re) + PhB.i[1].re = 0;
 test_DY.idealTransformer2.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re) + PhB.i[2].re = 0;
 test_DY.idealTransformer2.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re) + PhB.i[3].re = 0;
 - test_DY.hPin_N.iIm[1] + terminal.i[1].im + z.i[1].im + z1.i[1].im = 0;
 - test_DY.hPin_N.iIm[2] + terminal.i[2].im + z.i[2].im + z1.i[2].im = 0;
 - test_DY.hPin_N.iIm[3] + terminal.i[3].im + z.i[3].im + z1.i[3].im = 0;
 - test_DY.hPin_N.iRe[1] + terminal.i[1].re + z.i[1].re + z1.i[1].re = 0;
 - test_DY.hPin_N.iRe[2] + terminal.i[2].re + z.i[2].re + z1.i[2].re = 0;
 - test_DY.hPin_N.iRe[3] + terminal.i[3].re + z.i[3].re + z1.i[3].re = 0;
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta));
 HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 PhA.P = PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im);
 PhB.P = PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im);
 PhC.P = PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im);
 z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5;
 z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0);
 z.iFundAbs = (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5;
 z.iFundArg = Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0);
 z1.vFundAbs = (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5;
 z1.vFundArg = Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0);
 z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5;
 z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0);

public
 function Modelica.ComplexMath.'abs'
  input Complex c;
  output Real result;
 algorithm
  result := (c.re ^ 2 + c.im ^ 2) ^ 0.5;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.'abs';

 function Modelica.ComplexMath.arg
  input Complex c;
  input Real phi0;
  output Real phi;
 algorithm
  phi := Modelica.Math.atan3(c.im, c.re, phi0);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.arg;

 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function Complex.'-'.subtract
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re - c2.re, c1.im - c2.im);
  return;
 annotation(Inline = true);
 end Complex.'-'.subtract;

 function Complex.'constructor'.fromReal
  input Real re;
  input Real im;
  output Complex result;
 algorithm
  result.re := re;
  result.im := im;
  return;
 annotation(Inline = true);
 end Complex.'constructor'.fromReal;

 function HPF.Utilities.polyval
  input Real[:] a;
  input Real x;
  output Real y;
  Real temp_1;
  Real temp_2;
  Real[:] temp_3;
 algorithm
  init temp_3 as Real[max(integer(size(a, 1) - 1) + 1, 0)];
  for i1 in 1:max(integer(size(a, 1) - 1) + 1, 0) loop
   temp_3[i1] := x ^ (size(a, 1) - 1 + (1 - i1));
  end for;
  temp_2 := 0.0;
  for i1 in 1:max(integer(size(a, 1) - 1) + 1, 0) loop
   temp_2 := temp_2 + a[i1] * temp_3[i1];
  end for;
  temp_1 := temp_2;
  y := temp_1;
  return;
 end HPF.Utilities.polyval;

 function Complex.'*'.multiply
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re * c2.re - c1.im * c2.im, c1.re * c2.im + c1.im * c2.re);
  return;
 annotation(Inline = true);
 end Complex.'*'.multiply;

 function Complex.'+'
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re + c2.re, c1.im + c2.im);
  return;
 annotation(Inline = true);
 end Complex.'+';

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint;

 record HPF.Utilities.ComponentProperties
  discrete String ComponentType "Type of the component";
 end HPF.Utilities.ComponentProperties;

 record Complex
  Real re "Real part of complex number";
  Real im "Imaginary part of complex number";
 end Complex;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
end HPF.Examples.DC_Testbed.Configuration_3;

DAE BiPGraph
BiPGraph (184 equations, 164 variables)
Variables: {der(PhA.theta) der(PhB.theta) der(PhC.theta) PhA.P PhA.i[1].re PhA.i[1].im PhA.i[2].re PhA.i[2].im PhA.i[3].re PhA.i[3].im PhA.omega PhB.P PhB.i[1].re PhB.i[1].im PhB.i[2].re PhB.i[2].im PhB.i[3].re PhB.i[3].im PhB.omega PhC.P PhC.i[1].re PhC.i[1].im PhC.i[2].re PhC.i[2].im PhC.i[3].re PhC.i[3].im PhC.omega ground1.pin.iIm[1] ground1.pin.iIm[2] ground1.pin.iIm[3] ground1.pin.iRe[1] ground1.pin.iRe[2] ground1.pin.iRe[3] ground2.pin.iIm[1] ground2.pin.iIm[2] ground2.pin.iIm[3] ground2.pin.iRe[1] ground2.pin.iRe[2] ground2.pin.iRe[3] laptop_adpt_1.loadBase1.v[1].re laptop_adpt_1.loadBase1.v[1].im laptop_adpt_1.loadBase1.v[2].re laptop_adpt_1.loadBase1.v[2].im laptop_adpt_1.loadBase1.v[3].re laptop_adpt_1.loadBase1.v[3].im laptop_adpt_1.loadBase1.i[1].re laptop_adpt_1.loadBase1.i[1].im laptop_adpt_1.loadBase1.i[2].re laptop_adpt_1.loadBase1.i[2].im laptop_adpt_1.loadBase1.i[3].re laptop_adpt_1.loadBase1.i[3].im laptop_adpt_1.loadBase1.omega laptop_adpt_3.loadBase1.v[1].re laptop_adpt_3.loadBase1.v[1].im laptop_adpt_3.loadBase1.v[2].re laptop_adpt_3.loadBase1.v[2].im laptop_adpt_3.loadBase1.v[3].re laptop_adpt_3.loadBase1.v[3].im laptop_adpt_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.omega terminal.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.i[1].re z.i[1].im z.i[2].re z.i[2].im z.i[3].re z.i[3].im z.omega z1.vFundAbs z1.vFundArg z1.iFundAbs z1.iFundArg z1.v[1].re z1.v[1].im z1.v[2].re z1.v[2].im z1.v[3].re z1.v[3].im z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.omega test_DY.idealTransformer2.iPrim[1].re test_DY.idealTransformer2.iPrim[1].im test_DY.idealTransformer2.iPrim[2].re test_DY.idealTransformer2.iPrim[2].im test_DY.idealTransformer2.iPrim[3].re test_DY.idealTransformer2.iPrim[3].im test_DY.idealTransformer3.iPrim[1].re test_DY.idealTransformer3.iPrim[1].im test_DY.idealTransformer3.iPrim[2].re test_DY.idealTransformer3.iPrim[2].im test_DY.idealTransformer3.iPrim[3].re test_DY.idealTransformer3.iPrim[3].im test_DY.hPin_N.iIm[1] test_DY.hPin_N.iIm[2] test_DY.hPin_N.iIm[3] test_DY.hPin_N.iRe[1] test_DY.hPin_N.iRe[2] test_DY.hPin_N.iRe[3] laptop_adpt_2.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].im laptop_adpt_2.loadBase1.omega led_driver_1.loadBase1.i[1].re led_driver_1.loadBase1.i[1].im led_driver_1.loadBase1.i[2].re led_driver_1.loadBase1.i[2].im led_driver_1.loadBase1.i[3].re led_driver_1.loadBase1.i[3].im led_driver_1.loadBase1.omega led_driver_3.loadBase1.i[1].re led_driver_3.loadBase1.i[1].im led_driver_3.loadBase1.i[2].re led_driver_3.loadBase1.i[2].im led_driver_3.loadBase1.i[3].re led_driver_3.loadBase1.i[3].im led_driver_3.loadBase1.omega led_driver_2.loadBase1.i[1].re led_driver_2.loadBase1.i[1].im led_driver_2.loadBase1.i[2].re led_driver_2.loadBase1.i[2].im led_driver_2.loadBase1.i[3].re led_driver_2.loadBase1.i[3].im led_driver_2.loadBase1.omega systemDef.modeSelect systemDef.eventWriteData systemDef.eventReadData temp_99 temp_100 temp_101 temp_102 temp_103 temp_104 temp_105 temp_106 temp_107 temp_108 temp_109 temp_110 temp_111 temp_112 temp_113 }
eq_1 : temp_99@M // temp_99 = time > 0.5
eq_2 : temp_100@M // temp_100 = time > 0.25
eq_3 : temp_101@M // temp_101 = time > 0.4
eq_4[1] : temp_99# temp_100# temp_101# systemDef.eventReadData@M // algorithm
 if temp_99 and not pre(temp_99) then
  systemDef.modeSelect := true;
 end if;
 if temp_100 and not pre(temp_100) then
  systemDef.eventWriteData := true;
 end if;
 if temp_101 and not pre(temp_101) then
  systemDef.eventReadData := true;
 end if;

eq_4[2] : temp_99# temp_100# systemDef.eventWriteData@M temp_101# // Already printed, see eq_4[1]
eq_4[3] : temp_99# systemDef.modeSelect@M temp_100# temp_101# // Already printed, see eq_4[1]
eq_5 : der(PhA.theta)@M // der(PhA.theta) = 6.283185307179586 * systemDef.fFund
eq_6 : PhA.omega@M der(PhA.theta)@ // PhA.omega = der(PhA.theta)
eq_7 : der(PhB.theta)@M // der(PhB.theta) = 6.283185307179586 * systemDef.fFund
eq_8 : PhB.omega@M der(PhB.theta)@ // PhB.omega = der(PhB.theta)
eq_9 : der(PhC.theta)@M // der(PhC.theta) = 6.283185307179586 * systemDef.fFund
eq_10 : PhC.omega@M der(PhC.theta)@ // PhC.omega = der(PhC.theta)
eq_11 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@M laptop_adpt_1.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_12 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@M laptop_adpt_1.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_13 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@M laptop_adpt_1.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_14 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@M laptop_adpt_1.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_15 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@M laptop_adpt_1.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_16 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@M laptop_adpt_1.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_17 : temp_102@M systemDef.eventWriteData# // temp_102 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_18 : temp_103@M systemDef.eventReadData# // temp_103 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_19 : temp_102# temp_103# // algorithm
 if temp_102 and not pre(temp_102) then
 end if;
 if temp_103 and not pre(temp_103) then
 end if;

eq_20 : laptop_adpt_1.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_1.loadBase1.omega = der(PhA.theta)
eq_21 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@M laptop_adpt_3.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_22 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@M laptop_adpt_3.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_23 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@M laptop_adpt_3.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_24 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@M laptop_adpt_3.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_25 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@M laptop_adpt_3.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_26 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@M laptop_adpt_3.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_27 : temp_104@M systemDef.eventWriteData# // temp_104 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_28 : temp_105@M systemDef.eventReadData# // temp_105 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_29 : temp_104# temp_105# // algorithm
 if temp_104 and not pre(temp_104) then
 end if;
 if temp_105 and not pre(temp_105) then
 end if;

eq_30 : laptop_adpt_3.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_3.loadBase1.omega = der(PhA.theta)
eq_31 : terminal.omega@M der(PhA.theta)@ // terminal.omega = der(PhA.theta)
eq_32 : z.v[1].re@ z.i[1].re@ z.i[1].im@M // z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im
eq_33 : z.v[2].re@ z.i[2].re@ z.i[2].im@M // z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im
eq_34 : z.v[3].re@ z.i[3].re@ z.i[3].im@M // z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im
eq_35 : z.v[1].im@ z.i[1].im@ z.i[1].re@M // z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
eq_36 : z.v[2].im@ z.i[2].im@ z.i[2].re@M // z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
eq_37 : z.v[3].im@ z.i[3].im@ z.i[3].re@M // z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
eq_38 : z.omega@M der(PhA.theta)@ // z.omega = der(PhA.theta)
eq_39 : z.v[1].re@M laptop_adpt_1.loadBase1.v[1].re@ // z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re
eq_40 : z.v[1].im@M laptop_adpt_1.loadBase1.v[1].im@ // z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im
eq_41 : z.v[2].re@M laptop_adpt_1.loadBase1.v[2].re@ // z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re
eq_42 : z.v[2].im@M laptop_adpt_1.loadBase1.v[2].im@ // z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im
eq_43 : z.v[3].re@M laptop_adpt_1.loadBase1.v[3].re@ // z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re
eq_44 : z.v[3].im@M laptop_adpt_1.loadBase1.v[3].im@ // z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im
eq_45 : z1.v[1].re@ z1.i[1].re@ z1.i[1].im@M // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_46 : z1.v[2].re@ z1.i[2].re@ z1.i[2].im@M // z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_47 : z1.v[3].re@ z1.i[3].re@ z1.i[3].im@M // z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_48 : z1.v[1].im@ z1.i[1].im@ z1.i[1].re@M // z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_49 : z1.v[2].im@ z1.i[2].im@ z1.i[2].re@M // z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_50 : z1.v[3].im@ z1.i[3].im@ z1.i[3].re@M // z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_51 : z1.omega@M der(PhA.theta)@ // z1.omega = der(PhA.theta)
eq_52 : z1.v[1].re@M laptop_adpt_3.loadBase1.v[1].re@ // z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re
eq_53 : z1.v[1].im@M laptop_adpt_3.loadBase1.v[1].im@ // z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im
eq_54 : z1.v[2].re@M laptop_adpt_3.loadBase1.v[2].re@ // z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re
eq_55 : z1.v[2].im@M laptop_adpt_3.loadBase1.v[2].im@ // z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im
eq_56 : z1.v[3].re@M laptop_adpt_3.loadBase1.v[3].re@ // z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re
eq_57 : z1.v[3].im@M laptop_adpt_3.loadBase1.v[3].im@ // z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im
eq_58 : z.i[1].re@ test_DY.idealTransformer2.iPrim[1].re@M // - z.i[1].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].re
eq_59 : z.i[1].im@ test_DY.idealTransformer2.iPrim[1].im@M // - z.i[1].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].im
eq_60 : z.i[2].re@ test_DY.idealTransformer2.iPrim[2].re@M // - z.i[2].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].re
eq_61 : z.i[2].im@ test_DY.idealTransformer2.iPrim[2].im@M // - z.i[2].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].im
eq_62 : z.i[3].re@ test_DY.idealTransformer2.iPrim[3].re@M // - z.i[3].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].re
eq_63 : z.i[3].im@ test_DY.idealTransformer2.iPrim[3].im@M // - z.i[3].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].im
eq_64 : z1.i[1].re@ test_DY.idealTransformer3.iPrim[1].re@M // - z1.i[1].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].re
eq_65 : z1.i[1].im@ test_DY.idealTransformer3.iPrim[1].im@M // - z1.i[1].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].im
eq_66 : z1.i[2].re@ test_DY.idealTransformer3.iPrim[2].re@M // - z1.i[2].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].re
eq_67 : z1.i[2].im@ test_DY.idealTransformer3.iPrim[2].im@M // - z1.i[2].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].im
eq_68 : z1.i[3].re@ test_DY.idealTransformer3.iPrim[3].re@M // - z1.i[3].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].re
eq_69 : z1.i[3].im@ test_DY.idealTransformer3.iPrim[3].im@M // - z1.i[3].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].im
eq_70 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ laptop_adpt_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_71 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ laptop_adpt_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_72 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ laptop_adpt_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_73 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ laptop_adpt_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_74 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ laptop_adpt_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_75 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ laptop_adpt_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_76 : temp_106@M systemDef.eventWriteData# // temp_106 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_77 : temp_107@M systemDef.eventReadData# // temp_107 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_78 : temp_106# temp_107# // algorithm
 if temp_106 and not pre(temp_106) then
 end if;
 if temp_107 and not pre(temp_107) then
 end if;

eq_79 : laptop_adpt_2.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_2.loadBase1.omega = der(PhA.theta)
eq_80 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_1.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_81 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_1.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_82 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_1.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_83 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_1.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_84 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_1.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_85 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_1.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_86 : temp_108@M systemDef.eventWriteData# // temp_108 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_87 : temp_109@M systemDef.eventReadData# // temp_109 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_88 : temp_108# temp_109# // algorithm
 if temp_108 and not pre(temp_108) then
 end if;
 if temp_109 and not pre(temp_109) then
 end if;

eq_89 : led_driver_1.loadBase1.omega@M der(PhA.theta)@ // led_driver_1.loadBase1.omega = der(PhA.theta)
eq_90 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@ led_driver_3.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_91 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@ led_driver_3.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_92 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@ led_driver_3.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_93 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@ led_driver_3.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_94 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@ led_driver_3.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_95 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@ led_driver_3.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_96 : temp_110@M systemDef.eventWriteData# // temp_110 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_97 : temp_111@M systemDef.eventReadData# // temp_111 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_98 : temp_110# temp_111# // algorithm
 if temp_110 and not pre(temp_110) then
 end if;
 if temp_111 and not pre(temp_111) then
 end if;

eq_99 : led_driver_3.loadBase1.omega@M der(PhA.theta)@ // led_driver_3.loadBase1.omega = der(PhA.theta)
eq_100 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_101 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_102 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_103 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_104 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_105 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_106 : temp_112@M systemDef.eventWriteData# // temp_112 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_107 : temp_113@M systemDef.eventReadData# // temp_113 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_108 : temp_112# temp_113# // algorithm
 if temp_112 and not pre(temp_112) then
 end if;
 if temp_113 and not pre(temp_113) then
 end if;

eq_109 : led_driver_2.loadBase1.omega@M der(PhA.theta)@ // led_driver_2.loadBase1.omega = der(PhA.theta)
eq_110 : PhA.i[1].im@ PhB.i[1].im@ PhC.i[1].im@ ground1.pin.iIm[1]@M // - PhA.i[1].im + (- PhB.i[1].im) + (- PhC.i[1].im) + ground1.pin.iIm[1] = 0
eq_111 : PhA.i[2].im@ PhB.i[2].im@ PhC.i[2].im@ ground1.pin.iIm[2]@M // - PhA.i[2].im + (- PhB.i[2].im) + (- PhC.i[2].im) + ground1.pin.iIm[2] = 0
eq_112 : PhA.i[3].im@ PhB.i[3].im@ PhC.i[3].im@ ground1.pin.iIm[3]@M // - PhA.i[3].im + (- PhB.i[3].im) + (- PhC.i[3].im) + ground1.pin.iIm[3] = 0
eq_113 : PhA.i[1].re@ PhB.i[1].re@ PhC.i[1].re@ ground1.pin.iRe[1]@M // - PhA.i[1].re + (- PhB.i[1].re) + (- PhC.i[1].re) + ground1.pin.iRe[1] = 0
eq_114 : PhA.i[2].re@ PhB.i[2].re@ PhC.i[2].re@ ground1.pin.iRe[2]@M // - PhA.i[2].re + (- PhB.i[2].re) + (- PhC.i[2].re) + ground1.pin.iRe[2] = 0
eq_115 : PhA.i[3].re@ PhB.i[3].re@ PhC.i[3].re@ ground1.pin.iRe[3]@M // - PhA.i[3].re + (- PhB.i[3].re) + (- PhC.i[3].re) + ground1.pin.iRe[3] = 0
eq_116 : laptop_adpt_1.loadBase1.i[1].im@M laptop_adpt_2.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ z.i[1].im@ // laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0
eq_117 : laptop_adpt_1.loadBase1.i[2].im@M laptop_adpt_2.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ z.i[2].im@ // laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0
eq_118 : laptop_adpt_1.loadBase1.i[3].im@M laptop_adpt_2.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ z.i[3].im@ // laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0
eq_119 : laptop_adpt_1.loadBase1.i[1].re@M laptop_adpt_2.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ z.i[1].re@ // laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0
eq_120 : laptop_adpt_1.loadBase1.i[2].re@M laptop_adpt_2.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ z.i[2].re@ // laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0
eq_121 : laptop_adpt_1.loadBase1.i[3].re@M laptop_adpt_2.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ z.i[3].re@ // laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0
eq_122 : laptop_adpt_3.loadBase1.i[1].im@M led_driver_3.loadBase1.i[1].im@ z1.i[1].im@ // laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0
eq_123 : laptop_adpt_3.loadBase1.i[2].im@M led_driver_3.loadBase1.i[2].im@ z1.i[2].im@ // laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0
eq_124 : laptop_adpt_3.loadBase1.i[3].im@M led_driver_3.loadBase1.i[3].im@ z1.i[3].im@ // laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0
eq_125 : laptop_adpt_3.loadBase1.i[1].re@M led_driver_3.loadBase1.i[1].re@ z1.i[1].re@ // laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0
eq_126 : laptop_adpt_3.loadBase1.i[2].re@M led_driver_3.loadBase1.i[2].re@ z1.i[2].re@ // laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0
eq_127 : laptop_adpt_3.loadBase1.i[3].re@M led_driver_3.loadBase1.i[3].re@ z1.i[3].re@ // laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0
eq_128 : ground2.pin.iIm[1]@M laptop_adpt_1.loadBase1.i[1].im@ laptop_adpt_2.loadBase1.i[1].im@ laptop_adpt_3.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ led_driver_3.loadBase1.i[1].im@ test_DY.hPin_N.iIm[1]@ // ground2.pin.iIm[1] + (- laptop_adpt_1.loadBase1.i[1].im) + (- laptop_adpt_2.loadBase1.i[1].im) + (- laptop_adpt_3.loadBase1.i[1].im) + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + (- led_driver_3.loadBase1.i[1].im) + (- terminal.i[1].im) + test_DY.hPin_N.iIm[1] = 0
eq_129 : ground2.pin.iIm[2]@M laptop_adpt_1.loadBase1.i[2].im@ laptop_adpt_2.loadBase1.i[2].im@ laptop_adpt_3.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ led_driver_3.loadBase1.i[2].im@ test_DY.hPin_N.iIm[2]@ // ground2.pin.iIm[2] + (- laptop_adpt_1.loadBase1.i[2].im) + (- laptop_adpt_2.loadBase1.i[2].im) + (- laptop_adpt_3.loadBase1.i[2].im) + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + (- led_driver_3.loadBase1.i[2].im) + (- terminal.i[2].im) + test_DY.hPin_N.iIm[2] = 0
eq_130 : ground2.pin.iIm[3]@M laptop_adpt_1.loadBase1.i[3].im@ laptop_adpt_2.loadBase1.i[3].im@ laptop_adpt_3.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ led_driver_3.loadBase1.i[3].im@ test_DY.hPin_N.iIm[3]@ // ground2.pin.iIm[3] + (- laptop_adpt_1.loadBase1.i[3].im) + (- laptop_adpt_2.loadBase1.i[3].im) + (- laptop_adpt_3.loadBase1.i[3].im) + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + (- led_driver_3.loadBase1.i[3].im) + (- terminal.i[3].im) + test_DY.hPin_N.iIm[3] = 0
eq_131 : ground2.pin.iRe[1]@M laptop_adpt_1.loadBase1.i[1].re@ laptop_adpt_2.loadBase1.i[1].re@ laptop_adpt_3.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ led_driver_3.loadBase1.i[1].re@ test_DY.hPin_N.iRe[1]@ // ground2.pin.iRe[1] + (- laptop_adpt_1.loadBase1.i[1].re) + (- laptop_adpt_2.loadBase1.i[1].re) + (- laptop_adpt_3.loadBase1.i[1].re) + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + (- led_driver_3.loadBase1.i[1].re) + (- terminal.i[1].re) + test_DY.hPin_N.iRe[1] = 0
eq_132 : ground2.pin.iRe[2]@M laptop_adpt_1.loadBase1.i[2].re@ laptop_adpt_2.loadBase1.i[2].re@ laptop_adpt_3.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ led_driver_3.loadBase1.i[2].re@ test_DY.hPin_N.iRe[2]@ // ground2.pin.iRe[2] + (- laptop_adpt_1.loadBase1.i[2].re) + (- laptop_adpt_2.loadBase1.i[2].re) + (- laptop_adpt_3.loadBase1.i[2].re) + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + (- led_driver_3.loadBase1.i[2].re) + (- terminal.i[2].re) + test_DY.hPin_N.iRe[2] = 0
eq_133 : ground2.pin.iRe[3]@M laptop_adpt_1.loadBase1.i[3].re@ laptop_adpt_2.loadBase1.i[3].re@ laptop_adpt_3.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ led_driver_3.loadBase1.i[3].re@ test_DY.hPin_N.iRe[3]@ // ground2.pin.iRe[3] + (- laptop_adpt_1.loadBase1.i[3].re) + (- laptop_adpt_2.loadBase1.i[3].re) + (- laptop_adpt_3.loadBase1.i[3].re) + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + (- led_driver_3.loadBase1.i[3].re) + (- terminal.i[3].re) + test_DY.hPin_N.iRe[3] = 0
eq_134 : test_DY.idealTransformer2.iPrim[1].im@ PhA.i[1].im@M // test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer2.iPrim[1].im) + PhA.i[1].im = 0
eq_135 : test_DY.idealTransformer2.iPrim[2].im@ PhA.i[2].im@M // test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer2.iPrim[2].im) + PhA.i[2].im = 0
eq_136 : test_DY.idealTransformer2.iPrim[3].im@ PhA.i[3].im@M // test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer2.iPrim[3].im) + PhA.i[3].im = 0
eq_137 : test_DY.idealTransformer2.iPrim[1].re@ PhA.i[1].re@M // test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer2.iPrim[1].re) + PhA.i[1].re = 0
eq_138 : test_DY.idealTransformer2.iPrim[2].re@ PhA.i[2].re@M // test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer2.iPrim[2].re) + PhA.i[2].re = 0
eq_139 : test_DY.idealTransformer2.iPrim[3].re@ PhA.i[3].re@M // test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer2.iPrim[3].re) + PhA.i[3].re = 0
eq_140 : test_DY.idealTransformer3.iPrim[1].im@ PhC.i[1].im@M // - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im + PhC.i[1].im = 0
eq_141 : test_DY.idealTransformer3.iPrim[2].im@ PhC.i[2].im@M // - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im + PhC.i[2].im = 0
eq_142 : test_DY.idealTransformer3.iPrim[3].im@ PhC.i[3].im@M // - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im + PhC.i[3].im = 0
eq_143 : test_DY.idealTransformer3.iPrim[1].re@ PhC.i[1].re@M // - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re + PhC.i[1].re = 0
eq_144 : test_DY.idealTransformer3.iPrim[2].re@ PhC.i[2].re@M // - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re + PhC.i[2].re = 0
eq_145 : test_DY.idealTransformer3.iPrim[3].re@ PhC.i[3].re@M // - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re + PhC.i[3].re = 0
eq_146 : test_DY.idealTransformer2.iPrim[1].im@ test_DY.idealTransformer3.iPrim[1].im@ PhB.i[1].im@M // test_DY.idealTransformer2.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im) + PhB.i[1].im = 0
eq_147 : test_DY.idealTransformer2.iPrim[2].im@ test_DY.idealTransformer3.iPrim[2].im@ PhB.i[2].im@M // test_DY.idealTransformer2.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im) + PhB.i[2].im = 0
eq_148 : test_DY.idealTransformer2.iPrim[3].im@ test_DY.idealTransformer3.iPrim[3].im@ PhB.i[3].im@M // test_DY.idealTransformer2.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im) + PhB.i[3].im = 0
eq_149 : test_DY.idealTransformer2.iPrim[1].re@ test_DY.idealTransformer3.iPrim[1].re@ PhB.i[1].re@M // test_DY.idealTransformer2.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re) + PhB.i[1].re = 0
eq_150 : test_DY.idealTransformer2.iPrim[2].re@ test_DY.idealTransformer3.iPrim[2].re@ PhB.i[2].re@M // test_DY.idealTransformer2.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re) + PhB.i[2].re = 0
eq_151 : test_DY.idealTransformer2.iPrim[3].re@ test_DY.idealTransformer3.iPrim[3].re@ PhB.i[3].re@M // test_DY.idealTransformer2.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re) + PhB.i[3].re = 0
eq_152 : test_DY.hPin_N.iIm[1]@M z.i[1].im@ z1.i[1].im@ // - test_DY.hPin_N.iIm[1] + terminal.i[1].im + z.i[1].im + z1.i[1].im = 0
eq_153 : test_DY.hPin_N.iIm[2]@M z.i[2].im@ z1.i[2].im@ // - test_DY.hPin_N.iIm[2] + terminal.i[2].im + z.i[2].im + z1.i[2].im = 0
eq_154 : test_DY.hPin_N.iIm[3]@M z.i[3].im@ z1.i[3].im@ // - test_DY.hPin_N.iIm[3] + terminal.i[3].im + z.i[3].im + z1.i[3].im = 0
eq_155 : test_DY.hPin_N.iRe[1]@M z.i[1].re@ z1.i[1].re@ // - test_DY.hPin_N.iRe[1] + terminal.i[1].re + z.i[1].re + z1.i[1].re = 0
eq_156 : test_DY.hPin_N.iRe[2]@M z.i[2].re@ z1.i[2].re@ // - test_DY.hPin_N.iRe[2] + terminal.i[2].re + z.i[2].re + z1.i[2].re = 0
eq_157 : test_DY.hPin_N.iRe[3]@M z.i[3].re@ z1.i[3].re@ // - test_DY.hPin_N.iRe[3] + terminal.i[3].re + z.i[3].re + z1.i[3].re = 0
eq_158 : // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_159 : // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_160 : // HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))
eq_161 : // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_162 : // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_163 : // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_164 : // HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))
eq_165 : // HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_166 : // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_167 : // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_168 : // HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_169 : // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_170 : // HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_171 : // HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_172 : PhA.P@M PhA.i[1].re@ PhA.i[2].re@ PhA.i[3].re@ PhA.i[1].im@ PhA.i[2].im@ PhA.i[3].im@ // PhA.P = PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)
eq_173 : PhB.P@M PhB.i[1].re@ PhB.i[2].re@ PhB.i[3].re@ PhB.i[1].im@ PhB.i[2].im@ PhB.i[3].im@ // PhB.P = PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)
eq_174 : PhC.P@M PhC.i[1].re@ PhC.i[2].re@ PhC.i[3].re@ PhC.i[1].im@ PhC.i[2].im@ PhC.i[3].im@ // PhC.P = PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)
eq_175 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_176 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_177 : z.iFundAbs@M z.i[1].re@ z.i[1].im@ // z.iFundAbs = (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5
eq_178 : z.iFundArg@M z.i[1].im@ z.i[1].re@ // z.iFundArg = Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)
eq_179 : z1.vFundAbs@M z1.v[1].re@ z1.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5
eq_180 : z1.vFundArg@M z1.v[1].im@ z1.v[1].re@ // z1.vFundArg = Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)
eq_181 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_182 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

DAE BiPGraph matching
----------------------------------------
BiPGraph matching:
eq_1 : temp_99
eq_2 : temp_100
eq_3 : temp_101
eq_4[1] : systemDef.eventReadData
eq_4[2] : systemDef.eventWriteData
eq_4[3] : systemDef.modeSelect
eq_5 : der(PhA.theta)
eq_6 : PhA.omega
eq_7 : der(PhB.theta)
eq_8 : PhB.omega
eq_9 : der(PhC.theta)
eq_10 : PhC.omega
eq_11 : laptop_adpt_1.loadBase1.v[1].re
eq_12 : laptop_adpt_1.loadBase1.v[2].re
eq_13 : laptop_adpt_1.loadBase1.v[3].re
eq_14 : laptop_adpt_1.loadBase1.v[1].im
eq_15 : laptop_adpt_1.loadBase1.v[2].im
eq_16 : laptop_adpt_1.loadBase1.v[3].im
eq_17 : temp_102
eq_18 : temp_103
eq_20 : laptop_adpt_1.loadBase1.omega
eq_21 : laptop_adpt_3.loadBase1.v[1].re
eq_22 : laptop_adpt_3.loadBase1.v[2].re
eq_23 : laptop_adpt_3.loadBase1.v[3].re
eq_24 : laptop_adpt_3.loadBase1.v[1].im
eq_25 : laptop_adpt_3.loadBase1.v[2].im
eq_26 : laptop_adpt_3.loadBase1.v[3].im
eq_27 : temp_104
eq_28 : temp_105
eq_30 : laptop_adpt_3.loadBase1.omega
eq_31 : terminal.omega
eq_32 : z.i[1].im
eq_33 : z.i[2].im
eq_34 : z.i[3].im
eq_35 : z.i[1].re
eq_36 : z.i[2].re
eq_37 : z.i[3].re
eq_38 : z.omega
eq_39 : z.v[1].re
eq_40 : z.v[1].im
eq_41 : z.v[2].re
eq_42 : z.v[2].im
eq_43 : z.v[3].re
eq_44 : z.v[3].im
eq_45 : z1.i[1].im
eq_46 : z1.i[2].im
eq_47 : z1.i[3].im
eq_48 : z1.i[1].re
eq_49 : z1.i[2].re
eq_50 : z1.i[3].re
eq_51 : z1.omega
eq_52 : z1.v[1].re
eq_53 : z1.v[1].im
eq_54 : z1.v[2].re
eq_55 : z1.v[2].im
eq_56 : z1.v[3].re
eq_57 : z1.v[3].im
eq_58 : test_DY.idealTransformer2.iPrim[1].re
eq_59 : test_DY.idealTransformer2.iPrim[1].im
eq_60 : test_DY.idealTransformer2.iPrim[2].re
eq_61 : test_DY.idealTransformer2.iPrim[2].im
eq_62 : test_DY.idealTransformer2.iPrim[3].re
eq_63 : test_DY.idealTransformer2.iPrim[3].im
eq_64 : test_DY.idealTransformer3.iPrim[1].re
eq_65 : test_DY.idealTransformer3.iPrim[1].im
eq_66 : test_DY.idealTransformer3.iPrim[2].re
eq_67 : test_DY.idealTransformer3.iPrim[2].im
eq_68 : test_DY.idealTransformer3.iPrim[3].re
eq_69 : test_DY.idealTransformer3.iPrim[3].im
eq_70 : laptop_adpt_2.loadBase1.i[1].re
eq_71 : laptop_adpt_2.loadBase1.i[2].re
eq_72 : laptop_adpt_2.loadBase1.i[3].re
eq_73 : laptop_adpt_2.loadBase1.i[1].im
eq_74 : laptop_adpt_2.loadBase1.i[2].im
eq_75 : laptop_adpt_2.loadBase1.i[3].im
eq_76 : temp_106
eq_77 : temp_107
eq_79 : laptop_adpt_2.loadBase1.omega
eq_80 : led_driver_1.loadBase1.i[1].re
eq_81 : led_driver_1.loadBase1.i[2].re
eq_82 : led_driver_1.loadBase1.i[3].re
eq_83 : led_driver_1.loadBase1.i[1].im
eq_84 : led_driver_1.loadBase1.i[2].im
eq_85 : led_driver_1.loadBase1.i[3].im
eq_86 : temp_108
eq_87 : temp_109
eq_89 : led_driver_1.loadBase1.omega
eq_90 : led_driver_3.loadBase1.i[1].re
eq_91 : led_driver_3.loadBase1.i[2].re
eq_92 : led_driver_3.loadBase1.i[3].re
eq_93 : led_driver_3.loadBase1.i[1].im
eq_94 : led_driver_3.loadBase1.i[2].im
eq_95 : led_driver_3.loadBase1.i[3].im
eq_96 : temp_110
eq_97 : temp_111
eq_99 : led_driver_3.loadBase1.omega
eq_100 : led_driver_2.loadBase1.i[1].re
eq_101 : led_driver_2.loadBase1.i[2].re
eq_102 : led_driver_2.loadBase1.i[3].re
eq_103 : led_driver_2.loadBase1.i[1].im
eq_104 : led_driver_2.loadBase1.i[2].im
eq_105 : led_driver_2.loadBase1.i[3].im
eq_106 : temp_112
eq_107 : temp_113
eq_109 : led_driver_2.loadBase1.omega
eq_110 : ground1.pin.iIm[1]
eq_111 : ground1.pin.iIm[2]
eq_112 : ground1.pin.iIm[3]
eq_113 : ground1.pin.iRe[1]
eq_114 : ground1.pin.iRe[2]
eq_115 : ground1.pin.iRe[3]
eq_116 : laptop_adpt_1.loadBase1.i[1].im
eq_117 : laptop_adpt_1.loadBase1.i[2].im
eq_118 : laptop_adpt_1.loadBase1.i[3].im
eq_119 : laptop_adpt_1.loadBase1.i[1].re
eq_120 : laptop_adpt_1.loadBase1.i[2].re
eq_121 : laptop_adpt_1.loadBase1.i[3].re
eq_122 : laptop_adpt_3.loadBase1.i[1].im
eq_123 : laptop_adpt_3.loadBase1.i[2].im
eq_124 : laptop_adpt_3.loadBase1.i[3].im
eq_125 : laptop_adpt_3.loadBase1.i[1].re
eq_126 : laptop_adpt_3.loadBase1.i[2].re
eq_127 : laptop_adpt_3.loadBase1.i[3].re
eq_128 : ground2.pin.iIm[1]
eq_129 : ground2.pin.iIm[2]
eq_130 : ground2.pin.iIm[3]
eq_131 : ground2.pin.iRe[1]
eq_132 : ground2.pin.iRe[2]
eq_133 : ground2.pin.iRe[3]
eq_134 : PhA.i[1].im
eq_135 : PhA.i[2].im
eq_136 : PhA.i[3].im
eq_137 : PhA.i[1].re
eq_138 : PhA.i[2].re
eq_139 : PhA.i[3].re
eq_140 : PhC.i[1].im
eq_141 : PhC.i[2].im
eq_142 : PhC.i[3].im
eq_143 : PhC.i[1].re
eq_144 : PhC.i[2].re
eq_145 : PhC.i[3].re
eq_146 : PhB.i[1].im
eq_147 : PhB.i[2].im
eq_148 : PhB.i[3].im
eq_149 : PhB.i[1].re
eq_150 : PhB.i[2].re
eq_151 : PhB.i[3].re
eq_152 : test_DY.hPin_N.iIm[1]
eq_153 : test_DY.hPin_N.iIm[2]
eq_154 : test_DY.hPin_N.iIm[3]
eq_155 : test_DY.hPin_N.iRe[1]
eq_156 : test_DY.hPin_N.iRe[2]
eq_157 : test_DY.hPin_N.iRe[3]
eq_172 : PhA.P
eq_173 : PhB.P
eq_174 : PhC.P
eq_175 : z.vFundAbs
eq_176 : z.vFundArg
eq_177 : z.iFundAbs
eq_178 : z.iFundArg
eq_179 : z1.vFundAbs
eq_180 : z1.vFundArg
eq_181 : z1.iFundAbs
eq_182 : z1.iFundArg
Unmatched equations: {}
Unmatched variables: {}
----------------------------------------

BiPGraph (184 equations, 164 variables)
Variables: {der(PhA.theta) der(PhB.theta) der(PhC.theta) PhA.P PhA.i[1].re PhA.i[1].im PhA.i[2].re PhA.i[2].im PhA.i[3].re PhA.i[3].im PhA.omega PhB.P PhB.i[1].re PhB.i[1].im PhB.i[2].re PhB.i[2].im PhB.i[3].re PhB.i[3].im PhB.omega PhC.P PhC.i[1].re PhC.i[1].im PhC.i[2].re PhC.i[2].im PhC.i[3].re PhC.i[3].im PhC.omega ground1.pin.iIm[1] ground1.pin.iIm[2] ground1.pin.iIm[3] ground1.pin.iRe[1] ground1.pin.iRe[2] ground1.pin.iRe[3] ground2.pin.iIm[1] ground2.pin.iIm[2] ground2.pin.iIm[3] ground2.pin.iRe[1] ground2.pin.iRe[2] ground2.pin.iRe[3] laptop_adpt_1.loadBase1.v[1].re laptop_adpt_1.loadBase1.v[1].im laptop_adpt_1.loadBase1.v[2].re laptop_adpt_1.loadBase1.v[2].im laptop_adpt_1.loadBase1.v[3].re laptop_adpt_1.loadBase1.v[3].im laptop_adpt_1.loadBase1.i[1].re laptop_adpt_1.loadBase1.i[1].im laptop_adpt_1.loadBase1.i[2].re laptop_adpt_1.loadBase1.i[2].im laptop_adpt_1.loadBase1.i[3].re laptop_adpt_1.loadBase1.i[3].im laptop_adpt_1.loadBase1.omega laptop_adpt_3.loadBase1.v[1].re laptop_adpt_3.loadBase1.v[1].im laptop_adpt_3.loadBase1.v[2].re laptop_adpt_3.loadBase1.v[2].im laptop_adpt_3.loadBase1.v[3].re laptop_adpt_3.loadBase1.v[3].im laptop_adpt_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.omega terminal.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.i[1].re z.i[1].im z.i[2].re z.i[2].im z.i[3].re z.i[3].im z.omega z1.vFundAbs z1.vFundArg z1.iFundAbs z1.iFundArg z1.v[1].re z1.v[1].im z1.v[2].re z1.v[2].im z1.v[3].re z1.v[3].im z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.omega test_DY.idealTransformer2.iPrim[1].re test_DY.idealTransformer2.iPrim[1].im test_DY.idealTransformer2.iPrim[2].re test_DY.idealTransformer2.iPrim[2].im test_DY.idealTransformer2.iPrim[3].re test_DY.idealTransformer2.iPrim[3].im test_DY.idealTransformer3.iPrim[1].re test_DY.idealTransformer3.iPrim[1].im test_DY.idealTransformer3.iPrim[2].re test_DY.idealTransformer3.iPrim[2].im test_DY.idealTransformer3.iPrim[3].re test_DY.idealTransformer3.iPrim[3].im test_DY.hPin_N.iIm[1] test_DY.hPin_N.iIm[2] test_DY.hPin_N.iIm[3] test_DY.hPin_N.iRe[1] test_DY.hPin_N.iRe[2] test_DY.hPin_N.iRe[3] laptop_adpt_2.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].im laptop_adpt_2.loadBase1.omega led_driver_1.loadBase1.i[1].re led_driver_1.loadBase1.i[1].im led_driver_1.loadBase1.i[2].re led_driver_1.loadBase1.i[2].im led_driver_1.loadBase1.i[3].re led_driver_1.loadBase1.i[3].im led_driver_1.loadBase1.omega led_driver_3.loadBase1.i[1].re led_driver_3.loadBase1.i[1].im led_driver_3.loadBase1.i[2].re led_driver_3.loadBase1.i[2].im led_driver_3.loadBase1.i[3].re led_driver_3.loadBase1.i[3].im led_driver_3.loadBase1.omega led_driver_2.loadBase1.i[1].re led_driver_2.loadBase1.i[1].im led_driver_2.loadBase1.i[2].re led_driver_2.loadBase1.i[2].im led_driver_2.loadBase1.i[3].re led_driver_2.loadBase1.i[3].im led_driver_2.loadBase1.omega systemDef.modeSelect systemDef.eventWriteData systemDef.eventReadData temp_99 temp_100 temp_101 temp_102 temp_103 temp_104 temp_105 temp_106 temp_107 temp_108 temp_109 temp_110 temp_111 temp_112 temp_113 }
eq_1 : temp_99@M // temp_99 = time > 0.5
eq_2 : temp_100@M // temp_100 = time > 0.25
eq_3 : temp_101@M // temp_101 = time > 0.4
eq_4[1] : temp_99# temp_100# temp_101# systemDef.eventReadData@M // algorithm
 if temp_99 and not pre(temp_99) then
  systemDef.modeSelect := true;
 end if;
 if temp_100 and not pre(temp_100) then
  systemDef.eventWriteData := true;
 end if;
 if temp_101 and not pre(temp_101) then
  systemDef.eventReadData := true;
 end if;

eq_4[2] : temp_99# temp_100# systemDef.eventWriteData@M temp_101# // Already printed, see eq_4[1]
eq_4[3] : temp_99# systemDef.modeSelect@M temp_100# temp_101# // Already printed, see eq_4[1]
eq_5 : der(PhA.theta)@M // der(PhA.theta) = 6.283185307179586 * systemDef.fFund
eq_6 : PhA.omega@M der(PhA.theta)@ // PhA.omega = der(PhA.theta)
eq_7 : der(PhB.theta)@M // der(PhB.theta) = 6.283185307179586 * systemDef.fFund
eq_8 : PhB.omega@M der(PhB.theta)@ // PhB.omega = der(PhB.theta)
eq_9 : der(PhC.theta)@M // der(PhC.theta) = 6.283185307179586 * systemDef.fFund
eq_10 : PhC.omega@M der(PhC.theta)@ // PhC.omega = der(PhC.theta)
eq_11 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@M laptop_adpt_1.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_12 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@M laptop_adpt_1.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_13 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@M laptop_adpt_1.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_14 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@M laptop_adpt_1.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_15 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@M laptop_adpt_1.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_16 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@M laptop_adpt_1.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_17 : temp_102@M systemDef.eventWriteData# // temp_102 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_18 : temp_103@M systemDef.eventReadData# // temp_103 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_19 : temp_102# temp_103# // algorithm
 if temp_102 and not pre(temp_102) then
 end if;
 if temp_103 and not pre(temp_103) then
 end if;

eq_20 : laptop_adpt_1.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_1.loadBase1.omega = der(PhA.theta)
eq_21 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@M laptop_adpt_3.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_22 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@M laptop_adpt_3.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_23 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@M laptop_adpt_3.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_24 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@M laptop_adpt_3.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_25 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@M laptop_adpt_3.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_26 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@M laptop_adpt_3.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_27 : temp_104@M systemDef.eventWriteData# // temp_104 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_28 : temp_105@M systemDef.eventReadData# // temp_105 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_29 : temp_104# temp_105# // algorithm
 if temp_104 and not pre(temp_104) then
 end if;
 if temp_105 and not pre(temp_105) then
 end if;

eq_30 : laptop_adpt_3.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_3.loadBase1.omega = der(PhA.theta)
eq_31 : terminal.omega@M der(PhA.theta)@ // terminal.omega = der(PhA.theta)
eq_32 : z.v[1].re@ z.i[1].re@ z.i[1].im@M // z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im
eq_33 : z.v[2].re@ z.i[2].re@ z.i[2].im@M // z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im
eq_34 : z.v[3].re@ z.i[3].re@ z.i[3].im@M // z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im
eq_35 : z.v[1].im@ z.i[1].im@ z.i[1].re@M // z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
eq_36 : z.v[2].im@ z.i[2].im@ z.i[2].re@M // z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
eq_37 : z.v[3].im@ z.i[3].im@ z.i[3].re@M // z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
eq_38 : z.omega@M der(PhA.theta)@ // z.omega = der(PhA.theta)
eq_39 : z.v[1].re@M laptop_adpt_1.loadBase1.v[1].re@ // z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re
eq_40 : z.v[1].im@M laptop_adpt_1.loadBase1.v[1].im@ // z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im
eq_41 : z.v[2].re@M laptop_adpt_1.loadBase1.v[2].re@ // z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re
eq_42 : z.v[2].im@M laptop_adpt_1.loadBase1.v[2].im@ // z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im
eq_43 : z.v[3].re@M laptop_adpt_1.loadBase1.v[3].re@ // z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re
eq_44 : z.v[3].im@M laptop_adpt_1.loadBase1.v[3].im@ // z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im
eq_45 : z1.v[1].re@ z1.i[1].re@ z1.i[1].im@M // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_46 : z1.v[2].re@ z1.i[2].re@ z1.i[2].im@M // z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_47 : z1.v[3].re@ z1.i[3].re@ z1.i[3].im@M // z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_48 : z1.v[1].im@ z1.i[1].im@ z1.i[1].re@M // z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_49 : z1.v[2].im@ z1.i[2].im@ z1.i[2].re@M // z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_50 : z1.v[3].im@ z1.i[3].im@ z1.i[3].re@M // z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_51 : z1.omega@M der(PhA.theta)@ // z1.omega = der(PhA.theta)
eq_52 : z1.v[1].re@M laptop_adpt_3.loadBase1.v[1].re@ // z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re
eq_53 : z1.v[1].im@M laptop_adpt_3.loadBase1.v[1].im@ // z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im
eq_54 : z1.v[2].re@M laptop_adpt_3.loadBase1.v[2].re@ // z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re
eq_55 : z1.v[2].im@M laptop_adpt_3.loadBase1.v[2].im@ // z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im
eq_56 : z1.v[3].re@M laptop_adpt_3.loadBase1.v[3].re@ // z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re
eq_57 : z1.v[3].im@M laptop_adpt_3.loadBase1.v[3].im@ // z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im
eq_58 : z.i[1].re@ test_DY.idealTransformer2.iPrim[1].re@M // - z.i[1].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].re
eq_59 : z.i[1].im@ test_DY.idealTransformer2.iPrim[1].im@M // - z.i[1].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].im
eq_60 : z.i[2].re@ test_DY.idealTransformer2.iPrim[2].re@M // - z.i[2].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].re
eq_61 : z.i[2].im@ test_DY.idealTransformer2.iPrim[2].im@M // - z.i[2].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].im
eq_62 : z.i[3].re@ test_DY.idealTransformer2.iPrim[3].re@M // - z.i[3].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].re
eq_63 : z.i[3].im@ test_DY.idealTransformer2.iPrim[3].im@M // - z.i[3].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].im
eq_64 : z1.i[1].re@ test_DY.idealTransformer3.iPrim[1].re@M // - z1.i[1].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].re
eq_65 : z1.i[1].im@ test_DY.idealTransformer3.iPrim[1].im@M // - z1.i[1].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].im
eq_66 : z1.i[2].re@ test_DY.idealTransformer3.iPrim[2].re@M // - z1.i[2].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].re
eq_67 : z1.i[2].im@ test_DY.idealTransformer3.iPrim[2].im@M // - z1.i[2].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].im
eq_68 : z1.i[3].re@ test_DY.idealTransformer3.iPrim[3].re@M // - z1.i[3].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].re
eq_69 : z1.i[3].im@ test_DY.idealTransformer3.iPrim[3].im@M // - z1.i[3].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].im
eq_70 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ laptop_adpt_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_71 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ laptop_adpt_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_72 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ laptop_adpt_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_73 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ laptop_adpt_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_74 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ laptop_adpt_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_75 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ laptop_adpt_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_76 : temp_106@M systemDef.eventWriteData# // temp_106 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_77 : temp_107@M systemDef.eventReadData# // temp_107 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_78 : temp_106# temp_107# // algorithm
 if temp_106 and not pre(temp_106) then
 end if;
 if temp_107 and not pre(temp_107) then
 end if;

eq_79 : laptop_adpt_2.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_2.loadBase1.omega = der(PhA.theta)
eq_80 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_1.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_81 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_1.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_82 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_1.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_83 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_1.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_84 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_1.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_85 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_1.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_86 : temp_108@M systemDef.eventWriteData# // temp_108 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_87 : temp_109@M systemDef.eventReadData# // temp_109 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_88 : temp_108# temp_109# // algorithm
 if temp_108 and not pre(temp_108) then
 end if;
 if temp_109 and not pre(temp_109) then
 end if;

eq_89 : led_driver_1.loadBase1.omega@M der(PhA.theta)@ // led_driver_1.loadBase1.omega = der(PhA.theta)
eq_90 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@ led_driver_3.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_91 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@ led_driver_3.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_92 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@ led_driver_3.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_93 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@ led_driver_3.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_94 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@ led_driver_3.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_95 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@ led_driver_3.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_96 : temp_110@M systemDef.eventWriteData# // temp_110 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_97 : temp_111@M systemDef.eventReadData# // temp_111 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_98 : temp_110# temp_111# // algorithm
 if temp_110 and not pre(temp_110) then
 end if;
 if temp_111 and not pre(temp_111) then
 end if;

eq_99 : led_driver_3.loadBase1.omega@M der(PhA.theta)@ // led_driver_3.loadBase1.omega = der(PhA.theta)
eq_100 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_101 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_102 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_103 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_104 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_105 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_106 : temp_112@M systemDef.eventWriteData# // temp_112 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_107 : temp_113@M systemDef.eventReadData# // temp_113 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_108 : temp_112# temp_113# // algorithm
 if temp_112 and not pre(temp_112) then
 end if;
 if temp_113 and not pre(temp_113) then
 end if;

eq_109 : led_driver_2.loadBase1.omega@M der(PhA.theta)@ // led_driver_2.loadBase1.omega = der(PhA.theta)
eq_110 : PhA.i[1].im@ PhB.i[1].im@ PhC.i[1].im@ ground1.pin.iIm[1]@M // - PhA.i[1].im + (- PhB.i[1].im) + (- PhC.i[1].im) + ground1.pin.iIm[1] = 0
eq_111 : PhA.i[2].im@ PhB.i[2].im@ PhC.i[2].im@ ground1.pin.iIm[2]@M // - PhA.i[2].im + (- PhB.i[2].im) + (- PhC.i[2].im) + ground1.pin.iIm[2] = 0
eq_112 : PhA.i[3].im@ PhB.i[3].im@ PhC.i[3].im@ ground1.pin.iIm[3]@M // - PhA.i[3].im + (- PhB.i[3].im) + (- PhC.i[3].im) + ground1.pin.iIm[3] = 0
eq_113 : PhA.i[1].re@ PhB.i[1].re@ PhC.i[1].re@ ground1.pin.iRe[1]@M // - PhA.i[1].re + (- PhB.i[1].re) + (- PhC.i[1].re) + ground1.pin.iRe[1] = 0
eq_114 : PhA.i[2].re@ PhB.i[2].re@ PhC.i[2].re@ ground1.pin.iRe[2]@M // - PhA.i[2].re + (- PhB.i[2].re) + (- PhC.i[2].re) + ground1.pin.iRe[2] = 0
eq_115 : PhA.i[3].re@ PhB.i[3].re@ PhC.i[3].re@ ground1.pin.iRe[3]@M // - PhA.i[3].re + (- PhB.i[3].re) + (- PhC.i[3].re) + ground1.pin.iRe[3] = 0
eq_116 : laptop_adpt_1.loadBase1.i[1].im@M laptop_adpt_2.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ z.i[1].im@ // laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0
eq_117 : laptop_adpt_1.loadBase1.i[2].im@M laptop_adpt_2.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ z.i[2].im@ // laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0
eq_118 : laptop_adpt_1.loadBase1.i[3].im@M laptop_adpt_2.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ z.i[3].im@ // laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0
eq_119 : laptop_adpt_1.loadBase1.i[1].re@M laptop_adpt_2.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ z.i[1].re@ // laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0
eq_120 : laptop_adpt_1.loadBase1.i[2].re@M laptop_adpt_2.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ z.i[2].re@ // laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0
eq_121 : laptop_adpt_1.loadBase1.i[3].re@M laptop_adpt_2.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ z.i[3].re@ // laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0
eq_122 : laptop_adpt_3.loadBase1.i[1].im@M led_driver_3.loadBase1.i[1].im@ z1.i[1].im@ // laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0
eq_123 : laptop_adpt_3.loadBase1.i[2].im@M led_driver_3.loadBase1.i[2].im@ z1.i[2].im@ // laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0
eq_124 : laptop_adpt_3.loadBase1.i[3].im@M led_driver_3.loadBase1.i[3].im@ z1.i[3].im@ // laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0
eq_125 : laptop_adpt_3.loadBase1.i[1].re@M led_driver_3.loadBase1.i[1].re@ z1.i[1].re@ // laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0
eq_126 : laptop_adpt_3.loadBase1.i[2].re@M led_driver_3.loadBase1.i[2].re@ z1.i[2].re@ // laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0
eq_127 : laptop_adpt_3.loadBase1.i[3].re@M led_driver_3.loadBase1.i[3].re@ z1.i[3].re@ // laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0
eq_128 : ground2.pin.iIm[1]@M laptop_adpt_1.loadBase1.i[1].im@ laptop_adpt_2.loadBase1.i[1].im@ laptop_adpt_3.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ led_driver_3.loadBase1.i[1].im@ test_DY.hPin_N.iIm[1]@ // ground2.pin.iIm[1] + (- laptop_adpt_1.loadBase1.i[1].im) + (- laptop_adpt_2.loadBase1.i[1].im) + (- laptop_adpt_3.loadBase1.i[1].im) + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + (- led_driver_3.loadBase1.i[1].im) + (- terminal.i[1].im) + test_DY.hPin_N.iIm[1] = 0
eq_129 : ground2.pin.iIm[2]@M laptop_adpt_1.loadBase1.i[2].im@ laptop_adpt_2.loadBase1.i[2].im@ laptop_adpt_3.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ led_driver_3.loadBase1.i[2].im@ test_DY.hPin_N.iIm[2]@ // ground2.pin.iIm[2] + (- laptop_adpt_1.loadBase1.i[2].im) + (- laptop_adpt_2.loadBase1.i[2].im) + (- laptop_adpt_3.loadBase1.i[2].im) + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + (- led_driver_3.loadBase1.i[2].im) + (- terminal.i[2].im) + test_DY.hPin_N.iIm[2] = 0
eq_130 : ground2.pin.iIm[3]@M laptop_adpt_1.loadBase1.i[3].im@ laptop_adpt_2.loadBase1.i[3].im@ laptop_adpt_3.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ led_driver_3.loadBase1.i[3].im@ test_DY.hPin_N.iIm[3]@ // ground2.pin.iIm[3] + (- laptop_adpt_1.loadBase1.i[3].im) + (- laptop_adpt_2.loadBase1.i[3].im) + (- laptop_adpt_3.loadBase1.i[3].im) + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + (- led_driver_3.loadBase1.i[3].im) + (- terminal.i[3].im) + test_DY.hPin_N.iIm[3] = 0
eq_131 : ground2.pin.iRe[1]@M laptop_adpt_1.loadBase1.i[1].re@ laptop_adpt_2.loadBase1.i[1].re@ laptop_adpt_3.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ led_driver_3.loadBase1.i[1].re@ test_DY.hPin_N.iRe[1]@ // ground2.pin.iRe[1] + (- laptop_adpt_1.loadBase1.i[1].re) + (- laptop_adpt_2.loadBase1.i[1].re) + (- laptop_adpt_3.loadBase1.i[1].re) + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + (- led_driver_3.loadBase1.i[1].re) + (- terminal.i[1].re) + test_DY.hPin_N.iRe[1] = 0
eq_132 : ground2.pin.iRe[2]@M laptop_adpt_1.loadBase1.i[2].re@ laptop_adpt_2.loadBase1.i[2].re@ laptop_adpt_3.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ led_driver_3.loadBase1.i[2].re@ test_DY.hPin_N.iRe[2]@ // ground2.pin.iRe[2] + (- laptop_adpt_1.loadBase1.i[2].re) + (- laptop_adpt_2.loadBase1.i[2].re) + (- laptop_adpt_3.loadBase1.i[2].re) + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + (- led_driver_3.loadBase1.i[2].re) + (- terminal.i[2].re) + test_DY.hPin_N.iRe[2] = 0
eq_133 : ground2.pin.iRe[3]@M laptop_adpt_1.loadBase1.i[3].re@ laptop_adpt_2.loadBase1.i[3].re@ laptop_adpt_3.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ led_driver_3.loadBase1.i[3].re@ test_DY.hPin_N.iRe[3]@ // ground2.pin.iRe[3] + (- laptop_adpt_1.loadBase1.i[3].re) + (- laptop_adpt_2.loadBase1.i[3].re) + (- laptop_adpt_3.loadBase1.i[3].re) + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + (- led_driver_3.loadBase1.i[3].re) + (- terminal.i[3].re) + test_DY.hPin_N.iRe[3] = 0
eq_134 : test_DY.idealTransformer2.iPrim[1].im@ PhA.i[1].im@M // test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer2.iPrim[1].im) + PhA.i[1].im = 0
eq_135 : test_DY.idealTransformer2.iPrim[2].im@ PhA.i[2].im@M // test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer2.iPrim[2].im) + PhA.i[2].im = 0
eq_136 : test_DY.idealTransformer2.iPrim[3].im@ PhA.i[3].im@M // test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer2.iPrim[3].im) + PhA.i[3].im = 0
eq_137 : test_DY.idealTransformer2.iPrim[1].re@ PhA.i[1].re@M // test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer2.iPrim[1].re) + PhA.i[1].re = 0
eq_138 : test_DY.idealTransformer2.iPrim[2].re@ PhA.i[2].re@M // test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer2.iPrim[2].re) + PhA.i[2].re = 0
eq_139 : test_DY.idealTransformer2.iPrim[3].re@ PhA.i[3].re@M // test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer2.iPrim[3].re) + PhA.i[3].re = 0
eq_140 : test_DY.idealTransformer3.iPrim[1].im@ PhC.i[1].im@M // - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im + PhC.i[1].im = 0
eq_141 : test_DY.idealTransformer3.iPrim[2].im@ PhC.i[2].im@M // - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im + PhC.i[2].im = 0
eq_142 : test_DY.idealTransformer3.iPrim[3].im@ PhC.i[3].im@M // - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im + PhC.i[3].im = 0
eq_143 : test_DY.idealTransformer3.iPrim[1].re@ PhC.i[1].re@M // - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re + PhC.i[1].re = 0
eq_144 : test_DY.idealTransformer3.iPrim[2].re@ PhC.i[2].re@M // - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re + PhC.i[2].re = 0
eq_145 : test_DY.idealTransformer3.iPrim[3].re@ PhC.i[3].re@M // - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re + PhC.i[3].re = 0
eq_146 : test_DY.idealTransformer2.iPrim[1].im@ test_DY.idealTransformer3.iPrim[1].im@ PhB.i[1].im@M // test_DY.idealTransformer2.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im) + PhB.i[1].im = 0
eq_147 : test_DY.idealTransformer2.iPrim[2].im@ test_DY.idealTransformer3.iPrim[2].im@ PhB.i[2].im@M // test_DY.idealTransformer2.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im) + PhB.i[2].im = 0
eq_148 : test_DY.idealTransformer2.iPrim[3].im@ test_DY.idealTransformer3.iPrim[3].im@ PhB.i[3].im@M // test_DY.idealTransformer2.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im) + PhB.i[3].im = 0
eq_149 : test_DY.idealTransformer2.iPrim[1].re@ test_DY.idealTransformer3.iPrim[1].re@ PhB.i[1].re@M // test_DY.idealTransformer2.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re) + PhB.i[1].re = 0
eq_150 : test_DY.idealTransformer2.iPrim[2].re@ test_DY.idealTransformer3.iPrim[2].re@ PhB.i[2].re@M // test_DY.idealTransformer2.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re) + PhB.i[2].re = 0
eq_151 : test_DY.idealTransformer2.iPrim[3].re@ test_DY.idealTransformer3.iPrim[3].re@ PhB.i[3].re@M // test_DY.idealTransformer2.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re) + PhB.i[3].re = 0
eq_152 : test_DY.hPin_N.iIm[1]@M z.i[1].im@ z1.i[1].im@ // - test_DY.hPin_N.iIm[1] + terminal.i[1].im + z.i[1].im + z1.i[1].im = 0
eq_153 : test_DY.hPin_N.iIm[2]@M z.i[2].im@ z1.i[2].im@ // - test_DY.hPin_N.iIm[2] + terminal.i[2].im + z.i[2].im + z1.i[2].im = 0
eq_154 : test_DY.hPin_N.iIm[3]@M z.i[3].im@ z1.i[3].im@ // - test_DY.hPin_N.iIm[3] + terminal.i[3].im + z.i[3].im + z1.i[3].im = 0
eq_155 : test_DY.hPin_N.iRe[1]@M z.i[1].re@ z1.i[1].re@ // - test_DY.hPin_N.iRe[1] + terminal.i[1].re + z.i[1].re + z1.i[1].re = 0
eq_156 : test_DY.hPin_N.iRe[2]@M z.i[2].re@ z1.i[2].re@ // - test_DY.hPin_N.iRe[2] + terminal.i[2].re + z.i[2].re + z1.i[2].re = 0
eq_157 : test_DY.hPin_N.iRe[3]@M z.i[3].re@ z1.i[3].re@ // - test_DY.hPin_N.iRe[3] + terminal.i[3].re + z.i[3].re + z1.i[3].re = 0
eq_158 : // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_159 : // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_160 : // HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))
eq_161 : // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_162 : // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_163 : // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_164 : // HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))
eq_165 : // HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_166 : // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_167 : // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_168 : // HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_169 : // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_170 : // HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_171 : // HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_172 : PhA.P@M PhA.i[1].re@ PhA.i[2].re@ PhA.i[3].re@ PhA.i[1].im@ PhA.i[2].im@ PhA.i[3].im@ // PhA.P = PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)
eq_173 : PhB.P@M PhB.i[1].re@ PhB.i[2].re@ PhB.i[3].re@ PhB.i[1].im@ PhB.i[2].im@ PhB.i[3].im@ // PhB.P = PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)
eq_174 : PhC.P@M PhC.i[1].re@ PhC.i[2].re@ PhC.i[3].re@ PhC.i[1].im@ PhC.i[2].im@ PhC.i[3].im@ // PhC.P = PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)
eq_175 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_176 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_177 : z.iFundAbs@M z.i[1].re@ z.i[1].im@ // z.iFundAbs = (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5
eq_178 : z.iFundArg@M z.i[1].im@ z.i[1].re@ // z.iFundArg = Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)
eq_179 : z1.vFundAbs@M z1.v[1].re@ z1.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5
eq_180 : z1.vFundArg@M z1.v[1].im@ z1.v[1].re@ // z1.vFundArg = Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)
eq_181 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_182 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

Starting automatic tearing
BiPGraph (14 equations, 14 variables)
Variables: {z.v[1].re z.i[1].im led_driver_2.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im laptop_adpt_1.loadBase1.i[1].im laptop_adpt_1.loadBase1.v[1].im z.v[1].im z.i[1].re led_driver_2.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re laptop_adpt_1.loadBase1.i[1].re laptop_adpt_1.loadBase1.v[1].re }
eq_39 : z.v[1].re@M laptop_adpt_1.loadBase1.v[1].re@ // z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re
eq_32 : z.v[1].re@ z.i[1].re# z.i[1].im# // z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im
eq_103 : laptop_adpt_1.loadBase1.v[1].im# led_driver_2.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_83 : laptop_adpt_1.loadBase1.v[1].im# led_driver_1.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_73 : laptop_adpt_1.loadBase1.v[1].im# laptop_adpt_2.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_116 : laptop_adpt_1.loadBase1.i[1].im@M laptop_adpt_2.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ z.i[1].im@ // laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0
eq_14 : laptop_adpt_1.loadBase1.v[1].im# laptop_adpt_1.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_40 : z.v[1].im@M laptop_adpt_1.loadBase1.v[1].im@ // z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im
eq_35 : z.v[1].im@ z.i[1].im# z.i[1].re# // z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
eq_100 : laptop_adpt_1.loadBase1.v[1].re# led_driver_2.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_80 : laptop_adpt_1.loadBase1.v[1].re# led_driver_1.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_70 : laptop_adpt_1.loadBase1.v[1].re# laptop_adpt_2.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_119 : laptop_adpt_1.loadBase1.i[1].re@M laptop_adpt_2.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ z.i[1].re@ // laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0
eq_11 : laptop_adpt_1.loadBase1.v[1].re# laptop_adpt_1.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))

Initial matching
----------------------------------------
BiPGraph matching:
eq_39 : z.v[1].re
eq_116 : laptop_adpt_1.loadBase1.i[1].im
eq_40 : z.v[1].im
eq_119 : laptop_adpt_1.loadBase1.i[1].re
Unmatched equations: {eq_32 eq_103 eq_83 eq_73 eq_14 eq_35 eq_100 eq_80 eq_70 eq_11 }
Unmatched variables: {z.i[1].im led_driver_2.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im laptop_adpt_1.loadBase1.v[1].im z.i[1].re led_driver_2.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re laptop_adpt_1.loadBase1.v[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_39 : laptop_adpt_1.loadBase1.v[1].re
eq_32 : z.v[1].re
eq_116 : laptop_adpt_1.loadBase1.i[1].im
eq_40 : laptop_adpt_1.loadBase1.v[1].im
eq_35 : z.v[1].im
eq_119 : laptop_adpt_1.loadBase1.i[1].re
Unmatched equations: {eq_103 eq_83 eq_73 eq_14 eq_100 eq_80 eq_70 eq_11 }
Unmatched variables: {z.i[1].im led_driver_2.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im z.i[1].re led_driver_2.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: z.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: z.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: laptop_adpt_2.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_1.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_2.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: laptop_adpt_2.loadBase1.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_1.loadBase1.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_2.loadBase1.i[1].re
Starting automatic tearing
BiPGraph (14 equations, 14 variables)
Variables: {z.v[2].re z.i[2].im led_driver_2.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im laptop_adpt_1.loadBase1.i[2].im laptop_adpt_1.loadBase1.v[2].im z.v[2].im z.i[2].re led_driver_2.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re laptop_adpt_1.loadBase1.i[2].re laptop_adpt_1.loadBase1.v[2].re }
eq_41 : z.v[2].re@M laptop_adpt_1.loadBase1.v[2].re@ // z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re
eq_33 : z.v[2].re@ z.i[2].re# z.i[2].im# // z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im
eq_104 : laptop_adpt_1.loadBase1.v[2].im# led_driver_2.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_84 : laptop_adpt_1.loadBase1.v[2].im# led_driver_1.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_74 : laptop_adpt_1.loadBase1.v[2].im# laptop_adpt_2.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_117 : laptop_adpt_1.loadBase1.i[2].im@M laptop_adpt_2.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ z.i[2].im@ // laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0
eq_15 : laptop_adpt_1.loadBase1.v[2].im# laptop_adpt_1.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_42 : z.v[2].im@M laptop_adpt_1.loadBase1.v[2].im@ // z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im
eq_36 : z.v[2].im@ z.i[2].im# z.i[2].re# // z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
eq_101 : laptop_adpt_1.loadBase1.v[2].re# led_driver_2.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_81 : laptop_adpt_1.loadBase1.v[2].re# led_driver_1.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_71 : laptop_adpt_1.loadBase1.v[2].re# laptop_adpt_2.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_120 : laptop_adpt_1.loadBase1.i[2].re@M laptop_adpt_2.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ z.i[2].re@ // laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0
eq_12 : laptop_adpt_1.loadBase1.v[2].re# laptop_adpt_1.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))

Initial matching
----------------------------------------
BiPGraph matching:
eq_41 : z.v[2].re
eq_117 : laptop_adpt_1.loadBase1.i[2].im
eq_42 : z.v[2].im
eq_120 : laptop_adpt_1.loadBase1.i[2].re
Unmatched equations: {eq_33 eq_104 eq_84 eq_74 eq_15 eq_36 eq_101 eq_81 eq_71 eq_12 }
Unmatched variables: {z.i[2].im led_driver_2.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im laptop_adpt_1.loadBase1.v[2].im z.i[2].re led_driver_2.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re laptop_adpt_1.loadBase1.v[2].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_41 : laptop_adpt_1.loadBase1.v[2].re
eq_33 : z.v[2].re
eq_117 : laptop_adpt_1.loadBase1.i[2].im
eq_42 : laptop_adpt_1.loadBase1.v[2].im
eq_36 : z.v[2].im
eq_120 : laptop_adpt_1.loadBase1.i[2].re
Unmatched equations: {eq_104 eq_84 eq_74 eq_15 eq_101 eq_81 eq_71 eq_12 }
Unmatched variables: {z.i[2].im led_driver_2.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im z.i[2].re led_driver_2.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: z.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: z.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: laptop_adpt_2.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_1.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_2.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: laptop_adpt_2.loadBase1.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_1.loadBase1.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_2.loadBase1.i[2].re
Starting automatic tearing
BiPGraph (14 equations, 14 variables)
Variables: {z.v[3].re z.i[3].im led_driver_2.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im laptop_adpt_1.loadBase1.i[3].im laptop_adpt_1.loadBase1.v[3].im z.v[3].im z.i[3].re led_driver_2.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re laptop_adpt_1.loadBase1.i[3].re laptop_adpt_1.loadBase1.v[3].re }
eq_43 : z.v[3].re@M laptop_adpt_1.loadBase1.v[3].re@ // z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re
eq_34 : z.v[3].re@ z.i[3].re# z.i[3].im# // z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im
eq_105 : laptop_adpt_1.loadBase1.v[3].im# led_driver_2.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_85 : laptop_adpt_1.loadBase1.v[3].im# led_driver_1.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_75 : laptop_adpt_1.loadBase1.v[3].im# laptop_adpt_2.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_118 : laptop_adpt_1.loadBase1.i[3].im@M laptop_adpt_2.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ z.i[3].im@ // laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0
eq_16 : laptop_adpt_1.loadBase1.v[3].im# laptop_adpt_1.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_44 : z.v[3].im@M laptop_adpt_1.loadBase1.v[3].im@ // z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im
eq_37 : z.v[3].im@ z.i[3].im# z.i[3].re# // z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
eq_102 : laptop_adpt_1.loadBase1.v[3].re# led_driver_2.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_82 : laptop_adpt_1.loadBase1.v[3].re# led_driver_1.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_72 : laptop_adpt_1.loadBase1.v[3].re# laptop_adpt_2.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_121 : laptop_adpt_1.loadBase1.i[3].re@M laptop_adpt_2.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ z.i[3].re@ // laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0
eq_13 : laptop_adpt_1.loadBase1.v[3].re# laptop_adpt_1.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))

Initial matching
----------------------------------------
BiPGraph matching:
eq_43 : z.v[3].re
eq_118 : laptop_adpt_1.loadBase1.i[3].im
eq_44 : z.v[3].im
eq_121 : laptop_adpt_1.loadBase1.i[3].re
Unmatched equations: {eq_34 eq_105 eq_85 eq_75 eq_16 eq_37 eq_102 eq_82 eq_72 eq_13 }
Unmatched variables: {z.i[3].im led_driver_2.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im laptop_adpt_1.loadBase1.v[3].im z.i[3].re led_driver_2.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re laptop_adpt_1.loadBase1.v[3].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_43 : laptop_adpt_1.loadBase1.v[3].re
eq_34 : z.v[3].re
eq_118 : laptop_adpt_1.loadBase1.i[3].im
eq_44 : laptop_adpt_1.loadBase1.v[3].im
eq_37 : z.v[3].im
eq_121 : laptop_adpt_1.loadBase1.i[3].re
Unmatched equations: {eq_105 eq_85 eq_75 eq_16 eq_102 eq_82 eq_72 eq_13 }
Unmatched variables: {z.i[3].im led_driver_2.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im z.i[3].re led_driver_2.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: z.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: z.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: laptop_adpt_2.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_1.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_2.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: laptop_adpt_2.loadBase1.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_1.loadBase1.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_2.loadBase1.i[3].re
Starting automatic tearing
BiPGraph (10 equations, 10 variables)
Variables: {z1.v[1].re z1.i[1].im led_driver_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.v[1].im z1.v[1].im z1.i[1].re led_driver_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.v[1].re }
eq_52 : z1.v[1].re@M laptop_adpt_3.loadBase1.v[1].re@ // z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re
eq_45 : z1.v[1].re@ z1.i[1].re# z1.i[1].im# // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_93 : laptop_adpt_3.loadBase1.v[1].im# led_driver_3.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_122 : laptop_adpt_3.loadBase1.i[1].im@M led_driver_3.loadBase1.i[1].im@ z1.i[1].im@ // laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0
eq_24 : laptop_adpt_3.loadBase1.v[1].im# laptop_adpt_3.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_53 : z1.v[1].im@M laptop_adpt_3.loadBase1.v[1].im@ // z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im
eq_48 : z1.v[1].im@ z1.i[1].im# z1.i[1].re# // z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_90 : laptop_adpt_3.loadBase1.v[1].re# led_driver_3.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_125 : laptop_adpt_3.loadBase1.i[1].re@M led_driver_3.loadBase1.i[1].re@ z1.i[1].re@ // laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0
eq_21 : laptop_adpt_3.loadBase1.v[1].re# laptop_adpt_3.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))

Initial matching
----------------------------------------
BiPGraph matching:
eq_52 : z1.v[1].re
eq_122 : laptop_adpt_3.loadBase1.i[1].im
eq_53 : z1.v[1].im
eq_125 : laptop_adpt_3.loadBase1.i[1].re
Unmatched equations: {eq_45 eq_93 eq_24 eq_48 eq_90 eq_21 }
Unmatched variables: {z1.i[1].im led_driver_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.v[1].im z1.i[1].re led_driver_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.v[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_52 : laptop_adpt_3.loadBase1.v[1].re
eq_45 : z1.v[1].re
eq_122 : laptop_adpt_3.loadBase1.i[1].im
eq_53 : laptop_adpt_3.loadBase1.v[1].im
eq_48 : z1.v[1].im
eq_125 : laptop_adpt_3.loadBase1.i[1].re
Unmatched equations: {eq_93 eq_24 eq_90 eq_21 }
Unmatched variables: {z1.i[1].im led_driver_3.loadBase1.i[1].im z1.i[1].re led_driver_3.loadBase1.i[1].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: z1.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: z1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_3.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_3.loadBase1.i[1].re
Starting automatic tearing
BiPGraph (10 equations, 10 variables)
Variables: {z1.v[2].re z1.i[2].im led_driver_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.v[2].im z1.v[2].im z1.i[2].re led_driver_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.v[2].re }
eq_54 : z1.v[2].re@M laptop_adpt_3.loadBase1.v[2].re@ // z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re
eq_46 : z1.v[2].re@ z1.i[2].re# z1.i[2].im# // z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_94 : laptop_adpt_3.loadBase1.v[2].im# led_driver_3.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_123 : laptop_adpt_3.loadBase1.i[2].im@M led_driver_3.loadBase1.i[2].im@ z1.i[2].im@ // laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0
eq_25 : laptop_adpt_3.loadBase1.v[2].im# laptop_adpt_3.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_55 : z1.v[2].im@M laptop_adpt_3.loadBase1.v[2].im@ // z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im
eq_49 : z1.v[2].im@ z1.i[2].im# z1.i[2].re# // z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_91 : laptop_adpt_3.loadBase1.v[2].re# led_driver_3.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_126 : laptop_adpt_3.loadBase1.i[2].re@M led_driver_3.loadBase1.i[2].re@ z1.i[2].re@ // laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0
eq_22 : laptop_adpt_3.loadBase1.v[2].re# laptop_adpt_3.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))

Initial matching
----------------------------------------
BiPGraph matching:
eq_54 : z1.v[2].re
eq_123 : laptop_adpt_3.loadBase1.i[2].im
eq_55 : z1.v[2].im
eq_126 : laptop_adpt_3.loadBase1.i[2].re
Unmatched equations: {eq_46 eq_94 eq_25 eq_49 eq_91 eq_22 }
Unmatched variables: {z1.i[2].im led_driver_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.v[2].im z1.i[2].re led_driver_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.v[2].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_54 : laptop_adpt_3.loadBase1.v[2].re
eq_46 : z1.v[2].re
eq_123 : laptop_adpt_3.loadBase1.i[2].im
eq_55 : laptop_adpt_3.loadBase1.v[2].im
eq_49 : z1.v[2].im
eq_126 : laptop_adpt_3.loadBase1.i[2].re
Unmatched equations: {eq_94 eq_25 eq_91 eq_22 }
Unmatched variables: {z1.i[2].im led_driver_3.loadBase1.i[2].im z1.i[2].re led_driver_3.loadBase1.i[2].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: z1.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: z1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_3.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_3.loadBase1.i[2].re
Starting automatic tearing
BiPGraph (10 equations, 10 variables)
Variables: {z1.v[3].re z1.i[3].im led_driver_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.v[3].im z1.v[3].im z1.i[3].re led_driver_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.v[3].re }
eq_56 : z1.v[3].re@M laptop_adpt_3.loadBase1.v[3].re@ // z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re
eq_47 : z1.v[3].re@ z1.i[3].re# z1.i[3].im# // z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_95 : laptop_adpt_3.loadBase1.v[3].im# led_driver_3.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_124 : laptop_adpt_3.loadBase1.i[3].im@M led_driver_3.loadBase1.i[3].im@ z1.i[3].im@ // laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0
eq_26 : laptop_adpt_3.loadBase1.v[3].im# laptop_adpt_3.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_57 : z1.v[3].im@M laptop_adpt_3.loadBase1.v[3].im@ // z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im
eq_50 : z1.v[3].im@ z1.i[3].im# z1.i[3].re# // z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_92 : laptop_adpt_3.loadBase1.v[3].re# led_driver_3.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_127 : laptop_adpt_3.loadBase1.i[3].re@M led_driver_3.loadBase1.i[3].re@ z1.i[3].re@ // laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0
eq_23 : laptop_adpt_3.loadBase1.v[3].re# laptop_adpt_3.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))

Initial matching
----------------------------------------
BiPGraph matching:
eq_56 : z1.v[3].re
eq_124 : laptop_adpt_3.loadBase1.i[3].im
eq_57 : z1.v[3].im
eq_127 : laptop_adpt_3.loadBase1.i[3].re
Unmatched equations: {eq_47 eq_95 eq_26 eq_50 eq_92 eq_23 }
Unmatched variables: {z1.i[3].im led_driver_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.v[3].im z1.i[3].re led_driver_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.v[3].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_56 : laptop_adpt_3.loadBase1.v[3].re
eq_47 : z1.v[3].re
eq_124 : laptop_adpt_3.loadBase1.i[3].im
eq_57 : laptop_adpt_3.loadBase1.v[3].im
eq_50 : z1.v[3].im
eq_127 : laptop_adpt_3.loadBase1.i[3].re
Unmatched equations: {eq_95 eq_26 eq_92 eq_23 }
Unmatched variables: {z1.i[3].im led_driver_3.loadBase1.i[3].im z1.i[3].re led_driver_3.loadBase1.i[3].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: z1.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: z1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_3.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_3.loadBase1.i[3].re
***********************************
*********** ODE section ***********
***********************************

--- Solved equation ---
der(PhA.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
der(PhB.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
der(PhC.theta) := 6.283185307179586 * systemDef.fFund

***********************************
*********** Real outputs **********
***********************************

***********************************
*** Integer and boolean outputs ***
***********************************

***********************************
********* Other variables *********
***********************************

--- Unsolved mixed linear system (Block 1) of 18 variables ---
Coefficient variability: constant
Unknown continuous variables:

Solved discrete variables:
  temp_99
  temp_100
  temp_101
  systemDef.eventReadData
  temp_113
  systemDef.eventWriteData
  temp_112
  temp_111
  temp_110
  temp_109
  temp_108
  temp_107
  temp_106
  temp_105
  temp_104
  temp_103
  temp_102
  systemDef.modeSelect

Continuous residual equations:

Discrete equations:
  temp_99 := time > 0.5
  temp_100 := time > 0.25
  temp_101 := time > 0.4
  algorithm
    if temp_99 and not pre(temp_99) then
      systemDef.modeSelect := true;
    end if;
    if temp_100 and not pre(temp_100) then
      systemDef.eventWriteData := true;
    end if;
    if temp_101 and not pre(temp_101) then
      systemDef.eventReadData := true;
    end if;

    Assigned variables: systemDef.eventReadData
  temp_113 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  algorithm
    if temp_99 and not pre(temp_99) then
      systemDef.modeSelect := true;
    end if;
    if temp_100 and not pre(temp_100) then
      systemDef.eventWriteData := true;
    end if;
    if temp_101 and not pre(temp_101) then
      systemDef.eventReadData := true;
    end if;

    Assigned variables: systemDef.eventWriteData
  temp_112 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_111 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_110 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_109 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_108 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_107 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_106 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_105 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_104 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_103 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_102 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  algorithm
    if temp_99 and not pre(temp_99) then
      systemDef.modeSelect := true;
    end if;
    if temp_100 and not pre(temp_100) then
      systemDef.eventWriteData := true;
    end if;
    if temp_101 and not pre(temp_101) then
      systemDef.eventReadData := true;
    end if;

    Assigned variables: systemDef.modeSelect

Meta equations:
  algorithm
    if temp_112 and not pre(temp_112) then
    end if;
    if temp_113 and not pre(temp_113) then
    end if;

  algorithm
    if temp_110 and not pre(temp_110) then
    end if;
    if temp_111 and not pre(temp_111) then
    end if;

  algorithm
    if temp_108 and not pre(temp_108) then
    end if;
    if temp_109 and not pre(temp_109) then
    end if;

  algorithm
    if temp_106 and not pre(temp_106) then
    end if;
    if temp_107 and not pre(temp_107) then
    end if;

  algorithm
    if temp_104 and not pre(temp_104) then
    end if;
    if temp_105 and not pre(temp_105) then
    end if;

  algorithm
    if temp_102 and not pre(temp_102) then
    end if;
    if temp_103 and not pre(temp_103) then
    end if;


Jacobian:

--- Torn system (Block 2) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[1].re
  laptop_adpt_1.loadBase1.v[1].re
  laptop_adpt_1.loadBase1.i[1].im
  z.v[1].im
  laptop_adpt_1.loadBase1.v[1].im
  laptop_adpt_1.loadBase1.i[1].re

Iteration variables:
  z.i[1].re (start=0,nominal=1)
  z.i[1].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[1].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[1].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[1].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[1].re (start=0,nominal=1)

Torn equations:
  z.v[1].re := z.z.re .* z.i[1].re + (- z.z.im .* systemDef.hrms[1] .* z.i[1].im)
  laptop_adpt_1.loadBase1.v[1].re := - z.v[1].re + test_DY.idealTransformer2.vSec[1].re
  laptop_adpt_1.loadBase1.i[1].im := - laptop_adpt_2.loadBase1.i[1].im + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + z.i[1].im
  z.v[1].im := z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
  laptop_adpt_1.loadBase1.v[1].im := - z.v[1].im + test_DY.idealTransformer2.vSec[1].im
  laptop_adpt_1.loadBase1.i[1].re := - laptop_adpt_2.loadBase1.i[1].re + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + z.i[1].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z.i[1].re
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z.i[1].im
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: laptop_adpt_2.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_1.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_2.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: laptop_adpt_2.loadBase1.i[1].re
  0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_1.loadBase1.i[1].re
  0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_2.loadBase1.i[1].re

--- Solved equation ---
test_DY.idealTransformer2.iPrim[1].re := z.i[1].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
PhA.i[1].re := - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer2.iPrim[1].re

--- Torn system (Block 3) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[2].re
  laptop_adpt_1.loadBase1.v[2].re
  laptop_adpt_1.loadBase1.i[2].im
  z.v[2].im
  laptop_adpt_1.loadBase1.v[2].im
  laptop_adpt_1.loadBase1.i[2].re

Iteration variables:
  z.i[2].re (start=0,nominal=1)
  z.i[2].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[2].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[2].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[2].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[2].re (start=0,nominal=1)

Torn equations:
  z.v[2].re := z.z.re .* z.i[2].re + (- z.z.im .* systemDef.hrms[2] .* z.i[2].im)
  laptop_adpt_1.loadBase1.v[2].re := - z.v[2].re + test_DY.idealTransformer2.vSec[2].re
  laptop_adpt_1.loadBase1.i[2].im := - laptop_adpt_2.loadBase1.i[2].im + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + z.i[2].im
  z.v[2].im := z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
  laptop_adpt_1.loadBase1.v[2].im := - z.v[2].im + test_DY.idealTransformer2.vSec[2].im
  laptop_adpt_1.loadBase1.i[2].re := - laptop_adpt_2.loadBase1.i[2].re + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + z.i[2].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: laptop_adpt_2.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_1.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_2.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: laptop_adpt_2.loadBase1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_1.loadBase1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_2.loadBase1.i[2].re

--- Solved equation ---
test_DY.idealTransformer2.iPrim[2].re := z.i[2].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
PhA.i[2].re := - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer2.iPrim[2].re

--- Torn system (Block 4) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[3].re
  laptop_adpt_1.loadBase1.v[3].re
  laptop_adpt_1.loadBase1.i[3].im
  z.v[3].im
  laptop_adpt_1.loadBase1.v[3].im
  laptop_adpt_1.loadBase1.i[3].re

Iteration variables:
  z.i[3].re (start=0,nominal=1)
  z.i[3].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[3].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[3].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[3].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[3].re (start=0,nominal=1)

Torn equations:
  z.v[3].re := z.z.re .* z.i[3].re + (- z.z.im .* systemDef.hrms[3] .* z.i[3].im)
  laptop_adpt_1.loadBase1.v[3].re := - z.v[3].re + test_DY.idealTransformer2.vSec[3].re
  laptop_adpt_1.loadBase1.i[3].im := - laptop_adpt_2.loadBase1.i[3].im + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + z.i[3].im
  z.v[3].im := z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
  laptop_adpt_1.loadBase1.v[3].im := - z.v[3].im + test_DY.idealTransformer2.vSec[3].im
  laptop_adpt_1.loadBase1.i[3].re := - laptop_adpt_2.loadBase1.i[3].re + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + z.i[3].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: laptop_adpt_2.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_1.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_2.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: laptop_adpt_2.loadBase1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_1.loadBase1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_2.loadBase1.i[3].re

--- Solved equation ---
test_DY.idealTransformer2.iPrim[3].re := z.i[3].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
PhA.i[3].re := - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer2.iPrim[3].re

--- Solved equation ---
test_DY.idealTransformer2.iPrim[1].im := z.i[1].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
PhA.i[1].im := - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer2.iPrim[1].im

--- Solved equation ---
test_DY.idealTransformer2.iPrim[2].im := z.i[2].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
PhA.i[2].im := - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer2.iPrim[2].im

--- Solved equation ---
test_DY.idealTransformer2.iPrim[3].im := z.i[3].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
PhA.i[3].im := - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer2.iPrim[3].im

--- Solved equation ---
PhA.P := PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)

--- Solved equation ---
PhA.omega := der(PhA.theta)

--- Torn system (Block 5) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[1].re
  laptop_adpt_3.loadBase1.v[1].re
  laptop_adpt_3.loadBase1.i[1].im
  z1.v[1].im
  laptop_adpt_3.loadBase1.v[1].im
  laptop_adpt_3.loadBase1.i[1].re

Iteration variables:
  z1.i[1].re (start=0,nominal=1)
  z1.i[1].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[1].re (start=0,nominal=1)

Torn equations:
  z1.v[1].re := z1.z.re .* z1.i[1].re + (- z1.z.im .* systemDef.hrms[1] .* z1.i[1].im)
  laptop_adpt_3.loadBase1.v[1].re := - z1.v[1].re + test_DY.idealTransformer3.vSec[1].re
  laptop_adpt_3.loadBase1.i[1].im := - led_driver_3.loadBase1.i[1].im + z1.i[1].im
  z1.v[1].im := z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
  laptop_adpt_3.loadBase1.v[1].im := - z1.v[1].im + test_DY.idealTransformer3.vSec[1].im
  laptop_adpt_3.loadBase1.i[1].re := - led_driver_3.loadBase1.i[1].re + z1.i[1].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z1.i[1].re
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_3.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_3.loadBase1.i[1].re

--- Solved equation ---
test_DY.idealTransformer3.iPrim[1].re := z1.i[1].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
PhB.i[1].re := - test_DY.idealTransformer2.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re

--- Torn system (Block 6) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[2].re
  laptop_adpt_3.loadBase1.v[2].re
  laptop_adpt_3.loadBase1.i[2].im
  z1.v[2].im
  laptop_adpt_3.loadBase1.v[2].im
  laptop_adpt_3.loadBase1.i[2].re

Iteration variables:
  z1.i[2].re (start=0,nominal=1)
  z1.i[2].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[2].re (start=0,nominal=1)

Torn equations:
  z1.v[2].re := z1.z.re .* z1.i[2].re + (- z1.z.im .* systemDef.hrms[2] .* z1.i[2].im)
  laptop_adpt_3.loadBase1.v[2].re := - z1.v[2].re + test_DY.idealTransformer3.vSec[2].re
  laptop_adpt_3.loadBase1.i[2].im := - led_driver_3.loadBase1.i[2].im + z1.i[2].im
  z1.v[2].im := z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
  laptop_adpt_3.loadBase1.v[2].im := - z1.v[2].im + test_DY.idealTransformer3.vSec[2].im
  laptop_adpt_3.loadBase1.i[2].re := - led_driver_3.loadBase1.i[2].re + z1.i[2].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_3.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_3.loadBase1.i[2].re

--- Solved equation ---
test_DY.idealTransformer3.iPrim[2].re := z1.i[2].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
PhB.i[2].re := - test_DY.idealTransformer2.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re

--- Torn system (Block 7) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[3].re
  laptop_adpt_3.loadBase1.v[3].re
  laptop_adpt_3.loadBase1.i[3].im
  z1.v[3].im
  laptop_adpt_3.loadBase1.v[3].im
  laptop_adpt_3.loadBase1.i[3].re

Iteration variables:
  z1.i[3].re (start=0,nominal=1)
  z1.i[3].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[3].re (start=0,nominal=1)

Torn equations:
  z1.v[3].re := z1.z.re .* z1.i[3].re + (- z1.z.im .* systemDef.hrms[3] .* z1.i[3].im)
  laptop_adpt_3.loadBase1.v[3].re := - z1.v[3].re + test_DY.idealTransformer3.vSec[3].re
  laptop_adpt_3.loadBase1.i[3].im := - led_driver_3.loadBase1.i[3].im + z1.i[3].im
  z1.v[3].im := z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
  laptop_adpt_3.loadBase1.v[3].im := - z1.v[3].im + test_DY.idealTransformer3.vSec[3].im
  laptop_adpt_3.loadBase1.i[3].re := - led_driver_3.loadBase1.i[3].re + z1.i[3].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_3.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_3.loadBase1.i[3].re

--- Solved equation ---
test_DY.idealTransformer3.iPrim[3].re := z1.i[3].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
PhB.i[3].re := - test_DY.idealTransformer2.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re

--- Solved equation ---
test_DY.idealTransformer3.iPrim[1].im := z1.i[1].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
PhB.i[1].im := - test_DY.idealTransformer2.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im

--- Solved equation ---
test_DY.idealTransformer3.iPrim[2].im := z1.i[2].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
PhB.i[2].im := - test_DY.idealTransformer2.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im

--- Solved equation ---
test_DY.idealTransformer3.iPrim[3].im := z1.i[3].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
PhB.i[3].im := - test_DY.idealTransformer2.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im

--- Solved equation ---
PhB.P := PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)

--- Solved equation ---
PhB.omega := der(PhB.theta)

--- Solved equation ---
PhC.i[1].re := test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re)

--- Solved equation ---
PhC.i[2].re := test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re)

--- Solved equation ---
PhC.i[3].re := test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re)

--- Solved equation ---
PhC.i[1].im := test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im)

--- Solved equation ---
PhC.i[2].im := test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im)

--- Solved equation ---
PhC.i[3].im := test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im)

--- Solved equation ---
PhC.P := PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)

--- Solved equation ---
PhC.omega := der(PhC.theta)

--- Solved equation ---
ground1.pin.iIm[1] := PhA.i[1].im + PhB.i[1].im + PhC.i[1].im

--- Solved equation ---
ground1.pin.iIm[2] := PhA.i[2].im + PhB.i[2].im + PhC.i[2].im

--- Solved equation ---
ground1.pin.iIm[3] := PhA.i[3].im + PhB.i[3].im + PhC.i[3].im

--- Solved equation ---
ground1.pin.iRe[1] := PhA.i[1].re + PhB.i[1].re + PhC.i[1].re

--- Solved equation ---
ground1.pin.iRe[2] := PhA.i[2].re + PhB.i[2].re + PhC.i[2].re

--- Solved equation ---
ground1.pin.iRe[3] := PhA.i[3].re + PhB.i[3].re + PhC.i[3].re

--- Solved equation ---
test_DY.hPin_N.iIm[1] := terminal.i[1].im + z.i[1].im + z1.i[1].im

--- Solved equation ---
ground2.pin.iIm[1] := laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + laptop_adpt_3.loadBase1.i[1].im + (led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im) + (led_driver_3.loadBase1.i[1].im + terminal.i[1].im + (- test_DY.hPin_N.iIm[1]))

--- Solved equation ---
test_DY.hPin_N.iIm[2] := terminal.i[2].im + z.i[2].im + z1.i[2].im

--- Solved equation ---
ground2.pin.iIm[2] := laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + laptop_adpt_3.loadBase1.i[2].im + (led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im) + (led_driver_3.loadBase1.i[2].im + terminal.i[2].im + (- test_DY.hPin_N.iIm[2]))

--- Solved equation ---
test_DY.hPin_N.iIm[3] := terminal.i[3].im + z.i[3].im + z1.i[3].im

--- Solved equation ---
ground2.pin.iIm[3] := laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + laptop_adpt_3.loadBase1.i[3].im + (led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im) + (led_driver_3.loadBase1.i[3].im + terminal.i[3].im + (- test_DY.hPin_N.iIm[3]))

--- Solved equation ---
test_DY.hPin_N.iRe[1] := terminal.i[1].re + z.i[1].re + z1.i[1].re

--- Solved equation ---
ground2.pin.iRe[1] := laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + laptop_adpt_3.loadBase1.i[1].re + (led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re) + (led_driver_3.loadBase1.i[1].re + terminal.i[1].re + (- test_DY.hPin_N.iRe[1]))

--- Solved equation ---
test_DY.hPin_N.iRe[2] := terminal.i[2].re + z.i[2].re + z1.i[2].re

--- Solved equation ---
ground2.pin.iRe[2] := laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + laptop_adpt_3.loadBase1.i[2].re + (led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re) + (led_driver_3.loadBase1.i[2].re + terminal.i[2].re + (- test_DY.hPin_N.iRe[2]))

--- Solved equation ---
test_DY.hPin_N.iRe[3] := terminal.i[3].re + z.i[3].re + z1.i[3].re

--- Solved equation ---
ground2.pin.iRe[3] := laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + laptop_adpt_3.loadBase1.i[3].re + (led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re) + (led_driver_3.loadBase1.i[3].re + terminal.i[3].re + (- test_DY.hPin_N.iRe[3]))

--- Solved equation ---
laptop_adpt_1.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
laptop_adpt_3.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
terminal.omega := der(PhA.theta)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)

--- Solved equation ---
z.omega := der(PhA.theta)

--- Solved equation ---
z1.vFundAbs := (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.vFundArg := Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)

--- Solved equation ---
z1.iFundAbs := (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundArg := Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

--- Solved equation ---
z1.omega := der(PhA.theta)

--- Solved equation ---
laptop_adpt_2.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
led_driver_1.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
led_driver_3.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
led_driver_2.loadBase1.omega := der(PhA.theta)

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

***********************************

--- Unsolved mixed linear system (Block 1) of 18 variables ---
Coefficient variability: constant
Unknown continuous variables:

Solved discrete variables:
  temp_99
  temp_100
  temp_101
  systemDef.eventReadData
  temp_113
  systemDef.eventWriteData
  temp_112
  temp_111
  temp_110
  temp_109
  temp_108
  temp_107
  temp_106
  temp_105
  temp_104
  temp_103
  temp_102
  systemDef.modeSelect

Continuous residual equations:

Discrete equations:
  temp_99 := time > 0.5
  temp_100 := time > 0.25
  temp_101 := time > 0.4
  algorithm
    if temp_99 and not pre(temp_99) then
      systemDef.modeSelect := true;
    end if;
    if temp_100 and not pre(temp_100) then
      systemDef.eventWriteData := true;
    end if;
    if temp_101 and not pre(temp_101) then
      systemDef.eventReadData := true;
    end if;

    Assigned variables: systemDef.eventReadData
  temp_113 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  algorithm
    if temp_99 and not pre(temp_99) then
      systemDef.modeSelect := true;
    end if;
    if temp_100 and not pre(temp_100) then
      systemDef.eventWriteData := true;
    end if;
    if temp_101 and not pre(temp_101) then
      systemDef.eventReadData := true;
    end if;

    Assigned variables: systemDef.eventWriteData
  temp_112 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_111 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_110 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_109 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_108 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_107 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_106 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_105 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_104 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  temp_103 := systemDef.eventReadData <> pre(systemDef.eventReadData)
  temp_102 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)
  algorithm
    if temp_99 and not pre(temp_99) then
      systemDef.modeSelect := true;
    end if;
    if temp_100 and not pre(temp_100) then
      systemDef.eventWriteData := true;
    end if;
    if temp_101 and not pre(temp_101) then
      systemDef.eventReadData := true;
    end if;

    Assigned variables: systemDef.modeSelect

Meta equations:
  algorithm
    if temp_112 and not pre(temp_112) then
    end if;
    if temp_113 and not pre(temp_113) then
    end if;

  algorithm
    if temp_110 and not pre(temp_110) then
    end if;
    if temp_111 and not pre(temp_111) then
    end if;

  algorithm
    if temp_108 and not pre(temp_108) then
    end if;
    if temp_109 and not pre(temp_109) then
    end if;

  algorithm
    if temp_106 and not pre(temp_106) then
    end if;
    if temp_107 and not pre(temp_107) then
    end if;

  algorithm
    if temp_104 and not pre(temp_104) then
    end if;
    if temp_105 and not pre(temp_105) then
    end if;

  algorithm
    if temp_102 and not pre(temp_102) then
    end if;
    if temp_103 and not pre(temp_103) then
    end if;


Jacobian:

--- Solved equation ---
der(PhA.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
PhA.omega := der(PhA.theta)

--- Solved equation ---
der(PhB.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
PhB.omega := der(PhB.theta)

--- Solved equation ---
der(PhC.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
PhC.omega := der(PhC.theta)

--- Torn system (Block 2) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[1].re
  laptop_adpt_1.loadBase1.v[1].re
  laptop_adpt_1.loadBase1.i[1].im
  z.v[1].im
  laptop_adpt_1.loadBase1.v[1].im
  laptop_adpt_1.loadBase1.i[1].re

Iteration variables:
  z.i[1].re (start=0,nominal=1)
  z.i[1].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[1].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[1].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[1].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[1].re (start=0,nominal=1)

Torn equations:
  z.v[1].re := z.z.re .* z.i[1].re + (- z.z.im .* systemDef.hrms[1] .* z.i[1].im)
  laptop_adpt_1.loadBase1.v[1].re := - z.v[1].re + test_DY.idealTransformer2.vSec[1].re
  laptop_adpt_1.loadBase1.i[1].im := - laptop_adpt_2.loadBase1.i[1].im + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + z.i[1].im
  z.v[1].im := z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
  laptop_adpt_1.loadBase1.v[1].im := - z.v[1].im + test_DY.idealTransformer2.vSec[1].im
  laptop_adpt_1.loadBase1.i[1].re := - laptop_adpt_2.loadBase1.i[1].re + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + z.i[1].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z.i[1].re
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z.i[1].im
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: laptop_adpt_2.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_1.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_2.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: laptop_adpt_2.loadBase1.i[1].re
  0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_1.loadBase1.i[1].re
  0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_2.loadBase1.i[1].re

--- Torn system (Block 3) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[2].re
  laptop_adpt_1.loadBase1.v[2].re
  laptop_adpt_1.loadBase1.i[2].im
  z.v[2].im
  laptop_adpt_1.loadBase1.v[2].im
  laptop_adpt_1.loadBase1.i[2].re

Iteration variables:
  z.i[2].re (start=0,nominal=1)
  z.i[2].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[2].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[2].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[2].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[2].re (start=0,nominal=1)

Torn equations:
  z.v[2].re := z.z.re .* z.i[2].re + (- z.z.im .* systemDef.hrms[2] .* z.i[2].im)
  laptop_adpt_1.loadBase1.v[2].re := - z.v[2].re + test_DY.idealTransformer2.vSec[2].re
  laptop_adpt_1.loadBase1.i[2].im := - laptop_adpt_2.loadBase1.i[2].im + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + z.i[2].im
  z.v[2].im := z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
  laptop_adpt_1.loadBase1.v[2].im := - z.v[2].im + test_DY.idealTransformer2.vSec[2].im
  laptop_adpt_1.loadBase1.i[2].re := - laptop_adpt_2.loadBase1.i[2].re + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + z.i[2].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: laptop_adpt_2.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_1.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_2.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: laptop_adpt_2.loadBase1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_1.loadBase1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_2.loadBase1.i[2].re

--- Torn system (Block 4) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[3].re
  laptop_adpt_1.loadBase1.v[3].re
  laptop_adpt_1.loadBase1.i[3].im
  z.v[3].im
  laptop_adpt_1.loadBase1.v[3].im
  laptop_adpt_1.loadBase1.i[3].re

Iteration variables:
  z.i[3].re (start=0,nominal=1)
  z.i[3].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[3].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[3].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[3].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[3].re (start=0,nominal=1)

Torn equations:
  z.v[3].re := z.z.re .* z.i[3].re + (- z.z.im .* systemDef.hrms[3] .* z.i[3].im)
  laptop_adpt_1.loadBase1.v[3].re := - z.v[3].re + test_DY.idealTransformer2.vSec[3].re
  laptop_adpt_1.loadBase1.i[3].im := - laptop_adpt_2.loadBase1.i[3].im + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + z.i[3].im
  z.v[3].im := z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
  laptop_adpt_1.loadBase1.v[3].im := - z.v[3].im + test_DY.idealTransformer2.vSec[3].im
  laptop_adpt_1.loadBase1.i[3].re := - laptop_adpt_2.loadBase1.i[3].re + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + z.i[3].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: laptop_adpt_2.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_1.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_2.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: laptop_adpt_2.loadBase1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_1.loadBase1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_2.loadBase1.i[3].re

--- Solved equation ---
laptop_adpt_1.loadBase1.omega := der(PhA.theta)

--- Torn system (Block 5) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[1].re
  laptop_adpt_3.loadBase1.v[1].re
  laptop_adpt_3.loadBase1.i[1].im
  z1.v[1].im
  laptop_adpt_3.loadBase1.v[1].im
  laptop_adpt_3.loadBase1.i[1].re

Iteration variables:
  z1.i[1].re (start=0,nominal=1)
  z1.i[1].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[1].re (start=0,nominal=1)

Torn equations:
  z1.v[1].re := z1.z.re .* z1.i[1].re + (- z1.z.im .* systemDef.hrms[1] .* z1.i[1].im)
  laptop_adpt_3.loadBase1.v[1].re := - z1.v[1].re + test_DY.idealTransformer3.vSec[1].re
  laptop_adpt_3.loadBase1.i[1].im := - led_driver_3.loadBase1.i[1].im + z1.i[1].im
  z1.v[1].im := z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
  laptop_adpt_3.loadBase1.v[1].im := - z1.v[1].im + test_DY.idealTransformer3.vSec[1].im
  laptop_adpt_3.loadBase1.i[1].re := - led_driver_3.loadBase1.i[1].re + z1.i[1].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z1.i[1].re
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_3.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_3.loadBase1.i[1].re

--- Torn system (Block 6) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[2].re
  laptop_adpt_3.loadBase1.v[2].re
  laptop_adpt_3.loadBase1.i[2].im
  z1.v[2].im
  laptop_adpt_3.loadBase1.v[2].im
  laptop_adpt_3.loadBase1.i[2].re

Iteration variables:
  z1.i[2].re (start=0,nominal=1)
  z1.i[2].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[2].re (start=0,nominal=1)

Torn equations:
  z1.v[2].re := z1.z.re .* z1.i[2].re + (- z1.z.im .* systemDef.hrms[2] .* z1.i[2].im)
  laptop_adpt_3.loadBase1.v[2].re := - z1.v[2].re + test_DY.idealTransformer3.vSec[2].re
  laptop_adpt_3.loadBase1.i[2].im := - led_driver_3.loadBase1.i[2].im + z1.i[2].im
  z1.v[2].im := z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
  laptop_adpt_3.loadBase1.v[2].im := - z1.v[2].im + test_DY.idealTransformer3.vSec[2].im
  laptop_adpt_3.loadBase1.i[2].re := - led_driver_3.loadBase1.i[2].re + z1.i[2].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_3.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_3.loadBase1.i[2].re

--- Torn system (Block 7) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[3].re
  laptop_adpt_3.loadBase1.v[3].re
  laptop_adpt_3.loadBase1.i[3].im
  z1.v[3].im
  laptop_adpt_3.loadBase1.v[3].im
  laptop_adpt_3.loadBase1.i[3].re

Iteration variables:
  z1.i[3].re (start=0,nominal=1)
  z1.i[3].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[3].re (start=0,nominal=1)

Torn equations:
  z1.v[3].re := z1.z.re .* z1.i[3].re + (- z1.z.im .* systemDef.hrms[3] .* z1.i[3].im)
  laptop_adpt_3.loadBase1.v[3].re := - z1.v[3].re + test_DY.idealTransformer3.vSec[3].re
  laptop_adpt_3.loadBase1.i[3].im := - led_driver_3.loadBase1.i[3].im + z1.i[3].im
  z1.v[3].im := z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
  laptop_adpt_3.loadBase1.v[3].im := - z1.v[3].im + test_DY.idealTransformer3.vSec[3].im
  laptop_adpt_3.loadBase1.i[3].re := - led_driver_3.loadBase1.i[3].re + z1.i[3].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_3.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_3.loadBase1.i[3].re

--- Solved equation ---
laptop_adpt_3.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
terminal.omega := der(PhA.theta)

--- Solved equation ---
z.omega := der(PhA.theta)

--- Solved equation ---
z1.omega := der(PhA.theta)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[1].re := z.i[1].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[1].im := z.i[1].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[2].re := z.i[2].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[2].im := z.i[2].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[3].re := z.i[3].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[3].im := z.i[3].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[1].re := z1.i[1].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[1].im := z1.i[1].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[2].re := z1.i[2].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[2].im := z1.i[2].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[3].re := z1.i[3].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[3].im := z1.i[3].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
laptop_adpt_2.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
led_driver_1.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
led_driver_3.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
led_driver_2.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
PhA.i[1].im := - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer2.iPrim[1].im

--- Solved equation ---
PhB.i[1].im := - test_DY.idealTransformer2.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im

--- Solved equation ---
PhC.i[1].im := test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im)

--- Solved equation ---
ground1.pin.iIm[1] := PhA.i[1].im + PhB.i[1].im + PhC.i[1].im

--- Solved equation ---
PhA.i[2].im := - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer2.iPrim[2].im

--- Solved equation ---
PhB.i[2].im := - test_DY.idealTransformer2.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im

--- Solved equation ---
PhC.i[2].im := test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im)

--- Solved equation ---
ground1.pin.iIm[2] := PhA.i[2].im + PhB.i[2].im + PhC.i[2].im

--- Solved equation ---
PhA.i[3].im := - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer2.iPrim[3].im

--- Solved equation ---
PhB.i[3].im := - test_DY.idealTransformer2.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im

--- Solved equation ---
PhC.i[3].im := test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im)

--- Solved equation ---
ground1.pin.iIm[3] := PhA.i[3].im + PhB.i[3].im + PhC.i[3].im

--- Solved equation ---
PhA.i[1].re := - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer2.iPrim[1].re

--- Solved equation ---
PhB.i[1].re := - test_DY.idealTransformer2.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re

--- Solved equation ---
PhC.i[1].re := test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re)

--- Solved equation ---
ground1.pin.iRe[1] := PhA.i[1].re + PhB.i[1].re + PhC.i[1].re

--- Solved equation ---
PhA.i[2].re := - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer2.iPrim[2].re

--- Solved equation ---
PhB.i[2].re := - test_DY.idealTransformer2.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re

--- Solved equation ---
PhC.i[2].re := test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re)

--- Solved equation ---
ground1.pin.iRe[2] := PhA.i[2].re + PhB.i[2].re + PhC.i[2].re

--- Solved equation ---
PhA.i[3].re := - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer2.iPrim[3].re

--- Solved equation ---
PhB.i[3].re := - test_DY.idealTransformer2.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re

--- Solved equation ---
PhC.i[3].re := test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re)

--- Solved equation ---
ground1.pin.iRe[3] := PhA.i[3].re + PhB.i[3].re + PhC.i[3].re

--- Solved equation ---
test_DY.hPin_N.iIm[1] := terminal.i[1].im + z.i[1].im + z1.i[1].im

--- Solved equation ---
ground2.pin.iIm[1] := laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + laptop_adpt_3.loadBase1.i[1].im + (led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im) + (led_driver_3.loadBase1.i[1].im + terminal.i[1].im + (- test_DY.hPin_N.iIm[1]))

--- Solved equation ---
test_DY.hPin_N.iIm[2] := terminal.i[2].im + z.i[2].im + z1.i[2].im

--- Solved equation ---
ground2.pin.iIm[2] := laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + laptop_adpt_3.loadBase1.i[2].im + (led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im) + (led_driver_3.loadBase1.i[2].im + terminal.i[2].im + (- test_DY.hPin_N.iIm[2]))

--- Solved equation ---
test_DY.hPin_N.iIm[3] := terminal.i[3].im + z.i[3].im + z1.i[3].im

--- Solved equation ---
ground2.pin.iIm[3] := laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + laptop_adpt_3.loadBase1.i[3].im + (led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im) + (led_driver_3.loadBase1.i[3].im + terminal.i[3].im + (- test_DY.hPin_N.iIm[3]))

--- Solved equation ---
test_DY.hPin_N.iRe[1] := terminal.i[1].re + z.i[1].re + z1.i[1].re

--- Solved equation ---
ground2.pin.iRe[1] := laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + laptop_adpt_3.loadBase1.i[1].re + (led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re) + (led_driver_3.loadBase1.i[1].re + terminal.i[1].re + (- test_DY.hPin_N.iRe[1]))

--- Solved equation ---
test_DY.hPin_N.iRe[2] := terminal.i[2].re + z.i[2].re + z1.i[2].re

--- Solved equation ---
ground2.pin.iRe[2] := laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + laptop_adpt_3.loadBase1.i[2].re + (led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re) + (led_driver_3.loadBase1.i[2].re + terminal.i[2].re + (- test_DY.hPin_N.iRe[2]))

--- Solved equation ---
test_DY.hPin_N.iRe[3] := terminal.i[3].re + z.i[3].re + z1.i[3].re

--- Solved equation ---
ground2.pin.iRe[3] := laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + laptop_adpt_3.loadBase1.i[3].re + (led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re) + (led_driver_3.loadBase1.i[3].re + terminal.i[3].re + (- test_DY.hPin_N.iRe[3]))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Solved equation ---
PhA.P := PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)

--- Solved equation ---
PhB.P := PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)

--- Solved equation ---
PhC.P := PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)

--- Solved equation ---
z1.vFundAbs := (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.vFundArg := Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)

--- Solved equation ---
z1.iFundAbs := (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundArg := Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
-------------------------------

BiPGraph (175 equations, 185 variables)
Variables: {der(PhA.theta) der(PhB.theta) der(PhC.theta) PhA.P PhA.i[1].re PhA.i[1].im PhA.i[2].re PhA.i[2].im PhA.i[3].re PhA.i[3].im PhA.omega PhB.P PhB.i[1].re PhB.i[1].im PhB.i[2].re PhB.i[2].im PhB.i[3].re PhB.i[3].im PhB.omega PhC.P PhC.i[1].re PhC.i[1].im PhC.i[2].re PhC.i[2].im PhC.i[3].re PhC.i[3].im PhC.omega ground1.pin.iIm[1] ground1.pin.iIm[2] ground1.pin.iIm[3] ground1.pin.iRe[1] ground1.pin.iRe[2] ground1.pin.iRe[3] ground2.pin.iIm[1] ground2.pin.iIm[2] ground2.pin.iIm[3] ground2.pin.iRe[1] ground2.pin.iRe[2] ground2.pin.iRe[3] laptop_adpt_1.loadBase1.v[1].re laptop_adpt_1.loadBase1.v[1].im laptop_adpt_1.loadBase1.v[2].re laptop_adpt_1.loadBase1.v[2].im laptop_adpt_1.loadBase1.v[3].re laptop_adpt_1.loadBase1.v[3].im laptop_adpt_1.loadBase1.i[1].re laptop_adpt_1.loadBase1.i[1].im laptop_adpt_1.loadBase1.i[2].re laptop_adpt_1.loadBase1.i[2].im laptop_adpt_1.loadBase1.i[3].re laptop_adpt_1.loadBase1.i[3].im laptop_adpt_1.loadBase1.omega laptop_adpt_3.loadBase1.v[1].re laptop_adpt_3.loadBase1.v[1].im laptop_adpt_3.loadBase1.v[2].re laptop_adpt_3.loadBase1.v[2].im laptop_adpt_3.loadBase1.v[3].re laptop_adpt_3.loadBase1.v[3].im laptop_adpt_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.omega terminal.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.i[1].re z.i[1].im z.i[2].re z.i[2].im z.i[3].re z.i[3].im z.omega z1.vFundAbs z1.vFundArg z1.iFundAbs z1.iFundArg z1.v[1].re z1.v[1].im z1.v[2].re z1.v[2].im z1.v[3].re z1.v[3].im z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.omega test_DY.idealTransformer2.iPrim[1].re test_DY.idealTransformer2.iPrim[1].im test_DY.idealTransformer2.iPrim[2].re test_DY.idealTransformer2.iPrim[2].im test_DY.idealTransformer2.iPrim[3].re test_DY.idealTransformer2.iPrim[3].im test_DY.idealTransformer3.iPrim[1].re test_DY.idealTransformer3.iPrim[1].im test_DY.idealTransformer3.iPrim[2].re test_DY.idealTransformer3.iPrim[2].im test_DY.idealTransformer3.iPrim[3].re test_DY.idealTransformer3.iPrim[3].im test_DY.hPin_N.iIm[1] test_DY.hPin_N.iIm[2] test_DY.hPin_N.iIm[3] test_DY.hPin_N.iRe[1] test_DY.hPin_N.iRe[2] test_DY.hPin_N.iRe[3] laptop_adpt_2.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].im laptop_adpt_2.loadBase1.omega led_driver_1.loadBase1.i[1].re led_driver_1.loadBase1.i[1].im led_driver_1.loadBase1.i[2].re led_driver_1.loadBase1.i[2].im led_driver_1.loadBase1.i[3].re led_driver_1.loadBase1.i[3].im led_driver_1.loadBase1.omega led_driver_3.loadBase1.i[1].re led_driver_3.loadBase1.i[1].im led_driver_3.loadBase1.i[2].re led_driver_3.loadBase1.i[2].im led_driver_3.loadBase1.i[3].re led_driver_3.loadBase1.i[3].im led_driver_3.loadBase1.omega led_driver_2.loadBase1.i[1].re led_driver_2.loadBase1.i[1].im led_driver_2.loadBase1.i[2].re led_driver_2.loadBase1.i[2].im led_driver_2.loadBase1.i[3].re led_driver_2.loadBase1.i[3].im led_driver_2.loadBase1.omega systemDef.modeSelect systemDef.eventWriteData systemDef.eventReadData temp_99 temp_100 temp_101 temp_102 temp_103 temp_104 temp_105 temp_106 temp_107 temp_108 temp_109 temp_110 temp_111 temp_112 temp_113 PhA.theta PhB.theta PhC.theta pre(systemDef.modeSelect) pre(systemDef.eventWriteData) pre(systemDef.eventReadData) pre(temp_99) pre(temp_100) pre(temp_101) pre(temp_102) pre(temp_103) pre(temp_104) pre(temp_105) pre(temp_106) pre(temp_107) pre(temp_108) pre(temp_109) pre(temp_110) pre(temp_111) pre(temp_112) pre(temp_113) }
eq_1 : temp_99@M // temp_99 = time > 0.5
eq_2 : temp_100@M // temp_100 = time > 0.25
eq_3 : temp_101@M // temp_101 = time > 0.4
eq_5 : der(PhA.theta)@M // der(PhA.theta) = 6.283185307179586 * systemDef.fFund
eq_6 : PhA.omega@M der(PhA.theta)@ // PhA.omega = der(PhA.theta)
eq_7 : der(PhB.theta)@M // der(PhB.theta) = 6.283185307179586 * systemDef.fFund
eq_8 : PhB.omega@M der(PhB.theta)@ // PhB.omega = der(PhB.theta)
eq_9 : der(PhC.theta)@M // der(PhC.theta) = 6.283185307179586 * systemDef.fFund
eq_10 : PhC.omega@M der(PhC.theta)@ // PhC.omega = der(PhC.theta)
eq_11 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@M laptop_adpt_1.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_12 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@M laptop_adpt_1.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_13 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@M laptop_adpt_1.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_14 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@M laptop_adpt_1.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_15 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@M laptop_adpt_1.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_16 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@M laptop_adpt_1.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_17 : temp_102@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_102 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_18 : temp_103@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_103 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_20 : laptop_adpt_1.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_1.loadBase1.omega = der(PhA.theta)
eq_21 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@M laptop_adpt_3.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_22 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@M laptop_adpt_3.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_23 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@M laptop_adpt_3.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_24 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@M laptop_adpt_3.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_25 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@M laptop_adpt_3.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_26 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@M laptop_adpt_3.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_27 : temp_104@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_104 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_28 : temp_105@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_105 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_30 : laptop_adpt_3.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_3.loadBase1.omega = der(PhA.theta)
eq_31 : terminal.omega@M der(PhA.theta)@ // terminal.omega = der(PhA.theta)
eq_32 : z.v[1].re@ z.i[1].re@ z.i[1].im@M // z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im
eq_33 : z.v[2].re@ z.i[2].re@ z.i[2].im@M // z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im
eq_34 : z.v[3].re@ z.i[3].re@ z.i[3].im@M // z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im
eq_35 : z.v[1].im@ z.i[1].im@ z.i[1].re@M // z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
eq_36 : z.v[2].im@ z.i[2].im@ z.i[2].re@M // z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
eq_37 : z.v[3].im@ z.i[3].im@ z.i[3].re@M // z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
eq_38 : z.omega@M der(PhA.theta)@ // z.omega = der(PhA.theta)
eq_39 : z.v[1].re@M laptop_adpt_1.loadBase1.v[1].re@ // z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re
eq_40 : z.v[1].im@M laptop_adpt_1.loadBase1.v[1].im@ // z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im
eq_41 : z.v[2].re@M laptop_adpt_1.loadBase1.v[2].re@ // z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re
eq_42 : z.v[2].im@M laptop_adpt_1.loadBase1.v[2].im@ // z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im
eq_43 : z.v[3].re@M laptop_adpt_1.loadBase1.v[3].re@ // z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re
eq_44 : z.v[3].im@M laptop_adpt_1.loadBase1.v[3].im@ // z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im
eq_45 : z1.v[1].re@ z1.i[1].re@ z1.i[1].im@M // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_46 : z1.v[2].re@ z1.i[2].re@ z1.i[2].im@M // z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_47 : z1.v[3].re@ z1.i[3].re@ z1.i[3].im@M // z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_48 : z1.v[1].im@ z1.i[1].im@ z1.i[1].re@M // z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_49 : z1.v[2].im@ z1.i[2].im@ z1.i[2].re@M // z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_50 : z1.v[3].im@ z1.i[3].im@ z1.i[3].re@M // z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_51 : z1.omega@M der(PhA.theta)@ // z1.omega = der(PhA.theta)
eq_52 : z1.v[1].re@M laptop_adpt_3.loadBase1.v[1].re@ // z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re
eq_53 : z1.v[1].im@M laptop_adpt_3.loadBase1.v[1].im@ // z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im
eq_54 : z1.v[2].re@M laptop_adpt_3.loadBase1.v[2].re@ // z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re
eq_55 : z1.v[2].im@M laptop_adpt_3.loadBase1.v[2].im@ // z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im
eq_56 : z1.v[3].re@M laptop_adpt_3.loadBase1.v[3].re@ // z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re
eq_57 : z1.v[3].im@M laptop_adpt_3.loadBase1.v[3].im@ // z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im
eq_58 : z.i[1].re@ test_DY.idealTransformer2.iPrim[1].re@M // - z.i[1].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].re
eq_59 : z.i[1].im@ test_DY.idealTransformer2.iPrim[1].im@M // - z.i[1].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].im
eq_60 : z.i[2].re@ test_DY.idealTransformer2.iPrim[2].re@M // - z.i[2].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].re
eq_61 : z.i[2].im@ test_DY.idealTransformer2.iPrim[2].im@M // - z.i[2].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].im
eq_62 : z.i[3].re@ test_DY.idealTransformer2.iPrim[3].re@M // - z.i[3].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].re
eq_63 : z.i[3].im@ test_DY.idealTransformer2.iPrim[3].im@M // - z.i[3].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].im
eq_64 : z1.i[1].re@ test_DY.idealTransformer3.iPrim[1].re@M // - z1.i[1].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].re
eq_65 : z1.i[1].im@ test_DY.idealTransformer3.iPrim[1].im@M // - z1.i[1].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].im
eq_66 : z1.i[2].re@ test_DY.idealTransformer3.iPrim[2].re@M // - z1.i[2].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].re
eq_67 : z1.i[2].im@ test_DY.idealTransformer3.iPrim[2].im@M // - z1.i[2].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].im
eq_68 : z1.i[3].re@ test_DY.idealTransformer3.iPrim[3].re@M // - z1.i[3].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].re
eq_69 : z1.i[3].im@ test_DY.idealTransformer3.iPrim[3].im@M // - z1.i[3].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].im
eq_70 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ laptop_adpt_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_71 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ laptop_adpt_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_72 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ laptop_adpt_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_73 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ laptop_adpt_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_74 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ laptop_adpt_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_75 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ laptop_adpt_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_76 : temp_106@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_106 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_77 : temp_107@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_107 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_79 : laptop_adpt_2.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_2.loadBase1.omega = der(PhA.theta)
eq_80 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_1.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_81 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_1.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_82 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_1.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_83 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_1.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_84 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_1.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_85 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_1.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_86 : temp_108@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_108 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_87 : temp_109@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_109 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_89 : led_driver_1.loadBase1.omega@M der(PhA.theta)@ // led_driver_1.loadBase1.omega = der(PhA.theta)
eq_90 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@ led_driver_3.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_91 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@ led_driver_3.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_92 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@ led_driver_3.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_93 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@ led_driver_3.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_94 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@ led_driver_3.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_95 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@ led_driver_3.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_96 : temp_110@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_110 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_97 : temp_111@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_111 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_99 : led_driver_3.loadBase1.omega@M der(PhA.theta)@ // led_driver_3.loadBase1.omega = der(PhA.theta)
eq_100 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_101 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_102 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_103 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_104 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_105 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_106 : temp_112@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_112 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_107 : temp_113@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_113 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_109 : led_driver_2.loadBase1.omega@M der(PhA.theta)@ // led_driver_2.loadBase1.omega = der(PhA.theta)
eq_110 : PhA.i[1].im@ PhB.i[1].im@ PhC.i[1].im@ ground1.pin.iIm[1]@M // - PhA.i[1].im + (- PhB.i[1].im) + (- PhC.i[1].im) + ground1.pin.iIm[1] = 0
eq_111 : PhA.i[2].im@ PhB.i[2].im@ PhC.i[2].im@ ground1.pin.iIm[2]@M // - PhA.i[2].im + (- PhB.i[2].im) + (- PhC.i[2].im) + ground1.pin.iIm[2] = 0
eq_112 : PhA.i[3].im@ PhB.i[3].im@ PhC.i[3].im@ ground1.pin.iIm[3]@M // - PhA.i[3].im + (- PhB.i[3].im) + (- PhC.i[3].im) + ground1.pin.iIm[3] = 0
eq_113 : PhA.i[1].re@ PhB.i[1].re@ PhC.i[1].re@ ground1.pin.iRe[1]@M // - PhA.i[1].re + (- PhB.i[1].re) + (- PhC.i[1].re) + ground1.pin.iRe[1] = 0
eq_114 : PhA.i[2].re@ PhB.i[2].re@ PhC.i[2].re@ ground1.pin.iRe[2]@M // - PhA.i[2].re + (- PhB.i[2].re) + (- PhC.i[2].re) + ground1.pin.iRe[2] = 0
eq_115 : PhA.i[3].re@ PhB.i[3].re@ PhC.i[3].re@ ground1.pin.iRe[3]@M // - PhA.i[3].re + (- PhB.i[3].re) + (- PhC.i[3].re) + ground1.pin.iRe[3] = 0
eq_116 : laptop_adpt_1.loadBase1.i[1].im@M laptop_adpt_2.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ z.i[1].im@ // laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0
eq_117 : laptop_adpt_1.loadBase1.i[2].im@M laptop_adpt_2.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ z.i[2].im@ // laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0
eq_118 : laptop_adpt_1.loadBase1.i[3].im@M laptop_adpt_2.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ z.i[3].im@ // laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0
eq_119 : laptop_adpt_1.loadBase1.i[1].re@M laptop_adpt_2.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ z.i[1].re@ // laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0
eq_120 : laptop_adpt_1.loadBase1.i[2].re@M laptop_adpt_2.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ z.i[2].re@ // laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0
eq_121 : laptop_adpt_1.loadBase1.i[3].re@M laptop_adpt_2.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ z.i[3].re@ // laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0
eq_122 : laptop_adpt_3.loadBase1.i[1].im@M led_driver_3.loadBase1.i[1].im@ z1.i[1].im@ // laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0
eq_123 : laptop_adpt_3.loadBase1.i[2].im@M led_driver_3.loadBase1.i[2].im@ z1.i[2].im@ // laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0
eq_124 : laptop_adpt_3.loadBase1.i[3].im@M led_driver_3.loadBase1.i[3].im@ z1.i[3].im@ // laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0
eq_125 : laptop_adpt_3.loadBase1.i[1].re@M led_driver_3.loadBase1.i[1].re@ z1.i[1].re@ // laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0
eq_126 : laptop_adpt_3.loadBase1.i[2].re@M led_driver_3.loadBase1.i[2].re@ z1.i[2].re@ // laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0
eq_127 : laptop_adpt_3.loadBase1.i[3].re@M led_driver_3.loadBase1.i[3].re@ z1.i[3].re@ // laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0
eq_128 : ground2.pin.iIm[1]@M laptop_adpt_1.loadBase1.i[1].im@ laptop_adpt_2.loadBase1.i[1].im@ laptop_adpt_3.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ led_driver_3.loadBase1.i[1].im@ test_DY.hPin_N.iIm[1]@ // ground2.pin.iIm[1] + (- laptop_adpt_1.loadBase1.i[1].im) + (- laptop_adpt_2.loadBase1.i[1].im) + (- laptop_adpt_3.loadBase1.i[1].im) + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + (- led_driver_3.loadBase1.i[1].im) + (- terminal.i[1].im) + test_DY.hPin_N.iIm[1] = 0
eq_129 : ground2.pin.iIm[2]@M laptop_adpt_1.loadBase1.i[2].im@ laptop_adpt_2.loadBase1.i[2].im@ laptop_adpt_3.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ led_driver_3.loadBase1.i[2].im@ test_DY.hPin_N.iIm[2]@ // ground2.pin.iIm[2] + (- laptop_adpt_1.loadBase1.i[2].im) + (- laptop_adpt_2.loadBase1.i[2].im) + (- laptop_adpt_3.loadBase1.i[2].im) + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + (- led_driver_3.loadBase1.i[2].im) + (- terminal.i[2].im) + test_DY.hPin_N.iIm[2] = 0
eq_130 : ground2.pin.iIm[3]@M laptop_adpt_1.loadBase1.i[3].im@ laptop_adpt_2.loadBase1.i[3].im@ laptop_adpt_3.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ led_driver_3.loadBase1.i[3].im@ test_DY.hPin_N.iIm[3]@ // ground2.pin.iIm[3] + (- laptop_adpt_1.loadBase1.i[3].im) + (- laptop_adpt_2.loadBase1.i[3].im) + (- laptop_adpt_3.loadBase1.i[3].im) + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + (- led_driver_3.loadBase1.i[3].im) + (- terminal.i[3].im) + test_DY.hPin_N.iIm[3] = 0
eq_131 : ground2.pin.iRe[1]@M laptop_adpt_1.loadBase1.i[1].re@ laptop_adpt_2.loadBase1.i[1].re@ laptop_adpt_3.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ led_driver_3.loadBase1.i[1].re@ test_DY.hPin_N.iRe[1]@ // ground2.pin.iRe[1] + (- laptop_adpt_1.loadBase1.i[1].re) + (- laptop_adpt_2.loadBase1.i[1].re) + (- laptop_adpt_3.loadBase1.i[1].re) + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + (- led_driver_3.loadBase1.i[1].re) + (- terminal.i[1].re) + test_DY.hPin_N.iRe[1] = 0
eq_132 : ground2.pin.iRe[2]@M laptop_adpt_1.loadBase1.i[2].re@ laptop_adpt_2.loadBase1.i[2].re@ laptop_adpt_3.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ led_driver_3.loadBase1.i[2].re@ test_DY.hPin_N.iRe[2]@ // ground2.pin.iRe[2] + (- laptop_adpt_1.loadBase1.i[2].re) + (- laptop_adpt_2.loadBase1.i[2].re) + (- laptop_adpt_3.loadBase1.i[2].re) + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + (- led_driver_3.loadBase1.i[2].re) + (- terminal.i[2].re) + test_DY.hPin_N.iRe[2] = 0
eq_133 : ground2.pin.iRe[3]@M laptop_adpt_1.loadBase1.i[3].re@ laptop_adpt_2.loadBase1.i[3].re@ laptop_adpt_3.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ led_driver_3.loadBase1.i[3].re@ test_DY.hPin_N.iRe[3]@ // ground2.pin.iRe[3] + (- laptop_adpt_1.loadBase1.i[3].re) + (- laptop_adpt_2.loadBase1.i[3].re) + (- laptop_adpt_3.loadBase1.i[3].re) + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + (- led_driver_3.loadBase1.i[3].re) + (- terminal.i[3].re) + test_DY.hPin_N.iRe[3] = 0
eq_134 : test_DY.idealTransformer2.iPrim[1].im@ PhA.i[1].im@M // test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer2.iPrim[1].im) + PhA.i[1].im = 0
eq_135 : test_DY.idealTransformer2.iPrim[2].im@ PhA.i[2].im@M // test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer2.iPrim[2].im) + PhA.i[2].im = 0
eq_136 : test_DY.idealTransformer2.iPrim[3].im@ PhA.i[3].im@M // test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer2.iPrim[3].im) + PhA.i[3].im = 0
eq_137 : test_DY.idealTransformer2.iPrim[1].re@ PhA.i[1].re@M // test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer2.iPrim[1].re) + PhA.i[1].re = 0
eq_138 : test_DY.idealTransformer2.iPrim[2].re@ PhA.i[2].re@M // test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer2.iPrim[2].re) + PhA.i[2].re = 0
eq_139 : test_DY.idealTransformer2.iPrim[3].re@ PhA.i[3].re@M // test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer2.iPrim[3].re) + PhA.i[3].re = 0
eq_140 : test_DY.idealTransformer3.iPrim[1].im@ PhC.i[1].im@M // - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im + PhC.i[1].im = 0
eq_141 : test_DY.idealTransformer3.iPrim[2].im@ PhC.i[2].im@M // - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im + PhC.i[2].im = 0
eq_142 : test_DY.idealTransformer3.iPrim[3].im@ PhC.i[3].im@M // - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im + PhC.i[3].im = 0
eq_143 : test_DY.idealTransformer3.iPrim[1].re@ PhC.i[1].re@M // - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re + PhC.i[1].re = 0
eq_144 : test_DY.idealTransformer3.iPrim[2].re@ PhC.i[2].re@M // - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re + PhC.i[2].re = 0
eq_145 : test_DY.idealTransformer3.iPrim[3].re@ PhC.i[3].re@M // - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re + PhC.i[3].re = 0
eq_146 : test_DY.idealTransformer2.iPrim[1].im@ test_DY.idealTransformer3.iPrim[1].im@ PhB.i[1].im@M // test_DY.idealTransformer2.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im) + PhB.i[1].im = 0
eq_147 : test_DY.idealTransformer2.iPrim[2].im@ test_DY.idealTransformer3.iPrim[2].im@ PhB.i[2].im@M // test_DY.idealTransformer2.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im) + PhB.i[2].im = 0
eq_148 : test_DY.idealTransformer2.iPrim[3].im@ test_DY.idealTransformer3.iPrim[3].im@ PhB.i[3].im@M // test_DY.idealTransformer2.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im) + PhB.i[3].im = 0
eq_149 : test_DY.idealTransformer2.iPrim[1].re@ test_DY.idealTransformer3.iPrim[1].re@ PhB.i[1].re@M // test_DY.idealTransformer2.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re) + PhB.i[1].re = 0
eq_150 : test_DY.idealTransformer2.iPrim[2].re@ test_DY.idealTransformer3.iPrim[2].re@ PhB.i[2].re@M // test_DY.idealTransformer2.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re) + PhB.i[2].re = 0
eq_151 : test_DY.idealTransformer2.iPrim[3].re@ test_DY.idealTransformer3.iPrim[3].re@ PhB.i[3].re@M // test_DY.idealTransformer2.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re) + PhB.i[3].re = 0
eq_152 : test_DY.hPin_N.iIm[1]@M z.i[1].im@ z1.i[1].im@ // - test_DY.hPin_N.iIm[1] + terminal.i[1].im + z.i[1].im + z1.i[1].im = 0
eq_153 : test_DY.hPin_N.iIm[2]@M z.i[2].im@ z1.i[2].im@ // - test_DY.hPin_N.iIm[2] + terminal.i[2].im + z.i[2].im + z1.i[2].im = 0
eq_154 : test_DY.hPin_N.iIm[3]@M z.i[3].im@ z1.i[3].im@ // - test_DY.hPin_N.iIm[3] + terminal.i[3].im + z.i[3].im + z1.i[3].im = 0
eq_155 : test_DY.hPin_N.iRe[1]@M z.i[1].re@ z1.i[1].re@ // - test_DY.hPin_N.iRe[1] + terminal.i[1].re + z.i[1].re + z1.i[1].re = 0
eq_156 : test_DY.hPin_N.iRe[2]@M z.i[2].re@ z1.i[2].re@ // - test_DY.hPin_N.iRe[2] + terminal.i[2].re + z.i[2].re + z1.i[2].re = 0
eq_157 : test_DY.hPin_N.iRe[3]@M z.i[3].re@ z1.i[3].re@ // - test_DY.hPin_N.iRe[3] + terminal.i[3].re + z.i[3].re + z1.i[3].re = 0
eq_158 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_159 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_160 : PhA.theta# PhC.theta# // HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))
eq_161 : PhB.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_162 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_163 : PhB.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_164 : PhC.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))
eq_165 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_166 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_167 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_168 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_169 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_170 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_171 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_172 : PhA.P@M PhA.i[1].re@ PhA.i[2].re@ PhA.i[3].re@ PhA.i[1].im@ PhA.i[2].im@ PhA.i[3].im@ // PhA.P = PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)
eq_173 : PhB.P@M PhB.i[1].re@ PhB.i[2].re@ PhB.i[3].re@ PhB.i[1].im@ PhB.i[2].im@ PhB.i[3].im@ // PhB.P = PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)
eq_174 : PhC.P@M PhC.i[1].re@ PhC.i[2].re@ PhC.i[3].re@ PhC.i[1].im@ PhC.i[2].im@ PhC.i[3].im@ // PhC.P = PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)
eq_175 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_176 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_177 : z.iFundAbs@M z.i[1].re@ z.i[1].im@ // z.iFundAbs = (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5
eq_178 : z.iFundArg@M z.i[1].im@ z.i[1].re@ // z.iFundArg = Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)
eq_179 : z1.vFundAbs@M z1.v[1].re@ z1.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5
eq_180 : z1.vFundArg@M z1.v[1].im@ z1.v[1].re@ // z1.vFundArg = Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)
eq_181 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_182 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

Init DAE BiPGraph
BiPGraph (176 equations, 185 variables)
Variables: {der(PhA.theta) der(PhB.theta) der(PhC.theta) PhA.P PhA.i[1].re PhA.i[1].im PhA.i[2].re PhA.i[2].im PhA.i[3].re PhA.i[3].im PhA.omega PhB.P PhB.i[1].re PhB.i[1].im PhB.i[2].re PhB.i[2].im PhB.i[3].re PhB.i[3].im PhB.omega PhC.P PhC.i[1].re PhC.i[1].im PhC.i[2].re PhC.i[2].im PhC.i[3].re PhC.i[3].im PhC.omega ground1.pin.iIm[1] ground1.pin.iIm[2] ground1.pin.iIm[3] ground1.pin.iRe[1] ground1.pin.iRe[2] ground1.pin.iRe[3] ground2.pin.iIm[1] ground2.pin.iIm[2] ground2.pin.iIm[3] ground2.pin.iRe[1] ground2.pin.iRe[2] ground2.pin.iRe[3] laptop_adpt_1.loadBase1.v[1].re laptop_adpt_1.loadBase1.v[1].im laptop_adpt_1.loadBase1.v[2].re laptop_adpt_1.loadBase1.v[2].im laptop_adpt_1.loadBase1.v[3].re laptop_adpt_1.loadBase1.v[3].im laptop_adpt_1.loadBase1.i[1].re laptop_adpt_1.loadBase1.i[1].im laptop_adpt_1.loadBase1.i[2].re laptop_adpt_1.loadBase1.i[2].im laptop_adpt_1.loadBase1.i[3].re laptop_adpt_1.loadBase1.i[3].im laptop_adpt_1.loadBase1.omega laptop_adpt_3.loadBase1.v[1].re laptop_adpt_3.loadBase1.v[1].im laptop_adpt_3.loadBase1.v[2].re laptop_adpt_3.loadBase1.v[2].im laptop_adpt_3.loadBase1.v[3].re laptop_adpt_3.loadBase1.v[3].im laptop_adpt_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.omega terminal.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.i[1].re z.i[1].im z.i[2].re z.i[2].im z.i[3].re z.i[3].im z.omega z1.vFundAbs z1.vFundArg z1.iFundAbs z1.iFundArg z1.v[1].re z1.v[1].im z1.v[2].re z1.v[2].im z1.v[3].re z1.v[3].im z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.omega test_DY.idealTransformer2.iPrim[1].re test_DY.idealTransformer2.iPrim[1].im test_DY.idealTransformer2.iPrim[2].re test_DY.idealTransformer2.iPrim[2].im test_DY.idealTransformer2.iPrim[3].re test_DY.idealTransformer2.iPrim[3].im test_DY.idealTransformer3.iPrim[1].re test_DY.idealTransformer3.iPrim[1].im test_DY.idealTransformer3.iPrim[2].re test_DY.idealTransformer3.iPrim[2].im test_DY.idealTransformer3.iPrim[3].re test_DY.idealTransformer3.iPrim[3].im test_DY.hPin_N.iIm[1] test_DY.hPin_N.iIm[2] test_DY.hPin_N.iIm[3] test_DY.hPin_N.iRe[1] test_DY.hPin_N.iRe[2] test_DY.hPin_N.iRe[3] laptop_adpt_2.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].im laptop_adpt_2.loadBase1.omega led_driver_1.loadBase1.i[1].re led_driver_1.loadBase1.i[1].im led_driver_1.loadBase1.i[2].re led_driver_1.loadBase1.i[2].im led_driver_1.loadBase1.i[3].re led_driver_1.loadBase1.i[3].im led_driver_1.loadBase1.omega led_driver_3.loadBase1.i[1].re led_driver_3.loadBase1.i[1].im led_driver_3.loadBase1.i[2].re led_driver_3.loadBase1.i[2].im led_driver_3.loadBase1.i[3].re led_driver_3.loadBase1.i[3].im led_driver_3.loadBase1.omega led_driver_2.loadBase1.i[1].re led_driver_2.loadBase1.i[1].im led_driver_2.loadBase1.i[2].re led_driver_2.loadBase1.i[2].im led_driver_2.loadBase1.i[3].re led_driver_2.loadBase1.i[3].im led_driver_2.loadBase1.omega systemDef.modeSelect systemDef.eventWriteData systemDef.eventReadData temp_99 temp_100 temp_101 temp_102 temp_103 temp_104 temp_105 temp_106 temp_107 temp_108 temp_109 temp_110 temp_111 temp_112 temp_113 PhA.theta PhB.theta PhC.theta pre(systemDef.modeSelect) pre(systemDef.eventWriteData) pre(systemDef.eventReadData) pre(temp_99) pre(temp_100) pre(temp_101) pre(temp_102) pre(temp_103) pre(temp_104) pre(temp_105) pre(temp_106) pre(temp_107) pre(temp_108) pre(temp_109) pre(temp_110) pre(temp_111) pre(temp_112) pre(temp_113) }
eq_1 : temp_99@M // temp_99 = time > 0.5
eq_2 : temp_100@M // temp_100 = time > 0.25
eq_3 : temp_101@M // temp_101 = time > 0.4
eq_5 : der(PhA.theta)@M // der(PhA.theta) = 6.283185307179586 * systemDef.fFund
eq_6 : PhA.omega@M der(PhA.theta)@ // PhA.omega = der(PhA.theta)
eq_7 : der(PhB.theta)@M // der(PhB.theta) = 6.283185307179586 * systemDef.fFund
eq_8 : PhB.omega@M der(PhB.theta)@ // PhB.omega = der(PhB.theta)
eq_9 : der(PhC.theta)@M // der(PhC.theta) = 6.283185307179586 * systemDef.fFund
eq_10 : PhC.omega@M der(PhC.theta)@ // PhC.omega = der(PhC.theta)
eq_11 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@M laptop_adpt_1.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_12 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@M laptop_adpt_1.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_13 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@M laptop_adpt_1.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_14 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@M laptop_adpt_1.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_15 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@M laptop_adpt_1.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_16 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@M laptop_adpt_1.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_17 : temp_102@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_102 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_18 : temp_103@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_103 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_20 : laptop_adpt_1.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_1.loadBase1.omega = der(PhA.theta)
eq_21 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@M laptop_adpt_3.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_22 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@M laptop_adpt_3.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_23 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@M laptop_adpt_3.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_24 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@M laptop_adpt_3.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_25 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@M laptop_adpt_3.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_26 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@M laptop_adpt_3.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_27 : temp_104@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_104 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_28 : temp_105@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_105 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_30 : laptop_adpt_3.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_3.loadBase1.omega = der(PhA.theta)
eq_31 : terminal.omega@M der(PhA.theta)@ // terminal.omega = der(PhA.theta)
eq_32 : z.v[1].re@ z.i[1].re@ z.i[1].im@M // z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im
eq_33 : z.v[2].re@ z.i[2].re@ z.i[2].im@M // z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im
eq_34 : z.v[3].re@ z.i[3].re@ z.i[3].im@M // z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im
eq_35 : z.v[1].im@ z.i[1].im@ z.i[1].re@M // z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
eq_36 : z.v[2].im@ z.i[2].im@ z.i[2].re@M // z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
eq_37 : z.v[3].im@ z.i[3].im@ z.i[3].re@M // z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
eq_38 : z.omega@M der(PhA.theta)@ // z.omega = der(PhA.theta)
eq_39 : z.v[1].re@M laptop_adpt_1.loadBase1.v[1].re@ // z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re
eq_40 : z.v[1].im@M laptop_adpt_1.loadBase1.v[1].im@ // z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im
eq_41 : z.v[2].re@M laptop_adpt_1.loadBase1.v[2].re@ // z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re
eq_42 : z.v[2].im@M laptop_adpt_1.loadBase1.v[2].im@ // z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im
eq_43 : z.v[3].re@M laptop_adpt_1.loadBase1.v[3].re@ // z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re
eq_44 : z.v[3].im@M laptop_adpt_1.loadBase1.v[3].im@ // z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im
eq_45 : z1.v[1].re@ z1.i[1].re@ z1.i[1].im@M // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_46 : z1.v[2].re@ z1.i[2].re@ z1.i[2].im@M // z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_47 : z1.v[3].re@ z1.i[3].re@ z1.i[3].im@M // z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_48 : z1.v[1].im@ z1.i[1].im@ z1.i[1].re@M // z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_49 : z1.v[2].im@ z1.i[2].im@ z1.i[2].re@M // z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_50 : z1.v[3].im@ z1.i[3].im@ z1.i[3].re@M // z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_51 : z1.omega@M der(PhA.theta)@ // z1.omega = der(PhA.theta)
eq_52 : z1.v[1].re@M laptop_adpt_3.loadBase1.v[1].re@ // z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re
eq_53 : z1.v[1].im@M laptop_adpt_3.loadBase1.v[1].im@ // z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im
eq_54 : z1.v[2].re@M laptop_adpt_3.loadBase1.v[2].re@ // z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re
eq_55 : z1.v[2].im@M laptop_adpt_3.loadBase1.v[2].im@ // z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im
eq_56 : z1.v[3].re@M laptop_adpt_3.loadBase1.v[3].re@ // z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re
eq_57 : z1.v[3].im@M laptop_adpt_3.loadBase1.v[3].im@ // z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im
eq_58 : z.i[1].re@ test_DY.idealTransformer2.iPrim[1].re@M // - z.i[1].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].re
eq_59 : z.i[1].im@ test_DY.idealTransformer2.iPrim[1].im@M // - z.i[1].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].im
eq_60 : z.i[2].re@ test_DY.idealTransformer2.iPrim[2].re@M // - z.i[2].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].re
eq_61 : z.i[2].im@ test_DY.idealTransformer2.iPrim[2].im@M // - z.i[2].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].im
eq_62 : z.i[3].re@ test_DY.idealTransformer2.iPrim[3].re@M // - z.i[3].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].re
eq_63 : z.i[3].im@ test_DY.idealTransformer2.iPrim[3].im@M // - z.i[3].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].im
eq_64 : z1.i[1].re@ test_DY.idealTransformer3.iPrim[1].re@M // - z1.i[1].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].re
eq_65 : z1.i[1].im@ test_DY.idealTransformer3.iPrim[1].im@M // - z1.i[1].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].im
eq_66 : z1.i[2].re@ test_DY.idealTransformer3.iPrim[2].re@M // - z1.i[2].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].re
eq_67 : z1.i[2].im@ test_DY.idealTransformer3.iPrim[2].im@M // - z1.i[2].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].im
eq_68 : z1.i[3].re@ test_DY.idealTransformer3.iPrim[3].re@M // - z1.i[3].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].re
eq_69 : z1.i[3].im@ test_DY.idealTransformer3.iPrim[3].im@M // - z1.i[3].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].im
eq_70 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ laptop_adpt_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_71 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ laptop_adpt_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_72 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ laptop_adpt_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_73 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ laptop_adpt_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_74 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ laptop_adpt_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_75 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ laptop_adpt_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_76 : temp_106@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_106 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_77 : temp_107@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_107 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_79 : laptop_adpt_2.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_2.loadBase1.omega = der(PhA.theta)
eq_80 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_1.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_81 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_1.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_82 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_1.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_83 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_1.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_84 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_1.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_85 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_1.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_86 : temp_108@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_108 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_87 : temp_109@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_109 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_89 : led_driver_1.loadBase1.omega@M der(PhA.theta)@ // led_driver_1.loadBase1.omega = der(PhA.theta)
eq_90 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@ led_driver_3.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_91 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@ led_driver_3.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_92 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@ led_driver_3.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_93 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@ led_driver_3.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_94 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@ led_driver_3.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_95 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@ led_driver_3.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_96 : temp_110@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_110 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_97 : temp_111@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_111 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_99 : led_driver_3.loadBase1.omega@M der(PhA.theta)@ // led_driver_3.loadBase1.omega = der(PhA.theta)
eq_100 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_101 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_102 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_103 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_104 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_105 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_106 : temp_112@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_112 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_107 : temp_113@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_113 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_109 : led_driver_2.loadBase1.omega@M der(PhA.theta)@ // led_driver_2.loadBase1.omega = der(PhA.theta)
eq_110 : PhA.i[1].im@ PhB.i[1].im@ PhC.i[1].im@ ground1.pin.iIm[1]@M // - PhA.i[1].im + (- PhB.i[1].im) + (- PhC.i[1].im) + ground1.pin.iIm[1] = 0
eq_111 : PhA.i[2].im@ PhB.i[2].im@ PhC.i[2].im@ ground1.pin.iIm[2]@M // - PhA.i[2].im + (- PhB.i[2].im) + (- PhC.i[2].im) + ground1.pin.iIm[2] = 0
eq_112 : PhA.i[3].im@ PhB.i[3].im@ PhC.i[3].im@ ground1.pin.iIm[3]@M // - PhA.i[3].im + (- PhB.i[3].im) + (- PhC.i[3].im) + ground1.pin.iIm[3] = 0
eq_113 : PhA.i[1].re@ PhB.i[1].re@ PhC.i[1].re@ ground1.pin.iRe[1]@M // - PhA.i[1].re + (- PhB.i[1].re) + (- PhC.i[1].re) + ground1.pin.iRe[1] = 0
eq_114 : PhA.i[2].re@ PhB.i[2].re@ PhC.i[2].re@ ground1.pin.iRe[2]@M // - PhA.i[2].re + (- PhB.i[2].re) + (- PhC.i[2].re) + ground1.pin.iRe[2] = 0
eq_115 : PhA.i[3].re@ PhB.i[3].re@ PhC.i[3].re@ ground1.pin.iRe[3]@M // - PhA.i[3].re + (- PhB.i[3].re) + (- PhC.i[3].re) + ground1.pin.iRe[3] = 0
eq_116 : laptop_adpt_1.loadBase1.i[1].im@M laptop_adpt_2.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ z.i[1].im@ // laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0
eq_117 : laptop_adpt_1.loadBase1.i[2].im@M laptop_adpt_2.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ z.i[2].im@ // laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0
eq_118 : laptop_adpt_1.loadBase1.i[3].im@M laptop_adpt_2.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ z.i[3].im@ // laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0
eq_119 : laptop_adpt_1.loadBase1.i[1].re@M laptop_adpt_2.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ z.i[1].re@ // laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0
eq_120 : laptop_adpt_1.loadBase1.i[2].re@M laptop_adpt_2.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ z.i[2].re@ // laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0
eq_121 : laptop_adpt_1.loadBase1.i[3].re@M laptop_adpt_2.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ z.i[3].re@ // laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0
eq_122 : laptop_adpt_3.loadBase1.i[1].im@M led_driver_3.loadBase1.i[1].im@ z1.i[1].im@ // laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0
eq_123 : laptop_adpt_3.loadBase1.i[2].im@M led_driver_3.loadBase1.i[2].im@ z1.i[2].im@ // laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0
eq_124 : laptop_adpt_3.loadBase1.i[3].im@M led_driver_3.loadBase1.i[3].im@ z1.i[3].im@ // laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0
eq_125 : laptop_adpt_3.loadBase1.i[1].re@M led_driver_3.loadBase1.i[1].re@ z1.i[1].re@ // laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0
eq_126 : laptop_adpt_3.loadBase1.i[2].re@M led_driver_3.loadBase1.i[2].re@ z1.i[2].re@ // laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0
eq_127 : laptop_adpt_3.loadBase1.i[3].re@M led_driver_3.loadBase1.i[3].re@ z1.i[3].re@ // laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0
eq_128 : ground2.pin.iIm[1]@M laptop_adpt_1.loadBase1.i[1].im@ laptop_adpt_2.loadBase1.i[1].im@ laptop_adpt_3.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ led_driver_3.loadBase1.i[1].im@ test_DY.hPin_N.iIm[1]@ // ground2.pin.iIm[1] + (- laptop_adpt_1.loadBase1.i[1].im) + (- laptop_adpt_2.loadBase1.i[1].im) + (- laptop_adpt_3.loadBase1.i[1].im) + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + (- led_driver_3.loadBase1.i[1].im) + (- terminal.i[1].im) + test_DY.hPin_N.iIm[1] = 0
eq_129 : ground2.pin.iIm[2]@M laptop_adpt_1.loadBase1.i[2].im@ laptop_adpt_2.loadBase1.i[2].im@ laptop_adpt_3.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ led_driver_3.loadBase1.i[2].im@ test_DY.hPin_N.iIm[2]@ // ground2.pin.iIm[2] + (- laptop_adpt_1.loadBase1.i[2].im) + (- laptop_adpt_2.loadBase1.i[2].im) + (- laptop_adpt_3.loadBase1.i[2].im) + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + (- led_driver_3.loadBase1.i[2].im) + (- terminal.i[2].im) + test_DY.hPin_N.iIm[2] = 0
eq_130 : ground2.pin.iIm[3]@M laptop_adpt_1.loadBase1.i[3].im@ laptop_adpt_2.loadBase1.i[3].im@ laptop_adpt_3.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ led_driver_3.loadBase1.i[3].im@ test_DY.hPin_N.iIm[3]@ // ground2.pin.iIm[3] + (- laptop_adpt_1.loadBase1.i[3].im) + (- laptop_adpt_2.loadBase1.i[3].im) + (- laptop_adpt_3.loadBase1.i[3].im) + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + (- led_driver_3.loadBase1.i[3].im) + (- terminal.i[3].im) + test_DY.hPin_N.iIm[3] = 0
eq_131 : ground2.pin.iRe[1]@M laptop_adpt_1.loadBase1.i[1].re@ laptop_adpt_2.loadBase1.i[1].re@ laptop_adpt_3.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ led_driver_3.loadBase1.i[1].re@ test_DY.hPin_N.iRe[1]@ // ground2.pin.iRe[1] + (- laptop_adpt_1.loadBase1.i[1].re) + (- laptop_adpt_2.loadBase1.i[1].re) + (- laptop_adpt_3.loadBase1.i[1].re) + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + (- led_driver_3.loadBase1.i[1].re) + (- terminal.i[1].re) + test_DY.hPin_N.iRe[1] = 0
eq_132 : ground2.pin.iRe[2]@M laptop_adpt_1.loadBase1.i[2].re@ laptop_adpt_2.loadBase1.i[2].re@ laptop_adpt_3.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ led_driver_3.loadBase1.i[2].re@ test_DY.hPin_N.iRe[2]@ // ground2.pin.iRe[2] + (- laptop_adpt_1.loadBase1.i[2].re) + (- laptop_adpt_2.loadBase1.i[2].re) + (- laptop_adpt_3.loadBase1.i[2].re) + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + (- led_driver_3.loadBase1.i[2].re) + (- terminal.i[2].re) + test_DY.hPin_N.iRe[2] = 0
eq_133 : ground2.pin.iRe[3]@M laptop_adpt_1.loadBase1.i[3].re@ laptop_adpt_2.loadBase1.i[3].re@ laptop_adpt_3.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ led_driver_3.loadBase1.i[3].re@ test_DY.hPin_N.iRe[3]@ // ground2.pin.iRe[3] + (- laptop_adpt_1.loadBase1.i[3].re) + (- laptop_adpt_2.loadBase1.i[3].re) + (- laptop_adpt_3.loadBase1.i[3].re) + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + (- led_driver_3.loadBase1.i[3].re) + (- terminal.i[3].re) + test_DY.hPin_N.iRe[3] = 0
eq_134 : test_DY.idealTransformer2.iPrim[1].im@ PhA.i[1].im@M // test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer2.iPrim[1].im) + PhA.i[1].im = 0
eq_135 : test_DY.idealTransformer2.iPrim[2].im@ PhA.i[2].im@M // test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer2.iPrim[2].im) + PhA.i[2].im = 0
eq_136 : test_DY.idealTransformer2.iPrim[3].im@ PhA.i[3].im@M // test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer2.iPrim[3].im) + PhA.i[3].im = 0
eq_137 : test_DY.idealTransformer2.iPrim[1].re@ PhA.i[1].re@M // test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer2.iPrim[1].re) + PhA.i[1].re = 0
eq_138 : test_DY.idealTransformer2.iPrim[2].re@ PhA.i[2].re@M // test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer2.iPrim[2].re) + PhA.i[2].re = 0
eq_139 : test_DY.idealTransformer2.iPrim[3].re@ PhA.i[3].re@M // test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer2.iPrim[3].re) + PhA.i[3].re = 0
eq_140 : test_DY.idealTransformer3.iPrim[1].im@ PhC.i[1].im@M // - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im + PhC.i[1].im = 0
eq_141 : test_DY.idealTransformer3.iPrim[2].im@ PhC.i[2].im@M // - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im + PhC.i[2].im = 0
eq_142 : test_DY.idealTransformer3.iPrim[3].im@ PhC.i[3].im@M // - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im + PhC.i[3].im = 0
eq_143 : test_DY.idealTransformer3.iPrim[1].re@ PhC.i[1].re@M // - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re + PhC.i[1].re = 0
eq_144 : test_DY.idealTransformer3.iPrim[2].re@ PhC.i[2].re@M // - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re + PhC.i[2].re = 0
eq_145 : test_DY.idealTransformer3.iPrim[3].re@ PhC.i[3].re@M // - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re + PhC.i[3].re = 0
eq_146 : test_DY.idealTransformer2.iPrim[1].im@ test_DY.idealTransformer3.iPrim[1].im@ PhB.i[1].im@M // test_DY.idealTransformer2.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im) + PhB.i[1].im = 0
eq_147 : test_DY.idealTransformer2.iPrim[2].im@ test_DY.idealTransformer3.iPrim[2].im@ PhB.i[2].im@M // test_DY.idealTransformer2.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im) + PhB.i[2].im = 0
eq_148 : test_DY.idealTransformer2.iPrim[3].im@ test_DY.idealTransformer3.iPrim[3].im@ PhB.i[3].im@M // test_DY.idealTransformer2.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im) + PhB.i[3].im = 0
eq_149 : test_DY.idealTransformer2.iPrim[1].re@ test_DY.idealTransformer3.iPrim[1].re@ PhB.i[1].re@M // test_DY.idealTransformer2.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re) + PhB.i[1].re = 0
eq_150 : test_DY.idealTransformer2.iPrim[2].re@ test_DY.idealTransformer3.iPrim[2].re@ PhB.i[2].re@M // test_DY.idealTransformer2.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re) + PhB.i[2].re = 0
eq_151 : test_DY.idealTransformer2.iPrim[3].re@ test_DY.idealTransformer3.iPrim[3].re@ PhB.i[3].re@M // test_DY.idealTransformer2.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re) + PhB.i[3].re = 0
eq_152 : test_DY.hPin_N.iIm[1]@M z.i[1].im@ z1.i[1].im@ // - test_DY.hPin_N.iIm[1] + terminal.i[1].im + z.i[1].im + z1.i[1].im = 0
eq_153 : test_DY.hPin_N.iIm[2]@M z.i[2].im@ z1.i[2].im@ // - test_DY.hPin_N.iIm[2] + terminal.i[2].im + z.i[2].im + z1.i[2].im = 0
eq_154 : test_DY.hPin_N.iIm[3]@M z.i[3].im@ z1.i[3].im@ // - test_DY.hPin_N.iIm[3] + terminal.i[3].im + z.i[3].im + z1.i[3].im = 0
eq_155 : test_DY.hPin_N.iRe[1]@M z.i[1].re@ z1.i[1].re@ // - test_DY.hPin_N.iRe[1] + terminal.i[1].re + z.i[1].re + z1.i[1].re = 0
eq_156 : test_DY.hPin_N.iRe[2]@M z.i[2].re@ z1.i[2].re@ // - test_DY.hPin_N.iRe[2] + terminal.i[2].re + z.i[2].re + z1.i[2].re = 0
eq_157 : test_DY.hPin_N.iRe[3]@M z.i[3].re@ z1.i[3].re@ // - test_DY.hPin_N.iRe[3] + terminal.i[3].re + z.i[3].re + z1.i[3].re = 0
eq_158 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_159 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_160 : PhA.theta# PhC.theta# // HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))
eq_161 : PhB.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_162 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_163 : PhB.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_164 : PhC.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))
eq_165 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_166 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_167 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_168 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_169 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_170 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_171 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_172 : PhA.P@M PhA.i[1].re@ PhA.i[2].re@ PhA.i[3].re@ PhA.i[1].im@ PhA.i[2].im@ PhA.i[3].im@ // PhA.P = PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)
eq_173 : PhB.P@M PhB.i[1].re@ PhB.i[2].re@ PhB.i[3].re@ PhB.i[1].im@ PhB.i[2].im@ PhB.i[3].im@ // PhB.P = PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)
eq_174 : PhC.P@M PhC.i[1].re@ PhC.i[2].re@ PhC.i[3].re@ PhC.i[1].im@ PhC.i[2].im@ PhC.i[3].im@ // PhC.P = PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)
eq_175 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_176 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_177 : z.iFundAbs@M z.i[1].re@ z.i[1].im@ // z.iFundAbs = (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5
eq_178 : z.iFundArg@M z.i[1].im@ z.i[1].re@ // z.iFundArg = Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)
eq_179 : z1.vFundAbs@M z1.v[1].re@ z1.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5
eq_180 : z1.vFundArg@M z1.v[1].im@ z1.v[1].re@ // z1.vFundArg = Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)
eq_181 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_182 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
eq_183 : // algorithm


Init BiPGraph matching
----------------------------------------
BiPGraph matching:
eq_1 : temp_99
eq_2 : temp_100
eq_3 : temp_101
eq_5 : der(PhA.theta)
eq_6 : PhA.omega
eq_7 : der(PhB.theta)
eq_8 : PhB.omega
eq_9 : der(PhC.theta)
eq_10 : PhC.omega
eq_11 : laptop_adpt_1.loadBase1.v[1].re
eq_12 : laptop_adpt_1.loadBase1.v[2].re
eq_13 : laptop_adpt_1.loadBase1.v[3].re
eq_14 : laptop_adpt_1.loadBase1.v[1].im
eq_15 : laptop_adpt_1.loadBase1.v[2].im
eq_16 : laptop_adpt_1.loadBase1.v[3].im
eq_17 : temp_102
eq_18 : temp_103
eq_20 : laptop_adpt_1.loadBase1.omega
eq_21 : laptop_adpt_3.loadBase1.v[1].re
eq_22 : laptop_adpt_3.loadBase1.v[2].re
eq_23 : laptop_adpt_3.loadBase1.v[3].re
eq_24 : laptop_adpt_3.loadBase1.v[1].im
eq_25 : laptop_adpt_3.loadBase1.v[2].im
eq_26 : laptop_adpt_3.loadBase1.v[3].im
eq_27 : temp_104
eq_28 : temp_105
eq_30 : laptop_adpt_3.loadBase1.omega
eq_31 : terminal.omega
eq_32 : z.i[1].im
eq_33 : z.i[2].im
eq_34 : z.i[3].im
eq_35 : z.i[1].re
eq_36 : z.i[2].re
eq_37 : z.i[3].re
eq_38 : z.omega
eq_39 : z.v[1].re
eq_40 : z.v[1].im
eq_41 : z.v[2].re
eq_42 : z.v[2].im
eq_43 : z.v[3].re
eq_44 : z.v[3].im
eq_45 : z1.i[1].im
eq_46 : z1.i[2].im
eq_47 : z1.i[3].im
eq_48 : z1.i[1].re
eq_49 : z1.i[2].re
eq_50 : z1.i[3].re
eq_51 : z1.omega
eq_52 : z1.v[1].re
eq_53 : z1.v[1].im
eq_54 : z1.v[2].re
eq_55 : z1.v[2].im
eq_56 : z1.v[3].re
eq_57 : z1.v[3].im
eq_58 : test_DY.idealTransformer2.iPrim[1].re
eq_59 : test_DY.idealTransformer2.iPrim[1].im
eq_60 : test_DY.idealTransformer2.iPrim[2].re
eq_61 : test_DY.idealTransformer2.iPrim[2].im
eq_62 : test_DY.idealTransformer2.iPrim[3].re
eq_63 : test_DY.idealTransformer2.iPrim[3].im
eq_64 : test_DY.idealTransformer3.iPrim[1].re
eq_65 : test_DY.idealTransformer3.iPrim[1].im
eq_66 : test_DY.idealTransformer3.iPrim[2].re
eq_67 : test_DY.idealTransformer3.iPrim[2].im
eq_68 : test_DY.idealTransformer3.iPrim[3].re
eq_69 : test_DY.idealTransformer3.iPrim[3].im
eq_70 : laptop_adpt_2.loadBase1.i[1].re
eq_71 : laptop_adpt_2.loadBase1.i[2].re
eq_72 : laptop_adpt_2.loadBase1.i[3].re
eq_73 : laptop_adpt_2.loadBase1.i[1].im
eq_74 : laptop_adpt_2.loadBase1.i[2].im
eq_75 : laptop_adpt_2.loadBase1.i[3].im
eq_76 : temp_106
eq_77 : temp_107
eq_79 : laptop_adpt_2.loadBase1.omega
eq_80 : led_driver_1.loadBase1.i[1].re
eq_81 : led_driver_1.loadBase1.i[2].re
eq_82 : led_driver_1.loadBase1.i[3].re
eq_83 : led_driver_1.loadBase1.i[1].im
eq_84 : led_driver_1.loadBase1.i[2].im
eq_85 : led_driver_1.loadBase1.i[3].im
eq_86 : temp_108
eq_87 : temp_109
eq_89 : led_driver_1.loadBase1.omega
eq_90 : led_driver_3.loadBase1.i[1].re
eq_91 : led_driver_3.loadBase1.i[2].re
eq_92 : led_driver_3.loadBase1.i[3].re
eq_93 : led_driver_3.loadBase1.i[1].im
eq_94 : led_driver_3.loadBase1.i[2].im
eq_95 : led_driver_3.loadBase1.i[3].im
eq_96 : temp_110
eq_97 : temp_111
eq_99 : led_driver_3.loadBase1.omega
eq_100 : led_driver_2.loadBase1.i[1].re
eq_101 : led_driver_2.loadBase1.i[2].re
eq_102 : led_driver_2.loadBase1.i[3].re
eq_103 : led_driver_2.loadBase1.i[1].im
eq_104 : led_driver_2.loadBase1.i[2].im
eq_105 : led_driver_2.loadBase1.i[3].im
eq_106 : temp_112
eq_107 : temp_113
eq_109 : led_driver_2.loadBase1.omega
eq_110 : ground1.pin.iIm[1]
eq_111 : ground1.pin.iIm[2]
eq_112 : ground1.pin.iIm[3]
eq_113 : ground1.pin.iRe[1]
eq_114 : ground1.pin.iRe[2]
eq_115 : ground1.pin.iRe[3]
eq_116 : laptop_adpt_1.loadBase1.i[1].im
eq_117 : laptop_adpt_1.loadBase1.i[2].im
eq_118 : laptop_adpt_1.loadBase1.i[3].im
eq_119 : laptop_adpt_1.loadBase1.i[1].re
eq_120 : laptop_adpt_1.loadBase1.i[2].re
eq_121 : laptop_adpt_1.loadBase1.i[3].re
eq_122 : laptop_adpt_3.loadBase1.i[1].im
eq_123 : laptop_adpt_3.loadBase1.i[2].im
eq_124 : laptop_adpt_3.loadBase1.i[3].im
eq_125 : laptop_adpt_3.loadBase1.i[1].re
eq_126 : laptop_adpt_3.loadBase1.i[2].re
eq_127 : laptop_adpt_3.loadBase1.i[3].re
eq_128 : ground2.pin.iIm[1]
eq_129 : ground2.pin.iIm[2]
eq_130 : ground2.pin.iIm[3]
eq_131 : ground2.pin.iRe[1]
eq_132 : ground2.pin.iRe[2]
eq_133 : ground2.pin.iRe[3]
eq_134 : PhA.i[1].im
eq_135 : PhA.i[2].im
eq_136 : PhA.i[3].im
eq_137 : PhA.i[1].re
eq_138 : PhA.i[2].re
eq_139 : PhA.i[3].re
eq_140 : PhC.i[1].im
eq_141 : PhC.i[2].im
eq_142 : PhC.i[3].im
eq_143 : PhC.i[1].re
eq_144 : PhC.i[2].re
eq_145 : PhC.i[3].re
eq_146 : PhB.i[1].im
eq_147 : PhB.i[2].im
eq_148 : PhB.i[3].im
eq_149 : PhB.i[1].re
eq_150 : PhB.i[2].re
eq_151 : PhB.i[3].re
eq_152 : test_DY.hPin_N.iIm[1]
eq_153 : test_DY.hPin_N.iIm[2]
eq_154 : test_DY.hPin_N.iIm[3]
eq_155 : test_DY.hPin_N.iRe[1]
eq_156 : test_DY.hPin_N.iRe[2]
eq_157 : test_DY.hPin_N.iRe[3]
eq_172 : PhA.P
eq_173 : PhB.P
eq_174 : PhC.P
eq_175 : z.vFundAbs
eq_176 : z.vFundArg
eq_177 : z.iFundAbs
eq_178 : z.iFundArg
eq_179 : z1.vFundAbs
eq_180 : z1.vFundArg
eq_181 : z1.iFundAbs
eq_182 : z1.iFundArg
Unmatched equations: {}
Unmatched variables: {systemDef.modeSelect systemDef.eventWriteData systemDef.eventReadData PhA.theta PhB.theta PhC.theta pre(systemDef.modeSelect) pre(systemDef.eventWriteData) pre(systemDef.eventReadData) pre(temp_99) pre(temp_100) pre(temp_101) pre(temp_102) pre(temp_103) pre(temp_104) pre(temp_105) pre(temp_106) pre(temp_107) pre(temp_108) pre(temp_109) pre(temp_110) pre(temp_111) pre(temp_112) pre(temp_113) }
----------------------------------------

Analysing initial system for redundant equations to remove.
All seems to be ok!
Init DAE BiPGraph after addition of initial equations
BiPGraph (200 equations, 185 variables)
Variables: {der(PhA.theta) der(PhB.theta) der(PhC.theta) PhA.P PhA.i[1].re PhA.i[1].im PhA.i[2].re PhA.i[2].im PhA.i[3].re PhA.i[3].im PhA.omega PhB.P PhB.i[1].re PhB.i[1].im PhB.i[2].re PhB.i[2].im PhB.i[3].re PhB.i[3].im PhB.omega PhC.P PhC.i[1].re PhC.i[1].im PhC.i[2].re PhC.i[2].im PhC.i[3].re PhC.i[3].im PhC.omega ground1.pin.iIm[1] ground1.pin.iIm[2] ground1.pin.iIm[3] ground1.pin.iRe[1] ground1.pin.iRe[2] ground1.pin.iRe[3] ground2.pin.iIm[1] ground2.pin.iIm[2] ground2.pin.iIm[3] ground2.pin.iRe[1] ground2.pin.iRe[2] ground2.pin.iRe[3] laptop_adpt_1.loadBase1.v[1].re laptop_adpt_1.loadBase1.v[1].im laptop_adpt_1.loadBase1.v[2].re laptop_adpt_1.loadBase1.v[2].im laptop_adpt_1.loadBase1.v[3].re laptop_adpt_1.loadBase1.v[3].im laptop_adpt_1.loadBase1.i[1].re laptop_adpt_1.loadBase1.i[1].im laptop_adpt_1.loadBase1.i[2].re laptop_adpt_1.loadBase1.i[2].im laptop_adpt_1.loadBase1.i[3].re laptop_adpt_1.loadBase1.i[3].im laptop_adpt_1.loadBase1.omega laptop_adpt_3.loadBase1.v[1].re laptop_adpt_3.loadBase1.v[1].im laptop_adpt_3.loadBase1.v[2].re laptop_adpt_3.loadBase1.v[2].im laptop_adpt_3.loadBase1.v[3].re laptop_adpt_3.loadBase1.v[3].im laptop_adpt_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.omega terminal.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.i[1].re z.i[1].im z.i[2].re z.i[2].im z.i[3].re z.i[3].im z.omega z1.vFundAbs z1.vFundArg z1.iFundAbs z1.iFundArg z1.v[1].re z1.v[1].im z1.v[2].re z1.v[2].im z1.v[3].re z1.v[3].im z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.omega test_DY.idealTransformer2.iPrim[1].re test_DY.idealTransformer2.iPrim[1].im test_DY.idealTransformer2.iPrim[2].re test_DY.idealTransformer2.iPrim[2].im test_DY.idealTransformer2.iPrim[3].re test_DY.idealTransformer2.iPrim[3].im test_DY.idealTransformer3.iPrim[1].re test_DY.idealTransformer3.iPrim[1].im test_DY.idealTransformer3.iPrim[2].re test_DY.idealTransformer3.iPrim[2].im test_DY.idealTransformer3.iPrim[3].re test_DY.idealTransformer3.iPrim[3].im test_DY.hPin_N.iIm[1] test_DY.hPin_N.iIm[2] test_DY.hPin_N.iIm[3] test_DY.hPin_N.iRe[1] test_DY.hPin_N.iRe[2] test_DY.hPin_N.iRe[3] laptop_adpt_2.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].im laptop_adpt_2.loadBase1.omega led_driver_1.loadBase1.i[1].re led_driver_1.loadBase1.i[1].im led_driver_1.loadBase1.i[2].re led_driver_1.loadBase1.i[2].im led_driver_1.loadBase1.i[3].re led_driver_1.loadBase1.i[3].im led_driver_1.loadBase1.omega led_driver_3.loadBase1.i[1].re led_driver_3.loadBase1.i[1].im led_driver_3.loadBase1.i[2].re led_driver_3.loadBase1.i[2].im led_driver_3.loadBase1.i[3].re led_driver_3.loadBase1.i[3].im led_driver_3.loadBase1.omega led_driver_2.loadBase1.i[1].re led_driver_2.loadBase1.i[1].im led_driver_2.loadBase1.i[2].re led_driver_2.loadBase1.i[2].im led_driver_2.loadBase1.i[3].re led_driver_2.loadBase1.i[3].im led_driver_2.loadBase1.omega systemDef.modeSelect systemDef.eventWriteData systemDef.eventReadData temp_99 temp_100 temp_101 temp_102 temp_103 temp_104 temp_105 temp_106 temp_107 temp_108 temp_109 temp_110 temp_111 temp_112 temp_113 PhA.theta PhB.theta PhC.theta pre(systemDef.modeSelect) pre(systemDef.eventWriteData) pre(systemDef.eventReadData) pre(temp_99) pre(temp_100) pre(temp_101) pre(temp_102) pre(temp_103) pre(temp_104) pre(temp_105) pre(temp_106) pre(temp_107) pre(temp_108) pre(temp_109) pre(temp_110) pre(temp_111) pre(temp_112) pre(temp_113) }
eq_1 : temp_99@M // temp_99 = time > 0.5
eq_2 : temp_100@M // temp_100 = time > 0.25
eq_3 : temp_101@M // temp_101 = time > 0.4
eq_5 : der(PhA.theta)@M // der(PhA.theta) = 6.283185307179586 * systemDef.fFund
eq_6 : PhA.omega@M der(PhA.theta)@ // PhA.omega = der(PhA.theta)
eq_7 : der(PhB.theta)@M // der(PhB.theta) = 6.283185307179586 * systemDef.fFund
eq_8 : PhB.omega@M der(PhB.theta)@ // PhB.omega = der(PhB.theta)
eq_9 : der(PhC.theta)@M // der(PhC.theta) = 6.283185307179586 * systemDef.fFund
eq_10 : PhC.omega@M der(PhC.theta)@ // PhC.omega = der(PhC.theta)
eq_11 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@M laptop_adpt_1.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_12 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@M laptop_adpt_1.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_13 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@M laptop_adpt_1.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_14 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@M laptop_adpt_1.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_15 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@M laptop_adpt_1.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_16 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@M laptop_adpt_1.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_17 : temp_102@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_102 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_18 : temp_103@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_103 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_20 : laptop_adpt_1.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_1.loadBase1.omega = der(PhA.theta)
eq_21 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@M laptop_adpt_3.loadBase1.i[1].re@ // 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_22 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@M laptop_adpt_3.loadBase1.i[2].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_23 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@M laptop_adpt_3.loadBase1.i[3].re@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_24 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@M laptop_adpt_3.loadBase1.i[1].im@ // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_25 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@M laptop_adpt_3.loadBase1.i[2].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_26 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@M laptop_adpt_3.loadBase1.i[3].im@ // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_27 : temp_104@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_104 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_28 : temp_105@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_105 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_30 : laptop_adpt_3.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_3.loadBase1.omega = der(PhA.theta)
eq_31 : terminal.omega@M der(PhA.theta)@ // terminal.omega = der(PhA.theta)
eq_32 : z.v[1].re@ z.i[1].re@ z.i[1].im@M // z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im
eq_33 : z.v[2].re@ z.i[2].re@ z.i[2].im@M // z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im
eq_34 : z.v[3].re@ z.i[3].re@ z.i[3].im@M // z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im
eq_35 : z.v[1].im@ z.i[1].im@ z.i[1].re@M // z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
eq_36 : z.v[2].im@ z.i[2].im@ z.i[2].re@M // z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
eq_37 : z.v[3].im@ z.i[3].im@ z.i[3].re@M // z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
eq_38 : z.omega@M der(PhA.theta)@ // z.omega = der(PhA.theta)
eq_39 : z.v[1].re@M laptop_adpt_1.loadBase1.v[1].re@ // z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re
eq_40 : z.v[1].im@M laptop_adpt_1.loadBase1.v[1].im@ // z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im
eq_41 : z.v[2].re@M laptop_adpt_1.loadBase1.v[2].re@ // z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re
eq_42 : z.v[2].im@M laptop_adpt_1.loadBase1.v[2].im@ // z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im
eq_43 : z.v[3].re@M laptop_adpt_1.loadBase1.v[3].re@ // z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re
eq_44 : z.v[3].im@M laptop_adpt_1.loadBase1.v[3].im@ // z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im
eq_45 : z1.v[1].re@ z1.i[1].re@ z1.i[1].im@M // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_46 : z1.v[2].re@ z1.i[2].re@ z1.i[2].im@M // z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_47 : z1.v[3].re@ z1.i[3].re@ z1.i[3].im@M // z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_48 : z1.v[1].im@ z1.i[1].im@ z1.i[1].re@M // z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_49 : z1.v[2].im@ z1.i[2].im@ z1.i[2].re@M // z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_50 : z1.v[3].im@ z1.i[3].im@ z1.i[3].re@M // z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_51 : z1.omega@M der(PhA.theta)@ // z1.omega = der(PhA.theta)
eq_52 : z1.v[1].re@M laptop_adpt_3.loadBase1.v[1].re@ // z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re
eq_53 : z1.v[1].im@M laptop_adpt_3.loadBase1.v[1].im@ // z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im
eq_54 : z1.v[2].re@M laptop_adpt_3.loadBase1.v[2].re@ // z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re
eq_55 : z1.v[2].im@M laptop_adpt_3.loadBase1.v[2].im@ // z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im
eq_56 : z1.v[3].re@M laptop_adpt_3.loadBase1.v[3].re@ // z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re
eq_57 : z1.v[3].im@M laptop_adpt_3.loadBase1.v[3].im@ // z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im
eq_58 : z.i[1].re@ test_DY.idealTransformer2.iPrim[1].re@M // - z.i[1].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].re
eq_59 : z.i[1].im@ test_DY.idealTransformer2.iPrim[1].im@M // - z.i[1].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].im
eq_60 : z.i[2].re@ test_DY.idealTransformer2.iPrim[2].re@M // - z.i[2].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].re
eq_61 : z.i[2].im@ test_DY.idealTransformer2.iPrim[2].im@M // - z.i[2].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].im
eq_62 : z.i[3].re@ test_DY.idealTransformer2.iPrim[3].re@M // - z.i[3].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].re
eq_63 : z.i[3].im@ test_DY.idealTransformer2.iPrim[3].im@M // - z.i[3].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].im
eq_64 : z1.i[1].re@ test_DY.idealTransformer3.iPrim[1].re@M // - z1.i[1].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].re
eq_65 : z1.i[1].im@ test_DY.idealTransformer3.iPrim[1].im@M // - z1.i[1].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].im
eq_66 : z1.i[2].re@ test_DY.idealTransformer3.iPrim[2].re@M // - z1.i[2].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].re
eq_67 : z1.i[2].im@ test_DY.idealTransformer3.iPrim[2].im@M // - z1.i[2].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].im
eq_68 : z1.i[3].re@ test_DY.idealTransformer3.iPrim[3].re@M // - z1.i[3].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].re
eq_69 : z1.i[3].im@ test_DY.idealTransformer3.iPrim[3].im@M // - z1.i[3].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].im
eq_70 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ laptop_adpt_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_71 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ laptop_adpt_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_72 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ laptop_adpt_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_73 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ laptop_adpt_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_74 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ laptop_adpt_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_75 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ laptop_adpt_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_76 : temp_106@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_106 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_77 : temp_107@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_107 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_79 : laptop_adpt_2.loadBase1.omega@M der(PhA.theta)@ // laptop_adpt_2.loadBase1.omega = der(PhA.theta)
eq_80 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_1.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_81 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_1.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_82 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_1.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_83 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_1.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_84 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_1.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_85 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_1.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_86 : temp_108@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_108 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_87 : temp_109@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_109 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_89 : led_driver_1.loadBase1.omega@M der(PhA.theta)@ // led_driver_1.loadBase1.omega = der(PhA.theta)
eq_90 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].re@ led_driver_3.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_91 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].re@ led_driver_3.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_92 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].re@ led_driver_3.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_93 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[1].im@ led_driver_3.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_94 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[2].im@ led_driver_3.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_95 : systemDef.modeSelect# laptop_adpt_3.loadBase1.v[3].im@ led_driver_3.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_96 : temp_110@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_110 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_97 : temp_111@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_111 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_99 : led_driver_3.loadBase1.omega@M der(PhA.theta)@ // led_driver_3.loadBase1.omega = der(PhA.theta)
eq_100 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].re@ led_driver_2.loadBase1.i[1].re@M // 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_101 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].re@ led_driver_2.loadBase1.i[2].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_102 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].re@ led_driver_2.loadBase1.i[3].re@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_103 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[1].im@ led_driver_2.loadBase1.i[1].im@M // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_104 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[2].im@ led_driver_2.loadBase1.i[2].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_105 : systemDef.modeSelect# laptop_adpt_1.loadBase1.v[3].im@ led_driver_2.loadBase1.i[3].im@M // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_106 : temp_112@M systemDef.eventWriteData# pre(systemDef.eventWriteData)# // temp_112 = systemDef.eventWriteData <> pre(systemDef.eventWriteData)
eq_107 : temp_113@M systemDef.eventReadData# pre(systemDef.eventReadData)# // temp_113 = systemDef.eventReadData <> pre(systemDef.eventReadData)
eq_109 : led_driver_2.loadBase1.omega@M der(PhA.theta)@ // led_driver_2.loadBase1.omega = der(PhA.theta)
eq_110 : PhA.i[1].im@ PhB.i[1].im@ PhC.i[1].im@ ground1.pin.iIm[1]@M // - PhA.i[1].im + (- PhB.i[1].im) + (- PhC.i[1].im) + ground1.pin.iIm[1] = 0
eq_111 : PhA.i[2].im@ PhB.i[2].im@ PhC.i[2].im@ ground1.pin.iIm[2]@M // - PhA.i[2].im + (- PhB.i[2].im) + (- PhC.i[2].im) + ground1.pin.iIm[2] = 0
eq_112 : PhA.i[3].im@ PhB.i[3].im@ PhC.i[3].im@ ground1.pin.iIm[3]@M // - PhA.i[3].im + (- PhB.i[3].im) + (- PhC.i[3].im) + ground1.pin.iIm[3] = 0
eq_113 : PhA.i[1].re@ PhB.i[1].re@ PhC.i[1].re@ ground1.pin.iRe[1]@M // - PhA.i[1].re + (- PhB.i[1].re) + (- PhC.i[1].re) + ground1.pin.iRe[1] = 0
eq_114 : PhA.i[2].re@ PhB.i[2].re@ PhC.i[2].re@ ground1.pin.iRe[2]@M // - PhA.i[2].re + (- PhB.i[2].re) + (- PhC.i[2].re) + ground1.pin.iRe[2] = 0
eq_115 : PhA.i[3].re@ PhB.i[3].re@ PhC.i[3].re@ ground1.pin.iRe[3]@M // - PhA.i[3].re + (- PhB.i[3].re) + (- PhC.i[3].re) + ground1.pin.iRe[3] = 0
eq_116 : laptop_adpt_1.loadBase1.i[1].im@M laptop_adpt_2.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ z.i[1].im@ // laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0
eq_117 : laptop_adpt_1.loadBase1.i[2].im@M laptop_adpt_2.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ z.i[2].im@ // laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0
eq_118 : laptop_adpt_1.loadBase1.i[3].im@M laptop_adpt_2.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ z.i[3].im@ // laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0
eq_119 : laptop_adpt_1.loadBase1.i[1].re@M laptop_adpt_2.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ z.i[1].re@ // laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0
eq_120 : laptop_adpt_1.loadBase1.i[2].re@M laptop_adpt_2.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ z.i[2].re@ // laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0
eq_121 : laptop_adpt_1.loadBase1.i[3].re@M laptop_adpt_2.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ z.i[3].re@ // laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0
eq_122 : laptop_adpt_3.loadBase1.i[1].im@M led_driver_3.loadBase1.i[1].im@ z1.i[1].im@ // laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0
eq_123 : laptop_adpt_3.loadBase1.i[2].im@M led_driver_3.loadBase1.i[2].im@ z1.i[2].im@ // laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0
eq_124 : laptop_adpt_3.loadBase1.i[3].im@M led_driver_3.loadBase1.i[3].im@ z1.i[3].im@ // laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0
eq_125 : laptop_adpt_3.loadBase1.i[1].re@M led_driver_3.loadBase1.i[1].re@ z1.i[1].re@ // laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0
eq_126 : laptop_adpt_3.loadBase1.i[2].re@M led_driver_3.loadBase1.i[2].re@ z1.i[2].re@ // laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0
eq_127 : laptop_adpt_3.loadBase1.i[3].re@M led_driver_3.loadBase1.i[3].re@ z1.i[3].re@ // laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0
eq_128 : ground2.pin.iIm[1]@M laptop_adpt_1.loadBase1.i[1].im@ laptop_adpt_2.loadBase1.i[1].im@ laptop_adpt_3.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ led_driver_3.loadBase1.i[1].im@ test_DY.hPin_N.iIm[1]@ // ground2.pin.iIm[1] + (- laptop_adpt_1.loadBase1.i[1].im) + (- laptop_adpt_2.loadBase1.i[1].im) + (- laptop_adpt_3.loadBase1.i[1].im) + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + (- led_driver_3.loadBase1.i[1].im) + (- terminal.i[1].im) + test_DY.hPin_N.iIm[1] = 0
eq_129 : ground2.pin.iIm[2]@M laptop_adpt_1.loadBase1.i[2].im@ laptop_adpt_2.loadBase1.i[2].im@ laptop_adpt_3.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ led_driver_3.loadBase1.i[2].im@ test_DY.hPin_N.iIm[2]@ // ground2.pin.iIm[2] + (- laptop_adpt_1.loadBase1.i[2].im) + (- laptop_adpt_2.loadBase1.i[2].im) + (- laptop_adpt_3.loadBase1.i[2].im) + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + (- led_driver_3.loadBase1.i[2].im) + (- terminal.i[2].im) + test_DY.hPin_N.iIm[2] = 0
eq_130 : ground2.pin.iIm[3]@M laptop_adpt_1.loadBase1.i[3].im@ laptop_adpt_2.loadBase1.i[3].im@ laptop_adpt_3.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ led_driver_3.loadBase1.i[3].im@ test_DY.hPin_N.iIm[3]@ // ground2.pin.iIm[3] + (- laptop_adpt_1.loadBase1.i[3].im) + (- laptop_adpt_2.loadBase1.i[3].im) + (- laptop_adpt_3.loadBase1.i[3].im) + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + (- led_driver_3.loadBase1.i[3].im) + (- terminal.i[3].im) + test_DY.hPin_N.iIm[3] = 0
eq_131 : ground2.pin.iRe[1]@M laptop_adpt_1.loadBase1.i[1].re@ laptop_adpt_2.loadBase1.i[1].re@ laptop_adpt_3.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ led_driver_3.loadBase1.i[1].re@ test_DY.hPin_N.iRe[1]@ // ground2.pin.iRe[1] + (- laptop_adpt_1.loadBase1.i[1].re) + (- laptop_adpt_2.loadBase1.i[1].re) + (- laptop_adpt_3.loadBase1.i[1].re) + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + (- led_driver_3.loadBase1.i[1].re) + (- terminal.i[1].re) + test_DY.hPin_N.iRe[1] = 0
eq_132 : ground2.pin.iRe[2]@M laptop_adpt_1.loadBase1.i[2].re@ laptop_adpt_2.loadBase1.i[2].re@ laptop_adpt_3.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ led_driver_3.loadBase1.i[2].re@ test_DY.hPin_N.iRe[2]@ // ground2.pin.iRe[2] + (- laptop_adpt_1.loadBase1.i[2].re) + (- laptop_adpt_2.loadBase1.i[2].re) + (- laptop_adpt_3.loadBase1.i[2].re) + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + (- led_driver_3.loadBase1.i[2].re) + (- terminal.i[2].re) + test_DY.hPin_N.iRe[2] = 0
eq_133 : ground2.pin.iRe[3]@M laptop_adpt_1.loadBase1.i[3].re@ laptop_adpt_2.loadBase1.i[3].re@ laptop_adpt_3.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ led_driver_3.loadBase1.i[3].re@ test_DY.hPin_N.iRe[3]@ // ground2.pin.iRe[3] + (- laptop_adpt_1.loadBase1.i[3].re) + (- laptop_adpt_2.loadBase1.i[3].re) + (- laptop_adpt_3.loadBase1.i[3].re) + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + (- led_driver_3.loadBase1.i[3].re) + (- terminal.i[3].re) + test_DY.hPin_N.iRe[3] = 0
eq_134 : test_DY.idealTransformer2.iPrim[1].im@ PhA.i[1].im@M // test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer2.iPrim[1].im) + PhA.i[1].im = 0
eq_135 : test_DY.idealTransformer2.iPrim[2].im@ PhA.i[2].im@M // test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer2.iPrim[2].im) + PhA.i[2].im = 0
eq_136 : test_DY.idealTransformer2.iPrim[3].im@ PhA.i[3].im@M // test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer2.iPrim[3].im) + PhA.i[3].im = 0
eq_137 : test_DY.idealTransformer2.iPrim[1].re@ PhA.i[1].re@M // test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer2.iPrim[1].re) + PhA.i[1].re = 0
eq_138 : test_DY.idealTransformer2.iPrim[2].re@ PhA.i[2].re@M // test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer2.iPrim[2].re) + PhA.i[2].re = 0
eq_139 : test_DY.idealTransformer2.iPrim[3].re@ PhA.i[3].re@M // test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer2.iPrim[3].re) + PhA.i[3].re = 0
eq_140 : test_DY.idealTransformer3.iPrim[1].im@ PhC.i[1].im@M // - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im + PhC.i[1].im = 0
eq_141 : test_DY.idealTransformer3.iPrim[2].im@ PhC.i[2].im@M // - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im + PhC.i[2].im = 0
eq_142 : test_DY.idealTransformer3.iPrim[3].im@ PhC.i[3].im@M // - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im + PhC.i[3].im = 0
eq_143 : test_DY.idealTransformer3.iPrim[1].re@ PhC.i[1].re@M // - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re + PhC.i[1].re = 0
eq_144 : test_DY.idealTransformer3.iPrim[2].re@ PhC.i[2].re@M // - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re + PhC.i[2].re = 0
eq_145 : test_DY.idealTransformer3.iPrim[3].re@ PhC.i[3].re@M // - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re + PhC.i[3].re = 0
eq_146 : test_DY.idealTransformer2.iPrim[1].im@ test_DY.idealTransformer3.iPrim[1].im@ PhB.i[1].im@M // test_DY.idealTransformer2.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im) + PhB.i[1].im = 0
eq_147 : test_DY.idealTransformer2.iPrim[2].im@ test_DY.idealTransformer3.iPrim[2].im@ PhB.i[2].im@M // test_DY.idealTransformer2.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im) + PhB.i[2].im = 0
eq_148 : test_DY.idealTransformer2.iPrim[3].im@ test_DY.idealTransformer3.iPrim[3].im@ PhB.i[3].im@M // test_DY.idealTransformer2.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im) + PhB.i[3].im = 0
eq_149 : test_DY.idealTransformer2.iPrim[1].re@ test_DY.idealTransformer3.iPrim[1].re@ PhB.i[1].re@M // test_DY.idealTransformer2.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re) + PhB.i[1].re = 0
eq_150 : test_DY.idealTransformer2.iPrim[2].re@ test_DY.idealTransformer3.iPrim[2].re@ PhB.i[2].re@M // test_DY.idealTransformer2.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re) + PhB.i[2].re = 0
eq_151 : test_DY.idealTransformer2.iPrim[3].re@ test_DY.idealTransformer3.iPrim[3].re@ PhB.i[3].re@M // test_DY.idealTransformer2.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re) + PhB.i[3].re = 0
eq_152 : test_DY.hPin_N.iIm[1]@M z.i[1].im@ z1.i[1].im@ // - test_DY.hPin_N.iIm[1] + terminal.i[1].im + z.i[1].im + z1.i[1].im = 0
eq_153 : test_DY.hPin_N.iIm[2]@M z.i[2].im@ z1.i[2].im@ // - test_DY.hPin_N.iIm[2] + terminal.i[2].im + z.i[2].im + z1.i[2].im = 0
eq_154 : test_DY.hPin_N.iIm[3]@M z.i[3].im@ z1.i[3].im@ // - test_DY.hPin_N.iIm[3] + terminal.i[3].im + z.i[3].im + z1.i[3].im = 0
eq_155 : test_DY.hPin_N.iRe[1]@M z.i[1].re@ z1.i[1].re@ // - test_DY.hPin_N.iRe[1] + terminal.i[1].re + z.i[1].re + z1.i[1].re = 0
eq_156 : test_DY.hPin_N.iRe[2]@M z.i[2].re@ z1.i[2].re@ // - test_DY.hPin_N.iRe[2] + terminal.i[2].re + z.i[2].re + z1.i[2].re = 0
eq_157 : test_DY.hPin_N.iRe[3]@M z.i[3].re@ z1.i[3].re@ // - test_DY.hPin_N.iRe[3] + terminal.i[3].re + z.i[3].re + z1.i[3].re = 0
eq_158 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_159 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_160 : PhA.theta# PhC.theta# // HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))
eq_161 : PhB.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_162 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_163 : PhB.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))
eq_164 : PhC.theta# PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))
eq_165 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_166 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_167 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_168 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_169 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_170 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_171 : PhA.theta# // HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))
eq_172 : PhA.P@M PhA.i[1].re@ PhA.i[2].re@ PhA.i[3].re@ PhA.i[1].im@ PhA.i[2].im@ PhA.i[3].im@ // PhA.P = PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)
eq_173 : PhB.P@M PhB.i[1].re@ PhB.i[2].re@ PhB.i[3].re@ PhB.i[1].im@ PhB.i[2].im@ PhB.i[3].im@ // PhB.P = PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)
eq_174 : PhC.P@M PhC.i[1].re@ PhC.i[2].re@ PhC.i[3].re@ PhC.i[1].im@ PhC.i[2].im@ PhC.i[3].im@ // PhC.P = PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)
eq_175 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_176 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_177 : z.iFundAbs@M z.i[1].re@ z.i[1].im@ // z.iFundAbs = (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5
eq_178 : z.iFundArg@M z.i[1].im@ z.i[1].re@ // z.iFundArg = Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)
eq_179 : z1.vFundAbs@M z1.v[1].re@ z1.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5
eq_180 : z1.vFundArg@M z1.v[1].im@ z1.v[1].re@ // z1.vFundArg = Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)
eq_181 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_182 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
eq_183 : // algorithm

eq_184 : systemDef.modeSelect@M pre(systemDef.modeSelect)@ // systemDef.modeSelect = pre(systemDef.modeSelect)
eq_185 : systemDef.eventWriteData@M pre(systemDef.eventWriteData)@ // systemDef.eventWriteData = pre(systemDef.eventWriteData)
eq_186 : systemDef.eventReadData@M pre(systemDef.eventReadData)@ // systemDef.eventReadData = pre(systemDef.eventReadData)
eq_187 : PhA.theta@M // PhA.theta = 0
eq_188 : PhB.theta@M // PhB.theta = 0
eq_189 : PhC.theta@M // PhC.theta = 0
eq_190 : pre(systemDef.modeSelect)@M // pre(systemDef.modeSelect) = false
eq_191 : pre(systemDef.eventWriteData)@M // pre(systemDef.eventWriteData) = false
eq_192 : pre(systemDef.eventReadData)@M // pre(systemDef.eventReadData) = false
eq_193 : pre(temp_99)@M // pre(temp_99) = false
eq_194 : pre(temp_100)@M // pre(temp_100) = false
eq_195 : pre(temp_101)@M // pre(temp_101) = false
eq_196 : pre(temp_102)@M // pre(temp_102) = false
eq_197 : pre(temp_103)@M // pre(temp_103) = false
eq_198 : pre(temp_104)@M // pre(temp_104) = false
eq_199 : pre(temp_105)@M // pre(temp_105) = false
eq_200 : pre(temp_106)@M // pre(temp_106) = false
eq_201 : pre(temp_107)@M // pre(temp_107) = false
eq_202 : pre(temp_108)@M // pre(temp_108) = false
eq_203 : pre(temp_109)@M // pre(temp_109) = false
eq_204 : pre(temp_110)@M // pre(temp_110) = false
eq_205 : pre(temp_111)@M // pre(temp_111) = false
eq_206 : pre(temp_112)@M // pre(temp_112) = false
eq_207 : pre(temp_113)@M // pre(temp_113) = false

Init BiPGraph matching after addition of initial equations
----------------------------------------
BiPGraph matching:
eq_1 : temp_99
eq_2 : temp_100
eq_3 : temp_101
eq_5 : der(PhA.theta)
eq_6 : PhA.omega
eq_7 : der(PhB.theta)
eq_8 : PhB.omega
eq_9 : der(PhC.theta)
eq_10 : PhC.omega
eq_11 : laptop_adpt_1.loadBase1.v[1].re
eq_12 : laptop_adpt_1.loadBase1.v[2].re
eq_13 : laptop_adpt_1.loadBase1.v[3].re
eq_14 : laptop_adpt_1.loadBase1.v[1].im
eq_15 : laptop_adpt_1.loadBase1.v[2].im
eq_16 : laptop_adpt_1.loadBase1.v[3].im
eq_17 : temp_102
eq_18 : temp_103
eq_20 : laptop_adpt_1.loadBase1.omega
eq_21 : laptop_adpt_3.loadBase1.v[1].re
eq_22 : laptop_adpt_3.loadBase1.v[2].re
eq_23 : laptop_adpt_3.loadBase1.v[3].re
eq_24 : laptop_adpt_3.loadBase1.v[1].im
eq_25 : laptop_adpt_3.loadBase1.v[2].im
eq_26 : laptop_adpt_3.loadBase1.v[3].im
eq_27 : temp_104
eq_28 : temp_105
eq_30 : laptop_adpt_3.loadBase1.omega
eq_31 : terminal.omega
eq_32 : z.i[1].im
eq_33 : z.i[2].im
eq_34 : z.i[3].im
eq_35 : z.i[1].re
eq_36 : z.i[2].re
eq_37 : z.i[3].re
eq_38 : z.omega
eq_39 : z.v[1].re
eq_40 : z.v[1].im
eq_41 : z.v[2].re
eq_42 : z.v[2].im
eq_43 : z.v[3].re
eq_44 : z.v[3].im
eq_45 : z1.i[1].im
eq_46 : z1.i[2].im
eq_47 : z1.i[3].im
eq_48 : z1.i[1].re
eq_49 : z1.i[2].re
eq_50 : z1.i[3].re
eq_51 : z1.omega
eq_52 : z1.v[1].re
eq_53 : z1.v[1].im
eq_54 : z1.v[2].re
eq_55 : z1.v[2].im
eq_56 : z1.v[3].re
eq_57 : z1.v[3].im
eq_58 : test_DY.idealTransformer2.iPrim[1].re
eq_59 : test_DY.idealTransformer2.iPrim[1].im
eq_60 : test_DY.idealTransformer2.iPrim[2].re
eq_61 : test_DY.idealTransformer2.iPrim[2].im
eq_62 : test_DY.idealTransformer2.iPrim[3].re
eq_63 : test_DY.idealTransformer2.iPrim[3].im
eq_64 : test_DY.idealTransformer3.iPrim[1].re
eq_65 : test_DY.idealTransformer3.iPrim[1].im
eq_66 : test_DY.idealTransformer3.iPrim[2].re
eq_67 : test_DY.idealTransformer3.iPrim[2].im
eq_68 : test_DY.idealTransformer3.iPrim[3].re
eq_69 : test_DY.idealTransformer3.iPrim[3].im
eq_70 : laptop_adpt_2.loadBase1.i[1].re
eq_71 : laptop_adpt_2.loadBase1.i[2].re
eq_72 : laptop_adpt_2.loadBase1.i[3].re
eq_73 : laptop_adpt_2.loadBase1.i[1].im
eq_74 : laptop_adpt_2.loadBase1.i[2].im
eq_75 : laptop_adpt_2.loadBase1.i[3].im
eq_76 : temp_106
eq_77 : temp_107
eq_79 : laptop_adpt_2.loadBase1.omega
eq_80 : led_driver_1.loadBase1.i[1].re
eq_81 : led_driver_1.loadBase1.i[2].re
eq_82 : led_driver_1.loadBase1.i[3].re
eq_83 : led_driver_1.loadBase1.i[1].im
eq_84 : led_driver_1.loadBase1.i[2].im
eq_85 : led_driver_1.loadBase1.i[3].im
eq_86 : temp_108
eq_87 : temp_109
eq_89 : led_driver_1.loadBase1.omega
eq_90 : led_driver_3.loadBase1.i[1].re
eq_91 : led_driver_3.loadBase1.i[2].re
eq_92 : led_driver_3.loadBase1.i[3].re
eq_93 : led_driver_3.loadBase1.i[1].im
eq_94 : led_driver_3.loadBase1.i[2].im
eq_95 : led_driver_3.loadBase1.i[3].im
eq_96 : temp_110
eq_97 : temp_111
eq_99 : led_driver_3.loadBase1.omega
eq_100 : led_driver_2.loadBase1.i[1].re
eq_101 : led_driver_2.loadBase1.i[2].re
eq_102 : led_driver_2.loadBase1.i[3].re
eq_103 : led_driver_2.loadBase1.i[1].im
eq_104 : led_driver_2.loadBase1.i[2].im
eq_105 : led_driver_2.loadBase1.i[3].im
eq_106 : temp_112
eq_107 : temp_113
eq_109 : led_driver_2.loadBase1.omega
eq_110 : ground1.pin.iIm[1]
eq_111 : ground1.pin.iIm[2]
eq_112 : ground1.pin.iIm[3]
eq_113 : ground1.pin.iRe[1]
eq_114 : ground1.pin.iRe[2]
eq_115 : ground1.pin.iRe[3]
eq_116 : laptop_adpt_1.loadBase1.i[1].im
eq_117 : laptop_adpt_1.loadBase1.i[2].im
eq_118 : laptop_adpt_1.loadBase1.i[3].im
eq_119 : laptop_adpt_1.loadBase1.i[1].re
eq_120 : laptop_adpt_1.loadBase1.i[2].re
eq_121 : laptop_adpt_1.loadBase1.i[3].re
eq_122 : laptop_adpt_3.loadBase1.i[1].im
eq_123 : laptop_adpt_3.loadBase1.i[2].im
eq_124 : laptop_adpt_3.loadBase1.i[3].im
eq_125 : laptop_adpt_3.loadBase1.i[1].re
eq_126 : laptop_adpt_3.loadBase1.i[2].re
eq_127 : laptop_adpt_3.loadBase1.i[3].re
eq_128 : ground2.pin.iIm[1]
eq_129 : ground2.pin.iIm[2]
eq_130 : ground2.pin.iIm[3]
eq_131 : ground2.pin.iRe[1]
eq_132 : ground2.pin.iRe[2]
eq_133 : ground2.pin.iRe[3]
eq_134 : PhA.i[1].im
eq_135 : PhA.i[2].im
eq_136 : PhA.i[3].im
eq_137 : PhA.i[1].re
eq_138 : PhA.i[2].re
eq_139 : PhA.i[3].re
eq_140 : PhC.i[1].im
eq_141 : PhC.i[2].im
eq_142 : PhC.i[3].im
eq_143 : PhC.i[1].re
eq_144 : PhC.i[2].re
eq_145 : PhC.i[3].re
eq_146 : PhB.i[1].im
eq_147 : PhB.i[2].im
eq_148 : PhB.i[3].im
eq_149 : PhB.i[1].re
eq_150 : PhB.i[2].re
eq_151 : PhB.i[3].re
eq_152 : test_DY.hPin_N.iIm[1]
eq_153 : test_DY.hPin_N.iIm[2]
eq_154 : test_DY.hPin_N.iIm[3]
eq_155 : test_DY.hPin_N.iRe[1]
eq_156 : test_DY.hPin_N.iRe[2]
eq_157 : test_DY.hPin_N.iRe[3]
eq_172 : PhA.P
eq_173 : PhB.P
eq_174 : PhC.P
eq_175 : z.vFundAbs
eq_176 : z.vFundArg
eq_177 : z.iFundAbs
eq_178 : z.iFundArg
eq_179 : z1.vFundAbs
eq_180 : z1.vFundArg
eq_181 : z1.iFundAbs
eq_182 : z1.iFundArg
eq_184 : systemDef.modeSelect
eq_185 : systemDef.eventWriteData
eq_186 : systemDef.eventReadData
eq_187 : PhA.theta
eq_188 : PhB.theta
eq_189 : PhC.theta
eq_190 : pre(systemDef.modeSelect)
eq_191 : pre(systemDef.eventWriteData)
eq_192 : pre(systemDef.eventReadData)
eq_193 : pre(temp_99)
eq_194 : pre(temp_100)
eq_195 : pre(temp_101)
eq_196 : pre(temp_102)
eq_197 : pre(temp_103)
eq_198 : pre(temp_104)
eq_199 : pre(temp_105)
eq_200 : pre(temp_106)
eq_201 : pre(temp_107)
eq_202 : pre(temp_108)
eq_203 : pre(temp_109)
eq_204 : pre(temp_110)
eq_205 : pre(temp_111)
eq_206 : pre(temp_112)
eq_207 : pre(temp_113)
Unmatched equations: {}
Unmatched variables: {}
----------------------------------------

Initial system contains homotopy, computing homotopy block components...
... block components computed: []
Starting automatic tearing
BiPGraph (14 equations, 14 variables)
Variables: {z.v[1].re z.i[1].im led_driver_2.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im laptop_adpt_1.loadBase1.i[1].im laptop_adpt_1.loadBase1.v[1].im z.v[1].im z.i[1].re led_driver_2.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re laptop_adpt_1.loadBase1.i[1].re laptop_adpt_1.loadBase1.v[1].re }
eq_39 : z.v[1].re@M laptop_adpt_1.loadBase1.v[1].re@ // z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re
eq_32 : z.v[1].re@ z.i[1].re# z.i[1].im# // z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im
eq_103 : laptop_adpt_1.loadBase1.v[1].im# led_driver_2.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_83 : laptop_adpt_1.loadBase1.v[1].im# led_driver_1.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_73 : laptop_adpt_1.loadBase1.v[1].im# laptop_adpt_2.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_116 : laptop_adpt_1.loadBase1.i[1].im@M laptop_adpt_2.loadBase1.i[1].im@ led_driver_1.loadBase1.i[1].im@ led_driver_2.loadBase1.i[1].im@ z.i[1].im@ // laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0
eq_14 : laptop_adpt_1.loadBase1.v[1].im# laptop_adpt_1.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
eq_40 : z.v[1].im@M laptop_adpt_1.loadBase1.v[1].im@ // z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im
eq_35 : z.v[1].im@ z.i[1].im# z.i[1].re# // z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
eq_100 : laptop_adpt_1.loadBase1.v[1].re# led_driver_2.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
eq_80 : laptop_adpt_1.loadBase1.v[1].re# led_driver_1.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
eq_70 : laptop_adpt_1.loadBase1.v[1].re# laptop_adpt_2.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
eq_119 : laptop_adpt_1.loadBase1.i[1].re@M laptop_adpt_2.loadBase1.i[1].re@ led_driver_1.loadBase1.i[1].re@ led_driver_2.loadBase1.i[1].re@ z.i[1].re@ // laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0
eq_11 : laptop_adpt_1.loadBase1.v[1].re# laptop_adpt_1.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))

Initial matching
----------------------------------------
BiPGraph matching:
eq_39 : z.v[1].re
eq_116 : laptop_adpt_1.loadBase1.i[1].im
eq_40 : z.v[1].im
eq_119 : laptop_adpt_1.loadBase1.i[1].re
Unmatched equations: {eq_32 eq_103 eq_83 eq_73 eq_14 eq_35 eq_100 eq_80 eq_70 eq_11 }
Unmatched variables: {z.i[1].im led_driver_2.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im laptop_adpt_1.loadBase1.v[1].im z.i[1].re led_driver_2.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re laptop_adpt_1.loadBase1.v[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_39 : laptop_adpt_1.loadBase1.v[1].re
eq_32 : z.v[1].re
eq_116 : laptop_adpt_1.loadBase1.i[1].im
eq_40 : laptop_adpt_1.loadBase1.v[1].im
eq_35 : z.v[1].im
eq_119 : laptop_adpt_1.loadBase1.i[1].re
Unmatched equations: {eq_103 eq_83 eq_73 eq_14 eq_100 eq_80 eq_70 eq_11 }
Unmatched variables: {z.i[1].im led_driver_2.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im z.i[1].re led_driver_2.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: z.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: z.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: laptop_adpt_2.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_1.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_2.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: laptop_adpt_2.loadBase1.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_1.loadBase1.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_2.loadBase1.i[1].re
Starting automatic tearing
BiPGraph (14 equations, 14 variables)
Variables: {z.v[2].re z.i[2].im led_driver_2.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im laptop_adpt_1.loadBase1.i[2].im laptop_adpt_1.loadBase1.v[2].im z.v[2].im z.i[2].re led_driver_2.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re laptop_adpt_1.loadBase1.i[2].re laptop_adpt_1.loadBase1.v[2].re }
eq_41 : z.v[2].re@M laptop_adpt_1.loadBase1.v[2].re@ // z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re
eq_33 : z.v[2].re@ z.i[2].re# z.i[2].im# // z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im
eq_104 : laptop_adpt_1.loadBase1.v[2].im# led_driver_2.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_84 : laptop_adpt_1.loadBase1.v[2].im# led_driver_1.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_74 : laptop_adpt_1.loadBase1.v[2].im# laptop_adpt_2.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_117 : laptop_adpt_1.loadBase1.i[2].im@M laptop_adpt_2.loadBase1.i[2].im@ led_driver_1.loadBase1.i[2].im@ led_driver_2.loadBase1.i[2].im@ z.i[2].im@ // laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0
eq_15 : laptop_adpt_1.loadBase1.v[2].im# laptop_adpt_1.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
eq_42 : z.v[2].im@M laptop_adpt_1.loadBase1.v[2].im@ // z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im
eq_36 : z.v[2].im@ z.i[2].im# z.i[2].re# // z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
eq_101 : laptop_adpt_1.loadBase1.v[2].re# led_driver_2.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
eq_81 : laptop_adpt_1.loadBase1.v[2].re# led_driver_1.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
eq_71 : laptop_adpt_1.loadBase1.v[2].re# laptop_adpt_2.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
eq_120 : laptop_adpt_1.loadBase1.i[2].re@M laptop_adpt_2.loadBase1.i[2].re@ led_driver_1.loadBase1.i[2].re@ led_driver_2.loadBase1.i[2].re@ z.i[2].re@ // laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0
eq_12 : laptop_adpt_1.loadBase1.v[2].re# laptop_adpt_1.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))

Initial matching
----------------------------------------
BiPGraph matching:
eq_41 : z.v[2].re
eq_117 : laptop_adpt_1.loadBase1.i[2].im
eq_42 : z.v[2].im
eq_120 : laptop_adpt_1.loadBase1.i[2].re
Unmatched equations: {eq_33 eq_104 eq_84 eq_74 eq_15 eq_36 eq_101 eq_81 eq_71 eq_12 }
Unmatched variables: {z.i[2].im led_driver_2.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im laptop_adpt_1.loadBase1.v[2].im z.i[2].re led_driver_2.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re laptop_adpt_1.loadBase1.v[2].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_41 : laptop_adpt_1.loadBase1.v[2].re
eq_33 : z.v[2].re
eq_117 : laptop_adpt_1.loadBase1.i[2].im
eq_42 : laptop_adpt_1.loadBase1.v[2].im
eq_36 : z.v[2].im
eq_120 : laptop_adpt_1.loadBase1.i[2].re
Unmatched equations: {eq_104 eq_84 eq_74 eq_15 eq_101 eq_81 eq_71 eq_12 }
Unmatched variables: {z.i[2].im led_driver_2.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im z.i[2].re led_driver_2.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: z.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: z.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: laptop_adpt_2.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_1.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_2.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: laptop_adpt_2.loadBase1.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_1.loadBase1.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_2.loadBase1.i[2].re
Starting automatic tearing
BiPGraph (14 equations, 14 variables)
Variables: {z.v[3].re z.i[3].im led_driver_2.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im laptop_adpt_1.loadBase1.i[3].im laptop_adpt_1.loadBase1.v[3].im z.v[3].im z.i[3].re led_driver_2.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re laptop_adpt_1.loadBase1.i[3].re laptop_adpt_1.loadBase1.v[3].re }
eq_43 : z.v[3].re@M laptop_adpt_1.loadBase1.v[3].re@ // z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re
eq_34 : z.v[3].re@ z.i[3].re# z.i[3].im# // z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im
eq_105 : laptop_adpt_1.loadBase1.v[3].im# led_driver_2.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_85 : laptop_adpt_1.loadBase1.v[3].im# led_driver_1.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_75 : laptop_adpt_1.loadBase1.v[3].im# laptop_adpt_2.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_118 : laptop_adpt_1.loadBase1.i[3].im@M laptop_adpt_2.loadBase1.i[3].im@ led_driver_1.loadBase1.i[3].im@ led_driver_2.loadBase1.i[3].im@ z.i[3].im@ // laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0
eq_16 : laptop_adpt_1.loadBase1.v[3].im# laptop_adpt_1.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
eq_44 : z.v[3].im@M laptop_adpt_1.loadBase1.v[3].im@ // z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im
eq_37 : z.v[3].im@ z.i[3].im# z.i[3].re# // z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
eq_102 : laptop_adpt_1.loadBase1.v[3].re# led_driver_2.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
eq_82 : laptop_adpt_1.loadBase1.v[3].re# led_driver_1.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
eq_72 : laptop_adpt_1.loadBase1.v[3].re# laptop_adpt_2.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
eq_121 : laptop_adpt_1.loadBase1.i[3].re@M laptop_adpt_2.loadBase1.i[3].re@ led_driver_1.loadBase1.i[3].re@ led_driver_2.loadBase1.i[3].re@ z.i[3].re@ // laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0
eq_13 : laptop_adpt_1.loadBase1.v[3].re# laptop_adpt_1.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))

Initial matching
----------------------------------------
BiPGraph matching:
eq_43 : z.v[3].re
eq_118 : laptop_adpt_1.loadBase1.i[3].im
eq_44 : z.v[3].im
eq_121 : laptop_adpt_1.loadBase1.i[3].re
Unmatched equations: {eq_34 eq_105 eq_85 eq_75 eq_16 eq_37 eq_102 eq_82 eq_72 eq_13 }
Unmatched variables: {z.i[3].im led_driver_2.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im laptop_adpt_1.loadBase1.v[3].im z.i[3].re led_driver_2.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re laptop_adpt_1.loadBase1.v[3].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_43 : laptop_adpt_1.loadBase1.v[3].re
eq_34 : z.v[3].re
eq_118 : laptop_adpt_1.loadBase1.i[3].im
eq_44 : laptop_adpt_1.loadBase1.v[3].im
eq_37 : z.v[3].im
eq_121 : laptop_adpt_1.loadBase1.i[3].re
Unmatched equations: {eq_105 eq_85 eq_75 eq_16 eq_102 eq_82 eq_72 eq_13 }
Unmatched variables: {z.i[3].im led_driver_2.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im z.i[3].re led_driver_2.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: z.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: z.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: laptop_adpt_2.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_1.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_2.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: laptop_adpt_2.loadBase1.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_1.loadBase1.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_2.loadBase1.i[3].re
Starting automatic tearing
BiPGraph (10 equations, 10 variables)
Variables: {z1.v[1].re z1.i[1].im led_driver_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.v[1].im z1.v[1].im z1.i[1].re led_driver_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.v[1].re }
eq_52 : z1.v[1].re@M laptop_adpt_3.loadBase1.v[1].re@ // z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re
eq_45 : z1.v[1].re@ z1.i[1].re# z1.i[1].im# // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_93 : laptop_adpt_3.loadBase1.v[1].im# led_driver_3.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_122 : laptop_adpt_3.loadBase1.i[1].im@M led_driver_3.loadBase1.i[1].im@ z1.i[1].im@ // laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0
eq_24 : laptop_adpt_3.loadBase1.v[1].im# laptop_adpt_3.loadBase1.i[1].im# // 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
eq_53 : z1.v[1].im@M laptop_adpt_3.loadBase1.v[1].im@ // z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im
eq_48 : z1.v[1].im@ z1.i[1].im# z1.i[1].re# // z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_90 : laptop_adpt_3.loadBase1.v[1].re# led_driver_3.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
eq_125 : laptop_adpt_3.loadBase1.i[1].re@M led_driver_3.loadBase1.i[1].re@ z1.i[1].re@ // laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0
eq_21 : laptop_adpt_3.loadBase1.v[1].re# laptop_adpt_3.loadBase1.i[1].re# // 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))

Initial matching
----------------------------------------
BiPGraph matching:
eq_52 : z1.v[1].re
eq_122 : laptop_adpt_3.loadBase1.i[1].im
eq_53 : z1.v[1].im
eq_125 : laptop_adpt_3.loadBase1.i[1].re
Unmatched equations: {eq_45 eq_93 eq_24 eq_48 eq_90 eq_21 }
Unmatched variables: {z1.i[1].im led_driver_3.loadBase1.i[1].im laptop_adpt_3.loadBase1.v[1].im z1.i[1].re led_driver_3.loadBase1.i[1].re laptop_adpt_3.loadBase1.v[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_52 : laptop_adpt_3.loadBase1.v[1].re
eq_45 : z1.v[1].re
eq_122 : laptop_adpt_3.loadBase1.i[1].im
eq_53 : laptop_adpt_3.loadBase1.v[1].im
eq_48 : z1.v[1].im
eq_125 : laptop_adpt_3.loadBase1.i[1].re
Unmatched equations: {eq_93 eq_24 eq_90 eq_21 }
Unmatched variables: {z1.i[1].im led_driver_3.loadBase1.i[1].im z1.i[1].re led_driver_3.loadBase1.i[1].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: z1.i[1].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: z1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_3.loadBase1.i[1].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1)), tearing with variable: led_driver_3.loadBase1.i[1].re
Starting automatic tearing
BiPGraph (10 equations, 10 variables)
Variables: {z1.v[2].re z1.i[2].im led_driver_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.v[2].im z1.v[2].im z1.i[2].re led_driver_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.v[2].re }
eq_54 : z1.v[2].re@M laptop_adpt_3.loadBase1.v[2].re@ // z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re
eq_46 : z1.v[2].re@ z1.i[2].re# z1.i[2].im# // z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_94 : laptop_adpt_3.loadBase1.v[2].im# led_driver_3.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_123 : laptop_adpt_3.loadBase1.i[2].im@M led_driver_3.loadBase1.i[2].im@ z1.i[2].im@ // laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0
eq_25 : laptop_adpt_3.loadBase1.v[2].im# laptop_adpt_3.loadBase1.i[2].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
eq_55 : z1.v[2].im@M laptop_adpt_3.loadBase1.v[2].im@ // z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im
eq_49 : z1.v[2].im@ z1.i[2].im# z1.i[2].re# // z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_91 : laptop_adpt_3.loadBase1.v[2].re# led_driver_3.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
eq_126 : laptop_adpt_3.loadBase1.i[2].re@M led_driver_3.loadBase1.i[2].re@ z1.i[2].re@ // laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0
eq_22 : laptop_adpt_3.loadBase1.v[2].re# laptop_adpt_3.loadBase1.i[2].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))

Initial matching
----------------------------------------
BiPGraph matching:
eq_54 : z1.v[2].re
eq_123 : laptop_adpt_3.loadBase1.i[2].im
eq_55 : z1.v[2].im
eq_126 : laptop_adpt_3.loadBase1.i[2].re
Unmatched equations: {eq_46 eq_94 eq_25 eq_49 eq_91 eq_22 }
Unmatched variables: {z1.i[2].im led_driver_3.loadBase1.i[2].im laptop_adpt_3.loadBase1.v[2].im z1.i[2].re led_driver_3.loadBase1.i[2].re laptop_adpt_3.loadBase1.v[2].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_54 : laptop_adpt_3.loadBase1.v[2].re
eq_46 : z1.v[2].re
eq_123 : laptop_adpt_3.loadBase1.i[2].im
eq_55 : laptop_adpt_3.loadBase1.v[2].im
eq_49 : z1.v[2].im
eq_126 : laptop_adpt_3.loadBase1.i[2].re
Unmatched equations: {eq_94 eq_25 eq_91 eq_22 }
Unmatched variables: {z1.i[2].im led_driver_3.loadBase1.i[2].im z1.i[2].re led_driver_3.loadBase1.i[2].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: z1.i[2].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: z1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_3.loadBase1.i[2].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3)), tearing with variable: led_driver_3.loadBase1.i[2].re
Starting automatic tearing
BiPGraph (10 equations, 10 variables)
Variables: {z1.v[3].re z1.i[3].im led_driver_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.v[3].im z1.v[3].im z1.i[3].re led_driver_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.v[3].re }
eq_56 : z1.v[3].re@M laptop_adpt_3.loadBase1.v[3].re@ // z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re
eq_47 : z1.v[3].re@ z1.i[3].re# z1.i[3].im# // z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_95 : laptop_adpt_3.loadBase1.v[3].im# led_driver_3.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_124 : laptop_adpt_3.loadBase1.i[3].im@M led_driver_3.loadBase1.i[3].im@ z1.i[3].im@ // laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0
eq_26 : laptop_adpt_3.loadBase1.v[3].im# laptop_adpt_3.loadBase1.i[3].im# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
eq_57 : z1.v[3].im@M laptop_adpt_3.loadBase1.v[3].im@ // z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im
eq_50 : z1.v[3].im@ z1.i[3].im# z1.i[3].re# // z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_92 : laptop_adpt_3.loadBase1.v[3].re# led_driver_3.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
eq_127 : laptop_adpt_3.loadBase1.i[3].re@M led_driver_3.loadBase1.i[3].re@ z1.i[3].re@ // laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0
eq_23 : laptop_adpt_3.loadBase1.v[3].re# laptop_adpt_3.loadBase1.i[3].re# // 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))

Initial matching
----------------------------------------
BiPGraph matching:
eq_56 : z1.v[3].re
eq_124 : laptop_adpt_3.loadBase1.i[3].im
eq_57 : z1.v[3].im
eq_127 : laptop_adpt_3.loadBase1.i[3].re
Unmatched equations: {eq_47 eq_95 eq_26 eq_50 eq_92 eq_23 }
Unmatched variables: {z1.i[3].im led_driver_3.loadBase1.i[3].im laptop_adpt_3.loadBase1.v[3].im z1.i[3].re led_driver_3.loadBase1.i[3].re laptop_adpt_3.loadBase1.v[3].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_56 : laptop_adpt_3.loadBase1.v[3].re
eq_47 : z1.v[3].re
eq_124 : laptop_adpt_3.loadBase1.i[3].im
eq_57 : laptop_adpt_3.loadBase1.v[3].im
eq_50 : z1.v[3].im
eq_127 : laptop_adpt_3.loadBase1.i[3].re
Unmatched equations: {eq_95 eq_26 eq_92 eq_23 }
Unmatched variables: {z1.i[3].im led_driver_3.loadBase1.i[3].im z1.i[3].re led_driver_3.loadBase1.i[3].re }
----------------------------------------

Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: z1.i[3].re
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: z1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_3.loadBase1.i[3].im
Automatic tearing pair, equation: 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5)), tearing with variable: led_driver_3.loadBase1.i[3].re
--- Solved equation ---
temp_99 := time > 0.5

--- Solved equation ---
temp_100 := time > 0.25

--- Solved equation ---
temp_101 := time > 0.4

--- Solved equation ---
der(PhA.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
PhA.omega := der(PhA.theta)

--- Solved equation ---
der(PhB.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
PhB.omega := der(PhB.theta)

--- Solved equation ---
der(PhC.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
PhC.omega := der(PhC.theta)

--- Solved equation ---
pre(systemDef.modeSelect) := false

--- Solved equation ---
systemDef.modeSelect := pre(systemDef.modeSelect)

--- Torn system (Block 1) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[1].re
  laptop_adpt_1.loadBase1.v[1].re
  laptop_adpt_1.loadBase1.i[1].im
  z.v[1].im
  laptop_adpt_1.loadBase1.v[1].im
  laptop_adpt_1.loadBase1.i[1].re

Iteration variables:
  z.i[1].re (start=0,nominal=1)
  z.i[1].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[1].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[1].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[1].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[1].re (start=0,nominal=1)

Torn equations:
  z.v[1].re := z.z.re .* z.i[1].re + (- z.z.im .* systemDef.hrms[1] .* z.i[1].im)
  laptop_adpt_1.loadBase1.v[1].re := - z.v[1].re + test_DY.idealTransformer2.vSec[1].re
  laptop_adpt_1.loadBase1.i[1].im := - laptop_adpt_2.loadBase1.i[1].im + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + z.i[1].im
  z.v[1].im := z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re
  laptop_adpt_1.loadBase1.v[1].im := - z.v[1].im + test_DY.idealTransformer2.vSec[1].im
  laptop_adpt_1.loadBase1.i[1].re := - laptop_adpt_2.loadBase1.i[1].re + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + z.i[1].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z.i[1].re
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z.i[1].im
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: laptop_adpt_2.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_1.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_2.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: laptop_adpt_2.loadBase1.i[1].re
  0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_1.loadBase1.i[1].re
  0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_2.loadBase1.i[1].re

--- Torn system (Block 2) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[2].re
  laptop_adpt_1.loadBase1.v[2].re
  laptop_adpt_1.loadBase1.i[2].im
  z.v[2].im
  laptop_adpt_1.loadBase1.v[2].im
  laptop_adpt_1.loadBase1.i[2].re

Iteration variables:
  z.i[2].re (start=0,nominal=1)
  z.i[2].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[2].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[2].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[2].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[2].re (start=0,nominal=1)

Torn equations:
  z.v[2].re := z.z.re .* z.i[2].re + (- z.z.im .* systemDef.hrms[2] .* z.i[2].im)
  laptop_adpt_1.loadBase1.v[2].re := - z.v[2].re + test_DY.idealTransformer2.vSec[2].re
  laptop_adpt_1.loadBase1.i[2].im := - laptop_adpt_2.loadBase1.i[2].im + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + z.i[2].im
  z.v[2].im := z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re
  laptop_adpt_1.loadBase1.v[2].im := - z.v[2].im + test_DY.idealTransformer2.vSec[2].im
  laptop_adpt_1.loadBase1.i[2].re := - laptop_adpt_2.loadBase1.i[2].re + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + z.i[2].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: laptop_adpt_2.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_1.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_2.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: laptop_adpt_2.loadBase1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_1.loadBase1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_2.loadBase1.i[2].re

--- Torn system (Block 3) of 8 iteration variables and 6 solved variables ---
Torn variables:
  z.v[3].re
  laptop_adpt_1.loadBase1.v[3].re
  laptop_adpt_1.loadBase1.i[3].im
  z.v[3].im
  laptop_adpt_1.loadBase1.v[3].im
  laptop_adpt_1.loadBase1.i[3].re

Iteration variables:
  z.i[3].re (start=0,nominal=1)
  z.i[3].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_1.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_2.loadBase1.i[3].im (start=0,nominal=1)
  laptop_adpt_2.loadBase1.i[3].re (start=0,nominal=1)
  led_driver_1.loadBase1.i[3].re (start=0,nominal=1)
  led_driver_2.loadBase1.i[3].re (start=0,nominal=1)

Torn equations:
  z.v[3].re := z.z.re .* z.i[3].re + (- z.z.im .* systemDef.hrms[3] .* z.i[3].im)
  laptop_adpt_1.loadBase1.v[3].re := - z.v[3].re + test_DY.idealTransformer2.vSec[3].re
  laptop_adpt_1.loadBase1.i[3].im := - laptop_adpt_2.loadBase1.i[3].im + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + z.i[3].im
  z.v[3].im := z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re
  laptop_adpt_1.loadBase1.v[3].im := - z.v[3].im + test_DY.idealTransformer2.vSec[3].im
  laptop_adpt_1.loadBase1.i[3].re := - laptop_adpt_2.loadBase1.i[3].re + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + z.i[3].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: laptop_adpt_2.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_1.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_2.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: laptop_adpt_2.loadBase1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_1.loadBase1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_2.loadBase1.i[3].re

--- Solved equation ---
pre(systemDef.eventWriteData) := false

--- Solved equation ---
systemDef.eventWriteData := pre(systemDef.eventWriteData)

--- Solved equation ---
temp_102 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)

--- Solved equation ---
pre(systemDef.eventReadData) := false

--- Solved equation ---
systemDef.eventReadData := pre(systemDef.eventReadData)

--- Solved equation ---
temp_103 := systemDef.eventReadData <> pre(systemDef.eventReadData)

--- Solved equation ---
laptop_adpt_1.loadBase1.omega := der(PhA.theta)

--- Torn system (Block 4) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[1].re
  laptop_adpt_3.loadBase1.v[1].re
  laptop_adpt_3.loadBase1.i[1].im
  z1.v[1].im
  laptop_adpt_3.loadBase1.v[1].im
  laptop_adpt_3.loadBase1.i[1].re

Iteration variables:
  z1.i[1].re (start=0,nominal=1)
  z1.i[1].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[1].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[1].re (start=0,nominal=1)

Torn equations:
  z1.v[1].re := z1.z.re .* z1.i[1].re + (- z1.z.im .* systemDef.hrms[1] .* z1.i[1].im)
  laptop_adpt_3.loadBase1.v[1].re := - z1.v[1].re + test_DY.idealTransformer3.vSec[1].re
  laptop_adpt_3.loadBase1.i[1].im := - led_driver_3.loadBase1.i[1].im + z1.i[1].im
  z1.v[1].im := z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
  laptop_adpt_3.loadBase1.v[1].im := - z1.v[1].im + test_DY.idealTransformer3.vSec[1].im
  laptop_adpt_3.loadBase1.i[1].re := - led_driver_3.loadBase1.i[1].re + z1.i[1].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z1.i[1].re
  0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: z1.i[1].im
  0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_3.loadBase1.i[1].im
  0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1))
    Iteration variables: led_driver_3.loadBase1.i[1].re

--- Torn system (Block 5) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[2].re
  laptop_adpt_3.loadBase1.v[2].re
  laptop_adpt_3.loadBase1.i[2].im
  z1.v[2].im
  laptop_adpt_3.loadBase1.v[2].im
  laptop_adpt_3.loadBase1.i[2].re

Iteration variables:
  z1.i[2].re (start=0,nominal=1)
  z1.i[2].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[2].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[2].re (start=0,nominal=1)

Torn equations:
  z1.v[2].re := z1.z.re .* z1.i[2].re + (- z1.z.im .* systemDef.hrms[2] .* z1.i[2].im)
  laptop_adpt_3.loadBase1.v[2].re := - z1.v[2].re + test_DY.idealTransformer3.vSec[2].re
  laptop_adpt_3.loadBase1.i[2].im := - led_driver_3.loadBase1.i[2].im + z1.i[2].im
  z1.v[2].im := z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
  laptop_adpt_3.loadBase1.v[2].im := - z1.v[2].im + test_DY.idealTransformer3.vSec[2].im
  laptop_adpt_3.loadBase1.i[2].re := - led_driver_3.loadBase1.i[2].re + z1.i[2].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z1.i[2].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: z1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_3.loadBase1.i[2].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3))
    Iteration variables: led_driver_3.loadBase1.i[2].re

--- Torn system (Block 6) of 4 iteration variables and 6 solved variables ---
Torn variables:
  z1.v[3].re
  laptop_adpt_3.loadBase1.v[3].re
  laptop_adpt_3.loadBase1.i[3].im
  z1.v[3].im
  laptop_adpt_3.loadBase1.v[3].im
  laptop_adpt_3.loadBase1.i[3].re

Iteration variables:
  z1.i[3].re (start=0,nominal=1)
  z1.i[3].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[3].im (start=0,nominal=1)
  led_driver_3.loadBase1.i[3].re (start=0,nominal=1)

Torn equations:
  z1.v[3].re := z1.z.re .* z1.i[3].re + (- z1.z.im .* systemDef.hrms[3] .* z1.i[3].im)
  laptop_adpt_3.loadBase1.v[3].re := - z1.v[3].re + test_DY.idealTransformer3.vSec[3].re
  laptop_adpt_3.loadBase1.i[3].im := - led_driver_3.loadBase1.i[3].im + z1.i[3].im
  z1.v[3].im := z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
  laptop_adpt_3.loadBase1.v[3].im := - z1.v[3].im + test_DY.idealTransformer3.vSec[3].im
  laptop_adpt_3.loadBase1.i[3].re := - led_driver_3.loadBase1.i[3].re + z1.i[3].re

Residual equations:
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z1.i[3].re
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: z1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_3.loadBase1.i[3].im
  0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5))
    Iteration variables: led_driver_3.loadBase1.i[3].re

--- Solved equation ---
temp_104 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)

--- Solved equation ---
temp_105 := systemDef.eventReadData <> pre(systemDef.eventReadData)

--- Solved equation ---
laptop_adpt_3.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
terminal.omega := der(PhA.theta)

--- Solved equation ---
z.omega := der(PhA.theta)

--- Solved equation ---
z1.omega := der(PhA.theta)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[1].re := z.i[1].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[1].im := z.i[1].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[2].re := z.i[2].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[2].im := z.i[2].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[3].re := z.i[3].re / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer2.iPrim[3].im := z.i[3].im / (- test_DY.idealTransformer2.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[1].re := z1.i[1].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[1].im := z1.i[1].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[2].re := z1.i[2].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[2].im := z1.i[2].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[3].re := z1.i[3].re / (- test_DY.idealTransformer3.N)

--- Solved equation ---
test_DY.idealTransformer3.iPrim[3].im := z1.i[3].im / (- test_DY.idealTransformer3.N)

--- Solved equation ---
temp_106 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)

--- Solved equation ---
temp_107 := systemDef.eventReadData <> pre(systemDef.eventReadData)

--- Solved equation ---
laptop_adpt_2.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
temp_108 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)

--- Solved equation ---
temp_109 := systemDef.eventReadData <> pre(systemDef.eventReadData)

--- Solved equation ---
led_driver_1.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
temp_110 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)

--- Solved equation ---
temp_111 := systemDef.eventReadData <> pre(systemDef.eventReadData)

--- Solved equation ---
led_driver_3.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
temp_112 := systemDef.eventWriteData <> pre(systemDef.eventWriteData)

--- Solved equation ---
temp_113 := systemDef.eventReadData <> pre(systemDef.eventReadData)

--- Solved equation ---
led_driver_2.loadBase1.omega := der(PhA.theta)

--- Solved equation ---
PhA.i[1].im := - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer2.iPrim[1].im

--- Solved equation ---
PhB.i[1].im := - test_DY.idealTransformer2.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im

--- Solved equation ---
PhC.i[1].im := test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im)

--- Solved equation ---
ground1.pin.iIm[1] := PhA.i[1].im + PhB.i[1].im + PhC.i[1].im

--- Solved equation ---
PhA.i[2].im := - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer2.iPrim[2].im

--- Solved equation ---
PhB.i[2].im := - test_DY.idealTransformer2.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im

--- Solved equation ---
PhC.i[2].im := test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im)

--- Solved equation ---
ground1.pin.iIm[2] := PhA.i[2].im + PhB.i[2].im + PhC.i[2].im

--- Solved equation ---
PhA.i[3].im := - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer2.iPrim[3].im

--- Solved equation ---
PhB.i[3].im := - test_DY.idealTransformer2.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im

--- Solved equation ---
PhC.i[3].im := test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im)

--- Solved equation ---
ground1.pin.iIm[3] := PhA.i[3].im + PhB.i[3].im + PhC.i[3].im

--- Solved equation ---
PhA.i[1].re := - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer2.iPrim[1].re

--- Solved equation ---
PhB.i[1].re := - test_DY.idealTransformer2.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re

--- Solved equation ---
PhC.i[1].re := test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re)

--- Solved equation ---
ground1.pin.iRe[1] := PhA.i[1].re + PhB.i[1].re + PhC.i[1].re

--- Solved equation ---
PhA.i[2].re := - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer2.iPrim[2].re

--- Solved equation ---
PhB.i[2].re := - test_DY.idealTransformer2.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re

--- Solved equation ---
PhC.i[2].re := test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re)

--- Solved equation ---
ground1.pin.iRe[2] := PhA.i[2].re + PhB.i[2].re + PhC.i[2].re

--- Solved equation ---
PhA.i[3].re := - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer2.iPrim[3].re

--- Solved equation ---
PhB.i[3].re := - test_DY.idealTransformer2.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re

--- Solved equation ---
PhC.i[3].re := test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re)

--- Solved equation ---
ground1.pin.iRe[3] := PhA.i[3].re + PhB.i[3].re + PhC.i[3].re

--- Solved equation ---
test_DY.hPin_N.iIm[1] := terminal.i[1].im + z.i[1].im + z1.i[1].im

--- Solved equation ---
ground2.pin.iIm[1] := laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + laptop_adpt_3.loadBase1.i[1].im + (led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im) + (led_driver_3.loadBase1.i[1].im + terminal.i[1].im + (- test_DY.hPin_N.iIm[1]))

--- Solved equation ---
test_DY.hPin_N.iIm[2] := terminal.i[2].im + z.i[2].im + z1.i[2].im

--- Solved equation ---
ground2.pin.iIm[2] := laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + laptop_adpt_3.loadBase1.i[2].im + (led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im) + (led_driver_3.loadBase1.i[2].im + terminal.i[2].im + (- test_DY.hPin_N.iIm[2]))

--- Solved equation ---
test_DY.hPin_N.iIm[3] := terminal.i[3].im + z.i[3].im + z1.i[3].im

--- Solved equation ---
ground2.pin.iIm[3] := laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + laptop_adpt_3.loadBase1.i[3].im + (led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im) + (led_driver_3.loadBase1.i[3].im + terminal.i[3].im + (- test_DY.hPin_N.iIm[3]))

--- Solved equation ---
test_DY.hPin_N.iRe[1] := terminal.i[1].re + z.i[1].re + z1.i[1].re

--- Solved equation ---
ground2.pin.iRe[1] := laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + laptop_adpt_3.loadBase1.i[1].re + (led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re) + (led_driver_3.loadBase1.i[1].re + terminal.i[1].re + (- test_DY.hPin_N.iRe[1]))

--- Solved equation ---
test_DY.hPin_N.iRe[2] := terminal.i[2].re + z.i[2].re + z1.i[2].re

--- Solved equation ---
ground2.pin.iRe[2] := laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + laptop_adpt_3.loadBase1.i[2].re + (led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re) + (led_driver_3.loadBase1.i[2].re + terminal.i[2].re + (- test_DY.hPin_N.iRe[2]))

--- Solved equation ---
test_DY.hPin_N.iRe[3] := terminal.i[3].re + z.i[3].re + z1.i[3].re

--- Solved equation ---
ground2.pin.iRe[3] := laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + laptop_adpt_3.loadBase1.i[3].re + (led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re) + (led_driver_3.loadBase1.i[3].re + terminal.i[3].re + (- test_DY.hPin_N.iRe[3]))

--- Solved equation ---
PhA.theta := 0

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Solved equation ---
PhC.theta := 0

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta))

--- Solved equation ---
PhB.theta := 0

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Meta equation block ---
HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta))

--- Solved equation ---
PhA.P := PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im)

--- Solved equation ---
PhB.P := PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im)

--- Solved equation ---
PhC.P := PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0)

--- Solved equation ---
z1.vFundAbs := (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.vFundArg := Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0)

--- Solved equation ---
z1.iFundAbs := (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundArg := Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

--- Meta equation block ---
algorithm


--- Solved equation ---
pre(temp_99) := false

--- Solved equation ---
pre(temp_100) := false

--- Solved equation ---
pre(temp_101) := false

--- Solved equation ---
pre(temp_102) := false

--- Solved equation ---
pre(temp_103) := false

--- Solved equation ---
pre(temp_104) := false

--- Solved equation ---
pre(temp_105) := false

--- Solved equation ---
pre(temp_106) := false

--- Solved equation ---
pre(temp_107) := false

--- Solved equation ---
pre(temp_108) := false

--- Solved equation ---
pre(temp_109) := false

--- Solved equation ---
pre(temp_110) := false

--- Solved equation ---
pre(temp_111) := false

--- Solved equation ---
pre(temp_112) := false

--- Solved equation ---
pre(temp_113) := false
-------------------------------

Diagnostics for transformed flattened model:
Diagnostics for flattened class HPF.Examples.DC_Testbed.Configuration_3
Number of independent constants:                  12(   12 scalars)
  Number of Real independent constants:            4(    4 scalars)
  Number of Real independent constants:            4(    4 scalars)
  Number of Integer independent constants:         0(    0 scalars)
  Number of Enum independent constants:            0(    0 scalars)
  Number of Boolean independent constants:         0(    0 scalars)
  Number of String independent constants:          8(    8 scalars)
Number of dependent constants:                     0(    0 scalars)
  Number of Real dependent constants:              0(    0 scalars)
  Number of Integer dependent constants:           0(    0 scalars)
  Number of Enum dependent constants:              0(    0 scalars)
  Number of Boolean dependent constants:           0(    0 scalars)
  Number of String dependent constants:            0(    0 scalars)
Number of independent parameters:                142(  142 scalars)
  Number of Real independent parameters:         111(  111 scalars)
  Number of Integer independent parameters:       18(   18 scalars)
  Number of Enum independent parameters:           0(    0 scalars)
  Number of Boolean independent parameters:       13(   13 scalars)
  Number of String independent parameters:         0(    0 scalars)
Number of dependent parameters:                  112(  112 scalars)
  Number of Real dependent parameters:           112(  112 scalars)
  Number of Integer dependent parameters:          0(    0 scalars)
  Number of Enum dependent parameters:             0(    0 scalars)
  Number of Boolean dependent parameters:          0(    0 scalars)
  Number of String dependent parameters:           0(    0 scalars)
Number of initial parameters:                      0(    0 scalars)
  Number of Real dependent parameters:             0(    0 scalars)
  Number of Integer dependent parameters:          0(    0 scalars)
  Number of Enum dependent parameters:             0(    0 scalars)
  Number of Boolean dependent parameters:          0(    0 scalars)
  Number of String dependent parameters:           0(    0 scalars)
Number of variables:                             167(  167 scalars)
  Number of Real variables:                      149(  149 scalars)
  Number of Integer variables:                     0(    0 scalars)
  Number of Enum variables:                        0(    0 scalars)
  Number of Boolean variables:                    18(   18 scalars)
  Number of String variables:                      0(    0 scalars)
Number of Real differentiated variables:           3(    3 scalars)
Number of Real derivative variables:               3(    3 scalars)
Number of Real continous algebraic variables:    143(  143 scalars)
Number of inputs:                                  0(    0 scalars)
  Number of Real inputs:                           0(    0 scalars)
  Number of Integer inputs:                        0(    0 scalars)
  Number of Enum inputs:                           0(    0 scalars)
  Number of Boolean inputs:                        0(    0 scalars)
  Number of String inputs:                         0(    0 scalars)
Number of discrete variables:                     18(   18 scalars)
  Number of Real discrete variables:               0(    0 scalars)
  Number of Integer discrete variables:            0(    0 scalars)
  Number of Enum discrete variables:               0(    0 scalars)
  Number of Boolean discrete variables:           18(   18 scalars)
  Number of String discrete variables:             0(    0 scalars)
Number of equations:                             182(  164 scalars)
Number of variables with binding expression:       0(    0 scalars)
  Number of Real variables with binding exp:       0(    0 scalars)
  Number of Integer variables binding exp:         0(    0 scalars)
  Number of Enum variables binding exp:            0(    0 scalars)
  Number of Boolean variables binding exp:         0(    0 scalars)
  Number of String variables binding exp:          0(    0 scalars)
Total number of equations:                       182(  164 scalars)
Number of initial equations:                      22(   21 scalars)
Number of event indicators in equations:           0
Number of event indicators in init equations:      0

Independent constants: 
 laptop_adpt_1.S_vect[1].im: number of uses: 0, isLinear: true
 laptop_adpt_1.S_vect[2].re: number of uses: 0, isLinear: true
 laptop_adpt_1.S_vect[2].im: number of uses: 0, isLinear: true
 laptop_adpt_1.globalSeed: number of uses: 0, isLinear: true
 PhA.properties.ComponentType: number of uses: 0, isLinear: true
 ground1.properties.ComponentType: number of uses: 0, isLinear: true
 laptop_adpt_1.properties.ComponentType: number of uses: 0, isLinear: true
 terminal.properties.ComponentType: number of uses: 0, isLinear: true
 z.properties.ComponentType: number of uses: 0, isLinear: true
 test_DY.properties.ComponentType: number of uses: 0, isLinear: true
 test_DY.idealTransformer1.properties.ComponentType: number of uses: 0, isLinear: true
 laptop_1.properties.ComponentType: number of uses: 0, isLinear: true

Dependent constants: 

Independent parameters: 
 systemDef.fFund: number of uses: 3, isLinear: true, evaluated binding exp: 60
 systemDef.smplFreq: number of uses: 0, isLinear: true, evaluated binding exp: 5000.0
 PhA.vMag[1]: number of uses: 2, isLinear: true, evaluated binding exp: 125
 PhA.vMag[2]: number of uses: 2, isLinear: true, evaluated binding exp: 0.25
 PhA.vMag[3]: number of uses: 2, isLinear: true, evaluated binding exp: 0.5
 PhA.vArg[1]: number of uses: 2, isLinear: true, evaluated binding exp: 0
 PhA.vArg[2]: number of uses: 2, isLinear: true, evaluated binding exp: 1
 PhA.vArg[3]: number of uses: 2, isLinear: true, evaluated binding exp: 0.53
 PhB.vMag[1]: number of uses: 2, isLinear: true, evaluated binding exp: 125
 PhB.vMag[2]: number of uses: 2, isLinear: true, evaluated binding exp: 0.25
 PhB.vMag[3]: number of uses: 2, isLinear: true, evaluated binding exp: 0.5
 PhB.vArg[1]: number of uses: 2, isLinear: true, evaluated binding exp: 1.2
 PhB.vArg[2]: number of uses: 2, isLinear: true, evaluated binding exp: 2.5
 PhB.vArg[3]: number of uses: 2, isLinear: true, evaluated binding exp: 0.3
 PhC.vMag[1]: number of uses: 2, isLinear: true, evaluated binding exp: 125
 PhC.vMag[2]: number of uses: 2, isLinear: true, evaluated binding exp: 2
 PhC.vMag[3]: number of uses: 2, isLinear: true, evaluated binding exp: 0.3
 PhC.vArg[1]: number of uses: 2, isLinear: true, evaluated binding exp: 1.9
 PhC.vArg[2]: number of uses: 2, isLinear: true, evaluated binding exp: 2
 PhC.vArg[3]: number of uses: 2, isLinear: true, evaluated binding exp: -0.5
 laptop_adpt_1.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 100
 laptop_adpt_1.efficiency: number of uses: 1, isLinear: true, evaluated binding exp: 0.95
 laptop_adpt_1.hrmMdl_coefMag[1]: number of uses: 6, isLinear: true, evaluated binding exp: 2.70064268049248E-5
 laptop_adpt_1.hrmMdl_coefMag[2]: number of uses: 6, isLinear: true, evaluated binding exp: -0.0015697610131034
 laptop_adpt_1.hrmMdl_coefMag[3]: number of uses: 6, isLinear: true, evaluated binding exp: -0.00600037080602108
 laptop_adpt_1.hrmMdl_coefMag[4]: number of uses: 6, isLinear: true, evaluated binding exp: 0.995516922015768
 laptop_adpt_1.hrmMdl_coefArg[1]: number of uses: 6, isLinear: true, evaluated binding exp: -5.02372881045404E-5
 laptop_adpt_1.hrmMdl_coefArg[2]: number of uses: 6, isLinear: true, evaluated binding exp: 0.00237063924944842
 laptop_adpt_1.hrmMdl_coefArg[3]: number of uses: 6, isLinear: true, evaluated binding exp: -1.49993957428169
 laptop_adpt_1.hrmMdl_coefArg[4]: number of uses: 6, isLinear: true, evaluated binding exp: 1.71994407623008
 laptop_adpt_1.rectifierModel: number of uses: 0, isLinear: true, evaluated binding exp: 1
 laptop_adpt_3.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 100
 laptop_adpt_3.efficiency: number of uses: 1, isLinear: true, evaluated binding exp: 0.95
 laptop_adpt_3.hrmMdl_coefMag[1]: number of uses: 6, isLinear: true, evaluated binding exp: 2.70064268049248E-5
 laptop_adpt_3.hrmMdl_coefMag[2]: number of uses: 6, isLinear: true, evaluated binding exp: -0.0015697610131034
 laptop_adpt_3.hrmMdl_coefMag[3]: number of uses: 6, isLinear: true, evaluated binding exp: -0.00600037080602108
 laptop_adpt_3.hrmMdl_coefMag[4]: number of uses: 6, isLinear: true, evaluated binding exp: 0.995516922015768
 laptop_adpt_3.hrmMdl_coefArg[1]: number of uses: 6, isLinear: true, evaluated binding exp: -5.02372881045404E-5
 laptop_adpt_3.hrmMdl_coefArg[2]: number of uses: 6, isLinear: true, evaluated binding exp: 0.00237063924944842
 laptop_adpt_3.hrmMdl_coefArg[3]: number of uses: 6, isLinear: true, evaluated binding exp: -1.49993957428169
 laptop_adpt_3.hrmMdl_coefArg[4]: number of uses: 6, isLinear: true, evaluated binding exp: 1.71994407623008
 laptop_adpt_3.rectifierModel: number of uses: 0, isLinear: true, evaluated binding exp: 1
 terminal.r: number of uses: 6, isLinear: true, evaluated binding exp: 1000000.0
 z.z.re: number of uses: 6, isLinear: true, evaluated binding exp: 2.0
 z.z.im: number of uses: 6, isLinear: true, evaluated binding exp: 3.2
 z1.z.re: number of uses: 6, isLinear: true, evaluated binding exp: 2.0
 z1.z.im: number of uses: 6, isLinear: true, evaluated binding exp: 3.0
 laptop_adpt_2.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 100
 laptop_adpt_2.efficiency: number of uses: 1, isLinear: true, evaluated binding exp: 0.95
 laptop_adpt_2.hrmMdl_coefMag[1]: number of uses: 6, isLinear: true, evaluated binding exp: 2.70064268049248E-5
 laptop_adpt_2.hrmMdl_coefMag[2]: number of uses: 6, isLinear: true, evaluated binding exp: -0.0015697610131034
 laptop_adpt_2.hrmMdl_coefMag[3]: number of uses: 6, isLinear: true, evaluated binding exp: -0.00600037080602108
 laptop_adpt_2.hrmMdl_coefMag[4]: number of uses: 6, isLinear: true, evaluated binding exp: 0.995516922015768
 laptop_adpt_2.hrmMdl_coefArg[1]: number of uses: 6, isLinear: true, evaluated binding exp: -5.02372881045404E-5
 laptop_adpt_2.hrmMdl_coefArg[2]: number of uses: 6, isLinear: true, evaluated binding exp: 0.00237063924944842
 laptop_adpt_2.hrmMdl_coefArg[3]: number of uses: 6, isLinear: true, evaluated binding exp: -1.49993957428169
 laptop_adpt_2.hrmMdl_coefArg[4]: number of uses: 6, isLinear: true, evaluated binding exp: 1.71994407623008
 laptop_adpt_2.rectifierModel: number of uses: 0, isLinear: true, evaluated binding exp: 1
 led_driver_1.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 100
 led_driver_1.efficiency: number of uses: 1, isLinear: true, evaluated binding exp: 0.95
 led_driver_1.hrmMdl_coefMag[1]: number of uses: 6, isLinear: true, evaluated binding exp: 2.70064268049248E-5
 led_driver_1.hrmMdl_coefMag[2]: number of uses: 6, isLinear: true, evaluated binding exp: -0.0015697610131034
 led_driver_1.hrmMdl_coefMag[3]: number of uses: 6, isLinear: true, evaluated binding exp: -0.00600037080602108
 led_driver_1.hrmMdl_coefMag[4]: number of uses: 6, isLinear: true, evaluated binding exp: 0.995516922015768
 led_driver_1.hrmMdl_coefArg[1]: number of uses: 6, isLinear: true, evaluated binding exp: -5.02372881045404E-5
 led_driver_1.hrmMdl_coefArg[2]: number of uses: 6, isLinear: true, evaluated binding exp: 0.00237063924944842
 led_driver_1.hrmMdl_coefArg[3]: number of uses: 6, isLinear: true, evaluated binding exp: -1.49993957428169
 led_driver_1.hrmMdl_coefArg[4]: number of uses: 6, isLinear: true, evaluated binding exp: 1.71994407623008
 led_driver_1.rectifierModel: number of uses: 0, isLinear: true, evaluated binding exp: 1
 led_driver_3.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 100
 led_driver_3.efficiency: number of uses: 1, isLinear: true, evaluated binding exp: 0.95
 led_driver_3.hrmMdl_coefMag[1]: number of uses: 6, isLinear: true, evaluated binding exp: 2.70064268049248E-5
 led_driver_3.hrmMdl_coefMag[2]: number of uses: 6, isLinear: true, evaluated binding exp: -0.0015697610131034
 led_driver_3.hrmMdl_coefMag[3]: number of uses: 6, isLinear: true, evaluated binding exp: -0.00600037080602108
 led_driver_3.hrmMdl_coefMag[4]: number of uses: 6, isLinear: true, evaluated binding exp: 0.995516922015768
 led_driver_3.hrmMdl_coefArg[1]: number of uses: 6, isLinear: true, evaluated binding exp: -5.02372881045404E-5
 led_driver_3.hrmMdl_coefArg[2]: number of uses: 6, isLinear: true, evaluated binding exp: 0.00237063924944842
 led_driver_3.hrmMdl_coefArg[3]: number of uses: 6, isLinear: true, evaluated binding exp: -1.49993957428169
 led_driver_3.hrmMdl_coefArg[4]: number of uses: 6, isLinear: true, evaluated binding exp: 1.71994407623008
 led_driver_3.rectifierModel: number of uses: 0, isLinear: true, evaluated binding exp: 1
 led_driver_2.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 100
 led_driver_2.efficiency: number of uses: 1, isLinear: true, evaluated binding exp: 0.95
 led_driver_2.hrmMdl_coefMag[1]: number of uses: 6, isLinear: true, evaluated binding exp: 2.70064268049248E-5
 led_driver_2.hrmMdl_coefMag[2]: number of uses: 6, isLinear: true, evaluated binding exp: -0.0015697610131034
 led_driver_2.hrmMdl_coefMag[3]: number of uses: 6, isLinear: true, evaluated binding exp: -0.00600037080602108
 led_driver_2.hrmMdl_coefMag[4]: number of uses: 6, isLinear: true, evaluated binding exp: 0.995516922015768
 led_driver_2.hrmMdl_coefArg[1]: number of uses: 6, isLinear: true, evaluated binding exp: -5.02372881045404E-5
 led_driver_2.hrmMdl_coefArg[2]: number of uses: 6, isLinear: true, evaluated binding exp: 0.00237063924944842
 led_driver_2.hrmMdl_coefArg[3]: number of uses: 6, isLinear: true, evaluated binding exp: -1.49993957428169
 led_driver_2.hrmMdl_coefArg[4]: number of uses: 6, isLinear: true, evaluated binding exp: 1.71994407623008
 led_driver_2.rectifierModel: number of uses: 0, isLinear: true, evaluated binding exp: 1
 laptop_1.pwr: number of uses: 1, isLinear: true, evaluated binding exp: 500
 laptop_2.pwr: number of uses: 1, isLinear: true, evaluated binding exp: 500
 laptop_3.pwr: number of uses: 1, isLinear: true, evaluated binding exp: 500
 led_3.pwr: number of uses: 1, isLinear: true, evaluated binding exp: 500
 led_1.pwr: number of uses: 1, isLinear: true, evaluated binding exp: 500
 led_2.pwr: number of uses: 1, isLinear: true, evaluated binding exp: 500
 _block_jacobian_check_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-6
 _cs_rel_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-6
 _cs_step_size: number of uses: 0, isLinear: true, evaluated binding exp: 0.001
 _events_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _events_tol_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-4
 _nle_jacobian_finite_difference_delta: number of uses: 0, isLinear: true, evaluated binding exp: 1.490116119384766E-8
 _nle_solver_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _nle_solver_max_residual_scaling_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E10
 _nle_solver_min_residual_scaling_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _nle_solver_min_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-12
 _nle_solver_regularization_tolerance: number of uses: 0, isLinear: true, evaluated binding exp: -1.0
 _nle_solver_step_limit_factor: number of uses: 0, isLinear: true, evaluated binding exp: 10.0
 _nle_solver_tol_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-4
 _time_events_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 2.220446049250313E-14
 systemDef.hrms[1]: number of uses: 4, isLinear: true, evaluated binding exp: 1
 systemDef.hrms[2]: number of uses: 4, isLinear: true, evaluated binding exp: 3
 systemDef.hrms[3]: number of uses: 4, isLinear: true, evaluated binding exp: 5
 systemDef.numPh: number of uses: 0, isLinear: true, evaluated binding exp: 3
 test_DY.N: number of uses: 3, isLinear: true, evaluated binding exp: 10
 _block_solver_experimental_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _cs_experimental_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _cs_solver: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _iteration_variable_scaling: number of uses: 0, isLinear: true, evaluated binding exp: 1
 _log_level: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _nle_active_bounds_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _nle_jacobian_calculation_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _nle_jacobian_update_mode: number of uses: 0, isLinear: true, evaluated binding exp: 2
 _nle_solver_exit_criterion: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _nle_solver_max_iter: number of uses: 0, isLinear: true, evaluated binding exp: 100
 _nle_solver_max_iter_no_jacobian: number of uses: 0, isLinear: true, evaluated binding exp: 10
 _residual_equation_scaling: number of uses: 0, isLinear: true, evaluated binding exp: 1
 systemDef.numHrm: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _block_jacobian_check: number of uses: 0, isLinear: true, evaluated binding exp: false
 _block_solver_profiling: number of uses: 0, isLinear: true, evaluated binding exp: false
 _enforce_bounds: number of uses: 0, isLinear: true, evaluated binding exp: true
 _nle_brent_ignore_error: number of uses: 0, isLinear: true, evaluated binding exp: false
 _nle_solver_check_jac_cond: number of uses: 0, isLinear: true, evaluated binding exp: false
 _nle_solver_use_last_integrator_step: number of uses: 0, isLinear: true, evaluated binding exp: true
 _nle_solver_use_nominals_as_fallback: number of uses: 0, isLinear: true, evaluated binding exp: true
 _rescale_after_singular_jac: number of uses: 0, isLinear: true, evaluated binding exp: true
 _rescale_each_step: number of uses: 0, isLinear: true, evaluated binding exp: false
 _runtime_log_to_file: number of uses: 0, isLinear: true, evaluated binding exp: false
 _use_Brent_in_1d: number of uses: 0, isLinear: true, evaluated binding exp: true
 _use_jacobian_equilibration: number of uses: 0, isLinear: true, evaluated binding exp: false
 _use_newton_for_brent: number of uses: 0, isLinear: true, evaluated binding exp: true

Dependent parameters: 
 laptop_adpt_1.constantVoltage1.V: number of uses: 3, isLinear: true
 laptop_adpt_3.constantVoltage1.V: number of uses: 3, isLinear: true
 test_DY.idealTransformer1.N: number of uses: 10, isLinear: true
 test_DY.idealTransformer2.N: number of uses: 10, isLinear: true
 test_DY.idealTransformer3.N: number of uses: 10, isLinear: true
 laptop_adpt_2.constantVoltage1.V: number of uses: 3, isLinear: true
 led_driver_1.constantVoltage1.V: number of uses: 3, isLinear: true
 led_driver_3.constantVoltage1.V: number of uses: 3, isLinear: true
 led_driver_2.constantVoltage1.V: number of uses: 3, isLinear: true
 PhA.v[1].re: number of uses: 4, isLinear: true
 PhA.v[2].re: number of uses: 4, isLinear: true
 PhA.v[3].re: number of uses: 4, isLinear: true
 PhA.v[1].im: number of uses: 4, isLinear: true
 PhA.v[2].im: number of uses: 4, isLinear: true
 PhA.v[3].im: number of uses: 4, isLinear: true
 PhB.v[1].re: number of uses: 4, isLinear: true
 PhB.v[2].re: number of uses: 4, isLinear: true
 PhB.v[3].re: number of uses: 4, isLinear: true
 PhB.v[1].im: number of uses: 4, isLinear: true
 PhB.v[2].im: number of uses: 4, isLinear: true
 PhB.v[3].im: number of uses: 4, isLinear: true
 PhC.v[1].re: number of uses: 4, isLinear: true
 PhC.v[2].re: number of uses: 4, isLinear: true
 PhC.v[3].re: number of uses: 4, isLinear: true
 PhC.v[1].im: number of uses: 4, isLinear: true
 PhC.v[2].im: number of uses: 4, isLinear: true
 PhC.v[3].im: number of uses: 4, isLinear: true
 laptop_1.i: number of uses: 4, isLinear: true
 laptop_3.i: number of uses: 4, isLinear: true
 temp_387: number of uses: 3, isLinear: true
 temp_402: number of uses: 3, isLinear: true
 temp_417: number of uses: 3, isLinear: true
 temp_537: number of uses: 3, isLinear: true
 temp_552: number of uses: 3, isLinear: true
 temp_567: number of uses: 3, isLinear: true
 temp_687: number of uses: 3, isLinear: true
 temp_702: number of uses: 3, isLinear: true
 temp_717: number of uses: 3, isLinear: true
 laptop_2.i: number of uses: 4, isLinear: true
 led_1.i: number of uses: 4, isLinear: true
 led_3.i: number of uses: 4, isLinear: true
 led_2.i: number of uses: 4, isLinear: true
 test_DY.idealTransformer2.vPrim[1].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vPrim[2].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vPrim[3].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vPrim[1].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vPrim[2].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vPrim[3].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer1.vPrim[1].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vPrim[1].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer1.vPrim[2].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vPrim[2].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer1.vPrim[3].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vPrim[3].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer1.vPrim[1].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vPrim[1].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer1.vPrim[2].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vPrim[2].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer1.vPrim[3].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vPrim[3].im: number of uses: 2, isLinear: true
 ground6.p.i: number of uses: 1, isLinear: true
 laptop_adpt_1.P: number of uses: 2, isLinear: true
 ground8.p.i: number of uses: 1, isLinear: true
 laptop_adpt_3.P: number of uses: 2, isLinear: true
 ground3.p.i: number of uses: 1, isLinear: true
 laptop_adpt_2.P: number of uses: 2, isLinear: true
 ground4.p.i: number of uses: 1, isLinear: true
 led_driver_1.P: number of uses: 2, isLinear: true
 ground5.p.i: number of uses: 1, isLinear: true
 led_driver_3.P: number of uses: 2, isLinear: true
 ground7.p.i: number of uses: 1, isLinear: true
 led_driver_2.P: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vSec[1].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vSec[2].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vSec[3].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vSec[1].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vSec[2].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer2.vSec[3].im: number of uses: 2, isLinear: true
 terminal.v[1].re: number of uses: 4, isLinear: true
 test_DY.idealTransformer3.vSec[1].re: number of uses: 2, isLinear: true
 terminal.v[2].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vSec[2].re: number of uses: 2, isLinear: true
 terminal.v[3].re: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vSec[3].re: number of uses: 2, isLinear: true
 terminal.v[1].im: number of uses: 4, isLinear: true
 test_DY.idealTransformer3.vSec[1].im: number of uses: 2, isLinear: true
 terminal.v[2].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vSec[2].im: number of uses: 2, isLinear: true
 terminal.v[3].im: number of uses: 2, isLinear: true
 test_DY.idealTransformer3.vSec[3].im: number of uses: 2, isLinear: true
 laptop_adpt_1.S_vect[1].re: number of uses: 2, isLinear: true
 laptop_adpt_3.S_vect[1].re: number of uses: 2, isLinear: true
 laptop_adpt_2.S_vect[1].re: number of uses: 2, isLinear: true
 led_driver_1.S_vect[1].re: number of uses: 2, isLinear: true
 led_driver_3.S_vect[1].re: number of uses: 2, isLinear: true
 led_driver_2.S_vect[1].re: number of uses: 2, isLinear: true
 terminal.i[1].re: number of uses: 6, isLinear: true
 terminal.i[2].re: number of uses: 4, isLinear: true
 terminal.i[3].re: number of uses: 4, isLinear: true
 terminal.vFundAbs: number of uses: 1, isLinear: true
 terminal.vFundArg: number of uses: 1, isLinear: true
 terminal.i[1].im: number of uses: 6, isLinear: true
 terminal.i[2].im: number of uses: 4, isLinear: true
 terminal.i[3].im: number of uses: 4, isLinear: true
 test_DY.idealTransformer1.iPrim[1].re: number of uses: 3, isLinear: true
 test_DY.idealTransformer1.iPrim[2].re: number of uses: 3, isLinear: true
 test_DY.idealTransformer1.iPrim[3].re: number of uses: 3, isLinear: true
 terminal.iFundAbs: number of uses: 1, isLinear: true
 terminal.iFundArg: number of uses: 1, isLinear: true
 test_DY.idealTransformer1.iPrim[1].im: number of uses: 3, isLinear: true
 test_DY.idealTransformer1.iPrim[2].im: number of uses: 3, isLinear: true
 test_DY.idealTransformer1.iPrim[3].im: number of uses: 3, isLinear: true

Differentiated variables: 
 PhA.theta: number of uses: 25, isLinear: false
 PhB.theta: number of uses: 3, isLinear: false
 PhC.theta: number of uses: 3, isLinear: false

Derivative variables: 
 der(PhA.theta): number of uses: 11, isLinear: true
 der(PhB.theta): number of uses: 2, isLinear: true
 der(PhC.theta): number of uses: 2, isLinear: true

Discrete variables: 
 systemDef.modeSelect: number of uses: 37, isLinear: true, alias: no
 systemDef.eventWriteData: number of uses: 7, isLinear: true, alias: no
 systemDef.eventReadData: number of uses: 7, isLinear: true, alias: no
 temp_99: number of uses: 2, isLinear: true, alias: no
 temp_100: number of uses: 2, isLinear: true, alias: no
 temp_101: number of uses: 2, isLinear: true, alias: no
 temp_102: number of uses: 2, isLinear: true, alias: no
 temp_103: number of uses: 2, isLinear: true, alias: no
 temp_104: number of uses: 2, isLinear: true, alias: no
 temp_105: number of uses: 2, isLinear: true, alias: no
 temp_106: number of uses: 2, isLinear: true, alias: no
 temp_107: number of uses: 2, isLinear: true, alias: no
 temp_108: number of uses: 2, isLinear: true, alias: no
 temp_109: number of uses: 2, isLinear: true, alias: no
 temp_110: number of uses: 2, isLinear: true, alias: no
 temp_111: number of uses: 2, isLinear: true, alias: no
 temp_112: number of uses: 2, isLinear: true, alias: no
 temp_113: number of uses: 2, isLinear: true, alias: no

Algebraic real variables: 
 PhA.P: number of uses: 1, isLinear: true, alias: no
 PhA.i[1].re: number of uses: 3, isLinear: true, alias: no
 PhA.i[1].im: number of uses: 3, isLinear: true, alias: no
 PhA.i[2].re: number of uses: 3, isLinear: true, alias: no
 PhA.i[2].im: number of uses: 3, isLinear: true, alias: no
 PhA.i[3].re: number of uses: 3, isLinear: true, alias: no
 PhA.i[3].im: number of uses: 3, isLinear: true, alias: no
 PhA.omega: number of uses: 1, isLinear: true, alias: no
 PhB.P: number of uses: 1, isLinear: true, alias: no
 PhB.i[1].re: number of uses: 3, isLinear: true, alias: no
 PhB.i[1].im: number of uses: 3, isLinear: true, alias: no
 PhB.i[2].re: number of uses: 3, isLinear: true, alias: no
 PhB.i[2].im: number of uses: 3, isLinear: true, alias: no
 PhB.i[3].re: number of uses: 3, isLinear: true, alias: no
 PhB.i[3].im: number of uses: 3, isLinear: true, alias: no
 PhB.omega: number of uses: 1, isLinear: true, alias: no
 PhC.P: number of uses: 1, isLinear: true, alias: no
 PhC.i[1].re: number of uses: 3, isLinear: true, alias: no
 PhC.i[1].im: number of uses: 3, isLinear: true, alias: no
 PhC.i[2].re: number of uses: 3, isLinear: true, alias: no
 PhC.i[2].im: number of uses: 3, isLinear: true, alias: no
 PhC.i[3].re: number of uses: 3, isLinear: true, alias: no
 PhC.i[3].im: number of uses: 3, isLinear: true, alias: no
 PhC.omega: number of uses: 1, isLinear: true, alias: no
 ground1.pin.iIm[1]: number of uses: 1, isLinear: true, alias: no
 ground1.pin.iIm[2]: number of uses: 1, isLinear: true, alias: no
 ground1.pin.iIm[3]: number of uses: 1, isLinear: true, alias: no
 ground1.pin.iRe[1]: number of uses: 1, isLinear: true, alias: no
 ground1.pin.iRe[2]: number of uses: 1, isLinear: true, alias: no
 ground1.pin.iRe[3]: number of uses: 1, isLinear: true, alias: no
 ground2.pin.iIm[1]: number of uses: 1, isLinear: true, alias: no
 ground2.pin.iIm[2]: number of uses: 1, isLinear: true, alias: no
 ground2.pin.iIm[3]: number of uses: 1, isLinear: true, alias: no
 ground2.pin.iRe[1]: number of uses: 1, isLinear: true, alias: no
 ground2.pin.iRe[2]: number of uses: 1, isLinear: true, alias: no
 ground2.pin.iRe[3]: number of uses: 1, isLinear: true, alias: no
 laptop_adpt_1.loadBase1.v[1].re: number of uses: 5, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.v[1].im: number of uses: 5, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.v[2].re: number of uses: 5, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.v[2].im: number of uses: 5, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.v[3].re: number of uses: 5, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.v[3].im: number of uses: 5, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.i[1].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.i[1].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.i[2].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.i[2].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.i[3].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.i[3].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_1.loadBase1.omega: number of uses: 1, isLinear: true, alias: no
 laptop_adpt_3.loadBase1.v[1].re: number of uses: 3, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.v[1].im: number of uses: 3, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.v[2].re: number of uses: 3, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.v[2].im: number of uses: 3, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.v[3].re: number of uses: 3, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.v[3].im: number of uses: 3, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.i[1].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.i[1].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.i[2].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.i[2].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.i[3].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.i[3].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_3.loadBase1.omega: number of uses: 1, isLinear: true, alias: no
 terminal.omega: number of uses: 1, isLinear: true, alias: no
 z.vFundAbs: number of uses: 1, isLinear: true, alias: no
 z.vFundArg: number of uses: 1, isLinear: true, alias: no
 z.iFundAbs: number of uses: 1, isLinear: true, alias: no
 z.iFundArg: number of uses: 1, isLinear: true, alias: no
 z.v[1].re: number of uses: 4, isLinear: false, alias: no
 z.v[1].im: number of uses: 4, isLinear: false, alias: no
 z.v[2].re: number of uses: 2, isLinear: true, alias: no
 z.v[2].im: number of uses: 2, isLinear: true, alias: no
 z.v[3].re: number of uses: 2, isLinear: true, alias: no
 z.v[3].im: number of uses: 2, isLinear: true, alias: no
 z.i[1].re: number of uses: 7, isLinear: false, alias: no
 z.i[1].im: number of uses: 7, isLinear: false, alias: no
 z.i[2].re: number of uses: 5, isLinear: true, alias: no
 z.i[2].im: number of uses: 5, isLinear: true, alias: no
 z.i[3].re: number of uses: 5, isLinear: true, alias: no
 z.i[3].im: number of uses: 5, isLinear: true, alias: no
 z.omega: number of uses: 1, isLinear: true, alias: no
 z1.vFundAbs: number of uses: 1, isLinear: true, alias: no
 z1.vFundArg: number of uses: 1, isLinear: true, alias: no
 z1.iFundAbs: number of uses: 1, isLinear: true, alias: no
 z1.iFundArg: number of uses: 1, isLinear: true, alias: no
 z1.v[1].re: number of uses: 4, isLinear: false, alias: no
 z1.v[1].im: number of uses: 4, isLinear: false, alias: no
 z1.v[2].re: number of uses: 2, isLinear: true, alias: no
 z1.v[2].im: number of uses: 2, isLinear: true, alias: no
 z1.v[3].re: number of uses: 2, isLinear: true, alias: no
 z1.v[3].im: number of uses: 2, isLinear: true, alias: no
 z1.i[1].re: number of uses: 7, isLinear: false, alias: no
 z1.i[1].im: number of uses: 7, isLinear: false, alias: no
 z1.i[2].re: number of uses: 5, isLinear: true, alias: no
 z1.i[2].im: number of uses: 5, isLinear: true, alias: no
 z1.i[3].re: number of uses: 5, isLinear: true, alias: no
 z1.i[3].im: number of uses: 5, isLinear: true, alias: no
 z1.omega: number of uses: 1, isLinear: true, alias: no
 test_DY.idealTransformer2.iPrim[1].re: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer2.iPrim[1].im: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer2.iPrim[2].re: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer2.iPrim[2].im: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer2.iPrim[3].re: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer2.iPrim[3].im: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer3.iPrim[1].re: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer3.iPrim[1].im: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer3.iPrim[2].re: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer3.iPrim[2].im: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer3.iPrim[3].re: number of uses: 3, isLinear: true, alias: no
 test_DY.idealTransformer3.iPrim[3].im: number of uses: 3, isLinear: true, alias: no
 test_DY.hPin_N.iIm[1]: number of uses: 2, isLinear: true, alias: no
 test_DY.hPin_N.iIm[2]: number of uses: 2, isLinear: true, alias: no
 test_DY.hPin_N.iIm[3]: number of uses: 2, isLinear: true, alias: no
 test_DY.hPin_N.iRe[1]: number of uses: 2, isLinear: true, alias: no
 test_DY.hPin_N.iRe[2]: number of uses: 2, isLinear: true, alias: no
 test_DY.hPin_N.iRe[3]: number of uses: 2, isLinear: true, alias: no
 laptop_adpt_2.loadBase1.i[1].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_2.loadBase1.i[1].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_2.loadBase1.i[2].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_2.loadBase1.i[2].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_2.loadBase1.i[3].re: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_2.loadBase1.i[3].im: number of uses: 4, isLinear: false, alias: no
 laptop_adpt_2.loadBase1.omega: number of uses: 1, isLinear: true, alias: no
 led_driver_1.loadBase1.i[1].re: number of uses: 4, isLinear: false, alias: no
 led_driver_1.loadBase1.i[1].im: number of uses: 4, isLinear: false, alias: no
 led_driver_1.loadBase1.i[2].re: number of uses: 4, isLinear: false, alias: no
 led_driver_1.loadBase1.i[2].im: number of uses: 4, isLinear: false, alias: no
 led_driver_1.loadBase1.i[3].re: number of uses: 4, isLinear: false, alias: no
 led_driver_1.loadBase1.i[3].im: number of uses: 4, isLinear: false, alias: no
 led_driver_1.loadBase1.omega: number of uses: 1, isLinear: true, alias: no
 led_driver_3.loadBase1.i[1].re: number of uses: 4, isLinear: false, alias: no
 led_driver_3.loadBase1.i[1].im: number of uses: 4, isLinear: false, alias: no
 led_driver_3.loadBase1.i[2].re: number of uses: 4, isLinear: false, alias: no
 led_driver_3.loadBase1.i[2].im: number of uses: 4, isLinear: false, alias: no
 led_driver_3.loadBase1.i[3].re: number of uses: 4, isLinear: false, alias: no
 led_driver_3.loadBase1.i[3].im: number of uses: 4, isLinear: false, alias: no
 led_driver_3.loadBase1.omega: number of uses: 1, isLinear: true, alias: no
 led_driver_2.loadBase1.i[1].re: number of uses: 4, isLinear: false, alias: no
 led_driver_2.loadBase1.i[1].im: number of uses: 4, isLinear: false, alias: no
 led_driver_2.loadBase1.i[2].re: number of uses: 4, isLinear: false, alias: no
 led_driver_2.loadBase1.i[2].im: number of uses: 4, isLinear: false, alias: no
 led_driver_2.loadBase1.i[3].re: number of uses: 4, isLinear: false, alias: no
 led_driver_2.loadBase1.i[3].im: number of uses: 4, isLinear: false, alias: no
 led_driver_2.loadBase1.omega: number of uses: 1, isLinear: true, alias: no

Input variables: 

Alias sets:
{PhA.i[1].re(start=0), PhA.pin_p.iRe[1], -PhA.pin_n.iRe[1], -test_DY.pinPrim_A.iRe[1]}
{PhA.i[2].re(start=0), PhA.pin_p.iRe[2], -PhA.pin_n.iRe[2], -test_DY.pinPrim_A.iRe[2]}
{PhA.i[3].re(start=0), PhA.pin_p.iRe[3], -PhA.pin_n.iRe[3], -test_DY.pinPrim_A.iRe[3]}
{PhA.i[1].im(start=0), PhA.pin_p.iIm[1], -PhA.pin_n.iIm[1], -test_DY.pinPrim_A.iIm[1]}
{PhA.i[2].im(start=0), PhA.pin_p.iIm[2], -PhA.pin_n.iIm[2], -test_DY.pinPrim_A.iIm[2]}
{PhA.i[3].im(start=0), PhA.pin_p.iIm[3], -PhA.pin_n.iIm[3], -test_DY.pinPrim_A.iIm[3]}
{PhB.theta(start=0), PhB.pin_p.reference.theta, PhB.pin_n.reference.theta}
{PhB.i[1].re(start=0), PhB.pin_p.iRe[1], -PhB.pin_n.iRe[1], -test_DY.pinPrim_B.iRe[1]}
{PhB.i[2].re(start=0), PhB.pin_p.iRe[2], -PhB.pin_n.iRe[2], -test_DY.pinPrim_B.iRe[2]}
{PhB.i[3].re(start=0), PhB.pin_p.iRe[3], -PhB.pin_n.iRe[3], -test_DY.pinPrim_B.iRe[3]}
{PhB.i[1].im(start=0), PhB.pin_p.iIm[1], -PhB.pin_n.iIm[1], -test_DY.pinPrim_B.iIm[1]}
{PhB.i[2].im(start=0), PhB.pin_p.iIm[2], -PhB.pin_n.iIm[2], -test_DY.pinPrim_B.iIm[2]}
{PhB.i[3].im(start=0), PhB.pin_p.iIm[3], -PhB.pin_n.iIm[3], -test_DY.pinPrim_B.iIm[3]}
{PhC.theta(start=0), PhC.pin_p.reference.theta, PhC.pin_n.reference.theta}
{PhC.i[1].re(start=0), PhC.pin_p.iRe[1], -PhC.pin_n.iRe[1], -test_DY.pinPrim_C.iRe[1]}
{PhC.i[2].re(start=0), PhC.pin_p.iRe[2], -PhC.pin_n.iRe[2], -test_DY.pinPrim_C.iRe[2]}
{PhC.i[3].re(start=0), PhC.pin_p.iRe[3], -PhC.pin_n.iRe[3], -test_DY.pinPrim_C.iRe[3]}
{PhC.i[1].im(start=0), PhC.pin_p.iIm[1], -PhC.pin_n.iIm[1], -test_DY.pinPrim_C.iIm[1]}
{PhC.i[2].im(start=0), PhC.pin_p.iIm[2], -PhC.pin_n.iIm[2], -test_DY.pinPrim_C.iIm[2]}
{PhC.i[3].im(start=0), PhC.pin_p.iIm[3], -PhC.pin_n.iIm[3], -test_DY.pinPrim_C.iIm[3]}
{-laptop_1.i, laptop_adpt_1.constantVoltage1.p.i, -laptop_adpt_1.constantVoltage1.n.i, laptop_adpt_1.constantVoltage1.i, -laptop_1.p.i, laptop_1.n.i, laptop_adpt_1.pin_p.i, -laptop_adpt_1.pin_n.i}
{laptop_adpt_1.loadBase1.i[1].re(start=0), laptop_adpt_1.loadBase1.pin_p.iRe[1], -laptop_adpt_1.loadBase1.pin_n.iRe[1], laptop_adpt_1.hPin_P.iRe[1], -laptop_adpt_1.hPin_N.iRe[1]}
{laptop_adpt_1.loadBase1.i[2].re(start=0), laptop_adpt_1.loadBase1.pin_p.iRe[2], -laptop_adpt_1.loadBase1.pin_n.iRe[2], laptop_adpt_1.hPin_P.iRe[2], -laptop_adpt_1.hPin_N.iRe[2]}
{laptop_adpt_1.loadBase1.i[3].re(start=0), laptop_adpt_1.loadBase1.pin_p.iRe[3], -laptop_adpt_1.loadBase1.pin_n.iRe[3], laptop_adpt_1.hPin_P.iRe[3], -laptop_adpt_1.hPin_N.iRe[3]}
{laptop_adpt_1.loadBase1.i[1].im(start=0), laptop_adpt_1.loadBase1.pin_p.iIm[1], -laptop_adpt_1.loadBase1.pin_n.iIm[1], laptop_adpt_1.hPin_P.iIm[1], -laptop_adpt_1.hPin_N.iIm[1]}
{laptop_adpt_1.loadBase1.i[2].im(start=0), laptop_adpt_1.loadBase1.pin_p.iIm[2], -laptop_adpt_1.loadBase1.pin_n.iIm[2], laptop_adpt_1.hPin_P.iIm[2], -laptop_adpt_1.hPin_N.iIm[2]}
{laptop_adpt_1.loadBase1.i[3].im(start=0), laptop_adpt_1.loadBase1.pin_p.iIm[3], -laptop_adpt_1.loadBase1.pin_n.iIm[3], laptop_adpt_1.hPin_P.iIm[3], -laptop_adpt_1.hPin_N.iIm[3]}
{-laptop_3.i, laptop_adpt_3.constantVoltage1.p.i, -laptop_adpt_3.constantVoltage1.n.i, laptop_adpt_3.constantVoltage1.i, -laptop_3.p.i, laptop_3.n.i, laptop_adpt_3.pin_p.i, -laptop_adpt_3.pin_n.i}
{laptop_adpt_3.loadBase1.i[1].re(start=0), laptop_adpt_3.loadBase1.pin_p.iRe[1], -laptop_adpt_3.loadBase1.pin_n.iRe[1], laptop_adpt_3.hPin_P.iRe[1], -laptop_adpt_3.hPin_N.iRe[1]}
{laptop_adpt_3.loadBase1.i[2].re(start=0), laptop_adpt_3.loadBase1.pin_p.iRe[2], -laptop_adpt_3.loadBase1.pin_n.iRe[2], laptop_adpt_3.hPin_P.iRe[2], -laptop_adpt_3.hPin_N.iRe[2]}
{laptop_adpt_3.loadBase1.i[3].re(start=0), laptop_adpt_3.loadBase1.pin_p.iRe[3], -laptop_adpt_3.loadBase1.pin_n.iRe[3], laptop_adpt_3.hPin_P.iRe[3], -laptop_adpt_3.hPin_N.iRe[3]}
{laptop_adpt_3.loadBase1.i[1].im(start=0), laptop_adpt_3.loadBase1.pin_p.iIm[1], -laptop_adpt_3.loadBase1.pin_n.iIm[1], laptop_adpt_3.hPin_P.iIm[1], -laptop_adpt_3.hPin_N.iIm[1]}
{laptop_adpt_3.loadBase1.i[2].im(start=0), laptop_adpt_3.loadBase1.pin_p.iIm[2], -laptop_adpt_3.loadBase1.pin_n.iIm[2], laptop_adpt_3.hPin_P.iIm[2], -laptop_adpt_3.hPin_N.iIm[2]}
{laptop_adpt_3.loadBase1.i[3].im(start=0), laptop_adpt_3.loadBase1.pin_p.iIm[3], -laptop_adpt_3.loadBase1.pin_n.iIm[3], laptop_adpt_3.hPin_P.iIm[3], -laptop_adpt_3.hPin_N.iIm[3]}
{test_DY.idealTransformer1.iPrim[1].re, test_DY.idealTransformer1.pinP_Prim.iRe[1], -test_DY.idealTransformer1.pinN_Prim.iRe[1]}
{test_DY.idealTransformer1.iPrim[2].re, test_DY.idealTransformer1.pinP_Prim.iRe[2], -test_DY.idealTransformer1.pinN_Prim.iRe[2]}
{test_DY.idealTransformer1.iPrim[3].re, test_DY.idealTransformer1.pinP_Prim.iRe[3], -test_DY.idealTransformer1.pinN_Prim.iRe[3]}
{test_DY.idealTransformer1.iPrim[1].im, test_DY.idealTransformer1.pinP_Prim.iIm[1], -test_DY.idealTransformer1.pinN_Prim.iIm[1]}
{test_DY.idealTransformer1.iPrim[2].im, test_DY.idealTransformer1.pinP_Prim.iIm[2], -test_DY.idealTransformer1.pinN_Prim.iIm[2]}
{test_DY.idealTransformer1.iPrim[3].im, test_DY.idealTransformer1.pinP_Prim.iIm[3], -test_DY.idealTransformer1.pinN_Prim.iIm[3]}
{-terminal.i[1].re(start=0), test_DY.idealTransformer1.iSec[1].re, test_DY.idealTransformer1.pinP_Sec.iRe[1], -test_DY.idealTransformer1.pinN_Sec.iRe[1], -terminal.pin_p.iRe[1], terminal.pin_n.iRe[1], test_DY.pinSec_A.iRe[1]}
{-terminal.i[2].re(start=0), test_DY.idealTransformer1.iSec[2].re, test_DY.idealTransformer1.pinP_Sec.iRe[2], -test_DY.idealTransformer1.pinN_Sec.iRe[2], -terminal.pin_p.iRe[2], terminal.pin_n.iRe[2], test_DY.pinSec_A.iRe[2]}
{-terminal.i[3].re(start=0), test_DY.idealTransformer1.iSec[3].re, test_DY.idealTransformer1.pinP_Sec.iRe[3], -test_DY.idealTransformer1.pinN_Sec.iRe[3], -terminal.pin_p.iRe[3], terminal.pin_n.iRe[3], test_DY.pinSec_A.iRe[3]}
{-terminal.i[1].im(start=0), test_DY.idealTransformer1.iSec[1].im, test_DY.idealTransformer1.pinP_Sec.iIm[1], -test_DY.idealTransformer1.pinN_Sec.iIm[1], -terminal.pin_p.iIm[1], terminal.pin_n.iIm[1], test_DY.pinSec_A.iIm[1]}
{-terminal.i[2].im(start=0), test_DY.idealTransformer1.iSec[2].im, test_DY.idealTransformer1.pinP_Sec.iIm[2], -test_DY.idealTransformer1.pinN_Sec.iIm[2], -terminal.pin_p.iIm[2], terminal.pin_n.iIm[2], test_DY.pinSec_A.iIm[2]}
{-terminal.i[3].im(start=0), test_DY.idealTransformer1.iSec[3].im, test_DY.idealTransformer1.pinP_Sec.iIm[3], -test_DY.idealTransformer1.pinN_Sec.iIm[3], -terminal.pin_p.iIm[3], terminal.pin_n.iIm[3], test_DY.pinSec_A.iIm[3]}
{test_DY.idealTransformer2.iPrim[1].re, test_DY.idealTransformer2.pinP_Prim.iRe[1], -test_DY.idealTransformer2.pinN_Prim.iRe[1]}
{test_DY.idealTransformer2.iPrim[2].re, test_DY.idealTransformer2.pinP_Prim.iRe[2], -test_DY.idealTransformer2.pinN_Prim.iRe[2]}
{test_DY.idealTransformer2.iPrim[3].re, test_DY.idealTransformer2.pinP_Prim.iRe[3], -test_DY.idealTransformer2.pinN_Prim.iRe[3]}
{test_DY.idealTransformer2.iPrim[1].im, test_DY.idealTransformer2.pinP_Prim.iIm[1], -test_DY.idealTransformer2.pinN_Prim.iIm[1]}
{test_DY.idealTransformer2.iPrim[2].im, test_DY.idealTransformer2.pinP_Prim.iIm[2], -test_DY.idealTransformer2.pinN_Prim.iIm[2]}
{test_DY.idealTransformer2.iPrim[3].im, test_DY.idealTransformer2.pinP_Prim.iIm[3], -test_DY.idealTransformer2.pinN_Prim.iIm[3]}
{-z.i[1].re(start=0), test_DY.idealTransformer2.iSec[1].re, test_DY.idealTransformer2.pinP_Sec.iRe[1], -test_DY.idealTransformer2.pinN_Sec.iRe[1], -z.pin_p.iRe[1], z.pin_n.iRe[1], test_DY.pinSec_B.iRe[1]}
{-z.i[2].re(start=0), test_DY.idealTransformer2.iSec[2].re, test_DY.idealTransformer2.pinP_Sec.iRe[2], -test_DY.idealTransformer2.pinN_Sec.iRe[2], -z.pin_p.iRe[2], z.pin_n.iRe[2], test_DY.pinSec_B.iRe[2]}
{-z.i[3].re(start=0), test_DY.idealTransformer2.iSec[3].re, test_DY.idealTransformer2.pinP_Sec.iRe[3], -test_DY.idealTransformer2.pinN_Sec.iRe[3], -z.pin_p.iRe[3], z.pin_n.iRe[3], test_DY.pinSec_B.iRe[3]}
{-z.i[1].im(start=0), test_DY.idealTransformer2.iSec[1].im, test_DY.idealTransformer2.pinP_Sec.iIm[1], -test_DY.idealTransformer2.pinN_Sec.iIm[1], -z.pin_p.iIm[1], z.pin_n.iIm[1], test_DY.pinSec_B.iIm[1]}
{-z.i[2].im(start=0), test_DY.idealTransformer2.iSec[2].im, test_DY.idealTransformer2.pinP_Sec.iIm[2], -test_DY.idealTransformer2.pinN_Sec.iIm[2], -z.pin_p.iIm[2], z.pin_n.iIm[2], test_DY.pinSec_B.iIm[2]}
{-z.i[3].im(start=0), test_DY.idealTransformer2.iSec[3].im, test_DY.idealTransformer2.pinP_Sec.iIm[3], -test_DY.idealTransformer2.pinN_Sec.iIm[3], -z.pin_p.iIm[3], z.pin_n.iIm[3], test_DY.pinSec_B.iIm[3]}
{test_DY.idealTransformer3.iPrim[1].re, test_DY.idealTransformer3.pinP_Prim.iRe[1], -test_DY.idealTransformer3.pinN_Prim.iRe[1]}
{test_DY.idealTransformer3.iPrim[2].re, test_DY.idealTransformer3.pinP_Prim.iRe[2], -test_DY.idealTransformer3.pinN_Prim.iRe[2]}
{test_DY.idealTransformer3.iPrim[3].re, test_DY.idealTransformer3.pinP_Prim.iRe[3], -test_DY.idealTransformer3.pinN_Prim.iRe[3]}
{test_DY.idealTransformer3.iPrim[1].im, test_DY.idealTransformer3.pinP_Prim.iIm[1], -test_DY.idealTransformer3.pinN_Prim.iIm[1]}
{test_DY.idealTransformer3.iPrim[2].im, test_DY.idealTransformer3.pinP_Prim.iIm[2], -test_DY.idealTransformer3.pinN_Prim.iIm[2]}
{test_DY.idealTransformer3.iPrim[3].im, test_DY.idealTransformer3.pinP_Prim.iIm[3], -test_DY.idealTransformer3.pinN_Prim.iIm[3]}
{-z1.i[1].re(start=0), test_DY.idealTransformer3.iSec[1].re, test_DY.idealTransformer3.pinP_Sec.iRe[1], -test_DY.idealTransformer3.pinN_Sec.iRe[1], -z1.pin_p.iRe[1], z1.pin_n.iRe[1], test_DY.pinSec_C.iRe[1]}
{-z1.i[2].re(start=0), test_DY.idealTransformer3.iSec[2].re, test_DY.idealTransformer3.pinP_Sec.iRe[2], -test_DY.idealTransformer3.pinN_Sec.iRe[2], -z1.pin_p.iRe[2], z1.pin_n.iRe[2], test_DY.pinSec_C.iRe[2]}
{-z1.i[3].re(start=0), test_DY.idealTransformer3.iSec[3].re, test_DY.idealTransformer3.pinP_Sec.iRe[3], -test_DY.idealTransformer3.pinN_Sec.iRe[3], -z1.pin_p.iRe[3], z1.pin_n.iRe[3], test_DY.pinSec_C.iRe[3]}
{-z1.i[1].im(start=0), test_DY.idealTransformer3.iSec[1].im, test_DY.idealTransformer3.pinP_Sec.iIm[1], -test_DY.idealTransformer3.pinN_Sec.iIm[1], -z1.pin_p.iIm[1], z1.pin_n.iIm[1], test_DY.pinSec_C.iIm[1]}
{-z1.i[2].im(start=0), test_DY.idealTransformer3.iSec[2].im, test_DY.idealTransformer3.pinP_Sec.iIm[2], -test_DY.idealTransformer3.pinN_Sec.iIm[2], -z1.pin_p.iIm[2], z1.pin_n.iIm[2], test_DY.pinSec_C.iIm[2]}
{-z1.i[3].im(start=0), test_DY.idealTransformer3.iSec[3].im, test_DY.idealTransformer3.pinP_Sec.iIm[3], -test_DY.idealTransformer3.pinN_Sec.iIm[3], -z1.pin_p.iIm[3], z1.pin_n.iIm[3], test_DY.pinSec_C.iIm[3]}
{-laptop_2.i, laptop_adpt_2.constantVoltage1.p.i, -laptop_adpt_2.constantVoltage1.n.i, laptop_adpt_2.constantVoltage1.i, -laptop_2.p.i, laptop_2.n.i, laptop_adpt_2.pin_p.i, -laptop_adpt_2.pin_n.i}
{laptop_adpt_2.loadBase1.i[1].re(start=0), laptop_adpt_2.loadBase1.pin_p.iRe[1], -laptop_adpt_2.loadBase1.pin_n.iRe[1], laptop_adpt_2.hPin_P.iRe[1], -laptop_adpt_2.hPin_N.iRe[1]}
{laptop_adpt_2.loadBase1.i[2].re(start=0), laptop_adpt_2.loadBase1.pin_p.iRe[2], -laptop_adpt_2.loadBase1.pin_n.iRe[2], laptop_adpt_2.hPin_P.iRe[2], -laptop_adpt_2.hPin_N.iRe[2]}
{laptop_adpt_2.loadBase1.i[3].re(start=0), laptop_adpt_2.loadBase1.pin_p.iRe[3], -laptop_adpt_2.loadBase1.pin_n.iRe[3], laptop_adpt_2.hPin_P.iRe[3], -laptop_adpt_2.hPin_N.iRe[3]}
{laptop_adpt_2.loadBase1.i[1].im(start=0), laptop_adpt_2.loadBase1.pin_p.iIm[1], -laptop_adpt_2.loadBase1.pin_n.iIm[1], laptop_adpt_2.hPin_P.iIm[1], -laptop_adpt_2.hPin_N.iIm[1]}
{laptop_adpt_2.loadBase1.i[2].im(start=0), laptop_adpt_2.loadBase1.pin_p.iIm[2], -laptop_adpt_2.loadBase1.pin_n.iIm[2], laptop_adpt_2.hPin_P.iIm[2], -laptop_adpt_2.hPin_N.iIm[2]}
{laptop_adpt_2.loadBase1.i[3].im(start=0), laptop_adpt_2.loadBase1.pin_p.iIm[3], -laptop_adpt_2.loadBase1.pin_n.iIm[3], laptop_adpt_2.hPin_P.iIm[3], -laptop_adpt_2.hPin_N.iIm[3]}
{-led_1.i, led_driver_1.constantVoltage1.p.i, -led_driver_1.constantVoltage1.n.i, led_driver_1.constantVoltage1.i, -led_1.p.i, led_1.n.i, led_driver_1.pin_p.i, -led_driver_1.pin_n.i}
{led_driver_1.loadBase1.i[1].re(start=0), led_driver_1.loadBase1.pin_p.iRe[1], -led_driver_1.loadBase1.pin_n.iRe[1], led_driver_1.hPin_P.iRe[1], -led_driver_1.hPin_N.iRe[1]}
{led_driver_1.loadBase1.i[2].re(start=0), led_driver_1.loadBase1.pin_p.iRe[2], -led_driver_1.loadBase1.pin_n.iRe[2], led_driver_1.hPin_P.iRe[2], -led_driver_1.hPin_N.iRe[2]}
{led_driver_1.loadBase1.i[3].re(start=0), led_driver_1.loadBase1.pin_p.iRe[3], -led_driver_1.loadBase1.pin_n.iRe[3], led_driver_1.hPin_P.iRe[3], -led_driver_1.hPin_N.iRe[3]}
{led_driver_1.loadBase1.i[1].im(start=0), led_driver_1.loadBase1.pin_p.iIm[1], -led_driver_1.loadBase1.pin_n.iIm[1], led_driver_1.hPin_P.iIm[1], -led_driver_1.hPin_N.iIm[1]}
{led_driver_1.loadBase1.i[2].im(start=0), led_driver_1.loadBase1.pin_p.iIm[2], -led_driver_1.loadBase1.pin_n.iIm[2], led_driver_1.hPin_P.iIm[2], -led_driver_1.hPin_N.iIm[2]}
{led_driver_1.loadBase1.i[3].im(start=0), led_driver_1.loadBase1.pin_p.iIm[3], -led_driver_1.loadBase1.pin_n.iIm[3], led_driver_1.hPin_P.iIm[3], -led_driver_1.hPin_N.iIm[3]}
{-led_3.i, led_driver_3.constantVoltage1.p.i, -led_driver_3.constantVoltage1.n.i, led_driver_3.constantVoltage1.i, -led_3.p.i, led_3.n.i, led_driver_3.pin_p.i, -led_driver_3.pin_n.i}
{led_driver_3.loadBase1.i[1].re(start=0), led_driver_3.loadBase1.pin_p.iRe[1], -led_driver_3.loadBase1.pin_n.iRe[1], led_driver_3.hPin_P.iRe[1], -led_driver_3.hPin_N.iRe[1]}
{led_driver_3.loadBase1.i[2].re(start=0), led_driver_3.loadBase1.pin_p.iRe[2], -led_driver_3.loadBase1.pin_n.iRe[2], led_driver_3.hPin_P.iRe[2], -led_driver_3.hPin_N.iRe[2]}
{led_driver_3.loadBase1.i[3].re(start=0), led_driver_3.loadBase1.pin_p.iRe[3], -led_driver_3.loadBase1.pin_n.iRe[3], led_driver_3.hPin_P.iRe[3], -led_driver_3.hPin_N.iRe[3]}
{led_driver_3.loadBase1.i[1].im(start=0), led_driver_3.loadBase1.pin_p.iIm[1], -led_driver_3.loadBase1.pin_n.iIm[1], led_driver_3.hPin_P.iIm[1], -led_driver_3.hPin_N.iIm[1]}
{led_driver_3.loadBase1.i[2].im(start=0), led_driver_3.loadBase1.pin_p.iIm[2], -led_driver_3.loadBase1.pin_n.iIm[2], led_driver_3.hPin_P.iIm[2], -led_driver_3.hPin_N.iIm[2]}
{led_driver_3.loadBase1.i[3].im(start=0), led_driver_3.loadBase1.pin_p.iIm[3], -led_driver_3.loadBase1.pin_n.iIm[3], led_driver_3.hPin_P.iIm[3], -led_driver_3.hPin_N.iIm[3]}
{-led_2.i, led_driver_2.constantVoltage1.p.i, -led_driver_2.constantVoltage1.n.i, led_driver_2.constantVoltage1.i, -led_2.p.i, led_2.n.i, led_driver_2.pin_p.i, -led_driver_2.pin_n.i}
{led_driver_2.loadBase1.i[1].re(start=0), led_driver_2.loadBase1.pin_p.iRe[1], -led_driver_2.loadBase1.pin_n.iRe[1], led_driver_2.hPin_P.iRe[1], -led_driver_2.hPin_N.iRe[1]}
{led_driver_2.loadBase1.i[2].re(start=0), led_driver_2.loadBase1.pin_p.iRe[2], -led_driver_2.loadBase1.pin_n.iRe[2], led_driver_2.hPin_P.iRe[2], -led_driver_2.hPin_N.iRe[2]}
{led_driver_2.loadBase1.i[3].re(start=0), led_driver_2.loadBase1.pin_p.iRe[3], -led_driver_2.loadBase1.pin_n.iRe[3], led_driver_2.hPin_P.iRe[3], -led_driver_2.hPin_N.iRe[3]}
{led_driver_2.loadBase1.i[1].im(start=0), led_driver_2.loadBase1.pin_p.iIm[1], -led_driver_2.loadBase1.pin_n.iIm[1], led_driver_2.hPin_P.iIm[1], -led_driver_2.hPin_N.iIm[1]}
{led_driver_2.loadBase1.i[2].im(start=0), led_driver_2.loadBase1.pin_p.iIm[2], -led_driver_2.loadBase1.pin_n.iIm[2], led_driver_2.hPin_P.iIm[2], -led_driver_2.hPin_N.iIm[2]}
{led_driver_2.loadBase1.i[3].im(start=0), led_driver_2.loadBase1.pin_p.iIm[3], -led_driver_2.loadBase1.pin_n.iIm[3], led_driver_2.hPin_P.iIm[3], -led_driver_2.hPin_N.iIm[3]}
{laptop_adpt_1.S_vect[2].im(start=0), PhA.pin_n.v[1].im, PhB.pin_n.v[1].im, PhC.pin_n.v[1].im, ground1.pin.v[1].im, PhA.pin_n.v[2].im, PhB.pin_n.v[2].im, PhC.pin_n.v[2].im, ground1.pin.v[2].im, PhA.pin_n.v[3].im, PhB.pin_n.v[3].im, PhC.pin_n.v[3].im, ground1.pin.v[3].im, ground2.pin.v[1].im, laptop_adpt_1.hPin_N.v[1].im, laptop_adpt_2.hPin_N.v[1].im, laptop_adpt_3.hPin_N.v[1].im, led_driver_1.hPin_N.v[1].im, led_driver_2.hPin_N.v[1].im, led_driver_3.hPin_N.v[1].im, terminal.pin_n.v[1].im, test_DY.hPin_N.v[1].im, laptop_adpt_1.loadBase1.pin_n.v[1].im, laptop_adpt_3.loadBase1.pin_n.v[1].im, test_DY.idealTransformer1.pinN_Sec.v[1].im, test_DY.idealTransformer2.pinN_Sec.v[1].im, test_DY.idealTransformer3.pinN_Sec.v[1].im, laptop_adpt_2.loadBase1.pin_n.v[1].im, led_driver_1.loadBase1.pin_n.v[1].im, led_driver_3.loadBase1.pin_n.v[1].im, led_driver_2.loadBase1.pin_n.v[1].im, ground2.pin.v[2].im, laptop_adpt_1.hPin_N.v[2].im, laptop_adpt_2.hPin_N.v[2].im, laptop_adpt_3.hPin_N.v[2].im, led_driver_1.hPin_N.v[2].im, led_driver_2.hPin_N.v[2].im, led_driver_3.hPin_N.v[2].im, terminal.pin_n.v[2].im, test_DY.hPin_N.v[2].im, laptop_adpt_1.loadBase1.pin_n.v[2].im, laptop_adpt_3.loadBase1.pin_n.v[2].im, test_DY.idealTransformer1.pinN_Sec.v[2].im, test_DY.idealTransformer2.pinN_Sec.v[2].im, test_DY.idealTransformer3.pinN_Sec.v[2].im, laptop_adpt_2.loadBase1.pin_n.v[2].im, led_driver_1.loadBase1.pin_n.v[2].im, led_driver_3.loadBase1.pin_n.v[2].im, led_driver_2.loadBase1.pin_n.v[2].im, ground2.pin.v[3].im, laptop_adpt_1.hPin_N.v[3].im, laptop_adpt_2.hPin_N.v[3].im, laptop_adpt_3.hPin_N.v[3].im, led_driver_1.hPin_N.v[3].im, led_driver_2.hPin_N.v[3].im, led_driver_3.hPin_N.v[3].im, terminal.pin_n.v[3].im, test_DY.hPin_N.v[3].im, laptop_adpt_1.loadBase1.pin_n.v[3].im, laptop_adpt_3.loadBase1.pin_n.v[3].im, test_DY.idealTransformer1.pinN_Sec.v[3].im, test_DY.idealTransformer2.pinN_Sec.v[3].im, test_DY.idealTransformer3.pinN_Sec.v[3].im, laptop_adpt_2.loadBase1.pin_n.v[3].im, led_driver_1.loadBase1.pin_n.v[3].im, led_driver_3.loadBase1.pin_n.v[3].im, led_driver_2.loadBase1.pin_n.v[3].im, laptop_adpt_1.S_vect[3].im(start=0), laptop_adpt_3.S_vect[2].im(start=0), laptop_adpt_3.S_vect[3].im(start=0), ground6.p.v, laptop_1.n.v, laptop_adpt_1.pin_n.v, laptop_adpt_1.constantVoltage1.n.v, ground8.p.v, laptop_3.n.v, laptop_adpt_3.pin_n.v, laptop_adpt_3.constantVoltage1.n.v, ground3.p.v, laptop_2.n.v, laptop_adpt_2.pin_n.v, laptop_adpt_2.constantVoltage1.n.v, laptop_adpt_2.S_vect[2].im(start=0), laptop_adpt_2.S_vect[3].im(start=0), led_driver_1.S_vect[2].im(start=0), led_driver_1.S_vect[3].im(start=0), ground4.p.v, led_1.n.v, led_driver_1.pin_n.v, led_driver_1.constantVoltage1.n.v, ground5.p.v, led_3.n.v, led_driver_3.pin_n.v, led_driver_3.constantVoltage1.n.v, led_driver_3.S_vect[2].im(start=0), led_driver_3.S_vect[3].im(start=0), ground7.p.v, led_2.n.v, led_driver_2.pin_n.v, led_driver_2.constantVoltage1.n.v, led_driver_2.S_vect[2].im(start=0), led_driver_2.S_vect[3].im(start=0), temp_378.im, temp_393.im, temp_408.im, temp_423.im, temp_438.im, temp_453.im, temp_528.im, temp_543.im, temp_558.im, temp_573.im, temp_588.im, temp_603.im, temp_678.im, temp_693.im, temp_708.im, temp_723.im, temp_738.im, temp_753.im}
{laptop_adpt_1.S_vect[2].re(start=0), PhA.pin_n.v[1].re, PhB.pin_n.v[1].re, PhC.pin_n.v[1].re, ground1.pin.v[1].re, PhA.pin_n.v[2].re, PhB.pin_n.v[2].re, PhC.pin_n.v[2].re, ground1.pin.v[2].re, PhA.pin_n.v[3].re, PhB.pin_n.v[3].re, PhC.pin_n.v[3].re, ground1.pin.v[3].re, ground2.pin.v[1].re, laptop_adpt_1.hPin_N.v[1].re, laptop_adpt_2.hPin_N.v[1].re, laptop_adpt_3.hPin_N.v[1].re, led_driver_1.hPin_N.v[1].re, led_driver_2.hPin_N.v[1].re, led_driver_3.hPin_N.v[1].re, terminal.pin_n.v[1].re, test_DY.hPin_N.v[1].re, laptop_adpt_1.loadBase1.pin_n.v[1].re, laptop_adpt_3.loadBase1.pin_n.v[1].re, test_DY.idealTransformer1.pinN_Sec.v[1].re, test_DY.idealTransformer2.pinN_Sec.v[1].re, test_DY.idealTransformer3.pinN_Sec.v[1].re, laptop_adpt_2.loadBase1.pin_n.v[1].re, led_driver_1.loadBase1.pin_n.v[1].re, led_driver_3.loadBase1.pin_n.v[1].re, led_driver_2.loadBase1.pin_n.v[1].re, ground2.pin.v[2].re, laptop_adpt_1.hPin_N.v[2].re, laptop_adpt_2.hPin_N.v[2].re, laptop_adpt_3.hPin_N.v[2].re, led_driver_1.hPin_N.v[2].re, led_driver_2.hPin_N.v[2].re, led_driver_3.hPin_N.v[2].re, terminal.pin_n.v[2].re, test_DY.hPin_N.v[2].re, laptop_adpt_1.loadBase1.pin_n.v[2].re, laptop_adpt_3.loadBase1.pin_n.v[2].re, test_DY.idealTransformer1.pinN_Sec.v[2].re, test_DY.idealTransformer2.pinN_Sec.v[2].re, test_DY.idealTransformer3.pinN_Sec.v[2].re, laptop_adpt_2.loadBase1.pin_n.v[2].re, led_driver_1.loadBase1.pin_n.v[2].re, led_driver_3.loadBase1.pin_n.v[2].re, led_driver_2.loadBase1.pin_n.v[2].re, ground2.pin.v[3].re, laptop_adpt_1.hPin_N.v[3].re, laptop_adpt_2.hPin_N.v[3].re, laptop_adpt_3.hPin_N.v[3].re, led_driver_1.hPin_N.v[3].re, led_driver_2.hPin_N.v[3].re, led_driver_3.hPin_N.v[3].re, terminal.pin_n.v[3].re, test_DY.hPin_N.v[3].re, laptop_adpt_1.loadBase1.pin_n.v[3].re, laptop_adpt_3.loadBase1.pin_n.v[3].re, test_DY.idealTransformer1.pinN_Sec.v[3].re, test_DY.idealTransformer2.pinN_Sec.v[3].re, test_DY.idealTransformer3.pinN_Sec.v[3].re, laptop_adpt_2.loadBase1.pin_n.v[3].re, led_driver_1.loadBase1.pin_n.v[3].re, led_driver_3.loadBase1.pin_n.v[3].re, led_driver_2.loadBase1.pin_n.v[3].re, laptop_adpt_1.S_vect[3].re(start=0), laptop_adpt_3.S_vect[2].re(start=0), laptop_adpt_3.S_vect[3].re(start=0), laptop_adpt_2.S_vect[2].re(start=0), laptop_adpt_2.S_vect[3].re(start=0), led_driver_1.S_vect[2].re(start=0), led_driver_1.S_vect[3].re(start=0), led_driver_3.S_vect[2].re(start=0), led_driver_3.S_vect[3].re(start=0), led_driver_2.S_vect[2].re(start=0), led_driver_2.S_vect[3].re(start=0)}
{laptop_adpt_1.loadBase1.v[1].im(start=0), laptop_adpt_1.hPin_P.v[1].im, laptop_adpt_2.hPin_P.v[1].im, led_driver_1.hPin_P.v[1].im, led_driver_2.hPin_P.v[1].im, z.pin_n.v[1].im, laptop_adpt_1.loadBase1.pin_p.v[1].im, laptop_adpt_2.loadBase1.pin_p.v[1].im, led_driver_1.loadBase1.pin_p.v[1].im, led_driver_2.loadBase1.pin_p.v[1].im, laptop_adpt_2.loadBase1.v[1].im(start=0), led_driver_1.loadBase1.v[1].im(start=0), led_driver_2.loadBase1.v[1].im(start=0)}
{laptop_adpt_1.loadBase1.v[1].re(start=0), laptop_adpt_1.hPin_P.v[1].re, laptop_adpt_2.hPin_P.v[1].re, led_driver_1.hPin_P.v[1].re, led_driver_2.hPin_P.v[1].re, z.pin_n.v[1].re, laptop_adpt_1.loadBase1.pin_p.v[1].re, laptop_adpt_2.loadBase1.pin_p.v[1].re, led_driver_1.loadBase1.pin_p.v[1].re, led_driver_2.loadBase1.pin_p.v[1].re, laptop_adpt_2.loadBase1.v[1].re(start=0), led_driver_1.loadBase1.v[1].re(start=0), led_driver_2.loadBase1.v[1].re(start=0)}
{laptop_adpt_1.loadBase1.v[2].im(start=0), laptop_adpt_1.hPin_P.v[2].im, laptop_adpt_2.hPin_P.v[2].im, led_driver_1.hPin_P.v[2].im, led_driver_2.hPin_P.v[2].im, z.pin_n.v[2].im, laptop_adpt_1.loadBase1.pin_p.v[2].im, laptop_adpt_2.loadBase1.pin_p.v[2].im, led_driver_1.loadBase1.pin_p.v[2].im, led_driver_2.loadBase1.pin_p.v[2].im, laptop_adpt_2.loadBase1.v[2].im(start=0), led_driver_1.loadBase1.v[2].im(start=0), led_driver_2.loadBase1.v[2].im(start=0)}
{laptop_adpt_1.loadBase1.v[2].re(start=0), laptop_adpt_1.hPin_P.v[2].re, laptop_adpt_2.hPin_P.v[2].re, led_driver_1.hPin_P.v[2].re, led_driver_2.hPin_P.v[2].re, z.pin_n.v[2].re, laptop_adpt_1.loadBase1.pin_p.v[2].re, laptop_adpt_2.loadBase1.pin_p.v[2].re, led_driver_1.loadBase1.pin_p.v[2].re, led_driver_2.loadBase1.pin_p.v[2].re, laptop_adpt_2.loadBase1.v[2].re(start=0), led_driver_1.loadBase1.v[2].re(start=0), led_driver_2.loadBase1.v[2].re(start=0)}
{laptop_adpt_1.loadBase1.v[3].im(start=0), laptop_adpt_1.hPin_P.v[3].im, laptop_adpt_2.hPin_P.v[3].im, led_driver_1.hPin_P.v[3].im, led_driver_2.hPin_P.v[3].im, z.pin_n.v[3].im, laptop_adpt_1.loadBase1.pin_p.v[3].im, laptop_adpt_2.loadBase1.pin_p.v[3].im, led_driver_1.loadBase1.pin_p.v[3].im, led_driver_2.loadBase1.pin_p.v[3].im, laptop_adpt_2.loadBase1.v[3].im(start=0), led_driver_1.loadBase1.v[3].im(start=0), led_driver_2.loadBase1.v[3].im(start=0)}
{laptop_adpt_1.loadBase1.v[3].re(start=0), laptop_adpt_1.hPin_P.v[3].re, laptop_adpt_2.hPin_P.v[3].re, led_driver_1.hPin_P.v[3].re, led_driver_2.hPin_P.v[3].re, z.pin_n.v[3].re, laptop_adpt_1.loadBase1.pin_p.v[3].re, laptop_adpt_2.loadBase1.pin_p.v[3].re, led_driver_1.loadBase1.pin_p.v[3].re, led_driver_2.loadBase1.pin_p.v[3].re, laptop_adpt_2.loadBase1.v[3].re(start=0), led_driver_1.loadBase1.v[3].re(start=0), led_driver_2.loadBase1.v[3].re(start=0)}
{laptop_adpt_3.loadBase1.v[1].im(start=0), laptop_adpt_3.hPin_P.v[1].im, led_driver_3.hPin_P.v[1].im, z1.pin_n.v[1].im, laptop_adpt_3.loadBase1.pin_p.v[1].im, led_driver_3.loadBase1.pin_p.v[1].im, led_driver_3.loadBase1.v[1].im(start=0)}
{laptop_adpt_3.loadBase1.v[1].re(start=0), laptop_adpt_3.hPin_P.v[1].re, led_driver_3.hPin_P.v[1].re, z1.pin_n.v[1].re, laptop_adpt_3.loadBase1.pin_p.v[1].re, led_driver_3.loadBase1.pin_p.v[1].re, led_driver_3.loadBase1.v[1].re(start=0)}
{laptop_adpt_3.loadBase1.v[2].im(start=0), laptop_adpt_3.hPin_P.v[2].im, led_driver_3.hPin_P.v[2].im, z1.pin_n.v[2].im, laptop_adpt_3.loadBase1.pin_p.v[2].im, led_driver_3.loadBase1.pin_p.v[2].im, led_driver_3.loadBase1.v[2].im(start=0)}
{laptop_adpt_3.loadBase1.v[2].re(start=0), laptop_adpt_3.hPin_P.v[2].re, led_driver_3.hPin_P.v[2].re, z1.pin_n.v[2].re, laptop_adpt_3.loadBase1.pin_p.v[2].re, led_driver_3.loadBase1.pin_p.v[2].re, led_driver_3.loadBase1.v[2].re(start=0)}
{laptop_adpt_3.loadBase1.v[3].im(start=0), laptop_adpt_3.hPin_P.v[3].im, led_driver_3.hPin_P.v[3].im, z1.pin_n.v[3].im, laptop_adpt_3.loadBase1.pin_p.v[3].im, led_driver_3.loadBase1.pin_p.v[3].im, led_driver_3.loadBase1.v[3].im(start=0)}
{laptop_adpt_3.loadBase1.v[3].re(start=0), laptop_adpt_3.hPin_P.v[3].re, led_driver_3.hPin_P.v[3].re, z1.pin_n.v[3].re, laptop_adpt_3.loadBase1.pin_p.v[3].re, led_driver_3.loadBase1.pin_p.v[3].re, led_driver_3.loadBase1.v[3].re(start=0)}
{test_DY.idealTransformer3.vSec[1].im, test_DY.pinSec_C.v[1].im, z1.pin_p.v[1].im, test_DY.idealTransformer3.pinP_Sec.v[1].im}
{test_DY.idealTransformer3.vSec[1].re, test_DY.pinSec_C.v[1].re, z1.pin_p.v[1].re, test_DY.idealTransformer3.pinP_Sec.v[1].re}
{test_DY.idealTransformer3.vSec[2].im, test_DY.pinSec_C.v[2].im, z1.pin_p.v[2].im, test_DY.idealTransformer3.pinP_Sec.v[2].im}
{test_DY.idealTransformer3.vSec[2].re, test_DY.pinSec_C.v[2].re, z1.pin_p.v[2].re, test_DY.idealTransformer3.pinP_Sec.v[2].re}
{test_DY.idealTransformer3.vSec[3].im, test_DY.pinSec_C.v[3].im, z1.pin_p.v[3].im, test_DY.idealTransformer3.pinP_Sec.v[3].im}
{test_DY.idealTransformer3.vSec[3].re, test_DY.pinSec_C.v[3].re, z1.pin_p.v[3].re, test_DY.idealTransformer3.pinP_Sec.v[3].re}
{test_DY.idealTransformer2.vSec[1].im, test_DY.pinSec_B.v[1].im, z.pin_p.v[1].im, test_DY.idealTransformer2.pinP_Sec.v[1].im}
{test_DY.idealTransformer2.vSec[1].re, test_DY.pinSec_B.v[1].re, z.pin_p.v[1].re, test_DY.idealTransformer2.pinP_Sec.v[1].re}
{test_DY.idealTransformer2.vSec[2].im, test_DY.pinSec_B.v[2].im, z.pin_p.v[2].im, test_DY.idealTransformer2.pinP_Sec.v[2].im}
{test_DY.idealTransformer2.vSec[2].re, test_DY.pinSec_B.v[2].re, z.pin_p.v[2].re, test_DY.idealTransformer2.pinP_Sec.v[2].re}
{test_DY.idealTransformer2.vSec[3].im, test_DY.pinSec_B.v[3].im, z.pin_p.v[3].im, test_DY.idealTransformer2.pinP_Sec.v[3].im}
{test_DY.idealTransformer2.vSec[3].re, test_DY.pinSec_B.v[3].re, z.pin_p.v[3].re, test_DY.idealTransformer2.pinP_Sec.v[3].re}
{terminal.v[1].im(start=0), terminal.pin_p.v[1].im, test_DY.pinSec_A.v[1].im, test_DY.idealTransformer1.pinP_Sec.v[1].im, test_DY.idealTransformer1.vSec[1].im}
{terminal.v[1].re(start=0), terminal.pin_p.v[1].re, test_DY.pinSec_A.v[1].re, test_DY.idealTransformer1.pinP_Sec.v[1].re, test_DY.idealTransformer1.vSec[1].re}
{terminal.v[2].im(start=0), terminal.pin_p.v[2].im, test_DY.pinSec_A.v[2].im, test_DY.idealTransformer1.pinP_Sec.v[2].im, test_DY.idealTransformer1.vSec[2].im}
{terminal.v[2].re(start=0), terminal.pin_p.v[2].re, test_DY.pinSec_A.v[2].re, test_DY.idealTransformer1.pinP_Sec.v[2].re, test_DY.idealTransformer1.vSec[2].re}
{terminal.v[3].im(start=0), terminal.pin_p.v[3].im, test_DY.pinSec_A.v[3].im, test_DY.idealTransformer1.pinP_Sec.v[3].im, test_DY.idealTransformer1.vSec[3].im}
{terminal.v[3].re(start=0), terminal.pin_p.v[3].re, test_DY.pinSec_A.v[3].re, test_DY.idealTransformer1.pinP_Sec.v[3].re, test_DY.idealTransformer1.vSec[3].re}
{laptop_adpt_1.constantVoltage1.V(start=1), laptop_1.p.v, laptop_adpt_1.pin_p.v, laptop_adpt_1.constantVoltage1.p.v, laptop_adpt_1.constantVoltage1.v, laptop_1.v}
{laptop_adpt_2.constantVoltage1.V(start=1), laptop_2.p.v, laptop_adpt_2.pin_p.v, laptop_adpt_2.constantVoltage1.p.v, laptop_adpt_2.constantVoltage1.v, laptop_2.v}
{laptop_adpt_3.constantVoltage1.V(start=1), laptop_3.p.v, laptop_adpt_3.pin_p.v, laptop_adpt_3.constantVoltage1.p.v, laptop_adpt_3.constantVoltage1.v, laptop_3.v}
{led_driver_3.constantVoltage1.V(start=1), led_3.p.v, led_driver_3.pin_p.v, led_driver_3.constantVoltage1.p.v, led_driver_3.constantVoltage1.v, led_3.v}
{led_driver_1.constantVoltage1.V(start=1), led_1.p.v, led_driver_1.pin_p.v, led_driver_1.constantVoltage1.p.v, led_driver_1.constantVoltage1.v, led_1.v}
{led_driver_2.constantVoltage1.V(start=1), led_2.p.v, led_driver_2.pin_p.v, led_driver_2.constantVoltage1.p.v, led_driver_2.constantVoltage1.v, led_2.v}
{PhA.v[1].im(start=0), test_DY.idealTransformer1.pinP_Prim.v[1].im, test_DY.idealTransformer2.pinN_Prim.v[1].im, PhA.pin_p.v[1].im, test_DY.pinPrim_A.v[1].im}
{PhA.v[1].re(start=0), test_DY.idealTransformer1.pinP_Prim.v[1].re, test_DY.idealTransformer2.pinN_Prim.v[1].re, PhA.pin_p.v[1].re, test_DY.pinPrim_A.v[1].re}
{PhA.v[2].im(start=0), test_DY.idealTransformer1.pinP_Prim.v[2].im, test_DY.idealTransformer2.pinN_Prim.v[2].im, PhA.pin_p.v[2].im, test_DY.pinPrim_A.v[2].im}
{PhA.v[2].re(start=0), test_DY.idealTransformer1.pinP_Prim.v[2].re, test_DY.idealTransformer2.pinN_Prim.v[2].re, PhA.pin_p.v[2].re, test_DY.pinPrim_A.v[2].re}
{PhA.v[3].im(start=0), test_DY.idealTransformer1.pinP_Prim.v[3].im, test_DY.idealTransformer2.pinN_Prim.v[3].im, PhA.pin_p.v[3].im, test_DY.pinPrim_A.v[3].im}
{PhA.v[3].re(start=0), test_DY.idealTransformer1.pinP_Prim.v[3].re, test_DY.idealTransformer2.pinN_Prim.v[3].re, PhA.pin_p.v[3].re, test_DY.pinPrim_A.v[3].re}
{PhC.v[1].im(start=0), test_DY.idealTransformer1.pinN_Prim.v[1].im, test_DY.idealTransformer3.pinP_Prim.v[1].im, PhC.pin_p.v[1].im, test_DY.pinPrim_C.v[1].im}
{PhC.v[1].re(start=0), test_DY.idealTransformer1.pinN_Prim.v[1].re, test_DY.idealTransformer3.pinP_Prim.v[1].re, PhC.pin_p.v[1].re, test_DY.pinPrim_C.v[1].re}
{PhC.v[2].im(start=0), test_DY.idealTransformer1.pinN_Prim.v[2].im, test_DY.idealTransformer3.pinP_Prim.v[2].im, PhC.pin_p.v[2].im, test_DY.pinPrim_C.v[2].im}
{PhC.v[2].re(start=0), test_DY.idealTransformer1.pinN_Prim.v[2].re, test_DY.idealTransformer3.pinP_Prim.v[2].re, PhC.pin_p.v[2].re, test_DY.pinPrim_C.v[2].re}
{PhC.v[3].im(start=0), test_DY.idealTransformer1.pinN_Prim.v[3].im, test_DY.idealTransformer3.pinP_Prim.v[3].im, PhC.pin_p.v[3].im, test_DY.pinPrim_C.v[3].im}
{PhC.v[3].re(start=0), test_DY.idealTransformer1.pinN_Prim.v[3].re, test_DY.idealTransformer3.pinP_Prim.v[3].re, PhC.pin_p.v[3].re, test_DY.pinPrim_C.v[3].re}
{PhB.v[1].im(start=0), test_DY.idealTransformer2.pinP_Prim.v[1].im, test_DY.idealTransformer3.pinN_Prim.v[1].im, PhB.pin_p.v[1].im, test_DY.pinPrim_B.v[1].im}
{PhB.v[1].re(start=0), test_DY.idealTransformer2.pinP_Prim.v[1].re, test_DY.idealTransformer3.pinN_Prim.v[1].re, PhB.pin_p.v[1].re, test_DY.pinPrim_B.v[1].re}
{PhB.v[2].im(start=0), test_DY.idealTransformer2.pinP_Prim.v[2].im, test_DY.idealTransformer3.pinN_Prim.v[2].im, PhB.pin_p.v[2].im, test_DY.pinPrim_B.v[2].im}
{PhB.v[2].re(start=0), test_DY.idealTransformer2.pinP_Prim.v[2].re, test_DY.idealTransformer3.pinN_Prim.v[2].re, PhB.pin_p.v[2].re, test_DY.pinPrim_B.v[2].re}
{PhB.v[3].im(start=0), test_DY.idealTransformer2.pinP_Prim.v[3].im, test_DY.idealTransformer3.pinN_Prim.v[3].im, PhB.pin_p.v[3].im, test_DY.pinPrim_B.v[3].im}
{PhB.v[3].re(start=0), test_DY.idealTransformer2.pinP_Prim.v[3].re, test_DY.idealTransformer3.pinN_Prim.v[3].re, PhB.pin_p.v[3].re, test_DY.pinPrim_B.v[3].re}
{PhA.theta(start=0), laptop_adpt_3.hPin_P.reference.theta, led_driver_3.hPin_P.reference.theta, laptop_adpt_1.hPin_P.reference.theta, laptop_adpt_2.hPin_P.reference.theta, led_driver_1.hPin_P.reference.theta, led_driver_2.hPin_P.reference.theta, terminal.pin_p.reference.theta, terminal.pin_n.reference.theta, ground2.pin.reference.theta, laptop_adpt_1.hPin_N.reference.theta, laptop_adpt_2.hPin_N.reference.theta, laptop_adpt_3.hPin_N.reference.theta, led_driver_1.hPin_N.reference.theta, led_driver_2.hPin_N.reference.theta, led_driver_3.hPin_N.reference.theta, test_DY.idealTransformer1.pinP_Prim.reference.theta, test_DY.idealTransformer1.pinN_Prim.reference.theta, test_DY.idealTransformer1.pinP_Sec.reference.theta, test_DY.idealTransformer1.pinN_Sec.reference.theta, test_DY.idealTransformer2.pinP_Prim.reference.theta, test_DY.idealTransformer2.pinN_Prim.reference.theta, test_DY.idealTransformer2.pinP_Sec.reference.theta, test_DY.idealTransformer2.pinN_Sec.reference.theta, PhA.pin_p.reference.theta, PhA.pin_n.reference.theta, test_DY.pinPrim_A.reference.theta, ground1.pin.reference.theta, test_DY.idealTransformer3.pinP_Prim.reference.theta, test_DY.idealTransformer3.pinN_Prim.reference.theta, test_DY.idealTransformer3.pinP_Sec.reference.theta, test_DY.idealTransformer3.pinN_Sec.reference.theta, test_DY.pinPrim_C.reference.theta, test_DY.hPin_N.reference.theta, test_DY.pinSec_A.reference.theta, test_DY.pinPrim_B.reference.theta, test_DY.pinSec_B.reference.theta, test_DY.pinSec_C.reference.theta, z.pin_p.reference.theta, z.pin_n.reference.theta, z1.pin_p.reference.theta, z1.pin_n.reference.theta, laptop_adpt_1.loadBase1.pin_p.reference.theta, laptop_adpt_1.loadBase1.pin_n.reference.theta, laptop_adpt_3.loadBase1.pin_p.reference.theta, laptop_adpt_3.loadBase1.pin_n.reference.theta, laptop_adpt_2.loadBase1.pin_p.reference.theta, laptop_adpt_2.loadBase1.pin_n.reference.theta, led_driver_3.loadBase1.pin_p.reference.theta, led_driver_3.loadBase1.pin_n.reference.theta, led_driver_2.loadBase1.pin_p.reference.theta, led_driver_2.loadBase1.pin_n.reference.theta, led_driver_1.loadBase1.pin_p.reference.theta, led_driver_1.loadBase1.pin_n.reference.theta}
{laptop_adpt_1.S_vect[1].im(start=0), laptop_adpt_1.Q, laptop_adpt_3.S_vect[1].im(start=0), laptop_adpt_3.Q, laptop_adpt_2.S_vect[1].im(start=0), laptop_adpt_2.Q, led_driver_1.S_vect[1].im(start=0), led_driver_1.Q, led_driver_3.S_vect[1].im(start=0), led_driver_3.Q, led_driver_2.S_vect[1].im(start=0), led_driver_2.Q}
{systemDef.numHrm, PhA.pin_p.h, PhA.pin_n.h, PhB.pin_p.h, PhB.pin_n.h, PhC.pin_p.h, PhC.pin_n.h, ground1.pin.h, ground2.pin.h, laptop_adpt_1.hPin_P.h, laptop_adpt_1.hPin_N.h, laptop_adpt_1.loadBase1.pin_p.h, laptop_adpt_1.loadBase1.pin_n.h, laptop_adpt_3.hPin_P.h, laptop_adpt_3.hPin_N.h, laptop_adpt_3.loadBase1.pin_p.h, laptop_adpt_3.loadBase1.pin_n.h, terminal.pin_p.h, terminal.pin_n.h, z.pin_p.h, z.pin_n.h, z1.pin_p.h, z1.pin_n.h, test_DY.idealTransformer1.pinP_Prim.h, test_DY.idealTransformer1.pinN_Prim.h, test_DY.idealTransformer1.pinP_Sec.h, test_DY.idealTransformer1.pinN_Sec.h, test_DY.idealTransformer2.pinP_Prim.h, test_DY.idealTransformer2.pinN_Prim.h, test_DY.idealTransformer2.pinP_Sec.h, test_DY.idealTransformer2.pinN_Sec.h, test_DY.idealTransformer3.pinP_Prim.h, test_DY.idealTransformer3.pinN_Prim.h, test_DY.idealTransformer3.pinP_Sec.h, test_DY.idealTransformer3.pinN_Sec.h, test_DY.pinPrim_A.h, test_DY.pinPrim_B.h, test_DY.pinPrim_C.h, test_DY.pinSec_A.h, test_DY.pinSec_B.h, test_DY.pinSec_C.h, test_DY.hPin_N.h, laptop_adpt_2.hPin_P.h, laptop_adpt_2.hPin_N.h, laptop_adpt_2.loadBase1.pin_p.h, laptop_adpt_2.loadBase1.pin_n.h, led_driver_1.hPin_P.h, led_driver_1.hPin_N.h, led_driver_1.loadBase1.pin_p.h, led_driver_1.loadBase1.pin_n.h, led_driver_3.hPin_P.h, led_driver_3.hPin_N.h, led_driver_3.loadBase1.pin_p.h, led_driver_3.loadBase1.pin_n.h, led_driver_2.hPin_P.h, led_driver_2.hPin_N.h, led_driver_2.loadBase1.pin_p.h, led_driver_2.loadBase1.pin_n.h}
{PhA.properties.ComponentType, PhB.properties.ComponentType, PhC.properties.ComponentType}
{ground1.properties.ComponentType, ground2.properties.ComponentType}
{laptop_adpt_1.properties.ComponentType, laptop_adpt_3.properties.ComponentType, laptop_adpt_2.properties.ComponentType, led_driver_1.properties.ComponentType, led_driver_3.properties.ComponentType, led_driver_2.properties.ComponentType}
{laptop_adpt_1.globalSeed, laptop_adpt_3.globalSeed, laptop_adpt_2.globalSeed, led_driver_1.globalSeed, led_driver_3.globalSeed, led_driver_2.globalSeed}
{z.properties.ComponentType, z1.properties.ComponentType}
{test_DY.idealTransformer1.properties.ComponentType, test_DY.idealTransformer2.properties.ComponentType, test_DY.idealTransformer3.properties.ComponentType}
{laptop_1.properties.ComponentType, laptop_2.properties.ComponentType, laptop_3.properties.ComponentType, led_3.properties.ComponentType, led_1.properties.ComponentType, led_2.properties.ComponentType}
996 variables can be eliminated

Incidence:
 eq 0: temp_99
 eq 1: temp_100
 eq 2: temp_101
 eq 3: temp_99 systemDef.modeSelect temp_100 systemDef.eventWriteData temp_101 systemDef.eventReadData
 eq 4: der(PhA.theta)
 eq 5: der(PhA.theta) PhA.omega
 eq 6: der(PhB.theta)
 eq 7: der(PhB.theta) PhB.omega
 eq 8: der(PhC.theta)
 eq 9: der(PhC.theta) PhC.omega
 eq 10: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].re laptop_adpt_1.loadBase1.i[1].re
 eq 11: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].re laptop_adpt_1.loadBase1.i[2].re
 eq 12: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].re laptop_adpt_1.loadBase1.i[3].re
 eq 13: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].im laptop_adpt_1.loadBase1.i[1].im
 eq 14: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].im laptop_adpt_1.loadBase1.i[2].im
 eq 15: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].im laptop_adpt_1.loadBase1.i[3].im
 eq 16: temp_102 systemDef.eventWriteData
 eq 17: temp_103 systemDef.eventReadData
 eq 18: temp_102 temp_103
 eq 19: der(PhA.theta) laptop_adpt_1.loadBase1.omega
 eq 20: systemDef.modeSelect laptop_adpt_3.loadBase1.v[1].re laptop_adpt_3.loadBase1.i[1].re
 eq 21: systemDef.modeSelect laptop_adpt_3.loadBase1.v[2].re laptop_adpt_3.loadBase1.i[2].re
 eq 22: systemDef.modeSelect laptop_adpt_3.loadBase1.v[3].re laptop_adpt_3.loadBase1.i[3].re
 eq 23: systemDef.modeSelect laptop_adpt_3.loadBase1.v[1].im laptop_adpt_3.loadBase1.i[1].im
 eq 24: systemDef.modeSelect laptop_adpt_3.loadBase1.v[2].im laptop_adpt_3.loadBase1.i[2].im
 eq 25: systemDef.modeSelect laptop_adpt_3.loadBase1.v[3].im laptop_adpt_3.loadBase1.i[3].im
 eq 26: temp_104 systemDef.eventWriteData
 eq 27: temp_105 systemDef.eventReadData
 eq 28: temp_104 temp_105
 eq 29: der(PhA.theta) laptop_adpt_3.loadBase1.omega
 eq 30: der(PhA.theta) terminal.omega
 eq 31: z.v[1].re z.i[1].re z.i[1].im
 eq 32: z.v[2].re z.i[2].re z.i[2].im
 eq 33: z.v[3].re z.i[3].re z.i[3].im
 eq 34: z.v[1].im z.i[1].im z.i[1].re
 eq 35: z.v[2].im z.i[2].im z.i[2].re
 eq 36: z.v[3].im z.i[3].im z.i[3].re
 eq 37: der(PhA.theta) z.omega
 eq 38: z.v[1].re laptop_adpt_1.loadBase1.v[1].re
 eq 39: z.v[1].im laptop_adpt_1.loadBase1.v[1].im
 eq 40: z.v[2].re laptop_adpt_1.loadBase1.v[2].re
 eq 41: z.v[2].im laptop_adpt_1.loadBase1.v[2].im
 eq 42: z.v[3].re laptop_adpt_1.loadBase1.v[3].re
 eq 43: z.v[3].im laptop_adpt_1.loadBase1.v[3].im
 eq 44: z1.v[1].re z1.i[1].re z1.i[1].im
 eq 45: z1.v[2].re z1.i[2].re z1.i[2].im
 eq 46: z1.v[3].re z1.i[3].re z1.i[3].im
 eq 47: z1.v[1].im z1.i[1].im z1.i[1].re
 eq 48: z1.v[2].im z1.i[2].im z1.i[2].re
 eq 49: z1.v[3].im z1.i[3].im z1.i[3].re
 eq 50: der(PhA.theta) z1.omega
 eq 51: z1.v[1].re laptop_adpt_3.loadBase1.v[1].re
 eq 52: z1.v[1].im laptop_adpt_3.loadBase1.v[1].im
 eq 53: z1.v[2].re laptop_adpt_3.loadBase1.v[2].re
 eq 54: z1.v[2].im laptop_adpt_3.loadBase1.v[2].im
 eq 55: z1.v[3].re laptop_adpt_3.loadBase1.v[3].re
 eq 56: z1.v[3].im laptop_adpt_3.loadBase1.v[3].im
 eq 57: z.i[1].re test_DY.idealTransformer2.iPrim[1].re
 eq 58: z.i[1].im test_DY.idealTransformer2.iPrim[1].im
 eq 59: z.i[2].re test_DY.idealTransformer2.iPrim[2].re
 eq 60: z.i[2].im test_DY.idealTransformer2.iPrim[2].im
 eq 61: z.i[3].re test_DY.idealTransformer2.iPrim[3].re
 eq 62: z.i[3].im test_DY.idealTransformer2.iPrim[3].im
 eq 63: z1.i[1].re test_DY.idealTransformer3.iPrim[1].re
 eq 64: z1.i[1].im test_DY.idealTransformer3.iPrim[1].im
 eq 65: z1.i[2].re test_DY.idealTransformer3.iPrim[2].re
 eq 66: z1.i[2].im test_DY.idealTransformer3.iPrim[2].im
 eq 67: z1.i[3].re test_DY.idealTransformer3.iPrim[3].re
 eq 68: z1.i[3].im test_DY.idealTransformer3.iPrim[3].im
 eq 69: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].re laptop_adpt_2.loadBase1.i[1].re
 eq 70: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].re laptop_adpt_2.loadBase1.i[2].re
 eq 71: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].re laptop_adpt_2.loadBase1.i[3].re
 eq 72: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].im laptop_adpt_2.loadBase1.i[1].im
 eq 73: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].im laptop_adpt_2.loadBase1.i[2].im
 eq 74: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].im laptop_adpt_2.loadBase1.i[3].im
 eq 75: temp_106 systemDef.eventWriteData
 eq 76: temp_107 systemDef.eventReadData
 eq 77: temp_106 temp_107
 eq 78: der(PhA.theta) laptop_adpt_2.loadBase1.omega
 eq 79: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].re led_driver_1.loadBase1.i[1].re
 eq 80: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].re led_driver_1.loadBase1.i[2].re
 eq 81: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].re led_driver_1.loadBase1.i[3].re
 eq 82: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].im led_driver_1.loadBase1.i[1].im
 eq 83: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].im led_driver_1.loadBase1.i[2].im
 eq 84: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].im led_driver_1.loadBase1.i[3].im
 eq 85: temp_108 systemDef.eventWriteData
 eq 86: temp_109 systemDef.eventReadData
 eq 87: temp_108 temp_109
 eq 88: der(PhA.theta) led_driver_1.loadBase1.omega
 eq 89: systemDef.modeSelect laptop_adpt_3.loadBase1.v[1].re led_driver_3.loadBase1.i[1].re
 eq 90: systemDef.modeSelect laptop_adpt_3.loadBase1.v[2].re led_driver_3.loadBase1.i[2].re
 eq 91: systemDef.modeSelect laptop_adpt_3.loadBase1.v[3].re led_driver_3.loadBase1.i[3].re
 eq 92: systemDef.modeSelect laptop_adpt_3.loadBase1.v[1].im led_driver_3.loadBase1.i[1].im
 eq 93: systemDef.modeSelect laptop_adpt_3.loadBase1.v[2].im led_driver_3.loadBase1.i[2].im
 eq 94: systemDef.modeSelect laptop_adpt_3.loadBase1.v[3].im led_driver_3.loadBase1.i[3].im
 eq 95: temp_110 systemDef.eventWriteData
 eq 96: temp_111 systemDef.eventReadData
 eq 97: temp_110 temp_111
 eq 98: der(PhA.theta) led_driver_3.loadBase1.omega
 eq 99: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].re led_driver_2.loadBase1.i[1].re
 eq 100: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].re led_driver_2.loadBase1.i[2].re
 eq 101: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].re led_driver_2.loadBase1.i[3].re
 eq 102: systemDef.modeSelect laptop_adpt_1.loadBase1.v[1].im led_driver_2.loadBase1.i[1].im
 eq 103: systemDef.modeSelect laptop_adpt_1.loadBase1.v[2].im led_driver_2.loadBase1.i[2].im
 eq 104: systemDef.modeSelect laptop_adpt_1.loadBase1.v[3].im led_driver_2.loadBase1.i[3].im
 eq 105: temp_112 systemDef.eventWriteData
 eq 106: temp_113 systemDef.eventReadData
 eq 107: temp_112 temp_113
 eq 108: der(PhA.theta) led_driver_2.loadBase1.omega
 eq 109: PhA.i[1].im PhB.i[1].im PhC.i[1].im ground1.pin.iIm[1]
 eq 110: PhA.i[2].im PhB.i[2].im PhC.i[2].im ground1.pin.iIm[2]
 eq 111: PhA.i[3].im PhB.i[3].im PhC.i[3].im ground1.pin.iIm[3]
 eq 112: PhA.i[1].re PhB.i[1].re PhC.i[1].re ground1.pin.iRe[1]
 eq 113: PhA.i[2].re PhB.i[2].re PhC.i[2].re ground1.pin.iRe[2]
 eq 114: PhA.i[3].re PhB.i[3].re PhC.i[3].re ground1.pin.iRe[3]
 eq 115: laptop_adpt_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im led_driver_2.loadBase1.i[1].im z.i[1].im
 eq 116: laptop_adpt_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im led_driver_2.loadBase1.i[2].im z.i[2].im
 eq 117: laptop_adpt_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im led_driver_2.loadBase1.i[3].im z.i[3].im
 eq 118: laptop_adpt_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re led_driver_2.loadBase1.i[1].re z.i[1].re
 eq 119: laptop_adpt_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re led_driver_2.loadBase1.i[2].re z.i[2].re
 eq 120: laptop_adpt_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re led_driver_2.loadBase1.i[3].re z.i[3].re
 eq 121: laptop_adpt_3.loadBase1.i[1].im led_driver_3.loadBase1.i[1].im z1.i[1].im
 eq 122: laptop_adpt_3.loadBase1.i[2].im led_driver_3.loadBase1.i[2].im z1.i[2].im
 eq 123: laptop_adpt_3.loadBase1.i[3].im led_driver_3.loadBase1.i[3].im z1.i[3].im
 eq 124: laptop_adpt_3.loadBase1.i[1].re led_driver_3.loadBase1.i[1].re z1.i[1].re
 eq 125: laptop_adpt_3.loadBase1.i[2].re led_driver_3.loadBase1.i[2].re z1.i[2].re
 eq 126: laptop_adpt_3.loadBase1.i[3].re led_driver_3.loadBase1.i[3].re z1.i[3].re
 eq 127: ground2.pin.iIm[1] laptop_adpt_1.loadBase1.i[1].im laptop_adpt_2.loadBase1.i[1].im laptop_adpt_3.loadBase1.i[1].im led_driver_1.loadBase1.i[1].im led_driver_2.loadBase1.i[1].im led_driver_3.loadBase1.i[1].im test_DY.hPin_N.iIm[1]
 eq 128: ground2.pin.iIm[2] laptop_adpt_1.loadBase1.i[2].im laptop_adpt_2.loadBase1.i[2].im laptop_adpt_3.loadBase1.i[2].im led_driver_1.loadBase1.i[2].im led_driver_2.loadBase1.i[2].im led_driver_3.loadBase1.i[2].im test_DY.hPin_N.iIm[2]
 eq 129: ground2.pin.iIm[3] laptop_adpt_1.loadBase1.i[3].im laptop_adpt_2.loadBase1.i[3].im laptop_adpt_3.loadBase1.i[3].im led_driver_1.loadBase1.i[3].im led_driver_2.loadBase1.i[3].im led_driver_3.loadBase1.i[3].im test_DY.hPin_N.iIm[3]
 eq 130: ground2.pin.iRe[1] laptop_adpt_1.loadBase1.i[1].re laptop_adpt_2.loadBase1.i[1].re laptop_adpt_3.loadBase1.i[1].re led_driver_1.loadBase1.i[1].re led_driver_2.loadBase1.i[1].re led_driver_3.loadBase1.i[1].re test_DY.hPin_N.iRe[1]
 eq 131: ground2.pin.iRe[2] laptop_adpt_1.loadBase1.i[2].re laptop_adpt_2.loadBase1.i[2].re laptop_adpt_3.loadBase1.i[2].re led_driver_1.loadBase1.i[2].re led_driver_2.loadBase1.i[2].re led_driver_3.loadBase1.i[2].re test_DY.hPin_N.iRe[2]
 eq 132: ground2.pin.iRe[3] laptop_adpt_1.loadBase1.i[3].re laptop_adpt_2.loadBase1.i[3].re laptop_adpt_3.loadBase1.i[3].re led_driver_1.loadBase1.i[3].re led_driver_2.loadBase1.i[3].re led_driver_3.loadBase1.i[3].re test_DY.hPin_N.iRe[3]
 eq 133: test_DY.idealTransformer2.iPrim[1].im PhA.i[1].im
 eq 134: test_DY.idealTransformer2.iPrim[2].im PhA.i[2].im
 eq 135: test_DY.idealTransformer2.iPrim[3].im PhA.i[3].im
 eq 136: test_DY.idealTransformer2.iPrim[1].re PhA.i[1].re
 eq 137: test_DY.idealTransformer2.iPrim[2].re PhA.i[2].re
 eq 138: test_DY.idealTransformer2.iPrim[3].re PhA.i[3].re
 eq 139: test_DY.idealTransformer3.iPrim[1].im PhC.i[1].im
 eq 140: test_DY.idealTransformer3.iPrim[2].im PhC.i[2].im
 eq 141: test_DY.idealTransformer3.iPrim[3].im PhC.i[3].im
 eq 142: test_DY.idealTransformer3.iPrim[1].re PhC.i[1].re
 eq 143: test_DY.idealTransformer3.iPrim[2].re PhC.i[2].re
 eq 144: test_DY.idealTransformer3.iPrim[3].re PhC.i[3].re
 eq 145: test_DY.idealTransformer2.iPrim[1].im test_DY.idealTransformer3.iPrim[1].im PhB.i[1].im
 eq 146: test_DY.idealTransformer2.iPrim[2].im test_DY.idealTransformer3.iPrim[2].im PhB.i[2].im
 eq 147: test_DY.idealTransformer2.iPrim[3].im test_DY.idealTransformer3.iPrim[3].im PhB.i[3].im
 eq 148: test_DY.idealTransformer2.iPrim[1].re test_DY.idealTransformer3.iPrim[1].re PhB.i[1].re
 eq 149: test_DY.idealTransformer2.iPrim[2].re test_DY.idealTransformer3.iPrim[2].re PhB.i[2].re
 eq 150: test_DY.idealTransformer2.iPrim[3].re test_DY.idealTransformer3.iPrim[3].re PhB.i[3].re
 eq 151: test_DY.hPin_N.iIm[1] z.i[1].im z1.i[1].im
 eq 152: test_DY.hPin_N.iIm[2] z.i[2].im z1.i[2].im
 eq 153: test_DY.hPin_N.iIm[3] z.i[3].im z1.i[3].im
 eq 154: test_DY.hPin_N.iRe[1] z.i[1].re z1.i[1].re
 eq 155: test_DY.hPin_N.iRe[2] z.i[2].re z1.i[2].re
 eq 156: test_DY.hPin_N.iRe[3] z.i[3].re z1.i[3].re
 eq 157:
 eq 158:
 eq 159:
 eq 160:
 eq 161:
 eq 162:
 eq 163:
 eq 164:
 eq 165:
 eq 166:
 eq 167:
 eq 168:
 eq 169:
 eq 170:
 eq 171: PhA.P PhA.i[1].re PhA.i[2].re PhA.i[3].re PhA.i[1].im PhA.i[2].im PhA.i[3].im
 eq 172: PhB.P PhB.i[1].re PhB.i[2].re PhB.i[3].re PhB.i[1].im PhB.i[2].im PhB.i[3].im
 eq 173: PhC.P PhC.i[1].re PhC.i[2].re PhC.i[3].re PhC.i[1].im PhC.i[2].im PhC.i[3].im
 eq 174: z.vFundAbs z.v[1].re z.v[1].im
 eq 175: z.vFundArg z.v[1].im z.v[1].re
 eq 176: z.iFundAbs z.i[1].re z.i[1].im
 eq 177: z.iFundArg z.i[1].im z.i[1].re
 eq 178: z1.vFundAbs z1.v[1].re z1.v[1].im
 eq 179: z1.vFundArg z1.v[1].im z1.v[1].re
 eq 180: z1.iFundAbs z1.i[1].re z1.i[1].im
 eq 181: z1.iFundArg z1.i[1].im z1.i[1].re

Variable dependencies:
Derivative variables: 
 der(PhA.theta)
    systemDef.fFund
 der(PhB.theta)
    systemDef.fFund
 der(PhC.theta)
    systemDef.fFund

Differentiated variables: 
 PhA.theta
 PhB.theta
 PhC.theta

Algebraic real variables: 
 PhA.P
    PhA.vMag[1]
    PhA.vArg[1]
    PhA.vArg[2]
    PhA.vMag[2]
    PhA.vMag[3]
    PhA.vArg[3]
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    PhC.vMag[2]
    PhC.vArg[2]
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[3]
    PhC.vMag[3]
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
 PhA.i[1].re
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhA.i[1].im
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhA.i[2].re
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhA.i[2].im
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhA.i[3].re
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhA.i[3].im
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhA.omega
    systemDef.fFund
 PhB.P
    PhB.vArg[1]
    PhB.vMag[1]
    PhB.vMag[2]
    PhB.vArg[2]
    PhB.vArg[3]
    PhB.vMag[3]
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhA.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    PhC.vArg[1]
    PhC.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    systemDef.hrms[2]
    PhA.vArg[2]
    PhA.vMag[2]
    PhC.vMag[2]
    PhC.vArg[2]
    systemDef.hrms[3]
    PhA.vMag[3]
    PhA.vArg[3]
    PhC.vArg[3]
    PhC.vMag[3]
 PhB.i[1].re
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    PhC.vArg[1]
    PhC.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 PhB.i[1].im
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    PhC.vArg[1]
    PhC.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 PhB.i[2].re
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    PhC.vMag[2]
    PhC.vArg[2]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 PhB.i[2].im
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    PhC.vMag[2]
    PhC.vArg[2]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 PhB.i[3].re
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    PhC.vArg[3]
    PhC.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 PhB.i[3].im
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    PhC.vArg[3]
    PhC.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 PhB.omega
    systemDef.fFund
 PhC.P
    PhC.vArg[1]
    PhC.vMag[1]
    PhC.vMag[2]
    PhC.vArg[2]
    PhC.vArg[3]
    PhC.vMag[3]
    terminal.r
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    PhA.vArg[2]
    PhA.vMag[2]
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vMag[3]
    PhA.vArg[3]
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
 PhC.i[1].re
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhC.i[1].im
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhC.i[2].re
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhC.i[2].im
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhC.i[3].re
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhC.i[3].im
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 PhC.omega
    systemDef.fFund
 ground1.pin.iIm[1]
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 ground1.pin.iIm[2]
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 ground1.pin.iIm[3]
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 ground1.pin.iRe[1]
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 ground1.pin.iRe[2]
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 ground1.pin.iRe[3]
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 ground2.pin.iIm[1]
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 ground2.pin.iIm[2]
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 ground2.pin.iIm[3]
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 ground2.pin.iRe[1]
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 ground2.pin.iRe[2]
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 ground2.pin.iRe[3]
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 laptop_adpt_1.loadBase1.v[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.v[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.v[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.v[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.v[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.v[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.i[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.i[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.i[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.i[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.i[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.i[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_1.loadBase1.omega
    systemDef.fFund
 laptop_adpt_3.loadBase1.v[1].re
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.v[1].im
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.v[2].re
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.v[2].im
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.v[3].re
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.v[3].im
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.i[1].re
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.i[1].im
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.i[2].re
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.i[2].im
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.i[3].re
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.i[3].im
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_3.loadBase1.omega
    systemDef.fFund
 terminal.omega
    systemDef.fFund
 z.vFundAbs
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.vFundArg
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.iFundAbs
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.iFundArg
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.v[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.v[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.v[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.v[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.v[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.v[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.i[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.i[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.i[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.i[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.i[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.i[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z.omega
    systemDef.fFund
 z1.vFundAbs
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.vFundArg
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.iFundAbs
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.iFundArg
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.v[1].re
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.v[1].im
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.v[2].re
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.v[2].im
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.v[3].re
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.v[3].im
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.i[1].re
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.i[1].im
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.i[2].re
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.i[2].im
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.i[3].re
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.i[3].im
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 z1.omega
    systemDef.fFund
 test_DY.idealTransformer2.iPrim[1].re
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer2.iPrim[1].im
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer2.iPrim[2].re
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer2.iPrim[2].im
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer2.iPrim[3].re
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer2.iPrim[3].im
    test_DY.N
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer3.iPrim[1].re
    test_DY.N
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer3.iPrim[1].im
    test_DY.N
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer3.iPrim[2].re
    test_DY.N
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer3.iPrim[2].im
    test_DY.N
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer3.iPrim[3].re
    test_DY.N
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.idealTransformer3.iPrim[3].im
    test_DY.N
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 test_DY.hPin_N.iIm[1]
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 test_DY.hPin_N.iIm[2]
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 test_DY.hPin_N.iIm[3]
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 test_DY.hPin_N.iRe[1]
    terminal.r
    PhC.vArg[1]
    PhC.vMag[1]
    test_DY.N
    PhA.vMag[1]
    PhA.vArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    PhB.vMag[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
 test_DY.hPin_N.iRe[2]
    PhC.vMag[2]
    terminal.r
    PhA.vArg[2]
    PhC.vArg[2]
    test_DY.N
    PhA.vMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 test_DY.hPin_N.iRe[3]
    terminal.r
    PhC.vArg[3]
    PhA.vMag[3]
    PhA.vArg[3]
    test_DY.N
    PhC.vMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhB.vArg[3]
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
    z1.z.re
    z1.z.im
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
 laptop_adpt_2.loadBase1.i[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_2.loadBase1.i[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_2.loadBase1.i[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_2.loadBase1.i[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_2.loadBase1.i[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_2.loadBase1.i[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 laptop_adpt_2.loadBase1.omega
    systemDef.fFund
 led_driver_1.loadBase1.i[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_1.loadBase1.i[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_1.loadBase1.i[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_1.loadBase1.i[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_1.loadBase1.i[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_1.loadBase1.i[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_1.loadBase1.omega
    systemDef.fFund
 led_driver_3.loadBase1.i[1].re
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_3.loadBase1.i[1].im
    z1.z.re
    z1.z.im
    systemDef.hrms[1]
    PhC.vArg[1]
    PhC.vMag[1]
    PhB.vArg[1]
    test_DY.N
    PhB.vMag[1]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    led_driver_3.efficiency
    led_3.pwr
    led_driver_3.V_Rect
    laptop_adpt_3.efficiency
    laptop_3.pwr
    laptop_adpt_3.V_Rect
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_3.loadBase1.i[2].re
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_3.loadBase1.i[2].im
    z1.z.re
    z1.z.im
    systemDef.hrms[2]
    PhC.vMag[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhC.vArg[2]
    test_DY.N
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_3.loadBase1.i[3].re
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_3.loadBase1.i[3].im
    z1.z.re
    z1.z.im
    systemDef.hrms[3]
    PhC.vArg[3]
    PhB.vArg[3]
    test_DY.N
    PhC.vMag[3]
    PhB.vMag[3]
    led_driver_3.hrmMdl_coefMag[1]
    led_driver_3.hrmMdl_coefMag[2]
    led_driver_3.hrmMdl_coefMag[3]
    led_driver_3.hrmMdl_coefMag[4]
    led_driver_3.hrmMdl_coefArg[1]
    led_driver_3.hrmMdl_coefArg[2]
    led_driver_3.hrmMdl_coefArg[3]
    led_driver_3.hrmMdl_coefArg[4]
    laptop_adpt_3.hrmMdl_coefMag[1]
    laptop_adpt_3.hrmMdl_coefMag[2]
    laptop_adpt_3.hrmMdl_coefMag[3]
    laptop_adpt_3.hrmMdl_coefMag[4]
    laptop_adpt_3.hrmMdl_coefArg[1]
    laptop_adpt_3.hrmMdl_coefArg[2]
    laptop_adpt_3.hrmMdl_coefArg[3]
    laptop_adpt_3.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_3.loadBase1.omega
    systemDef.fFund
 led_driver_2.loadBase1.i[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_2.loadBase1.i[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    PhB.vArg[1]
    test_DY.N
    PhA.vMag[1]
    PhB.vMag[1]
    PhA.vArg[1]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    led_driver_2.efficiency
    led_driver_2.V_Rect
    led_2.pwr
    led_1.pwr
    led_driver_1.V_Rect
    led_driver_1.efficiency
    laptop_2.pwr
    laptop_adpt_2.efficiency
    laptop_adpt_2.V_Rect
    laptop_1.pwr
    laptop_adpt_1.V_Rect
    laptop_adpt_1.efficiency
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_2.loadBase1.i[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_2.loadBase1.i[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    PhB.vMag[2]
    PhB.vArg[2]
    PhA.vArg[2]
    test_DY.N
    PhA.vMag[2]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_2.loadBase1.i[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_2.loadBase1.i[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    PhA.vMag[3]
    PhB.vArg[3]
    PhA.vArg[3]
    test_DY.N
    PhB.vMag[3]
    led_driver_2.hrmMdl_coefMag[1]
    led_driver_2.hrmMdl_coefMag[2]
    led_driver_2.hrmMdl_coefMag[3]
    led_driver_2.hrmMdl_coefMag[4]
    led_driver_2.hrmMdl_coefArg[1]
    led_driver_2.hrmMdl_coefArg[2]
    led_driver_2.hrmMdl_coefArg[3]
    led_driver_2.hrmMdl_coefArg[4]
    led_driver_1.hrmMdl_coefMag[1]
    led_driver_1.hrmMdl_coefMag[2]
    led_driver_1.hrmMdl_coefMag[3]
    led_driver_1.hrmMdl_coefMag[4]
    led_driver_1.hrmMdl_coefArg[1]
    led_driver_1.hrmMdl_coefArg[2]
    led_driver_1.hrmMdl_coefArg[3]
    led_driver_1.hrmMdl_coefArg[4]
    laptop_adpt_2.hrmMdl_coefMag[1]
    laptop_adpt_2.hrmMdl_coefMag[2]
    laptop_adpt_2.hrmMdl_coefMag[3]
    laptop_adpt_2.hrmMdl_coefMag[4]
    laptop_adpt_2.hrmMdl_coefArg[1]
    laptop_adpt_2.hrmMdl_coefArg[2]
    laptop_adpt_2.hrmMdl_coefArg[3]
    laptop_adpt_2.hrmMdl_coefArg[4]
    laptop_adpt_1.hrmMdl_coefMag[1]
    laptop_adpt_1.hrmMdl_coefMag[2]
    laptop_adpt_1.hrmMdl_coefMag[3]
    laptop_adpt_1.hrmMdl_coefMag[4]
    laptop_adpt_1.hrmMdl_coefArg[1]
    laptop_adpt_1.hrmMdl_coefArg[2]
    laptop_adpt_1.hrmMdl_coefArg[3]
    laptop_adpt_1.hrmMdl_coefArg[4]
    pre(temp_112)
    pre(temp_113)
    pre(temp_110)
    pre(temp_111)
    pre(temp_108)
    pre(temp_109)
    pre(temp_106)
    pre(temp_107)
    pre(temp_104)
    pre(temp_105)
    pre(temp_102)
    pre(temp_103)
    pre(temp_99)
    pre(temp_100)
    pre(temp_101)
    pre(systemDef.eventReadData)
    pre(systemDef.eventWriteData)
 led_driver_2.loadBase1.omega
    systemDef.fFund



Connection sets: 301 sets
Connection set (flow): {PhA.pin_n.iIm[1:3] (i), PhB.pin_n.iIm[1:3] (i), PhC.pin_n.iIm[1:3] (i), ground1.pin.iIm[1:3] (i)}
Connection set (flow): {PhA.pin_n.iRe[1:3] (i), PhB.pin_n.iRe[1:3] (i), PhC.pin_n.iRe[1:3] (i), ground1.pin.iRe[1:3] (i)}
Connection set (potential): {PhA.pin_n.v[1].im (i), PhB.pin_n.v[1].im (i), PhC.pin_n.v[1].im (i), ground1.pin.v[1].im (i)}
Connection set (potential): {PhA.pin_n.v[1].re (i), PhB.pin_n.v[1].re (i), PhC.pin_n.v[1].re (i), ground1.pin.v[1].re (i)}
Connection set (potential): {PhA.pin_n.v[2].im (i), PhB.pin_n.v[2].im (i), PhC.pin_n.v[2].im (i), ground1.pin.v[2].im (i)}
Connection set (potential): {PhA.pin_n.v[2].re (i), PhB.pin_n.v[2].re (i), PhC.pin_n.v[2].re (i), ground1.pin.v[2].re (i)}
Connection set (potential): {PhA.pin_n.v[3].im (i), PhB.pin_n.v[3].im (i), PhC.pin_n.v[3].im (i), ground1.pin.v[3].im (i)}
Connection set (potential): {PhA.pin_n.v[3].re (i), PhB.pin_n.v[3].re (i), PhC.pin_n.v[3].re (i), ground1.pin.v[3].re (i)}
Connection set (flow): {laptop_adpt_1.hPin_P.iIm[1:3] (i), laptop_adpt_2.hPin_P.iIm[1:3] (i), led_driver_1.hPin_P.iIm[1:3] (i), led_driver_2.hPin_P.iIm[1:3] (i), z.pin_n.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_1.hPin_P.iRe[1:3] (i), laptop_adpt_2.hPin_P.iRe[1:3] (i), led_driver_1.hPin_P.iRe[1:3] (i), led_driver_2.hPin_P.iRe[1:3] (i), z.pin_n.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[1].im (i), laptop_adpt_2.hPin_P.v[1].im (i), led_driver_1.hPin_P.v[1].im (i), led_driver_2.hPin_P.v[1].im (i), z.pin_n.v[1].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[1].re (i), laptop_adpt_2.hPin_P.v[1].re (i), led_driver_1.hPin_P.v[1].re (i), led_driver_2.hPin_P.v[1].re (i), z.pin_n.v[1].re (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[2].im (i), laptop_adpt_2.hPin_P.v[2].im (i), led_driver_1.hPin_P.v[2].im (i), led_driver_2.hPin_P.v[2].im (i), z.pin_n.v[2].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[2].re (i), laptop_adpt_2.hPin_P.v[2].re (i), led_driver_1.hPin_P.v[2].re (i), led_driver_2.hPin_P.v[2].re (i), z.pin_n.v[2].re (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[3].im (i), laptop_adpt_2.hPin_P.v[3].im (i), led_driver_1.hPin_P.v[3].im (i), led_driver_2.hPin_P.v[3].im (i), z.pin_n.v[3].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[3].re (i), laptop_adpt_2.hPin_P.v[3].re (i), led_driver_1.hPin_P.v[3].re (i), led_driver_2.hPin_P.v[3].re (i), z.pin_n.v[3].re (i)}
Connection set (flow): {laptop_adpt_3.hPin_P.iIm[1:3] (i), led_driver_3.hPin_P.iIm[1:3] (i), z1.pin_n.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_3.hPin_P.iRe[1:3] (i), led_driver_3.hPin_P.iRe[1:3] (i), z1.pin_n.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[1].im (i), led_driver_3.hPin_P.v[1].im (i), z1.pin_n.v[1].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[1].re (i), led_driver_3.hPin_P.v[1].re (i), z1.pin_n.v[1].re (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[2].im (i), led_driver_3.hPin_P.v[2].im (i), z1.pin_n.v[2].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[2].re (i), led_driver_3.hPin_P.v[2].re (i), z1.pin_n.v[2].re (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[3].im (i), led_driver_3.hPin_P.v[3].im (i), z1.pin_n.v[3].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[3].re (i), led_driver_3.hPin_P.v[3].re (i), z1.pin_n.v[3].re (i)}
Connection set (flow): {PhA.pin_p.iIm[1:3] (i), test_DY.pinPrim_A.iIm[1:3] (i)}
Connection set (flow): {PhA.pin_p.iRe[1:3] (i), test_DY.pinPrim_A.iRe[1:3] (i)}
Connection set (potential): {PhA.pin_p.v[1].im (i), test_DY.pinPrim_A.v[1].im (i)}
Connection set (potential): {PhA.pin_p.v[1].re (i), test_DY.pinPrim_A.v[1].re (i)}
Connection set (potential): {PhA.pin_p.v[2].im (i), test_DY.pinPrim_A.v[2].im (i)}
Connection set (potential): {PhA.pin_p.v[2].re (i), test_DY.pinPrim_A.v[2].re (i)}
Connection set (potential): {PhA.pin_p.v[3].im (i), test_DY.pinPrim_A.v[3].im (i)}
Connection set (potential): {PhA.pin_p.v[3].re (i), test_DY.pinPrim_A.v[3].re (i)}
Connection set (flow): {PhB.pin_p.iIm[1:3] (i), test_DY.pinPrim_B.iIm[1:3] (i)}
Connection set (flow): {PhB.pin_p.iRe[1:3] (i), test_DY.pinPrim_B.iRe[1:3] (i)}
Connection set (potential): {PhB.pin_p.v[1].im (i), test_DY.pinPrim_B.v[1].im (i)}
Connection set (potential): {PhB.pin_p.v[1].re (i), test_DY.pinPrim_B.v[1].re (i)}
Connection set (potential): {PhB.pin_p.v[2].im (i), test_DY.pinPrim_B.v[2].im (i)}
Connection set (potential): {PhB.pin_p.v[2].re (i), test_DY.pinPrim_B.v[2].re (i)}
Connection set (potential): {PhB.pin_p.v[3].im (i), test_DY.pinPrim_B.v[3].im (i)}
Connection set (potential): {PhB.pin_p.v[3].re (i), test_DY.pinPrim_B.v[3].re (i)}
Connection set (flow): {PhC.pin_p.iIm[1:3] (i), test_DY.pinPrim_C.iIm[1:3] (i)}
Connection set (flow): {PhC.pin_p.iRe[1:3] (i), test_DY.pinPrim_C.iRe[1:3] (i)}
Connection set (potential): {PhC.pin_p.v[1].im (i), test_DY.pinPrim_C.v[1].im (i)}
Connection set (potential): {PhC.pin_p.v[1].re (i), test_DY.pinPrim_C.v[1].re (i)}
Connection set (potential): {PhC.pin_p.v[2].im (i), test_DY.pinPrim_C.v[2].im (i)}
Connection set (potential): {PhC.pin_p.v[2].re (i), test_DY.pinPrim_C.v[2].re (i)}
Connection set (potential): {PhC.pin_p.v[3].im (i), test_DY.pinPrim_C.v[3].im (i)}
Connection set (potential): {PhC.pin_p.v[3].re (i), test_DY.pinPrim_C.v[3].re (i)}
Connection set (flow): {ground2.pin.iIm[1:3] (i), laptop_adpt_1.hPin_N.iIm[1:3] (i), laptop_adpt_2.hPin_N.iIm[1:3] (i), laptop_adpt_3.hPin_N.iIm[1:3] (i), led_driver_1.hPin_N.iIm[1:3] (i), led_driver_2.hPin_N.iIm[1:3] (i), led_driver_3.hPin_N.iIm[1:3] (i), terminal.pin_n.iIm[1:3] (i), test_DY.hPin_N.iIm[1:3] (i)}
Connection set (flow): {ground2.pin.iRe[1:3] (i), laptop_adpt_1.hPin_N.iRe[1:3] (i), laptop_adpt_2.hPin_N.iRe[1:3] (i), laptop_adpt_3.hPin_N.iRe[1:3] (i), led_driver_1.hPin_N.iRe[1:3] (i), led_driver_2.hPin_N.iRe[1:3] (i), led_driver_3.hPin_N.iRe[1:3] (i), terminal.pin_n.iRe[1:3] (i), test_DY.hPin_N.iRe[1:3] (i)}
Connection set (potential): {ground2.pin.v[1].im (i), laptop_adpt_1.hPin_N.v[1].im (i), laptop_adpt_2.hPin_N.v[1].im (i), laptop_adpt_3.hPin_N.v[1].im (i), led_driver_1.hPin_N.v[1].im (i), led_driver_2.hPin_N.v[1].im (i), led_driver_3.hPin_N.v[1].im (i), terminal.pin_n.v[1].im (i), test_DY.hPin_N.v[1].im (i)}
Connection set (potential): {ground2.pin.v[1].re (i), laptop_adpt_1.hPin_N.v[1].re (i), laptop_adpt_2.hPin_N.v[1].re (i), laptop_adpt_3.hPin_N.v[1].re (i), led_driver_1.hPin_N.v[1].re (i), led_driver_2.hPin_N.v[1].re (i), led_driver_3.hPin_N.v[1].re (i), terminal.pin_n.v[1].re (i), test_DY.hPin_N.v[1].re (i)}
Connection set (potential): {ground2.pin.v[2].im (i), laptop_adpt_1.hPin_N.v[2].im (i), laptop_adpt_2.hPin_N.v[2].im (i), laptop_adpt_3.hPin_N.v[2].im (i), led_driver_1.hPin_N.v[2].im (i), led_driver_2.hPin_N.v[2].im (i), led_driver_3.hPin_N.v[2].im (i), terminal.pin_n.v[2].im (i), test_DY.hPin_N.v[2].im (i)}
Connection set (potential): {ground2.pin.v[2].re (i), laptop_adpt_1.hPin_N.v[2].re (i), laptop_adpt_2.hPin_N.v[2].re (i), laptop_adpt_3.hPin_N.v[2].re (i), led_driver_1.hPin_N.v[2].re (i), led_driver_2.hPin_N.v[2].re (i), led_driver_3.hPin_N.v[2].re (i), terminal.pin_n.v[2].re (i), test_DY.hPin_N.v[2].re (i)}
Connection set (potential): {ground2.pin.v[3].im (i), laptop_adpt_1.hPin_N.v[3].im (i), laptop_adpt_2.hPin_N.v[3].im (i), laptop_adpt_3.hPin_N.v[3].im (i), led_driver_1.hPin_N.v[3].im (i), led_driver_2.hPin_N.v[3].im (i), led_driver_3.hPin_N.v[3].im (i), terminal.pin_n.v[3].im (i), test_DY.hPin_N.v[3].im (i)}
Connection set (potential): {ground2.pin.v[3].re (i), laptop_adpt_1.hPin_N.v[3].re (i), laptop_adpt_2.hPin_N.v[3].re (i), laptop_adpt_3.hPin_N.v[3].re (i), led_driver_1.hPin_N.v[3].re (i), led_driver_2.hPin_N.v[3].re (i), led_driver_3.hPin_N.v[3].re (i), terminal.pin_n.v[3].re (i), test_DY.hPin_N.v[3].re (i)}
Connection set (flow): {test_DY.pinSec_C.iIm[1:3] (i), z1.pin_p.iIm[1:3] (i)}
Connection set (flow): {test_DY.pinSec_C.iRe[1:3] (i), z1.pin_p.iRe[1:3] (i)}
Connection set (potential): {test_DY.pinSec_C.v[1].im (i), z1.pin_p.v[1].im (i)}
Connection set (potential): {test_DY.pinSec_C.v[1].re (i), z1.pin_p.v[1].re (i)}
Connection set (potential): {test_DY.pinSec_C.v[2].im (i), z1.pin_p.v[2].im (i)}
Connection set (potential): {test_DY.pinSec_C.v[2].re (i), z1.pin_p.v[2].re (i)}
Connection set (potential): {test_DY.pinSec_C.v[3].im (i), z1.pin_p.v[3].im (i)}
Connection set (potential): {test_DY.pinSec_C.v[3].re (i), z1.pin_p.v[3].re (i)}
Connection set (flow): {test_DY.pinSec_B.iIm[1:3] (i), z.pin_p.iIm[1:3] (i)}
Connection set (flow): {test_DY.pinSec_B.iRe[1:3] (i), z.pin_p.iRe[1:3] (i)}
Connection set (potential): {test_DY.pinSec_B.v[1].im (i), z.pin_p.v[1].im (i)}
Connection set (potential): {test_DY.pinSec_B.v[1].re (i), z.pin_p.v[1].re (i)}
Connection set (potential): {test_DY.pinSec_B.v[2].im (i), z.pin_p.v[2].im (i)}
Connection set (potential): {test_DY.pinSec_B.v[2].re (i), z.pin_p.v[2].re (i)}
Connection set (potential): {test_DY.pinSec_B.v[3].im (i), z.pin_p.v[3].im (i)}
Connection set (potential): {test_DY.pinSec_B.v[3].re (i), z.pin_p.v[3].re (i)}
Connection set (flow): {terminal.pin_p.iIm[1:3] (i), test_DY.pinSec_A.iIm[1:3] (i)}
Connection set (flow): {terminal.pin_p.iRe[1:3] (i), test_DY.pinSec_A.iRe[1:3] (i)}
Connection set (potential): {terminal.pin_p.v[1].im (i), test_DY.pinSec_A.v[1].im (i)}
Connection set (potential): {terminal.pin_p.v[1].re (i), test_DY.pinSec_A.v[1].re (i)}
Connection set (potential): {terminal.pin_p.v[2].im (i), test_DY.pinSec_A.v[2].im (i)}
Connection set (potential): {terminal.pin_p.v[2].re (i), test_DY.pinSec_A.v[2].re (i)}
Connection set (potential): {terminal.pin_p.v[3].im (i), test_DY.pinSec_A.v[3].im (i)}
Connection set (potential): {terminal.pin_p.v[3].re (i), test_DY.pinSec_A.v[3].re (i)}
Connection set (flow): {laptop_1.p.i (i), laptop_adpt_1.pin_p.i (i)}
Connection set (potential): {laptop_1.p.v (i), laptop_adpt_1.pin_p.v (i)}
Connection set (flow): {ground6.p.i (i), laptop_1.n.i (i), laptop_adpt_1.pin_n.i (i)}
Connection set (potential): {ground6.p.v (i), laptop_1.n.v (i), laptop_adpt_1.pin_n.v (i)}
Connection set (flow): {laptop_2.p.i (i), laptop_adpt_2.pin_p.i (i)}
Connection set (potential): {laptop_2.p.v (i), laptop_adpt_2.pin_p.v (i)}
Connection set (flow): {ground3.p.i (i), laptop_2.n.i (i), laptop_adpt_2.pin_n.i (i)}
Connection set (potential): {ground3.p.v (i), laptop_2.n.v (i), laptop_adpt_2.pin_n.v (i)}
Connection set (flow): {laptop_3.p.i (i), laptop_adpt_3.pin_p.i (i)}
Connection set (potential): {laptop_3.p.v (i), laptop_adpt_3.pin_p.v (i)}
Connection set (flow): {ground8.p.i (i), laptop_3.n.i (i), laptop_adpt_3.pin_n.i (i)}
Connection set (potential): {ground8.p.v (i), laptop_3.n.v (i), laptop_adpt_3.pin_n.v (i)}
Connection set (flow): {led_3.p.i (i), led_driver_3.pin_p.i (i)}
Connection set (potential): {led_3.p.v (i), led_driver_3.pin_p.v (i)}
Connection set (flow): {ground5.p.i (i), led_3.n.i (i), led_driver_3.pin_n.i (i)}
Connection set (potential): {ground5.p.v (i), led_3.n.v (i), led_driver_3.pin_n.v (i)}
Connection set (flow): {led_1.p.i (i), led_driver_1.pin_p.i (i)}
Connection set (potential): {led_1.p.v (i), led_driver_1.pin_p.v (i)}
Connection set (flow): {ground4.p.i (i), led_1.n.i (i), led_driver_1.pin_n.i (i)}
Connection set (potential): {ground4.p.v (i), led_1.n.v (i), led_driver_1.pin_n.v (i)}
Connection set (flow): {led_2.p.i (i), led_driver_2.pin_p.i (i)}
Connection set (potential): {led_2.p.v (i), led_driver_2.pin_p.v (i)}
Connection set (flow): {ground7.p.i (i), led_2.n.i (i), led_driver_2.pin_n.i (i)}
Connection set (potential): {ground7.p.v (i), led_2.n.v (i), led_driver_2.pin_n.v (i)}
Connection set (flow): {laptop_adpt_1.constantVoltage1.p.i (i), laptop_adpt_1.pin_p.i (o)}
Connection set (potential): {laptop_adpt_1.constantVoltage1.p.v (i), laptop_adpt_1.pin_p.v (o)}
Connection set (flow): {laptop_adpt_1.constantVoltage1.n.i (i), laptop_adpt_1.pin_n.i (o)}
Connection set (potential): {laptop_adpt_1.constantVoltage1.n.v (i), laptop_adpt_1.pin_n.v (o)}
Connection set (flow): {laptop_adpt_1.hPin_P.iIm[1:3] (o), laptop_adpt_1.loadBase1.pin_p.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_1.hPin_P.iRe[1:3] (o), laptop_adpt_1.loadBase1.pin_p.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[1].im (o), laptop_adpt_1.loadBase1.pin_p.v[1].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[1].re (o), laptop_adpt_1.loadBase1.pin_p.v[1].re (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[2].im (o), laptop_adpt_1.loadBase1.pin_p.v[2].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[2].re (o), laptop_adpt_1.loadBase1.pin_p.v[2].re (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[3].im (o), laptop_adpt_1.loadBase1.pin_p.v[3].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.v[3].re (o), laptop_adpt_1.loadBase1.pin_p.v[3].re (i)}
Connection set (flow): {laptop_adpt_1.hPin_N.iIm[1:3] (o), laptop_adpt_1.loadBase1.pin_n.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_1.hPin_N.iRe[1:3] (o), laptop_adpt_1.loadBase1.pin_n.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_1.hPin_N.v[1].im (o), laptop_adpt_1.loadBase1.pin_n.v[1].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_N.v[1].re (o), laptop_adpt_1.loadBase1.pin_n.v[1].re (i)}
Connection set (potential): {laptop_adpt_1.hPin_N.v[2].im (o), laptop_adpt_1.loadBase1.pin_n.v[2].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_N.v[2].re (o), laptop_adpt_1.loadBase1.pin_n.v[2].re (i)}
Connection set (potential): {laptop_adpt_1.hPin_N.v[3].im (o), laptop_adpt_1.loadBase1.pin_n.v[3].im (i)}
Connection set (potential): {laptop_adpt_1.hPin_N.v[3].re (o), laptop_adpt_1.loadBase1.pin_n.v[3].re (i)}
Connection set (flow): {laptop_adpt_3.constantVoltage1.p.i (i), laptop_adpt_3.pin_p.i (o)}
Connection set (potential): {laptop_adpt_3.constantVoltage1.p.v (i), laptop_adpt_3.pin_p.v (o)}
Connection set (flow): {laptop_adpt_3.constantVoltage1.n.i (i), laptop_adpt_3.pin_n.i (o)}
Connection set (potential): {laptop_adpt_3.constantVoltage1.n.v (i), laptop_adpt_3.pin_n.v (o)}
Connection set (flow): {laptop_adpt_3.hPin_P.iIm[1:3] (o), laptop_adpt_3.loadBase1.pin_p.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_3.hPin_P.iRe[1:3] (o), laptop_adpt_3.loadBase1.pin_p.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[1].im (o), laptop_adpt_3.loadBase1.pin_p.v[1].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[1].re (o), laptop_adpt_3.loadBase1.pin_p.v[1].re (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[2].im (o), laptop_adpt_3.loadBase1.pin_p.v[2].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[2].re (o), laptop_adpt_3.loadBase1.pin_p.v[2].re (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[3].im (o), laptop_adpt_3.loadBase1.pin_p.v[3].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.v[3].re (o), laptop_adpt_3.loadBase1.pin_p.v[3].re (i)}
Connection set (flow): {laptop_adpt_3.hPin_N.iIm[1:3] (o), laptop_adpt_3.loadBase1.pin_n.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_3.hPin_N.iRe[1:3] (o), laptop_adpt_3.loadBase1.pin_n.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_3.hPin_N.v[1].im (o), laptop_adpt_3.loadBase1.pin_n.v[1].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_N.v[1].re (o), laptop_adpt_3.loadBase1.pin_n.v[1].re (i)}
Connection set (potential): {laptop_adpt_3.hPin_N.v[2].im (o), laptop_adpt_3.loadBase1.pin_n.v[2].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_N.v[2].re (o), laptop_adpt_3.loadBase1.pin_n.v[2].re (i)}
Connection set (potential): {laptop_adpt_3.hPin_N.v[3].im (o), laptop_adpt_3.loadBase1.pin_n.v[3].im (i)}
Connection set (potential): {laptop_adpt_3.hPin_N.v[3].re (o), laptop_adpt_3.loadBase1.pin_n.v[3].re (i)}
Connection set (flow): {test_DY.idealTransformer1.pinP_Prim.iIm[1:3] (i), test_DY.idealTransformer2.pinN_Prim.iIm[1:3] (i), test_DY.pinPrim_A.iIm[1:3] (o)}
Connection set (flow): {test_DY.idealTransformer1.pinP_Prim.iRe[1:3] (i), test_DY.idealTransformer2.pinN_Prim.iRe[1:3] (i), test_DY.pinPrim_A.iRe[1:3] (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Prim.v[1].im (i), test_DY.idealTransformer2.pinN_Prim.v[1].im (i), test_DY.pinPrim_A.v[1].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Prim.v[1].re (i), test_DY.idealTransformer2.pinN_Prim.v[1].re (i), test_DY.pinPrim_A.v[1].re (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Prim.v[2].im (i), test_DY.idealTransformer2.pinN_Prim.v[2].im (i), test_DY.pinPrim_A.v[2].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Prim.v[2].re (i), test_DY.idealTransformer2.pinN_Prim.v[2].re (i), test_DY.pinPrim_A.v[2].re (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Prim.v[3].im (i), test_DY.idealTransformer2.pinN_Prim.v[3].im (i), test_DY.pinPrim_A.v[3].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Prim.v[3].re (i), test_DY.idealTransformer2.pinN_Prim.v[3].re (i), test_DY.pinPrim_A.v[3].re (o)}
Connection set (flow): {test_DY.idealTransformer1.pinN_Prim.iIm[1:3] (i), test_DY.idealTransformer3.pinP_Prim.iIm[1:3] (i), test_DY.pinPrim_C.iIm[1:3] (o)}
Connection set (flow): {test_DY.idealTransformer1.pinN_Prim.iRe[1:3] (i), test_DY.idealTransformer3.pinP_Prim.iRe[1:3] (i), test_DY.pinPrim_C.iRe[1:3] (o)}
Connection set (potential): {test_DY.idealTransformer1.pinN_Prim.v[1].im (i), test_DY.idealTransformer3.pinP_Prim.v[1].im (i), test_DY.pinPrim_C.v[1].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinN_Prim.v[1].re (i), test_DY.idealTransformer3.pinP_Prim.v[1].re (i), test_DY.pinPrim_C.v[1].re (o)}
Connection set (potential): {test_DY.idealTransformer1.pinN_Prim.v[2].im (i), test_DY.idealTransformer3.pinP_Prim.v[2].im (i), test_DY.pinPrim_C.v[2].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinN_Prim.v[2].re (i), test_DY.idealTransformer3.pinP_Prim.v[2].re (i), test_DY.pinPrim_C.v[2].re (o)}
Connection set (potential): {test_DY.idealTransformer1.pinN_Prim.v[3].im (i), test_DY.idealTransformer3.pinP_Prim.v[3].im (i), test_DY.pinPrim_C.v[3].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinN_Prim.v[3].re (i), test_DY.idealTransformer3.pinP_Prim.v[3].re (i), test_DY.pinPrim_C.v[3].re (o)}
Connection set (flow): {test_DY.idealTransformer2.pinP_Prim.iIm[1:3] (i), test_DY.idealTransformer3.pinN_Prim.iIm[1:3] (i), test_DY.pinPrim_B.iIm[1:3] (o)}
Connection set (flow): {test_DY.idealTransformer2.pinP_Prim.iRe[1:3] (i), test_DY.idealTransformer3.pinN_Prim.iRe[1:3] (i), test_DY.pinPrim_B.iRe[1:3] (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Prim.v[1].im (i), test_DY.idealTransformer3.pinN_Prim.v[1].im (i), test_DY.pinPrim_B.v[1].im (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Prim.v[1].re (i), test_DY.idealTransformer3.pinN_Prim.v[1].re (i), test_DY.pinPrim_B.v[1].re (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Prim.v[2].im (i), test_DY.idealTransformer3.pinN_Prim.v[2].im (i), test_DY.pinPrim_B.v[2].im (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Prim.v[2].re (i), test_DY.idealTransformer3.pinN_Prim.v[2].re (i), test_DY.pinPrim_B.v[2].re (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Prim.v[3].im (i), test_DY.idealTransformer3.pinN_Prim.v[3].im (i), test_DY.pinPrim_B.v[3].im (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Prim.v[3].re (i), test_DY.idealTransformer3.pinN_Prim.v[3].re (i), test_DY.pinPrim_B.v[3].re (o)}
Connection set (flow): {test_DY.hPin_N.iIm[1:3] (o), test_DY.idealTransformer1.pinN_Sec.iIm[1:3] (i), test_DY.idealTransformer2.pinN_Sec.iIm[1:3] (i), test_DY.idealTransformer3.pinN_Sec.iIm[1:3] (i)}
Connection set (flow): {test_DY.hPin_N.iRe[1:3] (o), test_DY.idealTransformer1.pinN_Sec.iRe[1:3] (i), test_DY.idealTransformer2.pinN_Sec.iRe[1:3] (i), test_DY.idealTransformer3.pinN_Sec.iRe[1:3] (i)}
Connection set (potential): {test_DY.hPin_N.v[1].im (o), test_DY.idealTransformer1.pinN_Sec.v[1].im (i), test_DY.idealTransformer2.pinN_Sec.v[1].im (i), test_DY.idealTransformer3.pinN_Sec.v[1].im (i)}
Connection set (potential): {test_DY.hPin_N.v[1].re (o), test_DY.idealTransformer1.pinN_Sec.v[1].re (i), test_DY.idealTransformer2.pinN_Sec.v[1].re (i), test_DY.idealTransformer3.pinN_Sec.v[1].re (i)}
Connection set (potential): {test_DY.hPin_N.v[2].im (o), test_DY.idealTransformer1.pinN_Sec.v[2].im (i), test_DY.idealTransformer2.pinN_Sec.v[2].im (i), test_DY.idealTransformer3.pinN_Sec.v[2].im (i)}
Connection set (potential): {test_DY.hPin_N.v[2].re (o), test_DY.idealTransformer1.pinN_Sec.v[2].re (i), test_DY.idealTransformer2.pinN_Sec.v[2].re (i), test_DY.idealTransformer3.pinN_Sec.v[2].re (i)}
Connection set (potential): {test_DY.hPin_N.v[3].im (o), test_DY.idealTransformer1.pinN_Sec.v[3].im (i), test_DY.idealTransformer2.pinN_Sec.v[3].im (i), test_DY.idealTransformer3.pinN_Sec.v[3].im (i)}
Connection set (potential): {test_DY.hPin_N.v[3].re (o), test_DY.idealTransformer1.pinN_Sec.v[3].re (i), test_DY.idealTransformer2.pinN_Sec.v[3].re (i), test_DY.idealTransformer3.pinN_Sec.v[3].re (i)}
Connection set (flow): {test_DY.idealTransformer1.pinP_Sec.iIm[1:3] (i), test_DY.pinSec_A.iIm[1:3] (o)}
Connection set (flow): {test_DY.idealTransformer1.pinP_Sec.iRe[1:3] (i), test_DY.pinSec_A.iRe[1:3] (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Sec.v[1].im (i), test_DY.pinSec_A.v[1].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Sec.v[1].re (i), test_DY.pinSec_A.v[1].re (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Sec.v[2].im (i), test_DY.pinSec_A.v[2].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Sec.v[2].re (i), test_DY.pinSec_A.v[2].re (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Sec.v[3].im (i), test_DY.pinSec_A.v[3].im (o)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Sec.v[3].re (i), test_DY.pinSec_A.v[3].re (o)}
Connection set (flow): {test_DY.idealTransformer2.pinP_Sec.iIm[1:3] (i), test_DY.pinSec_B.iIm[1:3] (o)}
Connection set (flow): {test_DY.idealTransformer2.pinP_Sec.iRe[1:3] (i), test_DY.pinSec_B.iRe[1:3] (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Sec.v[1].im (i), test_DY.pinSec_B.v[1].im (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Sec.v[1].re (i), test_DY.pinSec_B.v[1].re (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Sec.v[2].im (i), test_DY.pinSec_B.v[2].im (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Sec.v[2].re (i), test_DY.pinSec_B.v[2].re (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Sec.v[3].im (i), test_DY.pinSec_B.v[3].im (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Sec.v[3].re (i), test_DY.pinSec_B.v[3].re (o)}
Connection set (flow): {test_DY.idealTransformer3.pinP_Sec.iIm[1:3] (i), test_DY.pinSec_C.iIm[1:3] (o)}
Connection set (flow): {test_DY.idealTransformer3.pinP_Sec.iRe[1:3] (i), test_DY.pinSec_C.iRe[1:3] (o)}
Connection set (potential): {test_DY.idealTransformer3.pinP_Sec.v[1].im (i), test_DY.pinSec_C.v[1].im (o)}
Connection set (potential): {test_DY.idealTransformer3.pinP_Sec.v[1].re (i), test_DY.pinSec_C.v[1].re (o)}
Connection set (potential): {test_DY.idealTransformer3.pinP_Sec.v[2].im (i), test_DY.pinSec_C.v[2].im (o)}
Connection set (potential): {test_DY.idealTransformer3.pinP_Sec.v[2].re (i), test_DY.pinSec_C.v[2].re (o)}
Connection set (potential): {test_DY.idealTransformer3.pinP_Sec.v[3].im (i), test_DY.pinSec_C.v[3].im (o)}
Connection set (potential): {test_DY.idealTransformer3.pinP_Sec.v[3].re (i), test_DY.pinSec_C.v[3].re (o)}
Connection set (flow): {laptop_adpt_2.constantVoltage1.p.i (i), laptop_adpt_2.pin_p.i (o)}
Connection set (potential): {laptop_adpt_2.constantVoltage1.p.v (i), laptop_adpt_2.pin_p.v (o)}
Connection set (flow): {laptop_adpt_2.constantVoltage1.n.i (i), laptop_adpt_2.pin_n.i (o)}
Connection set (potential): {laptop_adpt_2.constantVoltage1.n.v (i), laptop_adpt_2.pin_n.v (o)}
Connection set (flow): {laptop_adpt_2.hPin_P.iIm[1:3] (o), laptop_adpt_2.loadBase1.pin_p.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_2.hPin_P.iRe[1:3] (o), laptop_adpt_2.loadBase1.pin_p.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_2.hPin_P.v[1].im (o), laptop_adpt_2.loadBase1.pin_p.v[1].im (i)}
Connection set (potential): {laptop_adpt_2.hPin_P.v[1].re (o), laptop_adpt_2.loadBase1.pin_p.v[1].re (i)}
Connection set (potential): {laptop_adpt_2.hPin_P.v[2].im (o), laptop_adpt_2.loadBase1.pin_p.v[2].im (i)}
Connection set (potential): {laptop_adpt_2.hPin_P.v[2].re (o), laptop_adpt_2.loadBase1.pin_p.v[2].re (i)}
Connection set (potential): {laptop_adpt_2.hPin_P.v[3].im (o), laptop_adpt_2.loadBase1.pin_p.v[3].im (i)}
Connection set (potential): {laptop_adpt_2.hPin_P.v[3].re (o), laptop_adpt_2.loadBase1.pin_p.v[3].re (i)}
Connection set (flow): {laptop_adpt_2.hPin_N.iIm[1:3] (o), laptop_adpt_2.loadBase1.pin_n.iIm[1:3] (i)}
Connection set (flow): {laptop_adpt_2.hPin_N.iRe[1:3] (o), laptop_adpt_2.loadBase1.pin_n.iRe[1:3] (i)}
Connection set (potential): {laptop_adpt_2.hPin_N.v[1].im (o), laptop_adpt_2.loadBase1.pin_n.v[1].im (i)}
Connection set (potential): {laptop_adpt_2.hPin_N.v[1].re (o), laptop_adpt_2.loadBase1.pin_n.v[1].re (i)}
Connection set (potential): {laptop_adpt_2.hPin_N.v[2].im (o), laptop_adpt_2.loadBase1.pin_n.v[2].im (i)}
Connection set (potential): {laptop_adpt_2.hPin_N.v[2].re (o), laptop_adpt_2.loadBase1.pin_n.v[2].re (i)}
Connection set (potential): {laptop_adpt_2.hPin_N.v[3].im (o), laptop_adpt_2.loadBase1.pin_n.v[3].im (i)}
Connection set (potential): {laptop_adpt_2.hPin_N.v[3].re (o), laptop_adpt_2.loadBase1.pin_n.v[3].re (i)}
Connection set (flow): {led_driver_1.constantVoltage1.p.i (i), led_driver_1.pin_p.i (o)}
Connection set (potential): {led_driver_1.constantVoltage1.p.v (i), led_driver_1.pin_p.v (o)}
Connection set (flow): {led_driver_1.constantVoltage1.n.i (i), led_driver_1.pin_n.i (o)}
Connection set (potential): {led_driver_1.constantVoltage1.n.v (i), led_driver_1.pin_n.v (o)}
Connection set (flow): {led_driver_1.hPin_P.iIm[1:3] (o), led_driver_1.loadBase1.pin_p.iIm[1:3] (i)}
Connection set (flow): {led_driver_1.hPin_P.iRe[1:3] (o), led_driver_1.loadBase1.pin_p.iRe[1:3] (i)}
Connection set (potential): {led_driver_1.hPin_P.v[1].im (o), led_driver_1.loadBase1.pin_p.v[1].im (i)}
Connection set (potential): {led_driver_1.hPin_P.v[1].re (o), led_driver_1.loadBase1.pin_p.v[1].re (i)}
Connection set (potential): {led_driver_1.hPin_P.v[2].im (o), led_driver_1.loadBase1.pin_p.v[2].im (i)}
Connection set (potential): {led_driver_1.hPin_P.v[2].re (o), led_driver_1.loadBase1.pin_p.v[2].re (i)}
Connection set (potential): {led_driver_1.hPin_P.v[3].im (o), led_driver_1.loadBase1.pin_p.v[3].im (i)}
Connection set (potential): {led_driver_1.hPin_P.v[3].re (o), led_driver_1.loadBase1.pin_p.v[3].re (i)}
Connection set (flow): {led_driver_1.hPin_N.iIm[1:3] (o), led_driver_1.loadBase1.pin_n.iIm[1:3] (i)}
Connection set (flow): {led_driver_1.hPin_N.iRe[1:3] (o), led_driver_1.loadBase1.pin_n.iRe[1:3] (i)}
Connection set (potential): {led_driver_1.hPin_N.v[1].im (o), led_driver_1.loadBase1.pin_n.v[1].im (i)}
Connection set (potential): {led_driver_1.hPin_N.v[1].re (o), led_driver_1.loadBase1.pin_n.v[1].re (i)}
Connection set (potential): {led_driver_1.hPin_N.v[2].im (o), led_driver_1.loadBase1.pin_n.v[2].im (i)}
Connection set (potential): {led_driver_1.hPin_N.v[2].re (o), led_driver_1.loadBase1.pin_n.v[2].re (i)}
Connection set (potential): {led_driver_1.hPin_N.v[3].im (o), led_driver_1.loadBase1.pin_n.v[3].im (i)}
Connection set (potential): {led_driver_1.hPin_N.v[3].re (o), led_driver_1.loadBase1.pin_n.v[3].re (i)}
Connection set (flow): {led_driver_3.constantVoltage1.p.i (i), led_driver_3.pin_p.i (o)}
Connection set (potential): {led_driver_3.constantVoltage1.p.v (i), led_driver_3.pin_p.v (o)}
Connection set (flow): {led_driver_3.constantVoltage1.n.i (i), led_driver_3.pin_n.i (o)}
Connection set (potential): {led_driver_3.constantVoltage1.n.v (i), led_driver_3.pin_n.v (o)}
Connection set (flow): {led_driver_3.hPin_P.iIm[1:3] (o), led_driver_3.loadBase1.pin_p.iIm[1:3] (i)}
Connection set (flow): {led_driver_3.hPin_P.iRe[1:3] (o), led_driver_3.loadBase1.pin_p.iRe[1:3] (i)}
Connection set (potential): {led_driver_3.hPin_P.v[1].im (o), led_driver_3.loadBase1.pin_p.v[1].im (i)}
Connection set (potential): {led_driver_3.hPin_P.v[1].re (o), led_driver_3.loadBase1.pin_p.v[1].re (i)}
Connection set (potential): {led_driver_3.hPin_P.v[2].im (o), led_driver_3.loadBase1.pin_p.v[2].im (i)}
Connection set (potential): {led_driver_3.hPin_P.v[2].re (o), led_driver_3.loadBase1.pin_p.v[2].re (i)}
Connection set (potential): {led_driver_3.hPin_P.v[3].im (o), led_driver_3.loadBase1.pin_p.v[3].im (i)}
Connection set (potential): {led_driver_3.hPin_P.v[3].re (o), led_driver_3.loadBase1.pin_p.v[3].re (i)}
Connection set (flow): {led_driver_3.hPin_N.iIm[1:3] (o), led_driver_3.loadBase1.pin_n.iIm[1:3] (i)}
Connection set (flow): {led_driver_3.hPin_N.iRe[1:3] (o), led_driver_3.loadBase1.pin_n.iRe[1:3] (i)}
Connection set (potential): {led_driver_3.hPin_N.v[1].im (o), led_driver_3.loadBase1.pin_n.v[1].im (i)}
Connection set (potential): {led_driver_3.hPin_N.v[1].re (o), led_driver_3.loadBase1.pin_n.v[1].re (i)}
Connection set (potential): {led_driver_3.hPin_N.v[2].im (o), led_driver_3.loadBase1.pin_n.v[2].im (i)}
Connection set (potential): {led_driver_3.hPin_N.v[2].re (o), led_driver_3.loadBase1.pin_n.v[2].re (i)}
Connection set (potential): {led_driver_3.hPin_N.v[3].im (o), led_driver_3.loadBase1.pin_n.v[3].im (i)}
Connection set (potential): {led_driver_3.hPin_N.v[3].re (o), led_driver_3.loadBase1.pin_n.v[3].re (i)}
Connection set (flow): {led_driver_2.constantVoltage1.p.i (i), led_driver_2.pin_p.i (o)}
Connection set (potential): {led_driver_2.constantVoltage1.p.v (i), led_driver_2.pin_p.v (o)}
Connection set (flow): {led_driver_2.constantVoltage1.n.i (i), led_driver_2.pin_n.i (o)}
Connection set (potential): {led_driver_2.constantVoltage1.n.v (i), led_driver_2.pin_n.v (o)}
Connection set (flow): {led_driver_2.hPin_P.iIm[1:3] (o), led_driver_2.loadBase1.pin_p.iIm[1:3] (i)}
Connection set (flow): {led_driver_2.hPin_P.iRe[1:3] (o), led_driver_2.loadBase1.pin_p.iRe[1:3] (i)}
Connection set (potential): {led_driver_2.hPin_P.v[1].im (o), led_driver_2.loadBase1.pin_p.v[1].im (i)}
Connection set (potential): {led_driver_2.hPin_P.v[1].re (o), led_driver_2.loadBase1.pin_p.v[1].re (i)}
Connection set (potential): {led_driver_2.hPin_P.v[2].im (o), led_driver_2.loadBase1.pin_p.v[2].im (i)}
Connection set (potential): {led_driver_2.hPin_P.v[2].re (o), led_driver_2.loadBase1.pin_p.v[2].re (i)}
Connection set (potential): {led_driver_2.hPin_P.v[3].im (o), led_driver_2.loadBase1.pin_p.v[3].im (i)}
Connection set (potential): {led_driver_2.hPin_P.v[3].re (o), led_driver_2.loadBase1.pin_p.v[3].re (i)}
Connection set (flow): {led_driver_2.hPin_N.iIm[1:3] (o), led_driver_2.loadBase1.pin_n.iIm[1:3] (i)}
Connection set (flow): {led_driver_2.hPin_N.iRe[1:3] (o), led_driver_2.loadBase1.pin_n.iRe[1:3] (i)}
Connection set (potential): {led_driver_2.hPin_N.v[1].im (o), led_driver_2.loadBase1.pin_n.v[1].im (i)}
Connection set (potential): {led_driver_2.hPin_N.v[1].re (o), led_driver_2.loadBase1.pin_n.v[1].re (i)}
Connection set (potential): {led_driver_2.hPin_N.v[2].im (o), led_driver_2.loadBase1.pin_n.v[2].im (i)}
Connection set (potential): {led_driver_2.hPin_N.v[2].re (o), led_driver_2.loadBase1.pin_n.v[2].re (i)}
Connection set (potential): {led_driver_2.hPin_N.v[3].im (o), led_driver_2.loadBase1.pin_n.v[3].im (i)}
Connection set (potential): {led_driver_2.hPin_N.v[3].re (o), led_driver_2.loadBase1.pin_n.v[3].re (i)}
Connection set (potential): {PhA.pin_p.reference.theta (i), test_DY.pinPrim_A.reference.theta (i)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Prim.reference.theta (i), test_DY.idealTransformer2.pinN_Prim.reference.theta (i), test_DY.pinPrim_A.reference.theta (o)}
Connection set (potential): {PhA.pin_n.reference.theta (i), ground1.pin.reference.theta (i)}
Connection set (potential): {test_DY.idealTransformer1.pinN_Prim.reference.theta (i), test_DY.idealTransformer3.pinP_Prim.reference.theta (i), test_DY.pinPrim_C.reference.theta (o)}
Connection set (potential): {test_DY.hPin_N.reference.theta (o), test_DY.idealTransformer1.pinN_Sec.reference.theta (i)}
Connection set (potential): {test_DY.idealTransformer1.pinP_Sec.reference.theta (i), test_DY.pinSec_A.reference.theta (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Prim.reference.theta (i), test_DY.pinPrim_B.reference.theta (o)}
Connection set (potential): {test_DY.idealTransformer2.pinP_Sec.reference.theta (i), test_DY.pinSec_B.reference.theta (o)}
Connection set (potential): {test_DY.idealTransformer3.pinP_Sec.reference.theta (i), test_DY.pinSec_C.reference.theta (o)}
Connection set (potential): {ground2.pin.reference.theta (i), laptop_adpt_1.hPin_N.reference.theta (i), laptop_adpt_2.hPin_N.reference.theta (i), laptop_adpt_3.hPin_N.reference.theta (i), led_driver_1.hPin_N.reference.theta (i), led_driver_2.hPin_N.reference.theta (i), led_driver_3.hPin_N.reference.theta (i), test_DY.hPin_N.reference.theta (i)}
Connection set (potential): {terminal.pin_p.reference.theta (i), test_DY.pinSec_A.reference.theta (i)}
Connection set (potential): {test_DY.pinSec_B.reference.theta (i), z.pin_p.reference.theta (i)}
Connection set (potential): {test_DY.pinSec_C.reference.theta (i), z1.pin_p.reference.theta (i)}
Connection set (potential): {laptop_adpt_1.hPin_P.reference.theta (i), laptop_adpt_2.hPin_P.reference.theta (i), led_driver_1.hPin_P.reference.theta (i), led_driver_2.hPin_P.reference.theta (i), z.pin_n.reference.theta (i)}
Connection set (potential): {laptop_adpt_3.hPin_P.reference.theta (i), led_driver_3.hPin_P.reference.theta (i), z1.pin_n.reference.theta (i)}
Connection set (potential): {laptop_adpt_1.hPin_N.reference.theta (o), laptop_adpt_1.loadBase1.pin_n.reference.theta (i)}
Connection set (potential): {laptop_adpt_3.hPin_N.reference.theta (o), laptop_adpt_3.loadBase1.pin_n.reference.theta (i)}
Connection set (potential): {laptop_adpt_2.hPin_N.reference.theta (o), laptop_adpt_2.loadBase1.pin_n.reference.theta (i)}
Connection set (potential): {led_driver_3.hPin_N.reference.theta (o), led_driver_3.loadBase1.pin_n.reference.theta (i)}
Connection set (potential): {led_driver_2.hPin_N.reference.theta (o), led_driver_2.loadBase1.pin_n.reference.theta (i)}
Connection set (potential): {led_driver_1.hPin_P.reference.theta (o), led_driver_1.loadBase1.pin_p.reference.theta (i)}

Transformed flattened model:
fclass HPF.Examples.DC_Testbed.Configuration_3
 parameter Integer systemDef.hrms[1] = 1 "Harmonics to simulate" /* 1 */;
 parameter Integer systemDef.hrms[2] = 3 "Harmonics to simulate" /* 3 */;
 parameter Integer systemDef.hrms[3] = 5 "Harmonics to simulate" /* 5 */;
 structural parameter Integer systemDef.numHrm = 3 "Number of harmonics. (Automatically generated from hrms. Do not alter)" /* 3 */;
 parameter Real systemDef.fFund = 60 "Fundamental frequency" /* 60 */;
 parameter Real systemDef.smplFreq = 5000.0 "Sampling frequency (Hz)" /* 5000.0 */;
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 discrete Boolean systemDef.modeSelect(start = false);
 discrete Boolean systemDef.eventWriteData(start = false);
 discrete Boolean systemDef.eventReadData(start = false);
 constant String PhA.properties.ComponentType = "VoltageSource" "Type of the component";
 parameter Real PhA.vMag[1] = 125 "Voltage Magnitude (Volts rms)" /* 125 */;
 parameter Real PhA.vMag[2] = 0.25 "Voltage Magnitude (Volts rms)" /* 0.25 */;
 parameter Real PhA.vMag[3] = 0.5 "Voltage Magnitude (Volts rms)" /* 0.5 */;
 parameter Real PhA.vArg[1] = 0 "Voltage angle (rad)" /* 0 */;
 parameter Real PhA.vArg[2] = 1 "Voltage angle (rad)" /* 1 */;
 parameter Real PhA.vArg[3] = 0.53 "Voltage angle (rad)" /* 0.53 */;
 Real PhA.P "Real Power";
 Modelica.SIunits.Angle PhA.theta(start = 0);
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_1.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_3.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Real test_DY.idealTransformer1.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 parameter Real test_DY.idealTransformer2.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 parameter Real test_DY.idealTransformer3.N "Turns ratio N1:N2 = N:1 (Subject to review!)";
 parameter Modelica.SIunits.ElectricPotential laptop_adpt_2.constantVoltage1.V(start = 1) "Value of constant voltage";
 Real PhA.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhA.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhA.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhA.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhA.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhA.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhA.omega;
 parameter Real PhB.vMag[1] = 125 "Voltage Magnitude (Volts rms)" /* 125 */;
 parameter Real PhB.vMag[2] = 0.25 "Voltage Magnitude (Volts rms)" /* 0.25 */;
 parameter Real PhB.vMag[3] = 0.5 "Voltage Magnitude (Volts rms)" /* 0.5 */;
 parameter Real PhB.vArg[1] = 1.2 "Voltage angle (rad)" /* 1.2 */;
 parameter Real PhB.vArg[2] = 2.5 "Voltage angle (rad)" /* 2.5 */;
 parameter Real PhB.vArg[3] = 0.3 "Voltage angle (rad)" /* 0.3 */;
 Real PhB.P "Real Power";
 Modelica.SIunits.Angle PhB.theta(start = 0);
 parameter Modelica.SIunits.ElectricPotential led_driver_1.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Modelica.SIunits.ElectricPotential led_driver_3.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Modelica.SIunits.ElectricPotential led_driver_2.constantVoltage1.V(start = 1) "Value of constant voltage";
 parameter Real PhA.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhA.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhA.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhB.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhB.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhB.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhB.omega;
 parameter Real PhC.vMag[1] = 125 "Voltage Magnitude (Volts rms)" /* 125 */;
 parameter Real PhC.vMag[2] = 2 "Voltage Magnitude (Volts rms)" /* 2 */;
 parameter Real PhC.vMag[3] = 0.3 "Voltage Magnitude (Volts rms)" /* 0.3 */;
 parameter Real PhC.vArg[1] = 1.9 "Voltage angle (rad)" /* 1.9 */;
 parameter Real PhC.vArg[2] = 2 "Voltage angle (rad)" /* 2 */;
 parameter Real PhC.vArg[3] = -0.5 "Voltage angle (rad)" /* -0.5 */;
 Real PhC.P "Real Power";
 Modelica.SIunits.Angle PhC.theta(start = 0);
 parameter Real PhA.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhA.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhA.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhB.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhB.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhB.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhC.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhC.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real PhC.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real PhC.omega;
 constant String ground1.properties.ComponentType = "Ground" "Type of the component";
 Real ground1.pin.iIm[1];
 Real ground1.pin.iIm[2];
 Real ground1.pin.iIm[3];
 Real ground1.pin.iRe[1];
 Real ground1.pin.iRe[2];
 Real ground1.pin.iRe[3];
 Real ground2.pin.iIm[1];
 Real ground2.pin.iIm[2];
 Real ground2.pin.iIm[3];
 Real ground2.pin.iRe[1];
 Real ground2.pin.iRe[2];
 Real ground2.pin.iRe[3];
 constant String laptop_adpt_1.properties.ComponentType = "NonlinearLoad" "Type of the component";
 parameter Real PhB.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real laptop_adpt_1.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_1.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real laptop_adpt_1.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real laptop_adpt_1.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real laptop_adpt_1.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real PhB.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_1.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_1.loadBase1.omega;
 parameter Real PhB.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhC.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_3.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_3.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real laptop_adpt_3.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real laptop_adpt_3.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real laptop_adpt_3.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real PhC.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_3.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_3.loadBase1.omega;
 parameter Real PhC.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real PhC.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real PhC.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 constant String terminal.properties.ComponentType = "Resistor" "Type of the component";
 parameter Real terminal.r(start = 1) = 1000000.0 "Resistance (ohm)" /* 1000000.0 */;
 parameter Real PhC.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Modelica.SIunits.ElectricCurrent laptop_1.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent laptop_3.i "Current flowing from pin p to pin n";
 parameter Real temp_387;
 parameter Real temp_402;
 parameter Real temp_417;
 parameter Real temp_537;
 parameter Real temp_552;
 parameter Real temp_567;
 parameter Real temp_687;
 parameter Real temp_702;
 parameter Real temp_717;
 parameter Modelica.SIunits.ElectricCurrent laptop_2.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent led_1.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent led_3.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent led_2.i "Current flowing from pin p to pin n";
 Real terminal.omega;
 constant String z.properties.ComponentType = "Impedance" "Type of the component";
 parameter Real z.z.re(start = 1) = 2.0 "Real part of complex number" /* 2.0 */;
 parameter Real z.z.im(start = 0) = 3.2 "Imaginary part of complex number" /* 3.2 */;
 Real z.vFundAbs;
 Real z.vFundArg;
 Real z.iFundAbs;
 Real z.iFundArg;
 Real z.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z.omega;
 parameter Real z1.z.re(start = 1) = 2.0 "Real part of complex number" /* 2.0 */;
 parameter Real z1.z.im(start = 0) = 3.0 "Imaginary part of complex number" /* 3.0 */;
 Real z1.vFundAbs;
 Real z1.vFundArg;
 Real z1.iFundAbs;
 Real z1.iFundArg;
 Real z1.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real z1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real z1.omega;
 constant String test_DY.properties.ComponentType = "MultiPhaseTransformer" "Type of the component";
 parameter Integer test_DY.N = 10 "Turns ration" /* 10 */;
 constant String test_DY.idealTransformer1.properties.ComponentType = "Transformer" "Type of the component";
 parameter Real test_DY.idealTransformer2.vPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[3].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vPrim[3].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[3].re "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[3].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.vPrim[3].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vPrim[3].im "Imaginary part of complex number";
 parameter Modelica.SIunits.ElectricCurrent ground6.p.i "Current flowing into the pin";
 parameter Real laptop_adpt_1.P;
 Real test_DY.idealTransformer2.iPrim[1].re "Real part of complex number";
 Real test_DY.idealTransformer2.iPrim[1].im "Imaginary part of complex number";
 Real test_DY.idealTransformer2.iPrim[2].re "Real part of complex number";
 Real test_DY.idealTransformer2.iPrim[2].im "Imaginary part of complex number";
 Real test_DY.idealTransformer2.iPrim[3].re "Real part of complex number";
 Real test_DY.idealTransformer2.iPrim[3].im "Imaginary part of complex number";
 parameter Modelica.SIunits.ElectricCurrent ground8.p.i "Current flowing into the pin";
 parameter Real laptop_adpt_3.P;
 parameter Modelica.SIunits.ElectricCurrent ground3.p.i "Current flowing into the pin";
 parameter Real laptop_adpt_2.P;
 parameter Modelica.SIunits.ElectricCurrent ground4.p.i "Current flowing into the pin";
 parameter Real led_driver_1.P;
 parameter Modelica.SIunits.ElectricCurrent ground5.p.i "Current flowing into the pin";
 parameter Real led_driver_3.P;
 parameter Modelica.SIunits.ElectricCurrent ground7.p.i "Current flowing into the pin";
 parameter Real led_driver_2.P;
 parameter Real test_DY.idealTransformer2.vSec[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[3].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[1].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[1].im "Imaginary part of complex number";
 Real test_DY.idealTransformer3.iPrim[2].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[2].im "Imaginary part of complex number";
 Real test_DY.idealTransformer3.iPrim[3].re "Real part of complex number";
 Real test_DY.idealTransformer3.iPrim[3].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer2.vSec[3].im "Imaginary part of complex number";
 parameter Real terminal.v[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real test_DY.idealTransformer3.vSec[1].re "Real part of complex number";
 parameter Real terminal.v[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real test_DY.hPin_N.iIm[1];
 Real test_DY.hPin_N.iIm[2];
 Real test_DY.hPin_N.iIm[3];
 Real test_DY.hPin_N.iRe[1];
 Real test_DY.hPin_N.iRe[2];
 Real test_DY.hPin_N.iRe[3];
 parameter Real test_DY.idealTransformer3.vSec[2].re "Real part of complex number";
 parameter Real terminal.v[3].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_2.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real laptop_adpt_2.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real laptop_adpt_2.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real laptop_adpt_2.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real laptop_adpt_2.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real test_DY.idealTransformer3.vSec[3].re "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_2.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_2.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real laptop_adpt_2.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real laptop_adpt_2.loadBase1.omega;
 parameter Real terminal.v[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vSec[1].im "Imaginary part of complex number";
 parameter Real led_driver_1.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_1.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_1.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real led_driver_1.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real led_driver_1.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real led_driver_1.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real led_driver_1.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real led_driver_1.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real led_driver_1.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real led_driver_1.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real led_driver_1.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 parameter Real terminal.v[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_1.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_1.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_1.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_1.loadBase1.omega;
 parameter Real test_DY.idealTransformer3.vSec[2].im "Imaginary part of complex number";
 parameter Real terminal.v[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer3.vSec[3].im "Imaginary part of complex number";
 parameter Real led_driver_3.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_3.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_3.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real led_driver_3.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real led_driver_3.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real led_driver_3.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real led_driver_3.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real led_driver_3.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real led_driver_3.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real led_driver_3.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real led_driver_3.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real led_driver_3.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_3.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_3.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_3.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_3.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_3.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_3.loadBase1.omega;
 parameter Real led_driver_2.V_Rect(start = 0) = 100 "Rectifier DC output" /* 100 */;
 parameter Real led_driver_2.efficiency(start = 1) = 0.95 "Rectifier efficiency" /* 0.95 */;
 parameter Real led_driver_2.hrmMdl_coefMag[1] = 2.70064268049248E-5 "Harmonic model magnitude polynomial coefficient" /* 2.70064268049248E-5 */;
 parameter Real led_driver_2.hrmMdl_coefMag[2] = -0.0015697610131034 "Harmonic model magnitude polynomial coefficient" /* -0.0015697610131034 */;
 parameter Real led_driver_2.hrmMdl_coefMag[3] = -0.00600037080602108 "Harmonic model magnitude polynomial coefficient" /* -0.00600037080602108 */;
 parameter Real led_driver_2.hrmMdl_coefMag[4] = 0.995516922015768 "Harmonic model magnitude polynomial coefficient" /* 0.995516922015768 */;
 parameter Real led_driver_2.hrmMdl_coefArg[1] = -5.02372881045404E-5 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -5.02372881045404E-5 */;
 parameter Real led_driver_2.hrmMdl_coefArg[2] = 0.00237063924944842 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 0.00237063924944842 */;
 parameter Real led_driver_2.hrmMdl_coefArg[3] = -1.49993957428169 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* -1.49993957428169 */;
 parameter Real led_driver_2.hrmMdl_coefArg[4] = 1.71994407623008 "Harmonic model argument (angle, [rad]) polynomial coefficient" /* 1.71994407623008 */;
 parameter Real led_driver_2.rectifierModel = 1 "Rectifier model (Other model parameters passed as a record?)" /* 1 */;
 Real led_driver_2.loadBase1.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_2.loadBase1.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_2.loadBase1.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_2.loadBase1.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_2.loadBase1.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 Real led_driver_2.loadBase1.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 Real led_driver_2.loadBase1.omega;
 parameter Real terminal.i[1].re(start = 0,nominal = 1) "Real part of complex number";
 constant String laptop_1.properties.ComponentType = "DC_Load" "Type of the component";
 parameter Real laptop_1.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[2].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_2.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[3].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_3.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.vFundAbs;
 parameter Real led_3.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.vFundArg;
 parameter Real led_1.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[1].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real led_2.pwr(start = 1) = 500 "Power (watts)" /* 500 */;
 parameter Real terminal.i[2].im(start = 0,nominal = 1) "Imaginary part of complex number";
 discrete Boolean temp_99;
 discrete Boolean temp_100;
 discrete Boolean temp_101;
 discrete Boolean temp_102;
 discrete Boolean temp_103;
 discrete Boolean temp_104;
 discrete Boolean temp_105;
 discrete Boolean temp_106;
 discrete Boolean temp_107;
 discrete Boolean temp_108;
 discrete Boolean temp_109;
 discrete Boolean temp_110;
 discrete Boolean temp_111;
 discrete Boolean temp_112;
 discrete Boolean temp_113;
 parameter Real terminal.i[3].im(start = 0,nominal = 1) "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[1].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[2].re "Real part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[3].re "Real part of complex number";
 parameter Real terminal.iFundAbs;
 parameter Real terminal.iFundArg;
 parameter Real test_DY.idealTransformer1.iPrim[1].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[2].im "Imaginary part of complex number";
 parameter Real test_DY.idealTransformer1.iPrim[3].im "Imaginary part of complex number";
protected
 constant Real laptop_adpt_1.S_vect[1].im(start = 0,nominal = 1) = 0.5 "Imaginary part of complex number";
 constant Real laptop_adpt_1.S_vect[2].re(start = 0,nominal = 1) = 0.0 "Real part of complex number";
 constant Real laptop_adpt_1.S_vect[2].im(start = 0,nominal = 1) = 0 "Imaginary part of complex number";
 constant Real laptop_adpt_1.globalSeed = 9854;
 parameter Real laptop_adpt_1.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_3.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real laptop_adpt_2.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real led_driver_1.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real led_driver_3.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
 parameter Real led_driver_2.S_vect[1].re(start = 0,nominal = 1) "Real part of complex number";
initial equation
 algorithm
;
 PhA.theta = 0;
 PhB.theta = 0;
 PhC.theta = 0;
 pre(systemDef.modeSelect) = false;
 pre(systemDef.eventWriteData) = false;
 pre(systemDef.eventReadData) = false;
 pre(temp_99) = false;
 pre(temp_100) = false;
 pre(temp_101) = false;
 pre(temp_102) = false;
 pre(temp_103) = false;
 pre(temp_104) = false;
 pre(temp_105) = false;
 pre(temp_106) = false;
 pre(temp_107) = false;
 pre(temp_108) = false;
 pre(temp_109) = false;
 pre(temp_110) = false;
 pre(temp_111) = false;
 pre(temp_112) = false;
 pre(temp_113) = false;
parameter equation
 laptop_adpt_1.constantVoltage1.V = laptop_adpt_1.V_Rect;
 laptop_adpt_3.constantVoltage1.V = laptop_adpt_3.V_Rect;
 test_DY.idealTransformer1.N = test_DY.N;
 test_DY.idealTransformer2.N = test_DY.N;
 test_DY.idealTransformer3.N = test_DY.N;
 laptop_adpt_2.constantVoltage1.V = laptop_adpt_2.V_Rect;
 led_driver_1.constantVoltage1.V = led_driver_1.V_Rect;
 led_driver_3.constantVoltage1.V = led_driver_3.V_Rect;
 led_driver_2.constantVoltage1.V = led_driver_2.V_Rect;
 PhA.v[1].re = PhA.vMag[1] .* cos(PhA.vArg[1]);
 PhA.v[2].re = PhA.vMag[2] .* cos(PhA.vArg[2]);
 PhA.v[3].re = PhA.vMag[3] .* cos(PhA.vArg[3]);
 PhA.v[1].im = PhA.vMag[1] .* sin(PhA.vArg[1]);
 PhA.v[2].im = PhA.vMag[2] .* sin(PhA.vArg[2]);
 PhA.v[3].im = PhA.vMag[3] .* sin(PhA.vArg[3]);
 PhB.v[1].re = PhB.vMag[1] .* cos(PhB.vArg[1]);
 PhB.v[2].re = PhB.vMag[2] .* cos(PhB.vArg[2]);
 PhB.v[3].re = PhB.vMag[3] .* cos(PhB.vArg[3]);
 PhB.v[1].im = PhB.vMag[1] .* sin(PhB.vArg[1]);
 PhB.v[2].im = PhB.vMag[2] .* sin(PhB.vArg[2]);
 PhB.v[3].im = PhB.vMag[3] .* sin(PhB.vArg[3]);
 PhC.v[1].re = PhC.vMag[1] .* cos(PhC.vArg[1]);
 PhC.v[2].re = PhC.vMag[2] .* cos(PhC.vArg[2]);
 PhC.v[3].re = PhC.vMag[3] .* cos(PhC.vArg[3]);
 PhC.v[1].im = PhC.vMag[1] .* sin(PhC.vArg[1]);
 PhC.v[2].im = PhC.vMag[2] .* sin(PhC.vArg[2]);
 PhC.v[3].im = PhC.vMag[3] .* sin(PhC.vArg[3]);
 laptop_1.i = (- laptop_1.pwr) / (- laptop_adpt_1.constantVoltage1.V);
 laptop_3.i = (- laptop_3.pwr) / (- laptop_adpt_3.constantVoltage1.V);
 temp_387 = 1 / test_DY.idealTransformer1.N;
 temp_402 = 1 / test_DY.idealTransformer1.N;
 temp_417 = 1 / test_DY.idealTransformer1.N;
 temp_537 = 1 / test_DY.idealTransformer2.N;
 temp_552 = 1 / test_DY.idealTransformer2.N;
 temp_567 = 1 / test_DY.idealTransformer2.N;
 temp_687 = 1 / test_DY.idealTransformer3.N;
 temp_702 = 1 / test_DY.idealTransformer3.N;
 temp_717 = 1 / test_DY.idealTransformer3.N;
 laptop_2.i = (- laptop_2.pwr) / (- laptop_adpt_2.constantVoltage1.V);
 led_1.i = (- led_1.pwr) / (- led_driver_1.constantVoltage1.V);
 led_3.i = (- led_3.pwr) / (- led_driver_3.constantVoltage1.V);
 led_2.i = (- led_2.pwr) / (- led_driver_2.constantVoltage1.V);
 test_DY.idealTransformer2.vPrim[1].re = PhB.v[1].re + (- PhA.v[1].re);
 test_DY.idealTransformer2.vPrim[2].re = PhB.v[2].re + (- PhA.v[2].re);
 test_DY.idealTransformer2.vPrim[3].re = PhB.v[3].re + (- PhA.v[3].re);
 test_DY.idealTransformer2.vPrim[1].im = PhB.v[1].im + (- PhA.v[1].im);
 test_DY.idealTransformer2.vPrim[2].im = PhB.v[2].im + (- PhA.v[2].im);
 test_DY.idealTransformer2.vPrim[3].im = PhB.v[3].im + (- PhA.v[3].im);
 test_DY.idealTransformer1.vPrim[1].re = PhA.v[1].re + (- PhC.v[1].re);
 test_DY.idealTransformer3.vPrim[1].re = PhC.v[1].re + (- PhB.v[1].re);
 test_DY.idealTransformer1.vPrim[2].re = PhA.v[2].re + (- PhC.v[2].re);
 test_DY.idealTransformer3.vPrim[2].re = PhC.v[2].re + (- PhB.v[2].re);
 test_DY.idealTransformer1.vPrim[3].re = PhA.v[3].re + (- PhC.v[3].re);
 test_DY.idealTransformer3.vPrim[3].re = PhC.v[3].re + (- PhB.v[3].re);
 test_DY.idealTransformer1.vPrim[1].im = PhA.v[1].im + (- PhC.v[1].im);
 test_DY.idealTransformer3.vPrim[1].im = PhC.v[1].im + (- PhB.v[1].im);
 test_DY.idealTransformer1.vPrim[2].im = PhA.v[2].im + (- PhC.v[2].im);
 test_DY.idealTransformer3.vPrim[2].im = PhC.v[2].im + (- PhB.v[2].im);
 test_DY.idealTransformer1.vPrim[3].im = PhA.v[3].im + (- PhC.v[3].im);
 test_DY.idealTransformer3.vPrim[3].im = PhC.v[3].im + (- PhB.v[3].im);
 ground6.p.i = laptop_1.i + (- laptop_1.i);
 laptop_adpt_1.P = laptop_adpt_1.constantVoltage1.V * (- laptop_1.i);
 ground8.p.i = laptop_3.i + (- laptop_3.i);
 laptop_adpt_3.P = laptop_adpt_3.constantVoltage1.V * (- laptop_3.i);
 ground3.p.i = laptop_2.i + (- laptop_2.i);
 laptop_adpt_2.P = laptop_adpt_2.constantVoltage1.V * (- laptop_2.i);
 ground4.p.i = led_1.i + (- led_1.i);
 led_driver_1.P = led_driver_1.constantVoltage1.V * (- led_1.i);
 ground5.p.i = led_3.i + (- led_3.i);
 led_driver_3.P = led_driver_3.constantVoltage1.V * (- led_3.i);
 ground7.p.i = led_2.i + (- led_2.i);
 led_driver_2.P = led_driver_2.constantVoltage1.V * (- led_2.i);
 test_DY.idealTransformer2.vSec[1].re = temp_537 * test_DY.idealTransformer2.vPrim[1].re;
 test_DY.idealTransformer2.vSec[2].re = temp_552 * test_DY.idealTransformer2.vPrim[2].re;
 test_DY.idealTransformer2.vSec[3].re = temp_567 * test_DY.idealTransformer2.vPrim[3].re;
 test_DY.idealTransformer2.vSec[1].im = temp_537 * test_DY.idealTransformer2.vPrim[1].im;
 test_DY.idealTransformer2.vSec[2].im = temp_552 * test_DY.idealTransformer2.vPrim[2].im;
 test_DY.idealTransformer2.vSec[3].im = temp_567 * test_DY.idealTransformer2.vPrim[3].im;
 terminal.v[1].re = temp_387 * test_DY.idealTransformer1.vPrim[1].re;
 test_DY.idealTransformer3.vSec[1].re = temp_687 * test_DY.idealTransformer3.vPrim[1].re;
 terminal.v[2].re = temp_402 * test_DY.idealTransformer1.vPrim[2].re;
 test_DY.idealTransformer3.vSec[2].re = temp_702 * test_DY.idealTransformer3.vPrim[2].re;
 terminal.v[3].re = temp_417 * test_DY.idealTransformer1.vPrim[3].re;
 test_DY.idealTransformer3.vSec[3].re = temp_717 * test_DY.idealTransformer3.vPrim[3].re;
 terminal.v[1].im = temp_387 * test_DY.idealTransformer1.vPrim[1].im;
 test_DY.idealTransformer3.vSec[1].im = temp_687 * test_DY.idealTransformer3.vPrim[1].im;
 terminal.v[2].im = temp_402 * test_DY.idealTransformer1.vPrim[2].im;
 test_DY.idealTransformer3.vSec[2].im = temp_702 * test_DY.idealTransformer3.vPrim[2].im;
 terminal.v[3].im = temp_417 * test_DY.idealTransformer1.vPrim[3].im;
 test_DY.idealTransformer3.vSec[3].im = temp_717 * test_DY.idealTransformer3.vPrim[3].im;
 laptop_adpt_1.S_vect[1].re = laptop_adpt_1.P * laptop_adpt_1.efficiency;
 laptop_adpt_3.S_vect[1].re = laptop_adpt_3.P * laptop_adpt_3.efficiency;
 laptop_adpt_2.S_vect[1].re = laptop_adpt_2.P * laptop_adpt_2.efficiency;
 led_driver_1.S_vect[1].re = led_driver_1.P * led_driver_1.efficiency;
 led_driver_3.S_vect[1].re = led_driver_3.P * led_driver_3.efficiency;
 led_driver_2.S_vect[1].re = led_driver_2.P * led_driver_2.efficiency;
 terminal.i[1].re = (- terminal.v[1].re) / (- terminal.r);
 terminal.i[2].re = (- terminal.v[2].re) / (- terminal.r);
 terminal.i[3].re = (- terminal.v[3].re) / (- terminal.r);
 terminal.vFundAbs = (terminal.v[1].re ^ 2 + terminal.v[1].im ^ 2) ^ 0.5;
 terminal.vFundArg = Modelica.Math.atan3(terminal.v[1].im, terminal.v[1].re, 0);
 terminal.i[1].im = (- terminal.v[1].im) / (- terminal.r);
 terminal.i[2].im = (- terminal.v[2].im) / (- terminal.r);
 terminal.i[3].im = (- terminal.v[3].im) / (- terminal.r);
 test_DY.idealTransformer1.iPrim[1].re = terminal.i[1].re / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[2].re = terminal.i[2].re / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[3].re = terminal.i[3].re / (- test_DY.idealTransformer1.N);
 terminal.iFundAbs = (terminal.i[1].re ^ 2 + terminal.i[1].im ^ 2) ^ 0.5;
 terminal.iFundArg = Modelica.Math.atan3(terminal.i[1].im, terminal.i[1].re, 0);
 test_DY.idealTransformer1.iPrim[1].im = terminal.i[1].im / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[2].im = terminal.i[2].im / (- test_DY.idealTransformer1.N);
 test_DY.idealTransformer1.iPrim[3].im = terminal.i[3].im / (- test_DY.idealTransformer1.N);
equation
 temp_99 = time > 0.5;
 temp_100 = time > 0.25;
 temp_101 = time > 0.4;
algorithm
 if temp_99 and not pre(temp_99) then
  systemDef.modeSelect := true;
 end if;
 if temp_100 and not pre(temp_100) then
  systemDef.eventWriteData := true;
 end if;
 if temp_101 and not pre(temp_101) then
  systemDef.eventReadData := true;
 end if;
equation
 der(PhA.theta) = 6.283185307179586 * systemDef.fFund;
 PhA.omega = der(PhA.theta);
 der(PhB.theta) = 6.283185307179586 * systemDef.fFund;
 PhB.omega = der(PhB.theta);
 der(PhC.theta) = 6.283185307179586 * systemDef.fFund;
 PhC.omega = der(PhC.theta);
 0.0 = if systemDef.modeSelect == false then laptop_adpt_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_1.loadBase1.i[1].re else laptop_adpt_1.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_1.loadBase1.i[2].re else laptop_adpt_1.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_1.loadBase1.i[3].re else laptop_adpt_1.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_1.loadBase1.i[1].im) else laptop_adpt_1.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_1.loadBase1.i[2].im) else laptop_adpt_1.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_1.loadBase1.i[3].im) else laptop_adpt_1.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefMag[1], laptop_adpt_1.hrmMdl_coefMag[2], laptop_adpt_1.hrmMdl_coefMag[3], laptop_adpt_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_1.hrmMdl_coefArg[1], laptop_adpt_1.hrmMdl_coefArg[2], laptop_adpt_1.hrmMdl_coefArg[3], laptop_adpt_1.hrmMdl_coefArg[4]}, 5));
 temp_102 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_103 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_102 and not pre(temp_102) then
 end if;
 if temp_103 and not pre(temp_103) then
 end if;
equation
 laptop_adpt_1.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then laptop_adpt_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* laptop_adpt_3.loadBase1.i[1].re else laptop_adpt_3.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* laptop_adpt_3.loadBase1.i[2].re else laptop_adpt_3.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* laptop_adpt_3.loadBase1.i[3].re else laptop_adpt_3.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- laptop_adpt_3.loadBase1.i[1].im) else laptop_adpt_3.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- laptop_adpt_3.loadBase1.i[2].im) else laptop_adpt_3.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- laptop_adpt_3.loadBase1.i[3].im) else laptop_adpt_3.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefMag[1], laptop_adpt_3.hrmMdl_coefMag[2], laptop_adpt_3.hrmMdl_coefMag[3], laptop_adpt_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_3.hrmMdl_coefArg[1], laptop_adpt_3.hrmMdl_coefArg[2], laptop_adpt_3.hrmMdl_coefArg[3], laptop_adpt_3.hrmMdl_coefArg[4]}, 5));
 temp_104 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_105 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_104 and not pre(temp_104) then
 end if;
 if temp_105 and not pre(temp_105) then
 end if;
equation
 laptop_adpt_3.loadBase1.omega = der(PhA.theta);
 terminal.omega = der(PhA.theta);
 z.v[1].re = z.z.re .* z.i[1].re - z.z.im .* systemDef.hrms[1] .* z.i[1].im;
 z.v[2].re = z.z.re .* z.i[2].re - z.z.im .* systemDef.hrms[2] .* z.i[2].im;
 z.v[3].re = z.z.re .* z.i[3].re - z.z.im .* systemDef.hrms[3] .* z.i[3].im;
 z.v[1].im = z.z.re .* z.i[1].im + z.z.im .* systemDef.hrms[1] .* z.i[1].re;
 z.v[2].im = z.z.re .* z.i[2].im + z.z.im .* systemDef.hrms[2] .* z.i[2].re;
 z.v[3].im = z.z.re .* z.i[3].im + z.z.im .* systemDef.hrms[3] .* z.i[3].re;
 z.omega = der(PhA.theta);
 z.v[1].re = test_DY.idealTransformer2.vSec[1].re - laptop_adpt_1.loadBase1.v[1].re;
 z.v[1].im = test_DY.idealTransformer2.vSec[1].im - laptop_adpt_1.loadBase1.v[1].im;
 z.v[2].re = test_DY.idealTransformer2.vSec[2].re - laptop_adpt_1.loadBase1.v[2].re;
 z.v[2].im = test_DY.idealTransformer2.vSec[2].im - laptop_adpt_1.loadBase1.v[2].im;
 z.v[3].re = test_DY.idealTransformer2.vSec[3].re - laptop_adpt_1.loadBase1.v[3].re;
 z.v[3].im = test_DY.idealTransformer2.vSec[3].im - laptop_adpt_1.loadBase1.v[3].im;
 z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im;
 z1.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im;
 z1.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im;
 z1.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re;
 z1.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re;
 z1.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re;
 z1.omega = der(PhA.theta);
 z1.v[1].re = test_DY.idealTransformer3.vSec[1].re - laptop_adpt_3.loadBase1.v[1].re;
 z1.v[1].im = test_DY.idealTransformer3.vSec[1].im - laptop_adpt_3.loadBase1.v[1].im;
 z1.v[2].re = test_DY.idealTransformer3.vSec[2].re - laptop_adpt_3.loadBase1.v[2].re;
 z1.v[2].im = test_DY.idealTransformer3.vSec[2].im - laptop_adpt_3.loadBase1.v[2].im;
 z1.v[3].re = test_DY.idealTransformer3.vSec[3].re - laptop_adpt_3.loadBase1.v[3].re;
 z1.v[3].im = test_DY.idealTransformer3.vSec[3].im - laptop_adpt_3.loadBase1.v[3].im;
 - z.i[1].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].re;
 - z.i[1].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[1].im;
 - z.i[2].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].re;
 - z.i[2].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[2].im;
 - z.i[3].re = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].re;
 - z.i[3].im = test_DY.idealTransformer2.N * test_DY.idealTransformer2.iPrim[3].im;
 - z1.i[1].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].re;
 - z1.i[1].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[1].im;
 - z1.i[2].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].re;
 - z1.i[2].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[2].im;
 - z1.i[3].re = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].re;
 - z1.i[3].im = test_DY.idealTransformer3.N * test_DY.idealTransformer3.iPrim[3].im;
 0.0 = if systemDef.modeSelect == false then laptop_adpt_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* laptop_adpt_2.loadBase1.i[1].re else laptop_adpt_2.loadBase1.i[1].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* laptop_adpt_2.loadBase1.i[2].re else laptop_adpt_2.loadBase1.i[2].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* laptop_adpt_2.loadBase1.i[3].re else laptop_adpt_2.loadBase1.i[3].re - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- laptop_adpt_2.loadBase1.i[1].im) else laptop_adpt_2.loadBase1.i[1].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- laptop_adpt_2.loadBase1.i[2].im) else laptop_adpt_2.loadBase1.i[2].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- laptop_adpt_2.loadBase1.i[3].im) else laptop_adpt_2.loadBase1.i[3].im - HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefMag[1], laptop_adpt_2.hrmMdl_coefMag[2], laptop_adpt_2.hrmMdl_coefMag[3], laptop_adpt_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({laptop_adpt_2.hrmMdl_coefArg[1], laptop_adpt_2.hrmMdl_coefArg[2], laptop_adpt_2.hrmMdl_coefArg[3], laptop_adpt_2.hrmMdl_coefArg[4]}, 5));
 temp_106 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_107 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_106 and not pre(temp_106) then
 end if;
 if temp_107 and not pre(temp_107) then
 end if;
equation
 laptop_adpt_2.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then led_driver_1.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_1.loadBase1.i[1].re else led_driver_1.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_1.loadBase1.i[2].re else led_driver_1.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_1.loadBase1.i[3].re else led_driver_1.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_1.loadBase1.i[1].im) else led_driver_1.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_1.loadBase1.i[2].im) else led_driver_1.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_1.loadBase1.i[3].im) else led_driver_1.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_1.hrmMdl_coefMag[1], led_driver_1.hrmMdl_coefMag[2], led_driver_1.hrmMdl_coefMag[3], led_driver_1.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_1.hrmMdl_coefArg[1], led_driver_1.hrmMdl_coefArg[2], led_driver_1.hrmMdl_coefArg[3], led_driver_1.hrmMdl_coefArg[4]}, 5));
 temp_108 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_109 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_108 and not pre(temp_108) then
 end if;
 if temp_109 and not pre(temp_109) then
 end if;
equation
 led_driver_1.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then led_driver_3.S_vect[1].re - laptop_adpt_3.loadBase1.v[1].re .* led_driver_3.loadBase1.i[1].re else led_driver_3.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].re .* led_driver_3.loadBase1.i[2].re else led_driver_3.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].re .* led_driver_3.loadBase1.i[3].re else led_driver_3.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_3.loadBase1.v[1].im .* (- led_driver_3.loadBase1.i[1].im) else led_driver_3.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[2].im .* (- led_driver_3.loadBase1.i[2].im) else led_driver_3.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_3.loadBase1.v[3].im .* (- led_driver_3.loadBase1.i[3].im) else led_driver_3.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_3.hrmMdl_coefMag[1], led_driver_3.hrmMdl_coefMag[2], led_driver_3.hrmMdl_coefMag[3], led_driver_3.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_3.hrmMdl_coefArg[1], led_driver_3.hrmMdl_coefArg[2], led_driver_3.hrmMdl_coefArg[3], led_driver_3.hrmMdl_coefArg[4]}, 5));
 temp_110 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_111 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_110 and not pre(temp_110) then
 end if;
 if temp_111 and not pre(temp_111) then
 end if;
equation
 led_driver_3.loadBase1.omega = der(PhA.theta);
 0.0 = if systemDef.modeSelect == false then led_driver_2.S_vect[1].re - laptop_adpt_1.loadBase1.v[1].re .* led_driver_2.loadBase1.i[1].re else led_driver_2.loadBase1.i[1].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].re .* led_driver_2.loadBase1.i[2].re else led_driver_2.loadBase1.i[2].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].re .* led_driver_2.loadBase1.i[3].re else led_driver_2.loadBase1.i[3].re - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* sin(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5));
 0.0 = if systemDef.modeSelect == false then 0.5 - laptop_adpt_1.loadBase1.v[1].im .* (- led_driver_2.loadBase1.i[1].im) else led_driver_2.loadBase1.i[1].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 1) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 1));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[2].im .* (- led_driver_2.loadBase1.i[2].im) else led_driver_2.loadBase1.i[2].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 3) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 3));
 0.0 = if systemDef.modeSelect == false then - laptop_adpt_1.loadBase1.v[3].im .* (- led_driver_2.loadBase1.i[3].im) else led_driver_2.loadBase1.i[3].im - HPF.Utilities.polyval({led_driver_2.hrmMdl_coefMag[1], led_driver_2.hrmMdl_coefMag[2], led_driver_2.hrmMdl_coefMag[3], led_driver_2.hrmMdl_coefMag[4]}, 5) .* cos(HPF.Utilities.polyval({led_driver_2.hrmMdl_coefArg[1], led_driver_2.hrmMdl_coefArg[2], led_driver_2.hrmMdl_coefArg[3], led_driver_2.hrmMdl_coefArg[4]}, 5));
 temp_112 = systemDef.eventWriteData <> pre(systemDef.eventWriteData);
 temp_113 = systemDef.eventReadData <> pre(systemDef.eventReadData);
algorithm
 if temp_112 and not pre(temp_112) then
 end if;
 if temp_113 and not pre(temp_113) then
 end if;
equation
 led_driver_2.loadBase1.omega = der(PhA.theta);
 - PhA.i[1].im + (- PhB.i[1].im) + (- PhC.i[1].im) + ground1.pin.iIm[1] = 0;
 - PhA.i[2].im + (- PhB.i[2].im) + (- PhC.i[2].im) + ground1.pin.iIm[2] = 0;
 - PhA.i[3].im + (- PhB.i[3].im) + (- PhC.i[3].im) + ground1.pin.iIm[3] = 0;
 - PhA.i[1].re + (- PhB.i[1].re) + (- PhC.i[1].re) + ground1.pin.iRe[1] = 0;
 - PhA.i[2].re + (- PhB.i[2].re) + (- PhC.i[2].re) + ground1.pin.iRe[2] = 0;
 - PhA.i[3].re + (- PhB.i[3].re) + (- PhC.i[3].re) + ground1.pin.iRe[3] = 0;
 laptop_adpt_1.loadBase1.i[1].im + laptop_adpt_2.loadBase1.i[1].im + led_driver_1.loadBase1.i[1].im + led_driver_2.loadBase1.i[1].im + (- z.i[1].im) = 0;
 laptop_adpt_1.loadBase1.i[2].im + laptop_adpt_2.loadBase1.i[2].im + led_driver_1.loadBase1.i[2].im + led_driver_2.loadBase1.i[2].im + (- z.i[2].im) = 0;
 laptop_adpt_1.loadBase1.i[3].im + laptop_adpt_2.loadBase1.i[3].im + led_driver_1.loadBase1.i[3].im + led_driver_2.loadBase1.i[3].im + (- z.i[3].im) = 0;
 laptop_adpt_1.loadBase1.i[1].re + laptop_adpt_2.loadBase1.i[1].re + led_driver_1.loadBase1.i[1].re + led_driver_2.loadBase1.i[1].re + (- z.i[1].re) = 0;
 laptop_adpt_1.loadBase1.i[2].re + laptop_adpt_2.loadBase1.i[2].re + led_driver_1.loadBase1.i[2].re + led_driver_2.loadBase1.i[2].re + (- z.i[2].re) = 0;
 laptop_adpt_1.loadBase1.i[3].re + laptop_adpt_2.loadBase1.i[3].re + led_driver_1.loadBase1.i[3].re + led_driver_2.loadBase1.i[3].re + (- z.i[3].re) = 0;
 laptop_adpt_3.loadBase1.i[1].im + led_driver_3.loadBase1.i[1].im + (- z1.i[1].im) = 0;
 laptop_adpt_3.loadBase1.i[2].im + led_driver_3.loadBase1.i[2].im + (- z1.i[2].im) = 0;
 laptop_adpt_3.loadBase1.i[3].im + led_driver_3.loadBase1.i[3].im + (- z1.i[3].im) = 0;
 laptop_adpt_3.loadBase1.i[1].re + led_driver_3.loadBase1.i[1].re + (- z1.i[1].re) = 0;
 laptop_adpt_3.loadBase1.i[2].re + led_driver_3.loadBase1.i[2].re + (- z1.i[2].re) = 0;
 laptop_adpt_3.loadBase1.i[3].re + led_driver_3.loadBase1.i[3].re + (- z1.i[3].re) = 0;
 ground2.pin.iIm[1] + (- laptop_adpt_1.loadBase1.i[1].im) + (- laptop_adpt_2.loadBase1.i[1].im) + (- laptop_adpt_3.loadBase1.i[1].im) + (- led_driver_1.loadBase1.i[1].im) + (- led_driver_2.loadBase1.i[1].im) + (- led_driver_3.loadBase1.i[1].im) + (- terminal.i[1].im) + test_DY.hPin_N.iIm[1] = 0;
 ground2.pin.iIm[2] + (- laptop_adpt_1.loadBase1.i[2].im) + (- laptop_adpt_2.loadBase1.i[2].im) + (- laptop_adpt_3.loadBase1.i[2].im) + (- led_driver_1.loadBase1.i[2].im) + (- led_driver_2.loadBase1.i[2].im) + (- led_driver_3.loadBase1.i[2].im) + (- terminal.i[2].im) + test_DY.hPin_N.iIm[2] = 0;
 ground2.pin.iIm[3] + (- laptop_adpt_1.loadBase1.i[3].im) + (- laptop_adpt_2.loadBase1.i[3].im) + (- laptop_adpt_3.loadBase1.i[3].im) + (- led_driver_1.loadBase1.i[3].im) + (- led_driver_2.loadBase1.i[3].im) + (- led_driver_3.loadBase1.i[3].im) + (- terminal.i[3].im) + test_DY.hPin_N.iIm[3] = 0;
 ground2.pin.iRe[1] + (- laptop_adpt_1.loadBase1.i[1].re) + (- laptop_adpt_2.loadBase1.i[1].re) + (- laptop_adpt_3.loadBase1.i[1].re) + (- led_driver_1.loadBase1.i[1].re) + (- led_driver_2.loadBase1.i[1].re) + (- led_driver_3.loadBase1.i[1].re) + (- terminal.i[1].re) + test_DY.hPin_N.iRe[1] = 0;
 ground2.pin.iRe[2] + (- laptop_adpt_1.loadBase1.i[2].re) + (- laptop_adpt_2.loadBase1.i[2].re) + (- laptop_adpt_3.loadBase1.i[2].re) + (- led_driver_1.loadBase1.i[2].re) + (- led_driver_2.loadBase1.i[2].re) + (- led_driver_3.loadBase1.i[2].re) + (- terminal.i[2].re) + test_DY.hPin_N.iRe[2] = 0;
 ground2.pin.iRe[3] + (- laptop_adpt_1.loadBase1.i[3].re) + (- laptop_adpt_2.loadBase1.i[3].re) + (- laptop_adpt_3.loadBase1.i[3].re) + (- led_driver_1.loadBase1.i[3].re) + (- led_driver_2.loadBase1.i[3].re) + (- led_driver_3.loadBase1.i[3].re) + (- terminal.i[3].re) + test_DY.hPin_N.iRe[3] = 0;
 test_DY.idealTransformer1.iPrim[1].im + (- test_DY.idealTransformer2.iPrim[1].im) + PhA.i[1].im = 0;
 test_DY.idealTransformer1.iPrim[2].im + (- test_DY.idealTransformer2.iPrim[2].im) + PhA.i[2].im = 0;
 test_DY.idealTransformer1.iPrim[3].im + (- test_DY.idealTransformer2.iPrim[3].im) + PhA.i[3].im = 0;
 test_DY.idealTransformer1.iPrim[1].re + (- test_DY.idealTransformer2.iPrim[1].re) + PhA.i[1].re = 0;
 test_DY.idealTransformer1.iPrim[2].re + (- test_DY.idealTransformer2.iPrim[2].re) + PhA.i[2].re = 0;
 test_DY.idealTransformer1.iPrim[3].re + (- test_DY.idealTransformer2.iPrim[3].re) + PhA.i[3].re = 0;
 - test_DY.idealTransformer1.iPrim[1].im + test_DY.idealTransformer3.iPrim[1].im + PhC.i[1].im = 0;
 - test_DY.idealTransformer1.iPrim[2].im + test_DY.idealTransformer3.iPrim[2].im + PhC.i[2].im = 0;
 - test_DY.idealTransformer1.iPrim[3].im + test_DY.idealTransformer3.iPrim[3].im + PhC.i[3].im = 0;
 - test_DY.idealTransformer1.iPrim[1].re + test_DY.idealTransformer3.iPrim[1].re + PhC.i[1].re = 0;
 - test_DY.idealTransformer1.iPrim[2].re + test_DY.idealTransformer3.iPrim[2].re + PhC.i[2].re = 0;
 - test_DY.idealTransformer1.iPrim[3].re + test_DY.idealTransformer3.iPrim[3].re + PhC.i[3].re = 0;
 test_DY.idealTransformer2.iPrim[1].im + (- test_DY.idealTransformer3.iPrim[1].im) + PhB.i[1].im = 0;
 test_DY.idealTransformer2.iPrim[2].im + (- test_DY.idealTransformer3.iPrim[2].im) + PhB.i[2].im = 0;
 test_DY.idealTransformer2.iPrim[3].im + (- test_DY.idealTransformer3.iPrim[3].im) + PhB.i[3].im = 0;
 test_DY.idealTransformer2.iPrim[1].re + (- test_DY.idealTransformer3.iPrim[1].re) + PhB.i[1].re = 0;
 test_DY.idealTransformer2.iPrim[2].re + (- test_DY.idealTransformer3.iPrim[2].re) + PhB.i[2].re = 0;
 test_DY.idealTransformer2.iPrim[3].re + (- test_DY.idealTransformer3.iPrim[3].re) + PhB.i[3].re = 0;
 - test_DY.hPin_N.iIm[1] + terminal.i[1].im + z.i[1].im + z1.i[1].im = 0;
 - test_DY.hPin_N.iIm[2] + terminal.i[2].im + z.i[2].im + z1.i[2].im = 0;
 - test_DY.hPin_N.iIm[3] + terminal.i[3].im + z.i[3].im + z1.i[3].im = 0;
 - test_DY.hPin_N.iRe[1] + terminal.i[1].re + z.i[1].re + z1.i[1].re = 0;
 - test_DY.hPin_N.iRe[2] + terminal.i[2].re + z.i[2].re + z1.i[2].re = 0;
 - test_DY.hPin_N.iRe[3] + terminal.i[3].re + z.i[3].re + z1.i[3].re = 0;
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhC.theta));
 HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhB.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint(HPF.Types.Reference(PhC.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint(HPF.Types.Reference(PhA.theta), HPF.Types.Reference(PhA.theta));
 PhA.P = PhA.v[1].re * PhA.i[1].re + PhA.v[2].re * PhA.i[2].re + PhA.v[3].re * PhA.i[3].re + (PhA.v[1].im * PhA.i[1].im + PhA.v[2].im * PhA.i[2].im + PhA.v[3].im * PhA.i[3].im);
 PhB.P = PhB.v[1].re * PhB.i[1].re + PhB.v[2].re * PhB.i[2].re + PhB.v[3].re * PhB.i[3].re + (PhB.v[1].im * PhB.i[1].im + PhB.v[2].im * PhB.i[2].im + PhB.v[3].im * PhB.i[3].im);
 PhC.P = PhC.v[1].re * PhC.i[1].re + PhC.v[2].re * PhC.i[2].re + PhC.v[3].re * PhC.i[3].re + (PhC.v[1].im * PhC.i[1].im + PhC.v[2].im * PhC.i[2].im + PhC.v[3].im * PhC.i[3].im);
 z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5;
 z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0);
 z.iFundAbs = (z.i[1].re ^ 2 + z.i[1].im ^ 2) ^ 0.5;
 z.iFundArg = Modelica.Math.atan3(z.i[1].im, z.i[1].re, 0);
 z1.vFundAbs = (z1.v[1].re ^ 2 + z1.v[1].im ^ 2) ^ 0.5;
 z1.vFundArg = Modelica.Math.atan3(z1.v[1].im, z1.v[1].re, 0);
 z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5;
 z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0);

public
 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function HPF.Utilities.polyval
  input Real[:] a;
  input Real x;
  output Real y;
  Real temp_1;
  Real temp_2;
  Real[:] temp_3;
 algorithm
  init temp_3 as Real[max(integer(size(a, 1) - 1) + 1, 0)];
  for i1 in 1:max(integer(size(a, 1) - 1) + 1, 0) loop
   temp_3[i1] := x ^ (size(a, 1) - 1 + (1 - i1));
  end for;
  temp_2 := 0.0;
  for i1 in 1:max(integer(size(a, 1) - 1) + 1, 0) loop
   temp_2 := temp_2 + a[i1] * temp_3[i1];
  end for;
  temp_1 := temp_2;
  y := temp_1;
  return;
 end HPF.Utilities.polyval;

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer2.pinN_Sec.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Sec.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.ground1.pin.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_n.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.test_DY.idealTransformer3.pinN_Prim.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhB.pin_p.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.PhC.pin_p.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.terminal.pin_n.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_1.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_2.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_2.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.laptop_adpt_3.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_3.hPin_P.reference.equalityConstraint;

 function HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.DC_Testbed.Configuration_3.led_driver_1.loadBase1.pin_n.reference.equalityConstraint;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
end HPF.Examples.DC_Testbed.Configuration_3;

Generating code...
====== Model compiled successfully =======
make -f /home/avpreetsingh/programfiles/jModelica/Makefiles/MakeFile fmume20_
make[1]: Entering directory '/tmp/jmc10010618822831073687out'
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/avpreetsingh/programfiles/jModelica/include/RuntimeLibrary -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/FMI/2.0  -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/include -c -o HPF_Examples_DC_Testbed_Configuration_3_base.o sources/HPF_Examples_DC_Testbed_Configuration_3_base.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/avpreetsingh/programfiles/jModelica/include/RuntimeLibrary -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/FMI/2.0  -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/include -c -o HPF_Examples_DC_Testbed_Configuration_3_init_dependent.o sources/HPF_Examples_DC_Testbed_Configuration_3_init_dependent.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/avpreetsingh/programfiles/jModelica/include/RuntimeLibrary -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/FMI/2.0  -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/include -c -o HPF_Examples_DC_Testbed_Configuration_3_init_independent.o sources/HPF_Examples_DC_Testbed_Configuration_3_init_independent.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -O1 -I/home/avpreetsingh/programfiles/jModelica/include/RuntimeLibrary -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/FMI/2.0  -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/include -c -o HPF_Examples_DC_Testbed_Configuration_3_funcs.o sources/HPF_Examples_DC_Testbed_Configuration_3_funcs.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/avpreetsingh/programfiles/jModelica/include/RuntimeLibrary -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/FMI/2.0  -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/include -c -o HPF_Examples_DC_Testbed_Configuration_3.o sources/HPF_Examples_DC_Testbed_Configuration_3.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/avpreetsingh/programfiles/jModelica/include/RuntimeLibrary -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/FMI/2.0  -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/include -c -o HPF_Examples_DC_Testbed_Configuration_3_equ_init.o sources/HPF_Examples_DC_Testbed_Configuration_3_equ_init.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/avpreetsingh/programfiles/jModelica/include/RuntimeLibrary -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/FMI/2.0  -I/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/include -c -o HPF_Examples_DC_Testbed_Configuration_3_equ.o sources/HPF_Examples_DC_Testbed_Configuration_3_equ.c
mkdir -p binaries/linux64
g++ -shared -Wl,-rpath,'$ORIGIN',--no-undefined -pthread -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -o binaries/linux64/HPF_Examples_DC_Testbed_Configuration_3.so  HPF_Examples_DC_Testbed_Configuration_3_base.o  HPF_Examples_DC_Testbed_Configuration_3_init_dependent.o  HPF_Examples_DC_Testbed_Configuration_3_init_independent.o  HPF_Examples_DC_Testbed_Configuration_3_funcs.o  HPF_Examples_DC_Testbed_Configuration_3.o  HPF_Examples_DC_Testbed_Configuration_3_equ_init.o  HPF_Examples_DC_Testbed_Configuration_3_equ.o  -L/home/avpreetsingh/programfiles/jModelica/lib/RuntimeLibrary -lfmi2 -ljmi -ldl "-L/home/avpreetsingh/programfiles/jModelica/lib"  -ljmi_get_set_default -ljmi_get_set_default -llapack -lblas -lgfortran -lModelicaExternalC -lzlib -ljmi -L/home/avpreetsingh/programfiles/jModelica/ThirdParty/Sundials/lib -l:libsundials_kinsol.a -l:libsundials_nvecserial.a -L/home/avpreetsingh/programfiles/jModelica/ThirdParty/Minpack/lib -l:libcminpack.a -lstdc++ -lm -l:libsundials_cvode.a
rm -f  HPF_Examples_DC_Testbed_Configuration_3_base.o  HPF_Examples_DC_Testbed_Configuration_3_init_dependent.o  HPF_Examples_DC_Testbed_Configuration_3_init_independent.o  HPF_Examples_DC_Testbed_Configuration_3_funcs.o  HPF_Examples_DC_Testbed_Configuration_3.o  HPF_Examples_DC_Testbed_Configuration_3_equ_init.o  HPF_Examples_DC_Testbed_Configuration_3_equ.o 
make[1]: Leaving directory '/tmp/jmc10010618822831073687out'

