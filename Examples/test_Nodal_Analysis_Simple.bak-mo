within HPF.Examples;
model test_Nodal_Analysis_Simple
  inner HPF.Solver.SystemDef systemDef(fundFreq = 60, h_max = 5, modeSelect = 1)  annotation (
    Placement(visible = true, transformation(origin={-52, 96},   extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  HPF.Components.VoltageSource voltageSource1(V = 1 + Modelica.ComplexMath.j * 3)  annotation (
    Placement(visible = true, transformation(origin = {-28, 62}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  HPF.Components.Ground ground1 annotation (
    Placement(visible = true, transformation(origin = {-28, 34}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  HPF.Components.Impedance z(z = 1 + Modelica.ComplexMath.j * 3)  annotation (
    Placement(visible = true, transformation(origin = {8, 98}, extent = {{-8, -8}, {8, 8}}, rotation = 0)));
  HPF.Components.Ground ground2 annotation(
    Placement(visible = true, transformation(origin = {36, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  HPF.Components.Impedance z1(z = 1 + Modelica.ComplexMath.j * 3) annotation(
    Placement(visible = true, transformation(origin = {6, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation
  connect(z1.pin_n, ground2.pin_p) annotation(
    Line(points = {{16, 80}, {36, 80}, {36, 56}, {36, 56}}, color = {117, 80, 123}));
  connect(z1.pin_p, voltageSource1.pin_p) annotation(
    Line(points = {{-4, 80}, {-28, 80}, {-28, 72}, {-28, 72}}, color = {117, 80, 123}));
  connect(z.pin_n, ground2.pin_p) annotation(
    Line(points = {{16, 98}, {16, 86.75}, {36, 86.75}, {36, 55}}, color = {117, 80, 123}));
  connect(voltageSource1.pin_p, z.pin_p) annotation(
    Line(points = {{-28, 72.2}, {-28, 98}, {0, 98}}, color = {117, 80, 123}));
  connect(ground1.pin_p, voltageSource1.pin_n) annotation(
    Line(points = {{-28, 39}, {-28, 52}}, color = {117, 80, 123}));
  annotation (
    Icon(coordinateSystem(grid = {0, 0})),
    Diagram(coordinateSystem(extent = {{-200, -200}, {200, 200}}, grid = {0, 0})));
end test_Nodal_Analysis_Simple;
