Compiler arguments:
  -log=verbose: compile_log.txt,w|xml|stderr -target=me -version=2.0 -platform=linux64 -out=. -modelicapath=/home/linuxdev/jmodelica/ThirdParty/MSL ../../../HPF HPF.Examples.Demo 
Current working directory:
  /media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/Examples/Demo.pyjmi
Compiler version: r13863
Java version: 11.0.5-ea
OS name: Linux
OS architecture: amd64
MODELICAPATH    = 
JAVA_HOME       = /usr/lib/jvm/java-11-openjdk-amd64
JMODELICA_HOME  = /home/linuxdev/jmodelica
======= Compiling model =======
Parsing ../../../HPF/package.mo...
Checking for errors...
MODELICAPATH = /home/linuxdev/jmodelica/ThirdParty/MSL
extra_lib_dirs = 
Parsing ../../../HPF/package.mo...
Parsing ../../../HPF/Examples/package.mo...
Parsing ../../../HPF/Examples/Demo.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Icons.mo...
Parsing ../../../HPF/SystemDef.mo...
Parsing ../../../HPF/SinglePhase/package.mo...
Parsing ../../../HPF/SinglePhase/Components/package.mo...
Parsing ../../../HPF/SinglePhase/Components/Ground.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/Basic.mo...
Parsing ../../../HPF/SinglePhase/Sources/package.mo...
Parsing ../../../HPF/SinglePhase/Sources/VoltageSource.mo...
Parsing ../../../HPF/SinglePhase/Interface.mo...
Parsing ../../../HPF/SinglePhase/Components/Impedance.mo...
Parsing ../../../HPF/PowerElectronicsConverters/package.mo...
Parsing ../../../HPF/PowerElectronicsConverters/AC2DC_basic.mo...
Parsing ../../../HPF/DC/package.mo...
Parsing ../../../HPF/DC/Load.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/Interfaces.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Blocks/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Blocks/Interfaces.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/SIunits.mo...
Parsing ../../../HPF/Utilities.mo...
Parsing ../../../HPF/Types.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Complex.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/ComplexMath.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Math/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Constants.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/Sources.mo...
Flattening model...
Raw flattened model:
fclass HPF.Examples.Demo
 parameter Integer systemDef.hrms[8] = {1, 3, 5, 7, 9, 11, 13, 15} "Harmonics to simulate" /* { 1, 3, 5, 7, 9, 11, 13, 15 } */;
 structural parameter Integer systemDef.numHrm = 8 "Number of harmonics. (Automatically generated from hrms.)" /* 8 */;
 parameter Modelica.SIunits.Frequency systemDef.fFund = 60 "Fundamental frequency (Hz)" /* 60 */;
 parameter Modelica.SIunits.Frequency systemDef.fs = 5000.0 "Sampling frequency (Hz)" /* 5000.0 */;
 parameter Integer systemDef.N = integer(floor(systemDef.fs / systemDef.fFund)) "Size of FFT";
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 discrete HPF.Utilities.ComponentProperties ground.properties(ComponentType = "Ground");
 HPF.Types.Reference ground.pin.reference(theta(start = 0)) "Reference";
 structural parameter Integer ground.pin.h = 8 "Numbder of harmonics" /* 8 */;
 Complex ground.pin.v[8] "Complex potential at the node";
 Real ground.pin.iIm[8];
 Real ground.pin.iRe[8];
 Modelica.SIunits.ElectricPotential ground2.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground2.p.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties v.properties(ComponentType = "VoltageSource");
 structural parameter Real v.vMag[8] = {120, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001} "Voltage Magnitude (Volts rms)" /* { 120, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001 } */;
 structural parameter Real v.vArg[8] = {0, 0, 0, 0, 0, 0, 0, 0} "Voltage angle (rad)" /* { 0, 0, 0, 0, 0, 0, 0, 0 } */;
 Real v.P = v.v[1].re * v.i[1].re + v.v[1].im * v.i[1].im "Real Power";
 Real v.P1 = Modelica.ComplexMath.real(Complex.'*'.multiply(v.v[1], Modelica.ComplexMath.conj(v.i[1])));
 Real v.iMag[8] = Modelica.ComplexMath.'abs'(v.i[1:8]);
 Real v.iArg[8] = Modelica.ComplexMath.arg(v.i[1:8], 0);
 Modelica.SIunits.Angle v.theta(start = 0) = v.pin_p.reference.theta;
 Complex v.v[8](each re(start = 100),each im(start = 0)) "Complex voltage";
 Complex v.i[8](each re(start = 0),each im(start = 0)) "Complex current";
 Real v.omega;
 HPF.Types.Reference v.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer v.pin_p.h = 8 "Numbder of harmonics" /* 8 */;
 Complex v.pin_p.v[8] "Complex potential at the node";
 Real v.pin_p.iIm[8];
 Real v.pin_p.iRe[8];
 HPF.Types.Reference v.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer v.pin_n.h = 8 "Numbder of harmonics" /* 8 */;
 Complex v.pin_n.v[8] "Complex potential at the node";
 Real v.pin_n.iIm[8];
 Real v.pin_n.iRe[8];
 discrete HPF.Utilities.ComponentProperties z.properties(ComponentType = "Impedance");
 parameter Complex z.z(re(start = 1),im(start = 0)) = Complex.'+'(Complex.'constructor'.fromReal(0.5, 0), Complex.'*'.multiply(Complex.'constructor'.fromReal(0.02, 0), Complex(0, 1))) "Impedance, R + jX";
 Real z.vFundAbs = Modelica.ComplexMath.'abs'(z.v[1]);
 Real z.vFundArg = Modelica.ComplexMath.arg(z.v[1], 0);
 Real z.iFundAbs = Modelica.ComplexMath.'abs'(z.i[1]);
 Real z.iFundArg = Modelica.ComplexMath.arg(z.i[1], 0);
 Complex z.v[8](each re(start = 100),each im(start = 0)) "Complex voltage";
 Complex z.i[8](each re(start = 0),each im(start = 0)) "Complex current";
 Real z.omega;
 HPF.Types.Reference z.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer z.pin_p.h = 8 "Numbder of harmonics" /* 8 */;
 Complex z.pin_p.v[8] "Complex potential at the node";
 Real z.pin_p.iIm[8];
 Real z.pin_p.iRe[8];
 HPF.Types.Reference z.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer z.pin_n.h = 8 "Numbder of harmonics" /* 8 */;
 Complex z.pin_n.v[8] "Complex potential at the node";
 Real z.pin_n.iIm[8];
 Real z.pin_n.iRe[8];
 discrete HPF.Utilities.ComponentProperties led_driver.properties(ComponentType = "NonlinearLoad");
 Modelica.SIunits.ElectricPotential led_driver.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference led_driver.hPin_P.reference(theta(start = 0)) "Reference";
 structural parameter Integer led_driver.hPin_P.h = 8 "Numbder of harmonics" /* 8 */;
 Complex led_driver.hPin_P.v[8] "Complex potential at the node";
 Real led_driver.hPin_P.iIm[8];
 Real led_driver.hPin_P.iRe[8];
 HPF.Types.Reference led_driver.hPin_N.reference(theta(start = 0)) "Reference";
 structural parameter Integer led_driver.hPin_N.h = 8 "Numbder of harmonics" /* 8 */;
 Complex led_driver.hPin_N.v[8] "Complex potential at the node";
 Real led_driver.hPin_N.iIm[8];
 Real led_driver.hPin_N.iRe[8];
 Modelica.Blocks.Interfaces.RealOutput led_driver.PLoss;
 parameter Real led_driver.V_Rect(start = 0) = 24 "Rectifier DC output" /* 24 */;
 parameter Real led_driver.efficiency(start = 1) = 0.95 "Rectifier efficiency (replace with efficiency model or curve)" /* 0.95 */;
 parameter Modelica.SIunits.ElectricPotential led_driver.vDC.V(start = 1) = led_driver.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential led_driver.vDC.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent led_driver.vDC.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential led_driver.vDC.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver.vDC.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential led_driver.vDC.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent led_driver.vDC.n.i "Current flowing into the pin";
 Complex led_driver.loadBase.v[8](each re(start = 100),each im(start = 0)) "Complex voltage";
 Complex led_driver.loadBase.i[8](each re(start = 0),each im(start = 0)) "Complex current";
 Real led_driver.loadBase.omega;
 HPF.Types.Reference led_driver.loadBase.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer led_driver.loadBase.pin_p.h = 8 "Numbder of harmonics" /* 8 */;
 Complex led_driver.loadBase.pin_p.v[8] "Complex potential at the node";
 Real led_driver.loadBase.pin_p.iIm[8];
 Real led_driver.loadBase.pin_p.iRe[8];
 HPF.Types.Reference led_driver.loadBase.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer led_driver.loadBase.pin_n.h = 8 "Numbder of harmonics" /* 8 */;
 Complex led_driver.loadBase.pin_n.v[8] "Complex potential at the node";
 Real led_driver.loadBase.pin_n.iIm[8];
 Real led_driver.loadBase.pin_n.iRe[8];
 Real led_driver.P = abs(led_driver.vDC.v * led_driver.vDC.i / led_driver.efficiency);
 Real led_driver.I_mag[8] = Modelica.ComplexMath.'abs'(led_driver.loadBase.i[1:8]);
 Real led_driver.I_arg[8] = Modelica.ComplexMath.arg(led_driver.loadBase.i[1:8], 0);
 Real led_driver.V_mag[8] = Modelica.ComplexMath.'abs'(led_driver.loadBase.v[1:8]);
 Real led_driver.V_arg[8] = Modelica.ComplexMath.arg(led_driver.loadBase.v[1:8], 0);
 Real led_driver.S(start = 1) "Apparent power at fundamental";
 Real led_driver.Q(start = 1) "Imaginary power at fundamental";
 parameter Real led_driver.mdlMag[16] = {1.0, 0.8904, 0.7418, 0.5673, 0.3937, 0.2526, 0.1565, 0.1086, 0.1028, 0.1117, 0.1074, 0.0875, 0.0578, 0.0366, 0.0289, 0.0275} "Harmonic magnitudes (normalized wrt fundamental)" /* { 1.0, 0.8904, 0.7418, 0.5673, 0.3937, 0.2526, 0.1565, 0.1086, 0.1028, 0.1117, 0.1074, 0.0875, 0.0578, 0.0366, 0.0289, 0.0275 } */;
 parameter Real led_driver.mdlArg[16] = {0.3876, -2.179, 1.6303, -0.7953, 3.1273, 0.8908, -1.1864, -2.9993, 1.4699, -0.6068, -2.8447, 1.1602, -1.0324, -2.9612, 1.5582, -0.3532} "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* { 0.3876, -2.179, 1.6303, -0.7953, 3.1273, 0.8908, -1.1864, -2.9993, 1.4699, -0.6068, -2.8447, 1.1602, -1.0324, -2.9612, 1.5582, -0.3532 } */;
 Real led_driver.argS "Phase angle for fundamental apparent power";
 Real led_driver.magScale = Modelica.ComplexMath.'abs'(led_driver.loadBase.i[1]);
 Real led_driver.argAdj[7] = led_driver.mdlArg[2:8] - Modelica.ComplexMath.arg(led_driver.loadBase.v[1], 0) .* systemDef.hrms[2:8];
 Complex led_driver.a[7] = {Complex.'constructor'.fromReal(cos(led_driver.argAdj[1]), sin(led_driver.argAdj[1])), Complex.'constructor'.fromReal(cos(led_driver.argAdj[2]), sin(led_driver.argAdj[2])), Complex.'constructor'.fromReal(cos(led_driver.argAdj[3]), sin(led_driver.argAdj[3])), Complex.'constructor'.fromReal(cos(led_driver.argAdj[4]), sin(led_driver.argAdj[4])), Complex.'constructor'.fromReal(cos(led_driver.argAdj[5]), sin(led_driver.argAdj[5])), Complex.'constructor'.fromReal(cos(led_driver.argAdj[6]), sin(led_driver.argAdj[6])), Complex.'constructor'.fromReal(cos(led_driver.argAdj[7]), sin(led_driver.argAdj[7]))};
 Real led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[2:8];
 discrete HPF.Utilities.ComponentProperties load.properties(ComponentType = "DC_Load");
 Modelica.Blocks.Interfaces.RealInput load.u(start = 0) "Input Power";
 Modelica.SIunits.ElectricPotential load.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent load.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential load.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent load.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential load.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent load.n.i "Current flowing into the pin";
 output Modelica.Blocks.Interfaces.RealOutput y;
 input Modelica.Blocks.Interfaces.RealInput u;
initial equation
 algorithm
;
algorithm
equation
 if Connections.isRoot(ground.pin.reference) then
  ground.pin.reference.theta = 0;
 end if;
 ground.pin.v[1:8] = {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)};
 ground2.p.v = 0;
 v.omega = 2 * 3.141592653589793 * systemDef.fFund;
 v.v[1:8].re = {120.0, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001} .* cos({0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0});
 v.v[1:8].im = {120.0, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001} .* sin({0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0});
 v.pin_p.reference.theta = v.pin_n.reference.theta;
 v.omega = der(v.pin_p.reference.theta);
 v.v[1:8] = {Complex.'-'.subtract(v.pin_p.v[1], v.pin_n.v[1]), Complex.'-'.subtract(v.pin_p.v[2], v.pin_n.v[2]), Complex.'-'.subtract(v.pin_p.v[3], v.pin_n.v[3]), Complex.'-'.subtract(v.pin_p.v[4], v.pin_n.v[4]), Complex.'-'.subtract(v.pin_p.v[5], v.pin_n.v[5]), Complex.'-'.subtract(v.pin_p.v[6], v.pin_n.v[6]), Complex.'-'.subtract(v.pin_p.v[7], v.pin_n.v[7]), Complex.'-'.subtract(v.pin_p.v[8], v.pin_n.v[8])};
 v.i[1:8].re = v.pin_p.iRe[1:8];
 v.i[1:8].im = v.pin_p.iIm[1:8];
 v.pin_p.iRe[1:8] + v.pin_n.iRe[1:8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 v.pin_p.iIm[1:8] + v.pin_n.iIm[1:8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 z.v[1:8].re = z.z.re .* z.i[1:8].re - z.z.im .* systemDef.hrms[1:8] .* z.i[1:8].im;
 z.v[1:8].im = z.z.re .* z.i[1:8].im + z.z.im .* systemDef.hrms[1:8] .* z.i[1:8].re;
 z.pin_p.reference.theta = z.pin_n.reference.theta;
 z.omega = der(z.pin_p.reference.theta);
 z.v[1:8] = {Complex.'-'.subtract(z.pin_p.v[1], z.pin_n.v[1]), Complex.'-'.subtract(z.pin_p.v[2], z.pin_n.v[2]), Complex.'-'.subtract(z.pin_p.v[3], z.pin_n.v[3]), Complex.'-'.subtract(z.pin_p.v[4], z.pin_n.v[4]), Complex.'-'.subtract(z.pin_p.v[5], z.pin_n.v[5]), Complex.'-'.subtract(z.pin_p.v[6], z.pin_n.v[6]), Complex.'-'.subtract(z.pin_p.v[7], z.pin_n.v[7]), Complex.'-'.subtract(z.pin_p.v[8], z.pin_n.v[8])};
 z.i[1:8].re = z.pin_p.iRe[1:8];
 z.i[1:8].im = z.pin_p.iIm[1:8];
 z.pin_p.iRe[1:8] + z.pin_n.iRe[1:8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 z.pin_p.iIm[1:8] + z.pin_n.iIm[1:8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 led_driver.argS = - led_driver.mdlArg[1];
 led_driver.P = led_driver.S * cos(led_driver.argS);
 led_driver.Q = led_driver.S * sin(led_driver.argS);
 Complex.'constructor'.fromReal(led_driver.P, led_driver.Q) = Complex.'*'.multiply(led_driver.loadBase.v[1], Modelica.ComplexMath.conj(led_driver.loadBase.i[1]));
 led_driver.loadBase.i[2:1:8] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(led_driver.c[1], 0), led_driver.a[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(led_driver.c[2], 0), led_driver.a[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(led_driver.c[3], 0), led_driver.a[3]), Complex.'*'.multiply(Complex.'constructor'.fromReal(led_driver.c[4], 0), led_driver.a[4]), Complex.'*'.multiply(Complex.'constructor'.fromReal(led_driver.c[5], 0), led_driver.a[5]), Complex.'*'.multiply(Complex.'constructor'.fromReal(led_driver.c[6], 0), led_driver.a[6]), Complex.'*'.multiply(Complex.'constructor'.fromReal(led_driver.c[7], 0), led_driver.a[7])};
 led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency;
algorithm
equation
 led_driver.vDC.v = led_driver.vDC.V;
 led_driver.vDC.v = led_driver.vDC.p.v - led_driver.vDC.n.v;
 0 = led_driver.vDC.p.i + led_driver.vDC.n.i;
 led_driver.vDC.i = led_driver.vDC.p.i;
 led_driver.loadBase.pin_p.reference.theta = led_driver.loadBase.pin_n.reference.theta;
 led_driver.loadBase.omega = der(led_driver.loadBase.pin_p.reference.theta);
 led_driver.loadBase.v[1:8] = {Complex.'-'.subtract(led_driver.loadBase.pin_p.v[1], led_driver.loadBase.pin_n.v[1]), Complex.'-'.subtract(led_driver.loadBase.pin_p.v[2], led_driver.loadBase.pin_n.v[2]), Complex.'-'.subtract(led_driver.loadBase.pin_p.v[3], led_driver.loadBase.pin_n.v[3]), Complex.'-'.subtract(led_driver.loadBase.pin_p.v[4], led_driver.loadBase.pin_n.v[4]), Complex.'-'.subtract(led_driver.loadBase.pin_p.v[5], led_driver.loadBase.pin_n.v[5]), Complex.'-'.subtract(led_driver.loadBase.pin_p.v[6], led_driver.loadBase.pin_n.v[6]), Complex.'-'.subtract(led_driver.loadBase.pin_p.v[7], led_driver.loadBase.pin_n.v[7]), Complex.'-'.subtract(led_driver.loadBase.pin_p.v[8], led_driver.loadBase.pin_n.v[8])};
 led_driver.loadBase.i[1:8].re = led_driver.loadBase.pin_p.iRe[1:8];
 led_driver.loadBase.i[1:8].im = led_driver.loadBase.pin_p.iIm[1:8];
 led_driver.loadBase.pin_p.iRe[1:8] + led_driver.loadBase.pin_n.iRe[1:8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 led_driver.loadBase.pin_p.iIm[1:8] + led_driver.loadBase.pin_n.iIm[1:8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 load.i = load.u / load.v;
 load.v = load.p.v - load.n.v;
 0 = load.p.i + load.n.i;
 load.i = load.p.i;
 v.pin_p.iIm[1:8] + z.pin_p.iIm[1:8] = zeros(8);
 v.pin_p.iRe[1:8] + z.pin_p.iRe[1:8] = zeros(8);
 v.pin_p.v[1].im = z.pin_p.v[1].im;
 v.pin_p.v[1].re = z.pin_p.v[1].re;
 v.pin_p.v[2].im = z.pin_p.v[2].im;
 v.pin_p.v[2].re = z.pin_p.v[2].re;
 v.pin_p.v[3].im = z.pin_p.v[3].im;
 v.pin_p.v[3].re = z.pin_p.v[3].re;
 v.pin_p.v[4].im = z.pin_p.v[4].im;
 v.pin_p.v[4].re = z.pin_p.v[4].re;
 v.pin_p.v[5].im = z.pin_p.v[5].im;
 v.pin_p.v[5].re = z.pin_p.v[5].re;
 v.pin_p.v[6].im = z.pin_p.v[6].im;
 v.pin_p.v[6].re = z.pin_p.v[6].re;
 v.pin_p.v[7].im = z.pin_p.v[7].im;
 v.pin_p.v[7].re = z.pin_p.v[7].re;
 v.pin_p.v[8].im = z.pin_p.v[8].im;
 v.pin_p.v[8].re = z.pin_p.v[8].re;
 ground.pin.iIm[1:8] + led_driver.hPin_N.iIm[1:8] + v.pin_n.iIm[1:8] = zeros(8);
 ground.pin.iRe[1:8] + led_driver.hPin_N.iRe[1:8] + v.pin_n.iRe[1:8] = zeros(8);
 ground.pin.v[1].im = led_driver.hPin_N.v[1].im;
 led_driver.hPin_N.v[1].im = v.pin_n.v[1].im;
 ground.pin.v[1].re = led_driver.hPin_N.v[1].re;
 led_driver.hPin_N.v[1].re = v.pin_n.v[1].re;
 ground.pin.v[2].im = led_driver.hPin_N.v[2].im;
 led_driver.hPin_N.v[2].im = v.pin_n.v[2].im;
 ground.pin.v[2].re = led_driver.hPin_N.v[2].re;
 led_driver.hPin_N.v[2].re = v.pin_n.v[2].re;
 ground.pin.v[3].im = led_driver.hPin_N.v[3].im;
 led_driver.hPin_N.v[3].im = v.pin_n.v[3].im;
 ground.pin.v[3].re = led_driver.hPin_N.v[3].re;
 led_driver.hPin_N.v[3].re = v.pin_n.v[3].re;
 ground.pin.v[4].im = led_driver.hPin_N.v[4].im;
 led_driver.hPin_N.v[4].im = v.pin_n.v[4].im;
 ground.pin.v[4].re = led_driver.hPin_N.v[4].re;
 led_driver.hPin_N.v[4].re = v.pin_n.v[4].re;
 ground.pin.v[5].im = led_driver.hPin_N.v[5].im;
 led_driver.hPin_N.v[5].im = v.pin_n.v[5].im;
 ground.pin.v[5].re = led_driver.hPin_N.v[5].re;
 led_driver.hPin_N.v[5].re = v.pin_n.v[5].re;
 ground.pin.v[6].im = led_driver.hPin_N.v[6].im;
 led_driver.hPin_N.v[6].im = v.pin_n.v[6].im;
 ground.pin.v[6].re = led_driver.hPin_N.v[6].re;
 led_driver.hPin_N.v[6].re = v.pin_n.v[6].re;
 ground.pin.v[7].im = led_driver.hPin_N.v[7].im;
 led_driver.hPin_N.v[7].im = v.pin_n.v[7].im;
 ground.pin.v[7].re = led_driver.hPin_N.v[7].re;
 led_driver.hPin_N.v[7].re = v.pin_n.v[7].re;
 ground.pin.v[8].im = led_driver.hPin_N.v[8].im;
 led_driver.hPin_N.v[8].im = v.pin_n.v[8].im;
 ground.pin.v[8].re = led_driver.hPin_N.v[8].re;
 led_driver.hPin_N.v[8].re = v.pin_n.v[8].re;
 ground2.p.i + led_driver.pin_n.i + load.n.i = 0.0;
 ground2.p.v = led_driver.pin_n.v;
 led_driver.pin_n.v = load.n.v;
 led_driver.pin_p.i + load.p.i = 0.0;
 led_driver.pin_p.v = load.p.v;
 led_driver.PLoss = y;
 led_driver.hPin_P.iIm[1:8] + z.pin_n.iIm[1:8] = zeros(8);
 led_driver.hPin_P.iRe[1:8] + z.pin_n.iRe[1:8] = zeros(8);
 led_driver.hPin_P.v[1].im = z.pin_n.v[1].im;
 led_driver.hPin_P.v[1].re = z.pin_n.v[1].re;
 led_driver.hPin_P.v[2].im = z.pin_n.v[2].im;
 led_driver.hPin_P.v[2].re = z.pin_n.v[2].re;
 led_driver.hPin_P.v[3].im = z.pin_n.v[3].im;
 led_driver.hPin_P.v[3].re = z.pin_n.v[3].re;
 led_driver.hPin_P.v[4].im = z.pin_n.v[4].im;
 led_driver.hPin_P.v[4].re = z.pin_n.v[4].re;
 led_driver.hPin_P.v[5].im = z.pin_n.v[5].im;
 led_driver.hPin_P.v[5].re = z.pin_n.v[5].re;
 led_driver.hPin_P.v[6].im = z.pin_n.v[6].im;
 led_driver.hPin_P.v[6].re = z.pin_n.v[6].re;
 led_driver.hPin_P.v[7].im = z.pin_n.v[7].im;
 led_driver.hPin_P.v[7].re = z.pin_n.v[7].re;
 led_driver.hPin_P.v[8].im = z.pin_n.v[8].im;
 led_driver.hPin_P.v[8].re = z.pin_n.v[8].re;
 load.u = u;
 - led_driver.pin_p.i + led_driver.vDC.p.i = 0.0;
 led_driver.pin_p.v = led_driver.vDC.p.v;
 - led_driver.pin_n.i + led_driver.vDC.n.i = 0.0;
 led_driver.pin_n.v = led_driver.vDC.n.v;
 - led_driver.hPin_P.iIm[1:8] + led_driver.loadBase.pin_p.iIm[1:8] = zeros(8);
 - led_driver.hPin_P.iRe[1:8] + led_driver.loadBase.pin_p.iRe[1:8] = zeros(8);
 led_driver.hPin_P.v[1].im = led_driver.loadBase.pin_p.v[1].im;
 led_driver.hPin_P.v[1].re = led_driver.loadBase.pin_p.v[1].re;
 led_driver.hPin_P.v[2].im = led_driver.loadBase.pin_p.v[2].im;
 led_driver.hPin_P.v[2].re = led_driver.loadBase.pin_p.v[2].re;
 led_driver.hPin_P.v[3].im = led_driver.loadBase.pin_p.v[3].im;
 led_driver.hPin_P.v[3].re = led_driver.loadBase.pin_p.v[3].re;
 led_driver.hPin_P.v[4].im = led_driver.loadBase.pin_p.v[4].im;
 led_driver.hPin_P.v[4].re = led_driver.loadBase.pin_p.v[4].re;
 led_driver.hPin_P.v[5].im = led_driver.loadBase.pin_p.v[5].im;
 led_driver.hPin_P.v[5].re = led_driver.loadBase.pin_p.v[5].re;
 led_driver.hPin_P.v[6].im = led_driver.loadBase.pin_p.v[6].im;
 led_driver.hPin_P.v[6].re = led_driver.loadBase.pin_p.v[6].re;
 led_driver.hPin_P.v[7].im = led_driver.loadBase.pin_p.v[7].im;
 led_driver.hPin_P.v[7].re = led_driver.loadBase.pin_p.v[7].re;
 led_driver.hPin_P.v[8].im = led_driver.loadBase.pin_p.v[8].im;
 led_driver.hPin_P.v[8].re = led_driver.loadBase.pin_p.v[8].re;
 - led_driver.hPin_N.iIm[1:8] + led_driver.loadBase.pin_n.iIm[1:8] = zeros(8);
 - led_driver.hPin_N.iRe[1:8] + led_driver.loadBase.pin_n.iRe[1:8] = zeros(8);
 led_driver.hPin_N.v[1].im = led_driver.loadBase.pin_n.v[1].im;
 led_driver.hPin_N.v[1].re = led_driver.loadBase.pin_n.v[1].re;
 led_driver.hPin_N.v[2].im = led_driver.loadBase.pin_n.v[2].im;
 led_driver.hPin_N.v[2].re = led_driver.loadBase.pin_n.v[2].re;
 led_driver.hPin_N.v[3].im = led_driver.loadBase.pin_n.v[3].im;
 led_driver.hPin_N.v[3].re = led_driver.loadBase.pin_n.v[3].re;
 led_driver.hPin_N.v[4].im = led_driver.loadBase.pin_n.v[4].im;
 led_driver.hPin_N.v[4].re = led_driver.loadBase.pin_n.v[4].re;
 led_driver.hPin_N.v[5].im = led_driver.loadBase.pin_n.v[5].im;
 led_driver.hPin_N.v[5].re = led_driver.loadBase.pin_n.v[5].re;
 led_driver.hPin_N.v[6].im = led_driver.loadBase.pin_n.v[6].im;
 led_driver.hPin_N.v[6].re = led_driver.loadBase.pin_n.v[6].re;
 led_driver.hPin_N.v[7].im = led_driver.loadBase.pin_n.v[7].im;
 led_driver.hPin_N.v[7].re = led_driver.loadBase.pin_n.v[7].re;
 led_driver.hPin_N.v[8].im = led_driver.loadBase.pin_n.v[8].im;
 led_driver.hPin_N.v[8].re = led_driver.loadBase.pin_n.v[8].re;
 v.pin_p.reference.theta = z.pin_p.reference.theta;
 led_driver.hPin_P.reference.theta = z.pin_n.reference.theta;
 ground.pin.reference.theta = led_driver.hPin_N.reference.theta;
 led_driver.hPin_N.reference.theta = v.pin_n.reference.theta;
 led_driver.hPin_P.reference.theta = led_driver.loadBase.pin_p.reference.theta;
 HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(led_driver.loadBase.pin_n.reference, led_driver.hPin_N.reference);

public
 function Modelica.ComplexMath.real
  input Complex c;
  output Real r;
 algorithm
  r := c.re;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.real;

 function Modelica.ComplexMath.conj
  input Complex c1;
  output Complex c2;
 algorithm
  (c2) := Complex.'constructor'.fromReal(c1.re, - c1.im);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.conj;

 function Complex.'constructor'.fromReal
  input Real re;
  input Real im;
  output Complex result;
 algorithm
  result.re := re;
  result.im := im;
  return;
 annotation(Inline = true);
 end Complex.'constructor'.fromReal;

 function Complex.'*'.multiply
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re * c2.re - c1.im * c2.im, c1.re * c2.im + c1.im * c2.re);
  return;
 annotation(Inline = true);
 end Complex.'*'.multiply;

 function Modelica.ComplexMath.'abs'
  input Complex c;
  output Real result;
 algorithm
  result := (c.re ^ 2 + c.im ^ 2) ^ 0.5;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.'abs';

 function Modelica.ComplexMath.arg
  input Complex c;
  input Real phi0;
  output Real phi;
 algorithm
  phi := Modelica.Math.atan3(c.im, c.re, phi0);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.arg;

 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function Complex.'-'.subtract
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re - c2.re, c1.im - c2.im);
  return;
 annotation(Inline = true);
 end Complex.'-'.subtract;

 function Complex.'+'
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re + c2.re, c1.im + c2.im);
  return;
 annotation(Inline = true);
 end Complex.'+';

 function HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint;

 record HPF.Utilities.ComponentProperties
  discrete String ComponentType "Type of the component";
 end HPF.Utilities.ComponentProperties;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 record Complex
  Real re "Real part of complex number";
  Real im "Imaginary part of complex number";
 end Complex;

 type Modelica.SIunits.Frequency = Real(final quantity = "Frequency",final unit = "Hz");
 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
 type Modelica.Blocks.Interfaces.RealOutput = Real;
 type Modelica.Blocks.Interfaces.RealInput = Real;
end HPF.Examples.Demo;

Applying transformation: enableIfEquationElimination...
Applying transformation: genInitArrayStatements...
Applying transformation: scalarize...
Applying transformation: MakeReinitedVarsStates...
Applying transformation: enableIfEquationElimination...
Applying transformation: enableStreamsRewrite...
Applying transformation: ExtractEventGeneratingExpressions...
Applying transformation: GenerateEventIndicators...
Applying transformation: convertWhenToIf...
Applying transformation: FunctionInliningIfSet...
Applying transformation: setFDerivativeVariables...
Applying transformation: addFPreVariables...
Applying transformation: enableIfEquationRewrite...
Applying transformation: aliasEliminationIfSet...
Applying transformation: variabilityPropagationIfSet...
Applying transformation: aliasEliminationIfSet...
Applying transformation: eliminateLinearEquations...
Applying transformation: aliasEliminationIfSet...
Applying transformation: enableExpandedInStreamRewrite...
Applying transformation: evaluateAsserts...
Applying transformation: enableSemiLinearRewrite...
Applying transformation: eliminateEqualSwitches...
Applying transformation: genInitialEquations...
Applying transformation: setFDerivativeVariablesPreBLT...
Applying transformation: indexReduction...
Applying transformation: LateFunctionInliningIfSet...
Applying transformation: commonSubexpressionEliminationIfSet...
Applying transformation: addFPreVariables...
Applying transformation: aliasEliminationIfSet...
Applying transformation: eliminateLinearEquations...
Applying transformation: sortDependentParameters...
Applying transformation: addRuntimeOptionParameters...
Applying transformation: computeMatchingsAndBLT...
Flat tree before matching and BLT:
fclass HPF.Examples.Demo
 parameter Integer systemDef.hrms[1] = 1 "Harmonics to simulate" /* 1 */;
 parameter Integer systemDef.hrms[2] = 3 "Harmonics to simulate" /* 3 */;
 parameter Integer systemDef.hrms[3] = 5 "Harmonics to simulate" /* 5 */;
 parameter Integer systemDef.hrms[4] = 7 "Harmonics to simulate" /* 7 */;
 parameter Integer systemDef.hrms[5] = 9 "Harmonics to simulate" /* 9 */;
 parameter Integer systemDef.hrms[6] = 11 "Harmonics to simulate" /* 11 */;
 parameter Integer systemDef.hrms[7] = 13 "Harmonics to simulate" /* 13 */;
 parameter Integer systemDef.hrms[8] = 15 "Harmonics to simulate" /* 15 */;
 structural parameter Integer systemDef.numHrm = 8 "Number of harmonics. (Automatically generated from hrms.)" /* 8 */;
 parameter Modelica.SIunits.Frequency systemDef.fFund = 60 "Fundamental frequency (Hz)" /* 60 */;
 parameter Modelica.SIunits.Frequency systemDef.fs = 5000.0 "Sampling frequency (Hz)" /* 5000.0 */;
 parameter Integer systemDef.N "Size of FFT";
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 constant String ground.properties.ComponentType = "Ground" "Type of the component";
 Real ground.pin.iIm[1];
 Real ground.pin.iIm[2];
 Real ground.pin.iIm[3];
 Real ground.pin.iIm[4];
 Real ground.pin.iIm[5];
 Real ground.pin.iIm[6];
 Real ground.pin.iIm[7];
 Real ground.pin.iIm[8];
 Real ground.pin.iRe[1];
 Real ground.pin.iRe[2];
 Real ground.pin.iRe[3];
 Real ground.pin.iRe[4];
 Real ground.pin.iRe[5];
 Real ground.pin.iRe[6];
 Real ground.pin.iRe[7];
 Real ground.pin.iRe[8];
 Modelica.SIunits.ElectricCurrent ground2.p.i "Current flowing into the pin";
 constant String v.properties.ComponentType = "VoltageSource" "Type of the component";
 structural parameter Real v.vMag[1] = 120 "Voltage Magnitude (Volts rms)" /* 120 */;
 structural parameter Real v.vArg[1] = 0 "Voltage angle (rad)" /* 0 */;
 Real v.P1;
 Real v.iMag[1];
 Real v.iMag[2];
 Real v.iMag[3];
 Real v.iMag[4];
 Real v.iMag[5];
 Real v.iMag[6];
 Real v.iMag[7];
 Real v.iMag[8];
 Real v.iArg[1];
 Real v.iArg[2];
 Real v.iArg[3];
 Real v.iArg[4];
 Real v.iArg[5];
 Real v.iArg[6];
 Real v.iArg[7];
 Real v.iArg[8];
 Modelica.SIunits.Angle v.theta(start = 0);
 constant Real v.v[1].re(start = 100) = 120.0 "Real part of complex number";
 constant Real v.v[1].im(start = 0) = 0.0 "Imaginary part of complex number";
 constant Real v.v[2].re(start = 100) = 0.001 "Real part of complex number";
 Real v.i[1].re(start = 0) "Real part of complex number";
 Real v.i[1].im(start = 0) "Imaginary part of complex number";
 Real v.i[2].re(start = 0) "Real part of complex number";
 Real v.i[2].im(start = 0) "Imaginary part of complex number";
 Real v.i[3].re(start = 0) "Real part of complex number";
 Real v.i[3].im(start = 0) "Imaginary part of complex number";
 Real v.i[4].re(start = 0) "Real part of complex number";
 Real v.i[4].im(start = 0) "Imaginary part of complex number";
 Real v.i[5].re(start = 0) "Real part of complex number";
 Real v.i[5].im(start = 0) "Imaginary part of complex number";
 Real v.i[6].re(start = 0) "Real part of complex number";
 Real v.i[6].im(start = 0) "Imaginary part of complex number";
 Real v.i[7].re(start = 0) "Real part of complex number";
 Real v.i[7].im(start = 0) "Imaginary part of complex number";
 Real v.i[8].re(start = 0) "Real part of complex number";
 Real v.i[8].im(start = 0) "Imaginary part of complex number";
 Real v.omega;
 constant String z.properties.ComponentType = "Impedance" "Type of the component";
 parameter Real z.z.re(start = 1) = 0.5 "Real part of complex number" /* 0.5 */;
 parameter Real z.z.im(start = 0) = 0.02 "Imaginary part of complex number" /* 0.02 */;
 Real z.vFundAbs;
 Real z.vFundArg;
 Real z.iFundAbs;
 Real z.iFundArg;
 Real z.v[1].re(start = 100) "Real part of complex number";
 Real z.v[1].im(start = 0) "Imaginary part of complex number";
 Real z.v[2].re(start = 100) "Real part of complex number";
 Real z.v[2].im(start = 0) "Imaginary part of complex number";
 Real z.v[3].re(start = 100) "Real part of complex number";
 Real z.v[3].im(start = 0) "Imaginary part of complex number";
 Real z.v[4].re(start = 100) "Real part of complex number";
 Real z.v[4].im(start = 0) "Imaginary part of complex number";
 Real z.v[5].re(start = 100) "Real part of complex number";
 Real z.v[5].im(start = 0) "Imaginary part of complex number";
 Real z.v[6].re(start = 100) "Real part of complex number";
 Real z.v[6].im(start = 0) "Imaginary part of complex number";
 Real z.v[7].re(start = 100) "Real part of complex number";
 Real z.v[7].im(start = 0) "Imaginary part of complex number";
 Real z.v[8].re(start = 100) "Real part of complex number";
 Real z.v[8].im(start = 0) "Imaginary part of complex number";
 Real z.omega;
 constant String led_driver.properties.ComponentType = "NonlinearLoad" "Type of the component";
 Modelica.Blocks.Interfaces.RealOutput led_driver.PLoss;
 parameter Real led_driver.V_Rect(start = 0) = 24 "Rectifier DC output" /* 24 */;
 parameter Real led_driver.efficiency(start = 1) = 0.95 "Rectifier efficiency (replace with efficiency model or curve)" /* 0.95 */;
 parameter Modelica.SIunits.ElectricPotential led_driver.vDC.V(start = 1) "Value of constant voltage";
 Real led_driver.loadBase.v[1].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[2].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[3].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[4].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[5].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[6].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[7].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[8].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.omega;
 Real led_driver.P;
 Real led_driver.I_mag[1];
 Real led_driver.I_mag[2];
 Real led_driver.I_mag[3];
 Real led_driver.I_mag[4];
 Real led_driver.I_mag[5];
 Real led_driver.I_mag[6];
 Real led_driver.I_mag[7];
 Real led_driver.I_mag[8];
 Real led_driver.I_arg[2];
 Real led_driver.I_arg[3];
 Real led_driver.I_arg[4];
 Real led_driver.I_arg[5];
 Real led_driver.I_arg[6];
 Real led_driver.I_arg[7];
 Real led_driver.I_arg[8];
 Real led_driver.V_mag[1];
 Real led_driver.V_mag[2];
 Real led_driver.V_mag[3];
 Real led_driver.V_mag[4];
 Real led_driver.V_mag[5];
 Real led_driver.V_mag[6];
 Real led_driver.V_mag[7];
 Real led_driver.V_mag[8];
 Real led_driver.V_arg[1];
 Real led_driver.V_arg[2];
 Real led_driver.V_arg[3];
 Real led_driver.V_arg[4];
 Real led_driver.V_arg[5];
 Real led_driver.V_arg[6];
 Real led_driver.V_arg[7];
 Real led_driver.V_arg[8];
 Real led_driver.S(start = 1) "Apparent power at fundamental";
 Real led_driver.Q(start = 1) "Imaginary power at fundamental";
 parameter Real led_driver.mdlMag[1] = 1.0 "Harmonic magnitudes (normalized wrt fundamental)" /* 1.0 */;
 parameter Real led_driver.mdlMag[2] = 0.8904 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.8904 */;
 parameter Real led_driver.mdlMag[3] = 0.7418 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.7418 */;
 parameter Real led_driver.mdlMag[4] = 0.5673 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.5673 */;
 parameter Real led_driver.mdlMag[5] = 0.3937 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.3937 */;
 parameter Real led_driver.mdlMag[6] = 0.2526 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.2526 */;
 parameter Real led_driver.mdlMag[7] = 0.1565 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1565 */;
 parameter Real led_driver.mdlMag[8] = 0.1086 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1086 */;
 parameter Real led_driver.mdlMag[9] = 0.1028 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1028 */;
 parameter Real led_driver.mdlMag[10] = 0.1117 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1117 */;
 parameter Real led_driver.mdlMag[11] = 0.1074 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1074 */;
 parameter Real led_driver.mdlMag[12] = 0.0875 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0875 */;
 parameter Real led_driver.mdlMag[13] = 0.0578 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0578 */;
 parameter Real led_driver.mdlMag[14] = 0.0366 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0366 */;
 parameter Real led_driver.mdlMag[15] = 0.0289 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0289 */;
 parameter Real led_driver.mdlMag[16] = 0.0275 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0275 */;
 parameter Real led_driver.mdlArg[1] = 0.3876 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 0.3876 */;
 parameter Real led_driver.mdlArg[2] = -2.179 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.179 */;
 parameter Real led_driver.mdlArg[3] = 1.6303 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.6303 */;
 parameter Real led_driver.mdlArg[4] = -0.7953 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -0.7953 */;
 parameter Real led_driver.mdlArg[5] = 3.1273 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 3.1273 */;
 parameter Real led_driver.mdlArg[6] = 0.8908 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 0.8908 */;
 parameter Real led_driver.mdlArg[7] = -1.1864 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -1.1864 */;
 parameter Real led_driver.mdlArg[8] = -2.9993 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.9993 */;
 parameter Real led_driver.mdlArg[9] = 1.4699 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.4699 */;
 parameter Real led_driver.mdlArg[10] = -0.6068 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -0.6068 */;
 parameter Real led_driver.mdlArg[11] = -2.8447 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.8447 */;
 parameter Real led_driver.mdlArg[12] = 1.1602 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.1602 */;
 parameter Real led_driver.mdlArg[13] = -1.0324 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -1.0324 */;
 parameter Real led_driver.mdlArg[14] = -2.9612 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.9612 */;
 parameter Real led_driver.mdlArg[15] = 1.5582 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.5582 */;
 parameter Real led_driver.mdlArg[16] = -0.3532 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -0.3532 */;
 parameter Real led_driver.argS "Phase angle for fundamental apparent power";
 Real led_driver.magScale;
 Real led_driver.argAdj[1];
 Real led_driver.argAdj[2];
 Real led_driver.argAdj[3];
 Real led_driver.argAdj[4];
 Real led_driver.argAdj[5];
 Real led_driver.argAdj[6];
 Real led_driver.argAdj[7];
 Real led_driver.a[1].re "Real part of complex number";
 Real led_driver.a[1].im "Imaginary part of complex number";
 Real led_driver.a[2].re "Real part of complex number";
 Real led_driver.a[2].im "Imaginary part of complex number";
 Real led_driver.a[3].re "Real part of complex number";
 Real led_driver.a[3].im "Imaginary part of complex number";
 Real led_driver.a[4].re "Real part of complex number";
 Real led_driver.a[4].im "Imaginary part of complex number";
 Real led_driver.a[5].re "Real part of complex number";
 Real led_driver.a[5].im "Imaginary part of complex number";
 Real led_driver.a[6].re "Real part of complex number";
 Real led_driver.a[6].im "Imaginary part of complex number";
 Real led_driver.a[7].re "Real part of complex number";
 Real led_driver.a[7].im "Imaginary part of complex number";
 Real led_driver.c[1];
 Real led_driver.c[2];
 Real led_driver.c[3];
 Real led_driver.c[4];
 Real led_driver.c[5];
 Real led_driver.c[6];
 Real led_driver.c[7];
 constant String load.properties.ComponentType = "DC_Load" "Type of the component";
 Modelica.Blocks.Interfaces.RealInput load.u(start = 0) "Input Power";
 Modelica.SIunits.ElectricCurrent load.i "Current flowing from pin p to pin n";
 output Modelica.Blocks.Interfaces.RealOutput y;
 input Modelica.Blocks.Interfaces.RealInput u;
initial equation
 algorithm
;
parameter equation
 systemDef.N = integer(floor(systemDef.fs / systemDef.fFund));
 led_driver.vDC.V = led_driver.V_Rect;
 led_driver.argS = - led_driver.mdlArg[1];
algorithm
equation
 der(v.theta) = 6.283185307179586 * systemDef.fFund;
 v.omega = der(v.theta);
 z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im);
 z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im);
 z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im);
 z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im);
 z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im);
 z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im);
 z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im);
 z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im);
 z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re);
 z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re);
 z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re);
 z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re);
 z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re);
 z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re);
 z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re);
 z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re);
 z.omega = der(v.theta);
 z.v[1].re = 120.0 - led_driver.loadBase.v[1].re;
 z.v[2].re = 0.001 - led_driver.loadBase.v[2].re;
 z.v[3].re = 0.001 - led_driver.loadBase.v[3].re;
 z.v[4].re = 0.001 - led_driver.loadBase.v[4].re;
 z.v[5].re = 0.001 - led_driver.loadBase.v[5].re;
 z.v[6].re = 0.001 - led_driver.loadBase.v[6].re;
 z.v[7].re = 0.001 - led_driver.loadBase.v[7].re;
 z.v[8].re = 0.001 - led_driver.loadBase.v[8].re;
 led_driver.P = led_driver.S * cos(led_driver.argS);
 led_driver.Q = led_driver.S * sin(led_driver.argS);
 led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im;
 led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re);
 - v.i[2].re = led_driver.c[1] * led_driver.a[1].re;
 - v.i[2].im = led_driver.c[1] * led_driver.a[1].im;
 - v.i[3].re = led_driver.c[2] * led_driver.a[2].re;
 - v.i[3].im = led_driver.c[2] * led_driver.a[2].im;
 - v.i[4].re = led_driver.c[3] * led_driver.a[3].re;
 - v.i[4].im = led_driver.c[3] * led_driver.a[3].im;
 - v.i[5].re = led_driver.c[4] * led_driver.a[4].re;
 - v.i[5].im = led_driver.c[4] * led_driver.a[4].im;
 - v.i[6].re = led_driver.c[5] * led_driver.a[5].re;
 - v.i[6].im = led_driver.c[5] * led_driver.a[5].im;
 - v.i[7].re = led_driver.c[6] * led_driver.a[6].re;
 - v.i[7].im = led_driver.c[6] * led_driver.a[6].im;
 - v.i[8].re = led_driver.c[7] * led_driver.a[7].re;
 - v.i[8].im = led_driver.c[7] * led_driver.a[7].im;
 led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency;
algorithm
equation
 led_driver.loadBase.omega = der(v.theta);
 load.i = load.u / led_driver.vDC.V;
 ground.pin.iIm[1] = 0;
 ground.pin.iIm[2] = 0;
 ground.pin.iIm[3] = 0;
 ground.pin.iIm[4] = 0;
 ground.pin.iIm[5] = 0;
 ground.pin.iIm[6] = 0;
 ground.pin.iIm[7] = 0;
 ground.pin.iIm[8] = 0;
 ground.pin.iRe[1] = 0;
 ground.pin.iRe[2] = 0;
 ground.pin.iRe[3] = 0;
 ground.pin.iRe[4] = 0;
 ground.pin.iRe[5] = 0;
 ground.pin.iRe[6] = 0;
 ground.pin.iRe[7] = 0;
 ground.pin.iRe[8] = 0;
 ground2.p.i = 0;
 led_driver.PLoss = y;
 load.u = u;
 HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta));
 v.P1 = 120.0 * v.i[1].re;
 v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5;
 v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5;
 v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5;
 v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5;
 v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5;
 v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5;
 v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5;
 v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5;
 v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0);
 v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0);
 v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0);
 v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0);
 v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0);
 v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0);
 v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0);
 v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0);
 z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5;
 z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0);
 z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 led_driver.P = abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency);
 led_driver.I_mag[1] = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 led_driver.I_mag[2] = ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5;
 led_driver.I_mag[3] = ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5;
 led_driver.I_mag[4] = ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5;
 led_driver.I_mag[5] = ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5;
 led_driver.I_mag[6] = ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5;
 led_driver.I_mag[7] = ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5;
 led_driver.I_mag[8] = ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5;
 led_driver.I_arg[2] = Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0);
 led_driver.I_arg[3] = Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0);
 led_driver.I_arg[4] = Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0);
 led_driver.I_arg[5] = Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0);
 led_driver.I_arg[6] = Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0);
 led_driver.I_arg[7] = Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0);
 led_driver.I_arg[8] = Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0);
 led_driver.V_mag[1] = (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5;
 led_driver.V_mag[2] = (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5;
 led_driver.V_mag[3] = (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5;
 led_driver.V_mag[4] = (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5;
 led_driver.V_mag[5] = (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5;
 led_driver.V_mag[6] = (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5;
 led_driver.V_mag[7] = (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5;
 led_driver.V_mag[8] = (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5;
 led_driver.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0);
 led_driver.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0);
 led_driver.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0);
 led_driver.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0);
 led_driver.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0);
 led_driver.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0);
 led_driver.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0);
 led_driver.magScale = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 led_driver.argAdj[1] = led_driver.mdlArg[2] - led_driver.V_arg[1] .* systemDef.hrms[2];
 led_driver.argAdj[2] = led_driver.mdlArg[3] - led_driver.V_arg[1] .* systemDef.hrms[3];
 led_driver.argAdj[3] = led_driver.mdlArg[4] - led_driver.V_arg[1] .* systemDef.hrms[4];
 led_driver.argAdj[4] = led_driver.mdlArg[5] - led_driver.V_arg[1] .* systemDef.hrms[5];
 led_driver.argAdj[5] = led_driver.mdlArg[6] - led_driver.V_arg[1] .* systemDef.hrms[6];
 led_driver.argAdj[6] = led_driver.mdlArg[7] - led_driver.V_arg[1] .* systemDef.hrms[7];
 led_driver.argAdj[7] = led_driver.mdlArg[8] - led_driver.V_arg[1] .* systemDef.hrms[8];
 led_driver.a[1].re = cos(led_driver.argAdj[1]);
 led_driver.a[1].im = sin(led_driver.argAdj[1]);
 led_driver.a[2].re = cos(led_driver.argAdj[2]);
 led_driver.a[2].im = sin(led_driver.argAdj[2]);
 led_driver.a[3].re = cos(led_driver.argAdj[3]);
 led_driver.a[3].im = sin(led_driver.argAdj[3]);
 led_driver.a[4].re = cos(led_driver.argAdj[4]);
 led_driver.a[4].im = sin(led_driver.argAdj[4]);
 led_driver.a[5].re = cos(led_driver.argAdj[5]);
 led_driver.a[5].im = sin(led_driver.argAdj[5]);
 led_driver.a[6].re = cos(led_driver.argAdj[6]);
 led_driver.a[6].im = sin(led_driver.argAdj[6]);
 led_driver.a[7].re = cos(led_driver.argAdj[7]);
 led_driver.a[7].im = sin(led_driver.argAdj[7]);
 led_driver.c[1] = led_driver.magScale * led_driver.mdlMag[2];
 led_driver.c[2] = led_driver.magScale * led_driver.mdlMag[3];
 led_driver.c[3] = led_driver.magScale * led_driver.mdlMag[4];
 led_driver.c[4] = led_driver.magScale * led_driver.mdlMag[5];
 led_driver.c[5] = led_driver.magScale * led_driver.mdlMag[6];
 led_driver.c[6] = led_driver.magScale * led_driver.mdlMag[7];
 led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[8];
 z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0);
 led_driver.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0);

public
 function Modelica.ComplexMath.real
  input Complex c;
  output Real r;
 algorithm
  r := c.re;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.real;

 function Modelica.ComplexMath.conj
  input Complex c1;
  output Complex c2;
 algorithm
  (c2) := Complex.'constructor'.fromReal(c1.re, - c1.im);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.conj;

 function Complex.'constructor'.fromReal
  input Real re;
  input Real im;
  output Complex result;
 algorithm
  result.re := re;
  result.im := im;
  return;
 annotation(Inline = true);
 end Complex.'constructor'.fromReal;

 function Complex.'*'.multiply
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re * c2.re - c1.im * c2.im, c1.re * c2.im + c1.im * c2.re);
  return;
 annotation(Inline = true);
 end Complex.'*'.multiply;

 function Modelica.ComplexMath.'abs'
  input Complex c;
  output Real result;
 algorithm
  result := (c.re ^ 2 + c.im ^ 2) ^ 0.5;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.'abs';

 function Modelica.ComplexMath.arg
  input Complex c;
  input Real phi0;
  output Real phi;
 algorithm
  phi := Modelica.Math.atan3(c.im, c.re, phi0);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.arg;

 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function Complex.'-'.subtract
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re - c2.re, c1.im - c2.im);
  return;
 annotation(Inline = true);
 end Complex.'-'.subtract;

 function Complex.'+'
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re + c2.re, c1.im + c2.im);
  return;
 annotation(Inline = true);
 end Complex.'+';

 function HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint;

 record HPF.Utilities.ComponentProperties
  discrete String ComponentType "Type of the component";
 end HPF.Utilities.ComponentProperties;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 record Complex
  Real re "Real part of complex number";
  Real im "Imaginary part of complex number";
 end Complex;

 type Modelica.SIunits.Frequency = Real(final quantity = "Frequency",final unit = "Hz");
 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
 type Modelica.Blocks.Interfaces.RealOutput = Real;
 type Modelica.Blocks.Interfaces.RealInput = Real;
end HPF.Examples.Demo;

DAE BiPGraph
BiPGraph (152 equations, 149 variables)
Variables: {der(v.theta) ground.pin.iIm[1] ground.pin.iIm[2] ground.pin.iIm[3] ground.pin.iIm[4] ground.pin.iIm[5] ground.pin.iIm[6] ground.pin.iIm[7] ground.pin.iIm[8] ground.pin.iRe[1] ground.pin.iRe[2] ground.pin.iRe[3] ground.pin.iRe[4] ground.pin.iRe[5] ground.pin.iRe[6] ground.pin.iRe[7] ground.pin.iRe[8] ground2.p.i v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.omega led_driver.PLoss led_driver.loadBase.v[1].re led_driver.loadBase.v[2].re led_driver.loadBase.v[3].re led_driver.loadBase.v[4].re led_driver.loadBase.v[5].re led_driver.loadBase.v[6].re led_driver.loadBase.v[7].re led_driver.loadBase.v[8].re led_driver.loadBase.omega led_driver.P led_driver.I_mag[1] led_driver.I_mag[2] led_driver.I_mag[3] led_driver.I_mag[4] led_driver.I_mag[5] led_driver.I_mag[6] led_driver.I_mag[7] led_driver.I_mag[8] led_driver.I_arg[2] led_driver.I_arg[3] led_driver.I_arg[4] led_driver.I_arg[5] led_driver.I_arg[6] led_driver.I_arg[7] led_driver.I_arg[8] led_driver.V_mag[1] led_driver.V_mag[2] led_driver.V_mag[3] led_driver.V_mag[4] led_driver.V_mag[5] led_driver.V_mag[6] led_driver.V_mag[7] led_driver.V_mag[8] led_driver.V_arg[1] led_driver.V_arg[2] led_driver.V_arg[3] led_driver.V_arg[4] led_driver.V_arg[5] led_driver.V_arg[6] led_driver.V_arg[7] led_driver.V_arg[8] led_driver.S led_driver.Q led_driver.magScale led_driver.argAdj[1] led_driver.argAdj[2] led_driver.argAdj[3] led_driver.argAdj[4] led_driver.argAdj[5] led_driver.argAdj[6] led_driver.argAdj[7] led_driver.a[1].re led_driver.a[1].im led_driver.a[2].re led_driver.a[2].im led_driver.a[3].re led_driver.a[3].im led_driver.a[4].re led_driver.a[4].im led_driver.a[5].re led_driver.a[5].im led_driver.a[6].re led_driver.a[6].im led_driver.a[7].re led_driver.a[7].im led_driver.c[1] led_driver.c[2] led_driver.c[3] led_driver.c[4] led_driver.c[5] led_driver.c[6] led_driver.c[7] load.u load.i y }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_5 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_6 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_7 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_8 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_9 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_10 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_11 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_12 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_13 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_14 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_15 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_16 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_17 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_18 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_19 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_20 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_21 : z.v[1].re@ led_driver.loadBase.v[1].re@M // z.v[1].re = 120.0 - led_driver.loadBase.v[1].re
eq_22 : z.v[2].re@ led_driver.loadBase.v[2].re@M // z.v[2].re = 0.001 - led_driver.loadBase.v[2].re
eq_23 : z.v[3].re@ led_driver.loadBase.v[3].re@M // z.v[3].re = 0.001 - led_driver.loadBase.v[3].re
eq_24 : z.v[4].re@ led_driver.loadBase.v[4].re@M // z.v[4].re = 0.001 - led_driver.loadBase.v[4].re
eq_25 : z.v[5].re@ led_driver.loadBase.v[5].re@M // z.v[5].re = 0.001 - led_driver.loadBase.v[5].re
eq_26 : z.v[6].re@ led_driver.loadBase.v[6].re@M // z.v[6].re = 0.001 - led_driver.loadBase.v[6].re
eq_27 : z.v[7].re@ led_driver.loadBase.v[7].re@M // z.v[7].re = 0.001 - led_driver.loadBase.v[7].re
eq_28 : z.v[8].re@ led_driver.loadBase.v[8].re@M // z.v[8].re = 0.001 - led_driver.loadBase.v[8].re
eq_29 : led_driver.P@ led_driver.S@M // led_driver.P = led_driver.S * cos(led_driver.argS)
eq_30 : led_driver.Q@M led_driver.S@ // led_driver.Q = led_driver.S * sin(led_driver.argS)
eq_31 : led_driver.P@ led_driver.loadBase.v[1].re@ v.i[1].re@M z.v[1].im@ v.i[1].im@ // led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
eq_32 : led_driver.Q@ led_driver.loadBase.v[1].re@ v.i[1].im@M z.v[1].im@ v.i[1].re@ // led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
eq_33 : v.i[2].re@M led_driver.c[1]@ led_driver.a[1].re@ // - v.i[2].re = led_driver.c[1] * led_driver.a[1].re
eq_34 : v.i[2].im@M led_driver.c[1]@ led_driver.a[1].im@ // - v.i[2].im = led_driver.c[1] * led_driver.a[1].im
eq_35 : v.i[3].re@M led_driver.c[2]@ led_driver.a[2].re@ // - v.i[3].re = led_driver.c[2] * led_driver.a[2].re
eq_36 : v.i[3].im@M led_driver.c[2]@ led_driver.a[2].im@ // - v.i[3].im = led_driver.c[2] * led_driver.a[2].im
eq_37 : v.i[4].re@M led_driver.c[3]@ led_driver.a[3].re@ // - v.i[4].re = led_driver.c[3] * led_driver.a[3].re
eq_38 : v.i[4].im@M led_driver.c[3]@ led_driver.a[3].im@ // - v.i[4].im = led_driver.c[3] * led_driver.a[3].im
eq_39 : v.i[5].re@M led_driver.c[4]@ led_driver.a[4].re@ // - v.i[5].re = led_driver.c[4] * led_driver.a[4].re
eq_40 : v.i[5].im@M led_driver.c[4]@ led_driver.a[4].im@ // - v.i[5].im = led_driver.c[4] * led_driver.a[4].im
eq_41 : v.i[6].re@M led_driver.c[5]@ led_driver.a[5].re@ // - v.i[6].re = led_driver.c[5] * led_driver.a[5].re
eq_42 : v.i[6].im@M led_driver.c[5]@ led_driver.a[5].im@ // - v.i[6].im = led_driver.c[5] * led_driver.a[5].im
eq_43 : v.i[7].re@M led_driver.c[6]@ led_driver.a[6].re@ // - v.i[7].re = led_driver.c[6] * led_driver.a[6].re
eq_44 : v.i[7].im@M led_driver.c[6]@ led_driver.a[6].im@ // - v.i[7].im = led_driver.c[6] * led_driver.a[6].im
eq_45 : v.i[8].re@M led_driver.c[7]@ led_driver.a[7].re@ // - v.i[8].re = led_driver.c[7] * led_driver.a[7].re
eq_46 : v.i[8].im@M led_driver.c[7]@ led_driver.a[7].im@ // - v.i[8].im = led_driver.c[7] * led_driver.a[7].im
eq_47 : led_driver.PLoss@M led_driver.P@ // led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency
eq_48 : // algorithm

eq_49 : led_driver.loadBase.omega@M der(v.theta)@ // led_driver.loadBase.omega = der(v.theta)
eq_50 : load.i@M load.u@ // load.i = load.u / led_driver.vDC.V
eq_51 : ground.pin.iIm[1]@M // ground.pin.iIm[1] = 0
eq_52 : ground.pin.iIm[2]@M // ground.pin.iIm[2] = 0
eq_53 : ground.pin.iIm[3]@M // ground.pin.iIm[3] = 0
eq_54 : ground.pin.iIm[4]@M // ground.pin.iIm[4] = 0
eq_55 : ground.pin.iIm[5]@M // ground.pin.iIm[5] = 0
eq_56 : ground.pin.iIm[6]@M // ground.pin.iIm[6] = 0
eq_57 : ground.pin.iIm[7]@M // ground.pin.iIm[7] = 0
eq_58 : ground.pin.iIm[8]@M // ground.pin.iIm[8] = 0
eq_59 : ground.pin.iRe[1]@M // ground.pin.iRe[1] = 0
eq_60 : ground.pin.iRe[2]@M // ground.pin.iRe[2] = 0
eq_61 : ground.pin.iRe[3]@M // ground.pin.iRe[3] = 0
eq_62 : ground.pin.iRe[4]@M // ground.pin.iRe[4] = 0
eq_63 : ground.pin.iRe[5]@M // ground.pin.iRe[5] = 0
eq_64 : ground.pin.iRe[6]@M // ground.pin.iRe[6] = 0
eq_65 : ground.pin.iRe[7]@M // ground.pin.iRe[7] = 0
eq_66 : ground.pin.iRe[8]@M // ground.pin.iRe[8] = 0
eq_67 : ground2.p.i@M // ground2.p.i = 0
eq_68 : led_driver.PLoss@ y@M // led_driver.PLoss = y
eq_69 : load.u@M // load.u = u
eq_70 : // HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))
eq_71 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_72 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_73 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_74 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_75 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_76 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_77 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_78 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_79 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_80 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_81 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_82 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_83 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_84 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_85 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_86 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_87 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_88 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_89 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_90 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_91 : led_driver.P@M load.i@ // led_driver.P = abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)
eq_92 : led_driver.I_mag[1]@M v.i[1].re@ v.i[1].im@ // led_driver.I_mag[1] = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_93 : led_driver.I_mag[2]@M v.i[2].re@ v.i[2].im@ // led_driver.I_mag[2] = ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5
eq_94 : led_driver.I_mag[3]@M v.i[3].re@ v.i[3].im@ // led_driver.I_mag[3] = ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5
eq_95 : led_driver.I_mag[4]@M v.i[4].re@ v.i[4].im@ // led_driver.I_mag[4] = ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5
eq_96 : led_driver.I_mag[5]@M v.i[5].re@ v.i[5].im@ // led_driver.I_mag[5] = ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5
eq_97 : led_driver.I_mag[6]@M v.i[6].re@ v.i[6].im@ // led_driver.I_mag[6] = ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5
eq_98 : led_driver.I_mag[7]@M v.i[7].re@ v.i[7].im@ // led_driver.I_mag[7] = ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5
eq_99 : led_driver.I_mag[8]@M v.i[8].re@ v.i[8].im@ // led_driver.I_mag[8] = ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5
eq_100 : led_driver.I_arg[2]@M v.i[2].im@ v.i[2].re@ // led_driver.I_arg[2] = Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)
eq_101 : led_driver.I_arg[3]@M v.i[3].im@ v.i[3].re@ // led_driver.I_arg[3] = Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)
eq_102 : led_driver.I_arg[4]@M v.i[4].im@ v.i[4].re@ // led_driver.I_arg[4] = Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)
eq_103 : led_driver.I_arg[5]@M v.i[5].im@ v.i[5].re@ // led_driver.I_arg[5] = Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)
eq_104 : led_driver.I_arg[6]@M v.i[6].im@ v.i[6].re@ // led_driver.I_arg[6] = Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)
eq_105 : led_driver.I_arg[7]@M v.i[7].im@ v.i[7].re@ // led_driver.I_arg[7] = Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)
eq_106 : led_driver.I_arg[8]@M v.i[8].im@ v.i[8].re@ // led_driver.I_arg[8] = Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)
eq_107 : led_driver.V_mag[1]@M led_driver.loadBase.v[1].re@ z.v[1].im@ // led_driver.V_mag[1] = (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_108 : led_driver.V_mag[2]@M led_driver.loadBase.v[2].re@ z.v[2].im@ // led_driver.V_mag[2] = (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_109 : led_driver.V_mag[3]@M led_driver.loadBase.v[3].re@ z.v[3].im@ // led_driver.V_mag[3] = (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_110 : led_driver.V_mag[4]@M led_driver.loadBase.v[4].re@ z.v[4].im@ // led_driver.V_mag[4] = (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_111 : led_driver.V_mag[5]@M led_driver.loadBase.v[5].re@ z.v[5].im@ // led_driver.V_mag[5] = (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_112 : led_driver.V_mag[6]@M led_driver.loadBase.v[6].re@ z.v[6].im@ // led_driver.V_mag[6] = (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_113 : led_driver.V_mag[7]@M led_driver.loadBase.v[7].re@ z.v[7].im@ // led_driver.V_mag[7] = (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_114 : led_driver.V_mag[8]@M led_driver.loadBase.v[8].re@ z.v[8].im@ // led_driver.V_mag[8] = (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_115 : led_driver.V_arg[2]@M z.v[2].im@ led_driver.loadBase.v[2].re@ // led_driver.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)
eq_116 : led_driver.V_arg[3]@M z.v[3].im@ led_driver.loadBase.v[3].re@ // led_driver.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)
eq_117 : led_driver.V_arg[4]@M z.v[4].im@ led_driver.loadBase.v[4].re@ // led_driver.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)
eq_118 : led_driver.V_arg[5]@M z.v[5].im@ led_driver.loadBase.v[5].re@ // led_driver.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)
eq_119 : led_driver.V_arg[6]@M z.v[6].im@ led_driver.loadBase.v[6].re@ // led_driver.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)
eq_120 : led_driver.V_arg[7]@M z.v[7].im@ led_driver.loadBase.v[7].re@ // led_driver.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)
eq_121 : led_driver.V_arg[8]@M z.v[8].im@ led_driver.loadBase.v[8].re@ // led_driver.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)
eq_122 : led_driver.magScale@M v.i[1].re@ v.i[1].im@ // led_driver.magScale = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_123 : led_driver.argAdj[1]@M led_driver.V_arg[1]@ // led_driver.argAdj[1] = led_driver.mdlArg[2] - led_driver.V_arg[1] .* systemDef.hrms[2]
eq_124 : led_driver.argAdj[2]@M led_driver.V_arg[1]@ // led_driver.argAdj[2] = led_driver.mdlArg[3] - led_driver.V_arg[1] .* systemDef.hrms[3]
eq_125 : led_driver.argAdj[3]@M led_driver.V_arg[1]@ // led_driver.argAdj[3] = led_driver.mdlArg[4] - led_driver.V_arg[1] .* systemDef.hrms[4]
eq_126 : led_driver.argAdj[4]@M led_driver.V_arg[1]@ // led_driver.argAdj[4] = led_driver.mdlArg[5] - led_driver.V_arg[1] .* systemDef.hrms[5]
eq_127 : led_driver.argAdj[5]@M led_driver.V_arg[1]@ // led_driver.argAdj[5] = led_driver.mdlArg[6] - led_driver.V_arg[1] .* systemDef.hrms[6]
eq_128 : led_driver.argAdj[6]@M led_driver.V_arg[1]@ // led_driver.argAdj[6] = led_driver.mdlArg[7] - led_driver.V_arg[1] .* systemDef.hrms[7]
eq_129 : led_driver.argAdj[7]@M led_driver.V_arg[1]@ // led_driver.argAdj[7] = led_driver.mdlArg[8] - led_driver.V_arg[1] .* systemDef.hrms[8]
eq_130 : led_driver.a[1].re@M led_driver.argAdj[1]@ // led_driver.a[1].re = cos(led_driver.argAdj[1])
eq_131 : led_driver.a[1].im@M led_driver.argAdj[1]@ // led_driver.a[1].im = sin(led_driver.argAdj[1])
eq_132 : led_driver.a[2].re@M led_driver.argAdj[2]@ // led_driver.a[2].re = cos(led_driver.argAdj[2])
eq_133 : led_driver.a[2].im@M led_driver.argAdj[2]@ // led_driver.a[2].im = sin(led_driver.argAdj[2])
eq_134 : led_driver.a[3].re@M led_driver.argAdj[3]@ // led_driver.a[3].re = cos(led_driver.argAdj[3])
eq_135 : led_driver.a[3].im@M led_driver.argAdj[3]@ // led_driver.a[3].im = sin(led_driver.argAdj[3])
eq_136 : led_driver.a[4].re@M led_driver.argAdj[4]@ // led_driver.a[4].re = cos(led_driver.argAdj[4])
eq_137 : led_driver.a[4].im@M led_driver.argAdj[4]@ // led_driver.a[4].im = sin(led_driver.argAdj[4])
eq_138 : led_driver.a[5].re@M led_driver.argAdj[5]@ // led_driver.a[5].re = cos(led_driver.argAdj[5])
eq_139 : led_driver.a[5].im@M led_driver.argAdj[5]@ // led_driver.a[5].im = sin(led_driver.argAdj[5])
eq_140 : led_driver.a[6].re@M led_driver.argAdj[6]@ // led_driver.a[6].re = cos(led_driver.argAdj[6])
eq_141 : led_driver.a[6].im@M led_driver.argAdj[6]@ // led_driver.a[6].im = sin(led_driver.argAdj[6])
eq_142 : led_driver.a[7].re@M led_driver.argAdj[7]@ // led_driver.a[7].re = cos(led_driver.argAdj[7])
eq_143 : led_driver.a[7].im@M led_driver.argAdj[7]@ // led_driver.a[7].im = sin(led_driver.argAdj[7])
eq_144 : led_driver.c[1]@M led_driver.magScale@ // led_driver.c[1] = led_driver.magScale * led_driver.mdlMag[2]
eq_145 : led_driver.c[2]@M led_driver.magScale@ // led_driver.c[2] = led_driver.magScale * led_driver.mdlMag[3]
eq_146 : led_driver.c[3]@M led_driver.magScale@ // led_driver.c[3] = led_driver.magScale * led_driver.mdlMag[4]
eq_147 : led_driver.c[4]@M led_driver.magScale@ // led_driver.c[4] = led_driver.magScale * led_driver.mdlMag[5]
eq_148 : led_driver.c[5]@M led_driver.magScale@ // led_driver.c[5] = led_driver.magScale * led_driver.mdlMag[6]
eq_149 : led_driver.c[6]@M led_driver.magScale@ // led_driver.c[6] = led_driver.magScale * led_driver.mdlMag[7]
eq_150 : led_driver.c[7]@M led_driver.magScale@ // led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[8]
eq_151 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_152 : led_driver.V_arg[1]@M z.v[1].im@ led_driver.loadBase.v[1].re@ // led_driver.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)

DAE BiPGraph matching
----------------------------------------
BiPGraph matching:
eq_2 : der(v.theta)
eq_3 : v.omega
eq_4 : z.v[1].re
eq_5 : z.v[2].re
eq_6 : z.v[3].re
eq_7 : z.v[4].re
eq_8 : z.v[5].re
eq_9 : z.v[6].re
eq_10 : z.v[7].re
eq_11 : z.v[8].re
eq_12 : z.v[1].im
eq_13 : z.v[2].im
eq_14 : z.v[3].im
eq_15 : z.v[4].im
eq_16 : z.v[5].im
eq_17 : z.v[6].im
eq_18 : z.v[7].im
eq_19 : z.v[8].im
eq_20 : z.omega
eq_21 : led_driver.loadBase.v[1].re
eq_22 : led_driver.loadBase.v[2].re
eq_23 : led_driver.loadBase.v[3].re
eq_24 : led_driver.loadBase.v[4].re
eq_25 : led_driver.loadBase.v[5].re
eq_26 : led_driver.loadBase.v[6].re
eq_27 : led_driver.loadBase.v[7].re
eq_28 : led_driver.loadBase.v[8].re
eq_29 : led_driver.S
eq_30 : led_driver.Q
eq_31 : v.i[1].re
eq_32 : v.i[1].im
eq_33 : v.i[2].re
eq_34 : v.i[2].im
eq_35 : v.i[3].re
eq_36 : v.i[3].im
eq_37 : v.i[4].re
eq_38 : v.i[4].im
eq_39 : v.i[5].re
eq_40 : v.i[5].im
eq_41 : v.i[6].re
eq_42 : v.i[6].im
eq_43 : v.i[7].re
eq_44 : v.i[7].im
eq_45 : v.i[8].re
eq_46 : v.i[8].im
eq_47 : led_driver.PLoss
eq_49 : led_driver.loadBase.omega
eq_50 : load.i
eq_51 : ground.pin.iIm[1]
eq_52 : ground.pin.iIm[2]
eq_53 : ground.pin.iIm[3]
eq_54 : ground.pin.iIm[4]
eq_55 : ground.pin.iIm[5]
eq_56 : ground.pin.iIm[6]
eq_57 : ground.pin.iIm[7]
eq_58 : ground.pin.iIm[8]
eq_59 : ground.pin.iRe[1]
eq_60 : ground.pin.iRe[2]
eq_61 : ground.pin.iRe[3]
eq_62 : ground.pin.iRe[4]
eq_63 : ground.pin.iRe[5]
eq_64 : ground.pin.iRe[6]
eq_65 : ground.pin.iRe[7]
eq_66 : ground.pin.iRe[8]
eq_67 : ground2.p.i
eq_68 : y
eq_69 : load.u
eq_71 : v.P1
eq_72 : v.iMag[1]
eq_73 : v.iMag[2]
eq_74 : v.iMag[3]
eq_75 : v.iMag[4]
eq_76 : v.iMag[5]
eq_77 : v.iMag[6]
eq_78 : v.iMag[7]
eq_79 : v.iMag[8]
eq_80 : v.iArg[1]
eq_81 : v.iArg[2]
eq_82 : v.iArg[3]
eq_83 : v.iArg[4]
eq_84 : v.iArg[5]
eq_85 : v.iArg[6]
eq_86 : v.iArg[7]
eq_87 : v.iArg[8]
eq_88 : z.vFundAbs
eq_89 : z.vFundArg
eq_90 : z.iFundAbs
eq_91 : led_driver.P
eq_92 : led_driver.I_mag[1]
eq_93 : led_driver.I_mag[2]
eq_94 : led_driver.I_mag[3]
eq_95 : led_driver.I_mag[4]
eq_96 : led_driver.I_mag[5]
eq_97 : led_driver.I_mag[6]
eq_98 : led_driver.I_mag[7]
eq_99 : led_driver.I_mag[8]
eq_100 : led_driver.I_arg[2]
eq_101 : led_driver.I_arg[3]
eq_102 : led_driver.I_arg[4]
eq_103 : led_driver.I_arg[5]
eq_104 : led_driver.I_arg[6]
eq_105 : led_driver.I_arg[7]
eq_106 : led_driver.I_arg[8]
eq_107 : led_driver.V_mag[1]
eq_108 : led_driver.V_mag[2]
eq_109 : led_driver.V_mag[3]
eq_110 : led_driver.V_mag[4]
eq_111 : led_driver.V_mag[5]
eq_112 : led_driver.V_mag[6]
eq_113 : led_driver.V_mag[7]
eq_114 : led_driver.V_mag[8]
eq_115 : led_driver.V_arg[2]
eq_116 : led_driver.V_arg[3]
eq_117 : led_driver.V_arg[4]
eq_118 : led_driver.V_arg[5]
eq_119 : led_driver.V_arg[6]
eq_120 : led_driver.V_arg[7]
eq_121 : led_driver.V_arg[8]
eq_122 : led_driver.magScale
eq_123 : led_driver.argAdj[1]
eq_124 : led_driver.argAdj[2]
eq_125 : led_driver.argAdj[3]
eq_126 : led_driver.argAdj[4]
eq_127 : led_driver.argAdj[5]
eq_128 : led_driver.argAdj[6]
eq_129 : led_driver.argAdj[7]
eq_130 : led_driver.a[1].re
eq_131 : led_driver.a[1].im
eq_132 : led_driver.a[2].re
eq_133 : led_driver.a[2].im
eq_134 : led_driver.a[3].re
eq_135 : led_driver.a[3].im
eq_136 : led_driver.a[4].re
eq_137 : led_driver.a[4].im
eq_138 : led_driver.a[5].re
eq_139 : led_driver.a[5].im
eq_140 : led_driver.a[6].re
eq_141 : led_driver.a[6].im
eq_142 : led_driver.a[7].re
eq_143 : led_driver.a[7].im
eq_144 : led_driver.c[1]
eq_145 : led_driver.c[2]
eq_146 : led_driver.c[3]
eq_147 : led_driver.c[4]
eq_148 : led_driver.c[5]
eq_149 : led_driver.c[6]
eq_150 : led_driver.c[7]
eq_151 : z.iFundArg
eq_152 : led_driver.V_arg[1]
Unmatched equations: {}
Unmatched variables: {}
----------------------------------------

BiPGraph (152 equations, 149 variables)
Variables: {der(v.theta) ground.pin.iIm[1] ground.pin.iIm[2] ground.pin.iIm[3] ground.pin.iIm[4] ground.pin.iIm[5] ground.pin.iIm[6] ground.pin.iIm[7] ground.pin.iIm[8] ground.pin.iRe[1] ground.pin.iRe[2] ground.pin.iRe[3] ground.pin.iRe[4] ground.pin.iRe[5] ground.pin.iRe[6] ground.pin.iRe[7] ground.pin.iRe[8] ground2.p.i v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.omega led_driver.PLoss led_driver.loadBase.v[1].re led_driver.loadBase.v[2].re led_driver.loadBase.v[3].re led_driver.loadBase.v[4].re led_driver.loadBase.v[5].re led_driver.loadBase.v[6].re led_driver.loadBase.v[7].re led_driver.loadBase.v[8].re led_driver.loadBase.omega led_driver.P led_driver.I_mag[1] led_driver.I_mag[2] led_driver.I_mag[3] led_driver.I_mag[4] led_driver.I_mag[5] led_driver.I_mag[6] led_driver.I_mag[7] led_driver.I_mag[8] led_driver.I_arg[2] led_driver.I_arg[3] led_driver.I_arg[4] led_driver.I_arg[5] led_driver.I_arg[6] led_driver.I_arg[7] led_driver.I_arg[8] led_driver.V_mag[1] led_driver.V_mag[2] led_driver.V_mag[3] led_driver.V_mag[4] led_driver.V_mag[5] led_driver.V_mag[6] led_driver.V_mag[7] led_driver.V_mag[8] led_driver.V_arg[1] led_driver.V_arg[2] led_driver.V_arg[3] led_driver.V_arg[4] led_driver.V_arg[5] led_driver.V_arg[6] led_driver.V_arg[7] led_driver.V_arg[8] led_driver.S led_driver.Q led_driver.magScale led_driver.argAdj[1] led_driver.argAdj[2] led_driver.argAdj[3] led_driver.argAdj[4] led_driver.argAdj[5] led_driver.argAdj[6] led_driver.argAdj[7] led_driver.a[1].re led_driver.a[1].im led_driver.a[2].re led_driver.a[2].im led_driver.a[3].re led_driver.a[3].im led_driver.a[4].re led_driver.a[4].im led_driver.a[5].re led_driver.a[5].im led_driver.a[6].re led_driver.a[6].im led_driver.a[7].re led_driver.a[7].im led_driver.c[1] led_driver.c[2] led_driver.c[3] led_driver.c[4] led_driver.c[5] led_driver.c[6] led_driver.c[7] load.u load.i y }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_5 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_6 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_7 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_8 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_9 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_10 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_11 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_12 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_13 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_14 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_15 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_16 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_17 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_18 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_19 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_20 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_21 : z.v[1].re@ led_driver.loadBase.v[1].re@M // z.v[1].re = 120.0 - led_driver.loadBase.v[1].re
eq_22 : z.v[2].re@ led_driver.loadBase.v[2].re@M // z.v[2].re = 0.001 - led_driver.loadBase.v[2].re
eq_23 : z.v[3].re@ led_driver.loadBase.v[3].re@M // z.v[3].re = 0.001 - led_driver.loadBase.v[3].re
eq_24 : z.v[4].re@ led_driver.loadBase.v[4].re@M // z.v[4].re = 0.001 - led_driver.loadBase.v[4].re
eq_25 : z.v[5].re@ led_driver.loadBase.v[5].re@M // z.v[5].re = 0.001 - led_driver.loadBase.v[5].re
eq_26 : z.v[6].re@ led_driver.loadBase.v[6].re@M // z.v[6].re = 0.001 - led_driver.loadBase.v[6].re
eq_27 : z.v[7].re@ led_driver.loadBase.v[7].re@M // z.v[7].re = 0.001 - led_driver.loadBase.v[7].re
eq_28 : z.v[8].re@ led_driver.loadBase.v[8].re@M // z.v[8].re = 0.001 - led_driver.loadBase.v[8].re
eq_29 : led_driver.P@ led_driver.S@M // led_driver.P = led_driver.S * cos(led_driver.argS)
eq_30 : led_driver.Q@M led_driver.S@ // led_driver.Q = led_driver.S * sin(led_driver.argS)
eq_31 : led_driver.P@ led_driver.loadBase.v[1].re@ v.i[1].re@M z.v[1].im@ v.i[1].im@ // led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
eq_32 : led_driver.Q@ led_driver.loadBase.v[1].re@ v.i[1].im@M z.v[1].im@ v.i[1].re@ // led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
eq_33 : v.i[2].re@M led_driver.c[1]@ led_driver.a[1].re@ // - v.i[2].re = led_driver.c[1] * led_driver.a[1].re
eq_34 : v.i[2].im@M led_driver.c[1]@ led_driver.a[1].im@ // - v.i[2].im = led_driver.c[1] * led_driver.a[1].im
eq_35 : v.i[3].re@M led_driver.c[2]@ led_driver.a[2].re@ // - v.i[3].re = led_driver.c[2] * led_driver.a[2].re
eq_36 : v.i[3].im@M led_driver.c[2]@ led_driver.a[2].im@ // - v.i[3].im = led_driver.c[2] * led_driver.a[2].im
eq_37 : v.i[4].re@M led_driver.c[3]@ led_driver.a[3].re@ // - v.i[4].re = led_driver.c[3] * led_driver.a[3].re
eq_38 : v.i[4].im@M led_driver.c[3]@ led_driver.a[3].im@ // - v.i[4].im = led_driver.c[3] * led_driver.a[3].im
eq_39 : v.i[5].re@M led_driver.c[4]@ led_driver.a[4].re@ // - v.i[5].re = led_driver.c[4] * led_driver.a[4].re
eq_40 : v.i[5].im@M led_driver.c[4]@ led_driver.a[4].im@ // - v.i[5].im = led_driver.c[4] * led_driver.a[4].im
eq_41 : v.i[6].re@M led_driver.c[5]@ led_driver.a[5].re@ // - v.i[6].re = led_driver.c[5] * led_driver.a[5].re
eq_42 : v.i[6].im@M led_driver.c[5]@ led_driver.a[5].im@ // - v.i[6].im = led_driver.c[5] * led_driver.a[5].im
eq_43 : v.i[7].re@M led_driver.c[6]@ led_driver.a[6].re@ // - v.i[7].re = led_driver.c[6] * led_driver.a[6].re
eq_44 : v.i[7].im@M led_driver.c[6]@ led_driver.a[6].im@ // - v.i[7].im = led_driver.c[6] * led_driver.a[6].im
eq_45 : v.i[8].re@M led_driver.c[7]@ led_driver.a[7].re@ // - v.i[8].re = led_driver.c[7] * led_driver.a[7].re
eq_46 : v.i[8].im@M led_driver.c[7]@ led_driver.a[7].im@ // - v.i[8].im = led_driver.c[7] * led_driver.a[7].im
eq_47 : led_driver.PLoss@M led_driver.P@ // led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency
eq_48 : // algorithm

eq_49 : led_driver.loadBase.omega@M der(v.theta)@ // led_driver.loadBase.omega = der(v.theta)
eq_50 : load.i@M load.u@ // load.i = load.u / led_driver.vDC.V
eq_51 : ground.pin.iIm[1]@M // ground.pin.iIm[1] = 0
eq_52 : ground.pin.iIm[2]@M // ground.pin.iIm[2] = 0
eq_53 : ground.pin.iIm[3]@M // ground.pin.iIm[3] = 0
eq_54 : ground.pin.iIm[4]@M // ground.pin.iIm[4] = 0
eq_55 : ground.pin.iIm[5]@M // ground.pin.iIm[5] = 0
eq_56 : ground.pin.iIm[6]@M // ground.pin.iIm[6] = 0
eq_57 : ground.pin.iIm[7]@M // ground.pin.iIm[7] = 0
eq_58 : ground.pin.iIm[8]@M // ground.pin.iIm[8] = 0
eq_59 : ground.pin.iRe[1]@M // ground.pin.iRe[1] = 0
eq_60 : ground.pin.iRe[2]@M // ground.pin.iRe[2] = 0
eq_61 : ground.pin.iRe[3]@M // ground.pin.iRe[3] = 0
eq_62 : ground.pin.iRe[4]@M // ground.pin.iRe[4] = 0
eq_63 : ground.pin.iRe[5]@M // ground.pin.iRe[5] = 0
eq_64 : ground.pin.iRe[6]@M // ground.pin.iRe[6] = 0
eq_65 : ground.pin.iRe[7]@M // ground.pin.iRe[7] = 0
eq_66 : ground.pin.iRe[8]@M // ground.pin.iRe[8] = 0
eq_67 : ground2.p.i@M // ground2.p.i = 0
eq_68 : led_driver.PLoss@ y@M // led_driver.PLoss = y
eq_69 : load.u@M // load.u = u
eq_70 : // HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))
eq_71 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_72 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_73 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_74 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_75 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_76 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_77 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_78 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_79 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_80 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_81 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_82 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_83 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_84 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_85 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_86 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_87 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_88 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_89 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_90 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_91 : led_driver.P@M load.i@ // led_driver.P = abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)
eq_92 : led_driver.I_mag[1]@M v.i[1].re@ v.i[1].im@ // led_driver.I_mag[1] = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_93 : led_driver.I_mag[2]@M v.i[2].re@ v.i[2].im@ // led_driver.I_mag[2] = ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5
eq_94 : led_driver.I_mag[3]@M v.i[3].re@ v.i[3].im@ // led_driver.I_mag[3] = ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5
eq_95 : led_driver.I_mag[4]@M v.i[4].re@ v.i[4].im@ // led_driver.I_mag[4] = ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5
eq_96 : led_driver.I_mag[5]@M v.i[5].re@ v.i[5].im@ // led_driver.I_mag[5] = ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5
eq_97 : led_driver.I_mag[6]@M v.i[6].re@ v.i[6].im@ // led_driver.I_mag[6] = ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5
eq_98 : led_driver.I_mag[7]@M v.i[7].re@ v.i[7].im@ // led_driver.I_mag[7] = ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5
eq_99 : led_driver.I_mag[8]@M v.i[8].re@ v.i[8].im@ // led_driver.I_mag[8] = ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5
eq_100 : led_driver.I_arg[2]@M v.i[2].im@ v.i[2].re@ // led_driver.I_arg[2] = Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)
eq_101 : led_driver.I_arg[3]@M v.i[3].im@ v.i[3].re@ // led_driver.I_arg[3] = Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)
eq_102 : led_driver.I_arg[4]@M v.i[4].im@ v.i[4].re@ // led_driver.I_arg[4] = Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)
eq_103 : led_driver.I_arg[5]@M v.i[5].im@ v.i[5].re@ // led_driver.I_arg[5] = Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)
eq_104 : led_driver.I_arg[6]@M v.i[6].im@ v.i[6].re@ // led_driver.I_arg[6] = Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)
eq_105 : led_driver.I_arg[7]@M v.i[7].im@ v.i[7].re@ // led_driver.I_arg[7] = Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)
eq_106 : led_driver.I_arg[8]@M v.i[8].im@ v.i[8].re@ // led_driver.I_arg[8] = Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)
eq_107 : led_driver.V_mag[1]@M led_driver.loadBase.v[1].re@ z.v[1].im@ // led_driver.V_mag[1] = (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_108 : led_driver.V_mag[2]@M led_driver.loadBase.v[2].re@ z.v[2].im@ // led_driver.V_mag[2] = (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_109 : led_driver.V_mag[3]@M led_driver.loadBase.v[3].re@ z.v[3].im@ // led_driver.V_mag[3] = (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_110 : led_driver.V_mag[4]@M led_driver.loadBase.v[4].re@ z.v[4].im@ // led_driver.V_mag[4] = (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_111 : led_driver.V_mag[5]@M led_driver.loadBase.v[5].re@ z.v[5].im@ // led_driver.V_mag[5] = (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_112 : led_driver.V_mag[6]@M led_driver.loadBase.v[6].re@ z.v[6].im@ // led_driver.V_mag[6] = (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_113 : led_driver.V_mag[7]@M led_driver.loadBase.v[7].re@ z.v[7].im@ // led_driver.V_mag[7] = (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_114 : led_driver.V_mag[8]@M led_driver.loadBase.v[8].re@ z.v[8].im@ // led_driver.V_mag[8] = (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_115 : led_driver.V_arg[2]@M z.v[2].im@ led_driver.loadBase.v[2].re@ // led_driver.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)
eq_116 : led_driver.V_arg[3]@M z.v[3].im@ led_driver.loadBase.v[3].re@ // led_driver.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)
eq_117 : led_driver.V_arg[4]@M z.v[4].im@ led_driver.loadBase.v[4].re@ // led_driver.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)
eq_118 : led_driver.V_arg[5]@M z.v[5].im@ led_driver.loadBase.v[5].re@ // led_driver.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)
eq_119 : led_driver.V_arg[6]@M z.v[6].im@ led_driver.loadBase.v[6].re@ // led_driver.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)
eq_120 : led_driver.V_arg[7]@M z.v[7].im@ led_driver.loadBase.v[7].re@ // led_driver.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)
eq_121 : led_driver.V_arg[8]@M z.v[8].im@ led_driver.loadBase.v[8].re@ // led_driver.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)
eq_122 : led_driver.magScale@M v.i[1].re@ v.i[1].im@ // led_driver.magScale = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_123 : led_driver.argAdj[1]@M led_driver.V_arg[1]@ // led_driver.argAdj[1] = led_driver.mdlArg[2] - led_driver.V_arg[1] .* systemDef.hrms[2]
eq_124 : led_driver.argAdj[2]@M led_driver.V_arg[1]@ // led_driver.argAdj[2] = led_driver.mdlArg[3] - led_driver.V_arg[1] .* systemDef.hrms[3]
eq_125 : led_driver.argAdj[3]@M led_driver.V_arg[1]@ // led_driver.argAdj[3] = led_driver.mdlArg[4] - led_driver.V_arg[1] .* systemDef.hrms[4]
eq_126 : led_driver.argAdj[4]@M led_driver.V_arg[1]@ // led_driver.argAdj[4] = led_driver.mdlArg[5] - led_driver.V_arg[1] .* systemDef.hrms[5]
eq_127 : led_driver.argAdj[5]@M led_driver.V_arg[1]@ // led_driver.argAdj[5] = led_driver.mdlArg[6] - led_driver.V_arg[1] .* systemDef.hrms[6]
eq_128 : led_driver.argAdj[6]@M led_driver.V_arg[1]@ // led_driver.argAdj[6] = led_driver.mdlArg[7] - led_driver.V_arg[1] .* systemDef.hrms[7]
eq_129 : led_driver.argAdj[7]@M led_driver.V_arg[1]@ // led_driver.argAdj[7] = led_driver.mdlArg[8] - led_driver.V_arg[1] .* systemDef.hrms[8]
eq_130 : led_driver.a[1].re@M led_driver.argAdj[1]@ // led_driver.a[1].re = cos(led_driver.argAdj[1])
eq_131 : led_driver.a[1].im@M led_driver.argAdj[1]@ // led_driver.a[1].im = sin(led_driver.argAdj[1])
eq_132 : led_driver.a[2].re@M led_driver.argAdj[2]@ // led_driver.a[2].re = cos(led_driver.argAdj[2])
eq_133 : led_driver.a[2].im@M led_driver.argAdj[2]@ // led_driver.a[2].im = sin(led_driver.argAdj[2])
eq_134 : led_driver.a[3].re@M led_driver.argAdj[3]@ // led_driver.a[3].re = cos(led_driver.argAdj[3])
eq_135 : led_driver.a[3].im@M led_driver.argAdj[3]@ // led_driver.a[3].im = sin(led_driver.argAdj[3])
eq_136 : led_driver.a[4].re@M led_driver.argAdj[4]@ // led_driver.a[4].re = cos(led_driver.argAdj[4])
eq_137 : led_driver.a[4].im@M led_driver.argAdj[4]@ // led_driver.a[4].im = sin(led_driver.argAdj[4])
eq_138 : led_driver.a[5].re@M led_driver.argAdj[5]@ // led_driver.a[5].re = cos(led_driver.argAdj[5])
eq_139 : led_driver.a[5].im@M led_driver.argAdj[5]@ // led_driver.a[5].im = sin(led_driver.argAdj[5])
eq_140 : led_driver.a[6].re@M led_driver.argAdj[6]@ // led_driver.a[6].re = cos(led_driver.argAdj[6])
eq_141 : led_driver.a[6].im@M led_driver.argAdj[6]@ // led_driver.a[6].im = sin(led_driver.argAdj[6])
eq_142 : led_driver.a[7].re@M led_driver.argAdj[7]@ // led_driver.a[7].re = cos(led_driver.argAdj[7])
eq_143 : led_driver.a[7].im@M led_driver.argAdj[7]@ // led_driver.a[7].im = sin(led_driver.argAdj[7])
eq_144 : led_driver.c[1]@M led_driver.magScale@ // led_driver.c[1] = led_driver.magScale * led_driver.mdlMag[2]
eq_145 : led_driver.c[2]@M led_driver.magScale@ // led_driver.c[2] = led_driver.magScale * led_driver.mdlMag[3]
eq_146 : led_driver.c[3]@M led_driver.magScale@ // led_driver.c[3] = led_driver.magScale * led_driver.mdlMag[4]
eq_147 : led_driver.c[4]@M led_driver.magScale@ // led_driver.c[4] = led_driver.magScale * led_driver.mdlMag[5]
eq_148 : led_driver.c[5]@M led_driver.magScale@ // led_driver.c[5] = led_driver.magScale * led_driver.mdlMag[6]
eq_149 : led_driver.c[6]@M led_driver.magScale@ // led_driver.c[6] = led_driver.magScale * led_driver.mdlMag[7]
eq_150 : led_driver.c[7]@M led_driver.magScale@ // led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[8]
eq_151 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_152 : led_driver.V_arg[1]@M z.v[1].im@ led_driver.loadBase.v[1].re@ // led_driver.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)

Starting automatic tearing
BiPGraph (5 equations, 5 variables)
Variables: {v.i[1].im z.v[1].im led_driver.loadBase.v[1].re v.i[1].re z.v[1].re }
eq_32 : led_driver.loadBase.v[1].re# v.i[1].im# z.v[1].im# v.i[1].re# // led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
eq_12 : z.v[1].im@M v.i[1].im# v.i[1].re# // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_21 : z.v[1].re@ led_driver.loadBase.v[1].re@M // z.v[1].re = 120.0 - led_driver.loadBase.v[1].re
eq_31 : led_driver.loadBase.v[1].re# v.i[1].re# z.v[1].im# v.i[1].im# // led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
eq_4 : z.v[1].re@M v.i[1].re# v.i[1].im# // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_12 : z.v[1].im
eq_21 : led_driver.loadBase.v[1].re
eq_4 : z.v[1].re
Unmatched equations: {eq_32 eq_31 }
Unmatched variables: {v.i[1].im v.i[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_12 : z.v[1].im
eq_21 : led_driver.loadBase.v[1].re
eq_4 : z.v[1].re
Unmatched equations: {eq_32 eq_31 }
Unmatched variables: {v.i[1].im v.i[1].re }
----------------------------------------

Automatic tearing pair, equation: led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re), tearing with variable: v.i[1].im
Automatic tearing pair, equation: led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im, tearing with variable: v.i[1].re
***********************************
*********** ODE section ***********
***********************************

--- Solved equation ---
der(v.theta) := 6.283185307179586 * systemDef.fFund

***********************************
*********** Real outputs **********
***********************************

--- Solved equation ---
load.u := u

--- Solved equation ---
load.i := load.u / led_driver.vDC.V

--- Solved equation ---
led_driver.P := abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)

--- Solved equation ---
led_driver.PLoss := led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency

--- Solved equation ---
y := led_driver.PLoss

***********************************
*** Integer and boolean outputs ***
***********************************

***********************************
********* Other variables *********
***********************************

--- Solved equation ---
ground.pin.iIm[1] := 0

--- Solved equation ---
ground.pin.iIm[2] := 0

--- Solved equation ---
ground.pin.iIm[3] := 0

--- Solved equation ---
ground.pin.iIm[4] := 0

--- Solved equation ---
ground.pin.iIm[5] := 0

--- Solved equation ---
ground.pin.iIm[6] := 0

--- Solved equation ---
ground.pin.iIm[7] := 0

--- Solved equation ---
ground.pin.iIm[8] := 0

--- Solved equation ---
ground.pin.iRe[1] := 0

--- Solved equation ---
ground.pin.iRe[2] := 0

--- Solved equation ---
ground.pin.iRe[3] := 0

--- Solved equation ---
ground.pin.iRe[4] := 0

--- Solved equation ---
ground.pin.iRe[5] := 0

--- Solved equation ---
ground.pin.iRe[6] := 0

--- Solved equation ---
ground.pin.iRe[7] := 0

--- Solved equation ---
ground.pin.iRe[8] := 0

--- Solved equation ---
ground2.p.i := 0

--- Solved equation ---
led_driver.S := (- led_driver.P) / (- cos(led_driver.argS))

--- Solved equation ---
led_driver.Q := led_driver.S * sin(led_driver.argS)

--- Torn system (Block 1) of 2 iteration variables and 3 solved variables ---
Torn variables:
  z.v[1].im
  z.v[1].re
  led_driver.loadBase.v[1].re

Iteration variables:
  v.i[1].im (start=0)
  v.i[1].re (start=0)

Torn equations:
  z.v[1].im := z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
  z.v[1].re := z.z.re .* (- v.i[1].re) + (- z.z.im .* systemDef.hrms[1] .* (- v.i[1].im))
  led_driver.loadBase.v[1].re := - z.v[1].re + 120.0

Residual equations:
  led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
    Iteration variables: v.i[1].im
  led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
    Iteration variables: v.i[1].re

--- Solved equation ---
v.P1 := 120.0 * v.i[1].re

--- Solved equation ---
v.iMag[1] := (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
led_driver.magScale := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[1] := led_driver.magScale * led_driver.mdlMag[2]

--- Solved equation ---
led_driver.V_arg[1] := Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)

--- Solved equation ---
led_driver.argAdj[1] := led_driver.mdlArg[2] + (- led_driver.V_arg[1] .* systemDef.hrms[2])

--- Solved equation ---
led_driver.a[1].re := cos(led_driver.argAdj[1])

--- Solved equation ---
v.i[2].re := - led_driver.c[1] * led_driver.a[1].re

--- Solved equation ---
led_driver.a[1].im := sin(led_driver.argAdj[1])

--- Solved equation ---
v.i[2].im := - led_driver.c[1] * led_driver.a[1].im

--- Solved equation ---
v.iMag[2] := (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[2] := led_driver.magScale * led_driver.mdlMag[3]

--- Solved equation ---
led_driver.argAdj[2] := led_driver.mdlArg[3] + (- led_driver.V_arg[1] .* systemDef.hrms[3])

--- Solved equation ---
led_driver.a[2].re := cos(led_driver.argAdj[2])

--- Solved equation ---
v.i[3].re := - led_driver.c[2] * led_driver.a[2].re

--- Solved equation ---
led_driver.a[2].im := sin(led_driver.argAdj[2])

--- Solved equation ---
v.i[3].im := - led_driver.c[2] * led_driver.a[2].im

--- Solved equation ---
v.iMag[3] := (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[3] := led_driver.magScale * led_driver.mdlMag[4]

--- Solved equation ---
led_driver.argAdj[3] := led_driver.mdlArg[4] + (- led_driver.V_arg[1] .* systemDef.hrms[4])

--- Solved equation ---
led_driver.a[3].re := cos(led_driver.argAdj[3])

--- Solved equation ---
v.i[4].re := - led_driver.c[3] * led_driver.a[3].re

--- Solved equation ---
led_driver.a[3].im := sin(led_driver.argAdj[3])

--- Solved equation ---
v.i[4].im := - led_driver.c[3] * led_driver.a[3].im

--- Solved equation ---
v.iMag[4] := (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[4] := led_driver.magScale * led_driver.mdlMag[5]

--- Solved equation ---
led_driver.argAdj[4] := led_driver.mdlArg[5] + (- led_driver.V_arg[1] .* systemDef.hrms[5])

--- Solved equation ---
led_driver.a[4].re := cos(led_driver.argAdj[4])

--- Solved equation ---
v.i[5].re := - led_driver.c[4] * led_driver.a[4].re

--- Solved equation ---
led_driver.a[4].im := sin(led_driver.argAdj[4])

--- Solved equation ---
v.i[5].im := - led_driver.c[4] * led_driver.a[4].im

--- Solved equation ---
v.iMag[5] := (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[5] := led_driver.magScale * led_driver.mdlMag[6]

--- Solved equation ---
led_driver.argAdj[5] := led_driver.mdlArg[6] + (- led_driver.V_arg[1] .* systemDef.hrms[6])

--- Solved equation ---
led_driver.a[5].re := cos(led_driver.argAdj[5])

--- Solved equation ---
v.i[6].re := - led_driver.c[5] * led_driver.a[5].re

--- Solved equation ---
led_driver.a[5].im := sin(led_driver.argAdj[5])

--- Solved equation ---
v.i[6].im := - led_driver.c[5] * led_driver.a[5].im

--- Solved equation ---
v.iMag[6] := (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[6] := led_driver.magScale * led_driver.mdlMag[7]

--- Solved equation ---
led_driver.argAdj[6] := led_driver.mdlArg[7] + (- led_driver.V_arg[1] .* systemDef.hrms[7])

--- Solved equation ---
led_driver.a[6].re := cos(led_driver.argAdj[6])

--- Solved equation ---
v.i[7].re := - led_driver.c[6] * led_driver.a[6].re

--- Solved equation ---
led_driver.a[6].im := sin(led_driver.argAdj[6])

--- Solved equation ---
v.i[7].im := - led_driver.c[6] * led_driver.a[6].im

--- Solved equation ---
v.iMag[7] := (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[7] := led_driver.magScale * led_driver.mdlMag[8]

--- Solved equation ---
led_driver.argAdj[7] := led_driver.mdlArg[8] + (- led_driver.V_arg[1] .* systemDef.hrms[8])

--- Solved equation ---
led_driver.a[7].re := cos(led_driver.argAdj[7])

--- Solved equation ---
v.i[8].re := - led_driver.c[7] * led_driver.a[7].re

--- Solved equation ---
led_driver.a[7].im := sin(led_driver.argAdj[7])

--- Solved equation ---
v.i[8].im := - led_driver.c[7] * led_driver.a[7].im

--- Solved equation ---
v.iMag[8] := (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
v.iArg[1] := Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)

--- Solved equation ---
v.iArg[2] := Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)

--- Solved equation ---
v.iArg[3] := Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)

--- Solved equation ---
v.iArg[4] := Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)

--- Solved equation ---
v.iArg[5] := Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)

--- Solved equation ---
v.iArg[6] := Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)

--- Solved equation ---
v.iArg[7] := Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)

--- Solved equation ---
v.iArg[8] := Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)

--- Solved equation ---
v.omega := der(v.theta)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)

--- Solved equation ---
z.v[2].re := z.z.re .* (- v.i[2].re) + (- z.z.im .* systemDef.hrms[2] .* (- v.i[2].im))

--- Solved equation ---
z.v[2].im := z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)

--- Solved equation ---
z.v[3].re := z.z.re .* (- v.i[3].re) + (- z.z.im .* systemDef.hrms[3] .* (- v.i[3].im))

--- Solved equation ---
z.v[3].im := z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)

--- Solved equation ---
z.v[4].re := z.z.re .* (- v.i[4].re) + (- z.z.im .* systemDef.hrms[4] .* (- v.i[4].im))

--- Solved equation ---
z.v[4].im := z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)

--- Solved equation ---
z.v[5].re := z.z.re .* (- v.i[5].re) + (- z.z.im .* systemDef.hrms[5] .* (- v.i[5].im))

--- Solved equation ---
z.v[5].im := z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)

--- Solved equation ---
z.v[6].re := z.z.re .* (- v.i[6].re) + (- z.z.im .* systemDef.hrms[6] .* (- v.i[6].im))

--- Solved equation ---
z.v[6].im := z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)

--- Solved equation ---
z.v[7].re := z.z.re .* (- v.i[7].re) + (- z.z.im .* systemDef.hrms[7] .* (- v.i[7].im))

--- Solved equation ---
z.v[7].im := z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)

--- Solved equation ---
z.v[8].re := z.z.re .* (- v.i[8].re) + (- z.z.im .* systemDef.hrms[8] .* (- v.i[8].im))

--- Solved equation ---
z.v[8].im := z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)

--- Solved equation ---
z.omega := der(v.theta)

--- Solved equation ---
led_driver.loadBase.v[2].re := - z.v[2].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[3].re := - z.v[3].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[4].re := - z.v[4].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[5].re := - z.v[5].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[6].re := - z.v[6].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[7].re := - z.v[7].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[8].re := - z.v[8].re + 0.001

--- Solved equation ---
led_driver.loadBase.omega := der(v.theta)

--- Solved equation ---
led_driver.I_mag[1] := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[2] := ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[3] := ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[4] := ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[5] := ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[6] := ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[7] := ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[8] := ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_arg[2] := Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)

--- Solved equation ---
led_driver.I_arg[3] := Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)

--- Solved equation ---
led_driver.I_arg[4] := Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)

--- Solved equation ---
led_driver.I_arg[5] := Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)

--- Solved equation ---
led_driver.I_arg[6] := Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)

--- Solved equation ---
led_driver.I_arg[7] := Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)

--- Solved equation ---
led_driver.I_arg[8] := Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)

--- Solved equation ---
led_driver.V_mag[1] := (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[2] := (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[3] := (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[4] := (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[5] := (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[6] := (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[7] := (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[8] := (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_arg[2] := Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)

--- Solved equation ---
led_driver.V_arg[3] := Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)

--- Solved equation ---
led_driver.V_arg[4] := Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)

--- Solved equation ---
led_driver.V_arg[5] := Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)

--- Solved equation ---
led_driver.V_arg[6] := Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)

--- Solved equation ---
led_driver.V_arg[7] := Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)

--- Solved equation ---
led_driver.V_arg[8] := Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)

--- Meta equation block ---
algorithm


--- Meta equation block ---
algorithm


--- Meta equation block ---
HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))

***********************************

--- Meta equation block ---
algorithm


--- Solved equation ---
der(v.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
v.omega := der(v.theta)

--- Solved equation ---
load.u := u

--- Solved equation ---
load.i := load.u / led_driver.vDC.V

--- Solved equation ---
led_driver.P := abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)

--- Solved equation ---
led_driver.S := (- led_driver.P) / (- cos(led_driver.argS))

--- Solved equation ---
led_driver.Q := led_driver.S * sin(led_driver.argS)

--- Torn system (Block 1) of 2 iteration variables and 3 solved variables ---
Torn variables:
  z.v[1].im
  z.v[1].re
  led_driver.loadBase.v[1].re

Iteration variables:
  v.i[1].im (start=0)
  v.i[1].re (start=0)

Torn equations:
  z.v[1].im := z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
  z.v[1].re := z.z.re .* (- v.i[1].re) + (- z.z.im .* systemDef.hrms[1] .* (- v.i[1].im))
  led_driver.loadBase.v[1].re := - z.v[1].re + 120.0

Residual equations:
  led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
    Iteration variables: v.i[1].im
  led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
    Iteration variables: v.i[1].re

--- Solved equation ---
led_driver.magScale := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[1] := led_driver.magScale * led_driver.mdlMag[2]

--- Solved equation ---
led_driver.V_arg[1] := Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)

--- Solved equation ---
led_driver.argAdj[1] := led_driver.mdlArg[2] + (- led_driver.V_arg[1] .* systemDef.hrms[2])

--- Solved equation ---
led_driver.a[1].re := cos(led_driver.argAdj[1])

--- Solved equation ---
v.i[2].re := - led_driver.c[1] * led_driver.a[1].re

--- Solved equation ---
led_driver.a[1].im := sin(led_driver.argAdj[1])

--- Solved equation ---
v.i[2].im := - led_driver.c[1] * led_driver.a[1].im

--- Solved equation ---
z.v[2].re := z.z.re .* (- v.i[2].re) + (- z.z.im .* systemDef.hrms[2] .* (- v.i[2].im))

--- Solved equation ---
led_driver.c[2] := led_driver.magScale * led_driver.mdlMag[3]

--- Solved equation ---
led_driver.argAdj[2] := led_driver.mdlArg[3] + (- led_driver.V_arg[1] .* systemDef.hrms[3])

--- Solved equation ---
led_driver.a[2].re := cos(led_driver.argAdj[2])

--- Solved equation ---
v.i[3].re := - led_driver.c[2] * led_driver.a[2].re

--- Solved equation ---
led_driver.a[2].im := sin(led_driver.argAdj[2])

--- Solved equation ---
v.i[3].im := - led_driver.c[2] * led_driver.a[2].im

--- Solved equation ---
z.v[3].re := z.z.re .* (- v.i[3].re) + (- z.z.im .* systemDef.hrms[3] .* (- v.i[3].im))

--- Solved equation ---
led_driver.c[3] := led_driver.magScale * led_driver.mdlMag[4]

--- Solved equation ---
led_driver.argAdj[3] := led_driver.mdlArg[4] + (- led_driver.V_arg[1] .* systemDef.hrms[4])

--- Solved equation ---
led_driver.a[3].re := cos(led_driver.argAdj[3])

--- Solved equation ---
v.i[4].re := - led_driver.c[3] * led_driver.a[3].re

--- Solved equation ---
led_driver.a[3].im := sin(led_driver.argAdj[3])

--- Solved equation ---
v.i[4].im := - led_driver.c[3] * led_driver.a[3].im

--- Solved equation ---
z.v[4].re := z.z.re .* (- v.i[4].re) + (- z.z.im .* systemDef.hrms[4] .* (- v.i[4].im))

--- Solved equation ---
led_driver.c[4] := led_driver.magScale * led_driver.mdlMag[5]

--- Solved equation ---
led_driver.argAdj[4] := led_driver.mdlArg[5] + (- led_driver.V_arg[1] .* systemDef.hrms[5])

--- Solved equation ---
led_driver.a[4].re := cos(led_driver.argAdj[4])

--- Solved equation ---
v.i[5].re := - led_driver.c[4] * led_driver.a[4].re

--- Solved equation ---
led_driver.a[4].im := sin(led_driver.argAdj[4])

--- Solved equation ---
v.i[5].im := - led_driver.c[4] * led_driver.a[4].im

--- Solved equation ---
z.v[5].re := z.z.re .* (- v.i[5].re) + (- z.z.im .* systemDef.hrms[5] .* (- v.i[5].im))

--- Solved equation ---
led_driver.c[5] := led_driver.magScale * led_driver.mdlMag[6]

--- Solved equation ---
led_driver.argAdj[5] := led_driver.mdlArg[6] + (- led_driver.V_arg[1] .* systemDef.hrms[6])

--- Solved equation ---
led_driver.a[5].re := cos(led_driver.argAdj[5])

--- Solved equation ---
v.i[6].re := - led_driver.c[5] * led_driver.a[5].re

--- Solved equation ---
led_driver.a[5].im := sin(led_driver.argAdj[5])

--- Solved equation ---
v.i[6].im := - led_driver.c[5] * led_driver.a[5].im

--- Solved equation ---
z.v[6].re := z.z.re .* (- v.i[6].re) + (- z.z.im .* systemDef.hrms[6] .* (- v.i[6].im))

--- Solved equation ---
led_driver.c[6] := led_driver.magScale * led_driver.mdlMag[7]

--- Solved equation ---
led_driver.argAdj[6] := led_driver.mdlArg[7] + (- led_driver.V_arg[1] .* systemDef.hrms[7])

--- Solved equation ---
led_driver.a[6].re := cos(led_driver.argAdj[6])

--- Solved equation ---
v.i[7].re := - led_driver.c[6] * led_driver.a[6].re

--- Solved equation ---
led_driver.a[6].im := sin(led_driver.argAdj[6])

--- Solved equation ---
v.i[7].im := - led_driver.c[6] * led_driver.a[6].im

--- Solved equation ---
z.v[7].re := z.z.re .* (- v.i[7].re) + (- z.z.im .* systemDef.hrms[7] .* (- v.i[7].im))

--- Solved equation ---
led_driver.c[7] := led_driver.magScale * led_driver.mdlMag[8]

--- Solved equation ---
led_driver.argAdj[7] := led_driver.mdlArg[8] + (- led_driver.V_arg[1] .* systemDef.hrms[8])

--- Solved equation ---
led_driver.a[7].re := cos(led_driver.argAdj[7])

--- Solved equation ---
v.i[8].re := - led_driver.c[7] * led_driver.a[7].re

--- Solved equation ---
led_driver.a[7].im := sin(led_driver.argAdj[7])

--- Solved equation ---
v.i[8].im := - led_driver.c[7] * led_driver.a[7].im

--- Solved equation ---
z.v[8].re := z.z.re .* (- v.i[8].re) + (- z.z.im .* systemDef.hrms[8] .* (- v.i[8].im))

--- Solved equation ---
z.v[2].im := z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)

--- Solved equation ---
z.v[3].im := z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)

--- Solved equation ---
z.v[4].im := z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)

--- Solved equation ---
z.v[5].im := z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)

--- Solved equation ---
z.v[6].im := z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)

--- Solved equation ---
z.v[7].im := z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)

--- Solved equation ---
z.v[8].im := z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)

--- Solved equation ---
z.omega := der(v.theta)

--- Solved equation ---
led_driver.loadBase.v[2].re := - z.v[2].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[3].re := - z.v[3].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[4].re := - z.v[4].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[5].re := - z.v[5].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[6].re := - z.v[6].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[7].re := - z.v[7].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[8].re := - z.v[8].re + 0.001

--- Solved equation ---
led_driver.PLoss := led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency

--- Meta equation block ---
algorithm


--- Solved equation ---
led_driver.loadBase.omega := der(v.theta)

--- Solved equation ---
ground.pin.iIm[1] := 0

--- Solved equation ---
ground.pin.iIm[2] := 0

--- Solved equation ---
ground.pin.iIm[3] := 0

--- Solved equation ---
ground.pin.iIm[4] := 0

--- Solved equation ---
ground.pin.iIm[5] := 0

--- Solved equation ---
ground.pin.iIm[6] := 0

--- Solved equation ---
ground.pin.iIm[7] := 0

--- Solved equation ---
ground.pin.iIm[8] := 0

--- Solved equation ---
ground.pin.iRe[1] := 0

--- Solved equation ---
ground.pin.iRe[2] := 0

--- Solved equation ---
ground.pin.iRe[3] := 0

--- Solved equation ---
ground.pin.iRe[4] := 0

--- Solved equation ---
ground.pin.iRe[5] := 0

--- Solved equation ---
ground.pin.iRe[6] := 0

--- Solved equation ---
ground.pin.iRe[7] := 0

--- Solved equation ---
ground.pin.iRe[8] := 0

--- Solved equation ---
ground2.p.i := 0

--- Solved equation ---
y := led_driver.PLoss

--- Meta equation block ---
HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))

--- Solved equation ---
v.P1 := 120.0 * v.i[1].re

--- Solved equation ---
v.iMag[1] := (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[2] := (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[3] := (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[4] := (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[5] := (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[6] := (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[7] := (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[8] := (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
v.iArg[1] := Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)

--- Solved equation ---
v.iArg[2] := Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)

--- Solved equation ---
v.iArg[3] := Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)

--- Solved equation ---
v.iArg[4] := Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)

--- Solved equation ---
v.iArg[5] := Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)

--- Solved equation ---
v.iArg[6] := Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)

--- Solved equation ---
v.iArg[7] := Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)

--- Solved equation ---
v.iArg[8] := Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[1] := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[2] := ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[3] := ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[4] := ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[5] := ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[6] := ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[7] := ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[8] := ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_arg[2] := Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)

--- Solved equation ---
led_driver.I_arg[3] := Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)

--- Solved equation ---
led_driver.I_arg[4] := Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)

--- Solved equation ---
led_driver.I_arg[5] := Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)

--- Solved equation ---
led_driver.I_arg[6] := Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)

--- Solved equation ---
led_driver.I_arg[7] := Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)

--- Solved equation ---
led_driver.I_arg[8] := Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)

--- Solved equation ---
led_driver.V_mag[1] := (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[2] := (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[3] := (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[4] := (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[5] := (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[6] := (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[7] := (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[8] := (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_arg[2] := Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)

--- Solved equation ---
led_driver.V_arg[3] := Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)

--- Solved equation ---
led_driver.V_arg[4] := Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)

--- Solved equation ---
led_driver.V_arg[5] := Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)

--- Solved equation ---
led_driver.V_arg[6] := Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)

--- Solved equation ---
led_driver.V_arg[7] := Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)

--- Solved equation ---
led_driver.V_arg[8] := Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
-------------------------------

BiPGraph (152 equations, 150 variables)
Variables: {der(v.theta) ground.pin.iIm[1] ground.pin.iIm[2] ground.pin.iIm[3] ground.pin.iIm[4] ground.pin.iIm[5] ground.pin.iIm[6] ground.pin.iIm[7] ground.pin.iIm[8] ground.pin.iRe[1] ground.pin.iRe[2] ground.pin.iRe[3] ground.pin.iRe[4] ground.pin.iRe[5] ground.pin.iRe[6] ground.pin.iRe[7] ground.pin.iRe[8] ground2.p.i v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.omega led_driver.PLoss led_driver.loadBase.v[1].re led_driver.loadBase.v[2].re led_driver.loadBase.v[3].re led_driver.loadBase.v[4].re led_driver.loadBase.v[5].re led_driver.loadBase.v[6].re led_driver.loadBase.v[7].re led_driver.loadBase.v[8].re led_driver.loadBase.omega led_driver.P led_driver.I_mag[1] led_driver.I_mag[2] led_driver.I_mag[3] led_driver.I_mag[4] led_driver.I_mag[5] led_driver.I_mag[6] led_driver.I_mag[7] led_driver.I_mag[8] led_driver.I_arg[2] led_driver.I_arg[3] led_driver.I_arg[4] led_driver.I_arg[5] led_driver.I_arg[6] led_driver.I_arg[7] led_driver.I_arg[8] led_driver.V_mag[1] led_driver.V_mag[2] led_driver.V_mag[3] led_driver.V_mag[4] led_driver.V_mag[5] led_driver.V_mag[6] led_driver.V_mag[7] led_driver.V_mag[8] led_driver.V_arg[1] led_driver.V_arg[2] led_driver.V_arg[3] led_driver.V_arg[4] led_driver.V_arg[5] led_driver.V_arg[6] led_driver.V_arg[7] led_driver.V_arg[8] led_driver.S led_driver.Q led_driver.magScale led_driver.argAdj[1] led_driver.argAdj[2] led_driver.argAdj[3] led_driver.argAdj[4] led_driver.argAdj[5] led_driver.argAdj[6] led_driver.argAdj[7] led_driver.a[1].re led_driver.a[1].im led_driver.a[2].re led_driver.a[2].im led_driver.a[3].re led_driver.a[3].im led_driver.a[4].re led_driver.a[4].im led_driver.a[5].re led_driver.a[5].im led_driver.a[6].re led_driver.a[6].im led_driver.a[7].re led_driver.a[7].im led_driver.c[1] led_driver.c[2] led_driver.c[3] led_driver.c[4] led_driver.c[5] led_driver.c[6] led_driver.c[7] load.u load.i y v.theta }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_5 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_6 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_7 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_8 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_9 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_10 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_11 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_12 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_13 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_14 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_15 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_16 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_17 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_18 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_19 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_20 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_21 : z.v[1].re@ led_driver.loadBase.v[1].re@M // z.v[1].re = 120.0 - led_driver.loadBase.v[1].re
eq_22 : z.v[2].re@ led_driver.loadBase.v[2].re@M // z.v[2].re = 0.001 - led_driver.loadBase.v[2].re
eq_23 : z.v[3].re@ led_driver.loadBase.v[3].re@M // z.v[3].re = 0.001 - led_driver.loadBase.v[3].re
eq_24 : z.v[4].re@ led_driver.loadBase.v[4].re@M // z.v[4].re = 0.001 - led_driver.loadBase.v[4].re
eq_25 : z.v[5].re@ led_driver.loadBase.v[5].re@M // z.v[5].re = 0.001 - led_driver.loadBase.v[5].re
eq_26 : z.v[6].re@ led_driver.loadBase.v[6].re@M // z.v[6].re = 0.001 - led_driver.loadBase.v[6].re
eq_27 : z.v[7].re@ led_driver.loadBase.v[7].re@M // z.v[7].re = 0.001 - led_driver.loadBase.v[7].re
eq_28 : z.v[8].re@ led_driver.loadBase.v[8].re@M // z.v[8].re = 0.001 - led_driver.loadBase.v[8].re
eq_29 : led_driver.P@ led_driver.S@M // led_driver.P = led_driver.S * cos(led_driver.argS)
eq_30 : led_driver.Q@M led_driver.S@ // led_driver.Q = led_driver.S * sin(led_driver.argS)
eq_31 : led_driver.P@ led_driver.loadBase.v[1].re@ v.i[1].re@M z.v[1].im@ v.i[1].im@ // led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
eq_32 : led_driver.Q@ led_driver.loadBase.v[1].re@ v.i[1].im@M z.v[1].im@ v.i[1].re@ // led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
eq_33 : v.i[2].re@M led_driver.c[1]@ led_driver.a[1].re@ // - v.i[2].re = led_driver.c[1] * led_driver.a[1].re
eq_34 : v.i[2].im@M led_driver.c[1]@ led_driver.a[1].im@ // - v.i[2].im = led_driver.c[1] * led_driver.a[1].im
eq_35 : v.i[3].re@M led_driver.c[2]@ led_driver.a[2].re@ // - v.i[3].re = led_driver.c[2] * led_driver.a[2].re
eq_36 : v.i[3].im@M led_driver.c[2]@ led_driver.a[2].im@ // - v.i[3].im = led_driver.c[2] * led_driver.a[2].im
eq_37 : v.i[4].re@M led_driver.c[3]@ led_driver.a[3].re@ // - v.i[4].re = led_driver.c[3] * led_driver.a[3].re
eq_38 : v.i[4].im@M led_driver.c[3]@ led_driver.a[3].im@ // - v.i[4].im = led_driver.c[3] * led_driver.a[3].im
eq_39 : v.i[5].re@M led_driver.c[4]@ led_driver.a[4].re@ // - v.i[5].re = led_driver.c[4] * led_driver.a[4].re
eq_40 : v.i[5].im@M led_driver.c[4]@ led_driver.a[4].im@ // - v.i[5].im = led_driver.c[4] * led_driver.a[4].im
eq_41 : v.i[6].re@M led_driver.c[5]@ led_driver.a[5].re@ // - v.i[6].re = led_driver.c[5] * led_driver.a[5].re
eq_42 : v.i[6].im@M led_driver.c[5]@ led_driver.a[5].im@ // - v.i[6].im = led_driver.c[5] * led_driver.a[5].im
eq_43 : v.i[7].re@M led_driver.c[6]@ led_driver.a[6].re@ // - v.i[7].re = led_driver.c[6] * led_driver.a[6].re
eq_44 : v.i[7].im@M led_driver.c[6]@ led_driver.a[6].im@ // - v.i[7].im = led_driver.c[6] * led_driver.a[6].im
eq_45 : v.i[8].re@M led_driver.c[7]@ led_driver.a[7].re@ // - v.i[8].re = led_driver.c[7] * led_driver.a[7].re
eq_46 : v.i[8].im@M led_driver.c[7]@ led_driver.a[7].im@ // - v.i[8].im = led_driver.c[7] * led_driver.a[7].im
eq_47 : led_driver.PLoss@M led_driver.P@ // led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency
eq_48 : // algorithm

eq_49 : led_driver.loadBase.omega@M der(v.theta)@ // led_driver.loadBase.omega = der(v.theta)
eq_50 : load.i@M load.u@ // load.i = load.u / led_driver.vDC.V
eq_51 : ground.pin.iIm[1]@M // ground.pin.iIm[1] = 0
eq_52 : ground.pin.iIm[2]@M // ground.pin.iIm[2] = 0
eq_53 : ground.pin.iIm[3]@M // ground.pin.iIm[3] = 0
eq_54 : ground.pin.iIm[4]@M // ground.pin.iIm[4] = 0
eq_55 : ground.pin.iIm[5]@M // ground.pin.iIm[5] = 0
eq_56 : ground.pin.iIm[6]@M // ground.pin.iIm[6] = 0
eq_57 : ground.pin.iIm[7]@M // ground.pin.iIm[7] = 0
eq_58 : ground.pin.iIm[8]@M // ground.pin.iIm[8] = 0
eq_59 : ground.pin.iRe[1]@M // ground.pin.iRe[1] = 0
eq_60 : ground.pin.iRe[2]@M // ground.pin.iRe[2] = 0
eq_61 : ground.pin.iRe[3]@M // ground.pin.iRe[3] = 0
eq_62 : ground.pin.iRe[4]@M // ground.pin.iRe[4] = 0
eq_63 : ground.pin.iRe[5]@M // ground.pin.iRe[5] = 0
eq_64 : ground.pin.iRe[6]@M // ground.pin.iRe[6] = 0
eq_65 : ground.pin.iRe[7]@M // ground.pin.iRe[7] = 0
eq_66 : ground.pin.iRe[8]@M // ground.pin.iRe[8] = 0
eq_67 : ground2.p.i@M // ground2.p.i = 0
eq_68 : led_driver.PLoss@ y@M // led_driver.PLoss = y
eq_69 : load.u@M // load.u = u
eq_70 : v.theta# // HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))
eq_71 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_72 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_73 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_74 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_75 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_76 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_77 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_78 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_79 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_80 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_81 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_82 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_83 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_84 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_85 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_86 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_87 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_88 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_89 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_90 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_91 : led_driver.P@M load.i@ // led_driver.P = abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)
eq_92 : led_driver.I_mag[1]@M v.i[1].re@ v.i[1].im@ // led_driver.I_mag[1] = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_93 : led_driver.I_mag[2]@M v.i[2].re@ v.i[2].im@ // led_driver.I_mag[2] = ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5
eq_94 : led_driver.I_mag[3]@M v.i[3].re@ v.i[3].im@ // led_driver.I_mag[3] = ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5
eq_95 : led_driver.I_mag[4]@M v.i[4].re@ v.i[4].im@ // led_driver.I_mag[4] = ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5
eq_96 : led_driver.I_mag[5]@M v.i[5].re@ v.i[5].im@ // led_driver.I_mag[5] = ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5
eq_97 : led_driver.I_mag[6]@M v.i[6].re@ v.i[6].im@ // led_driver.I_mag[6] = ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5
eq_98 : led_driver.I_mag[7]@M v.i[7].re@ v.i[7].im@ // led_driver.I_mag[7] = ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5
eq_99 : led_driver.I_mag[8]@M v.i[8].re@ v.i[8].im@ // led_driver.I_mag[8] = ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5
eq_100 : led_driver.I_arg[2]@M v.i[2].im@ v.i[2].re@ // led_driver.I_arg[2] = Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)
eq_101 : led_driver.I_arg[3]@M v.i[3].im@ v.i[3].re@ // led_driver.I_arg[3] = Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)
eq_102 : led_driver.I_arg[4]@M v.i[4].im@ v.i[4].re@ // led_driver.I_arg[4] = Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)
eq_103 : led_driver.I_arg[5]@M v.i[5].im@ v.i[5].re@ // led_driver.I_arg[5] = Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)
eq_104 : led_driver.I_arg[6]@M v.i[6].im@ v.i[6].re@ // led_driver.I_arg[6] = Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)
eq_105 : led_driver.I_arg[7]@M v.i[7].im@ v.i[7].re@ // led_driver.I_arg[7] = Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)
eq_106 : led_driver.I_arg[8]@M v.i[8].im@ v.i[8].re@ // led_driver.I_arg[8] = Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)
eq_107 : led_driver.V_mag[1]@M led_driver.loadBase.v[1].re@ z.v[1].im@ // led_driver.V_mag[1] = (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_108 : led_driver.V_mag[2]@M led_driver.loadBase.v[2].re@ z.v[2].im@ // led_driver.V_mag[2] = (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_109 : led_driver.V_mag[3]@M led_driver.loadBase.v[3].re@ z.v[3].im@ // led_driver.V_mag[3] = (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_110 : led_driver.V_mag[4]@M led_driver.loadBase.v[4].re@ z.v[4].im@ // led_driver.V_mag[4] = (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_111 : led_driver.V_mag[5]@M led_driver.loadBase.v[5].re@ z.v[5].im@ // led_driver.V_mag[5] = (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_112 : led_driver.V_mag[6]@M led_driver.loadBase.v[6].re@ z.v[6].im@ // led_driver.V_mag[6] = (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_113 : led_driver.V_mag[7]@M led_driver.loadBase.v[7].re@ z.v[7].im@ // led_driver.V_mag[7] = (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_114 : led_driver.V_mag[8]@M led_driver.loadBase.v[8].re@ z.v[8].im@ // led_driver.V_mag[8] = (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_115 : led_driver.V_arg[2]@M z.v[2].im@ led_driver.loadBase.v[2].re@ // led_driver.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)
eq_116 : led_driver.V_arg[3]@M z.v[3].im@ led_driver.loadBase.v[3].re@ // led_driver.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)
eq_117 : led_driver.V_arg[4]@M z.v[4].im@ led_driver.loadBase.v[4].re@ // led_driver.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)
eq_118 : led_driver.V_arg[5]@M z.v[5].im@ led_driver.loadBase.v[5].re@ // led_driver.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)
eq_119 : led_driver.V_arg[6]@M z.v[6].im@ led_driver.loadBase.v[6].re@ // led_driver.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)
eq_120 : led_driver.V_arg[7]@M z.v[7].im@ led_driver.loadBase.v[7].re@ // led_driver.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)
eq_121 : led_driver.V_arg[8]@M z.v[8].im@ led_driver.loadBase.v[8].re@ // led_driver.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)
eq_122 : led_driver.magScale@M v.i[1].re@ v.i[1].im@ // led_driver.magScale = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_123 : led_driver.argAdj[1]@M led_driver.V_arg[1]@ // led_driver.argAdj[1] = led_driver.mdlArg[2] - led_driver.V_arg[1] .* systemDef.hrms[2]
eq_124 : led_driver.argAdj[2]@M led_driver.V_arg[1]@ // led_driver.argAdj[2] = led_driver.mdlArg[3] - led_driver.V_arg[1] .* systemDef.hrms[3]
eq_125 : led_driver.argAdj[3]@M led_driver.V_arg[1]@ // led_driver.argAdj[3] = led_driver.mdlArg[4] - led_driver.V_arg[1] .* systemDef.hrms[4]
eq_126 : led_driver.argAdj[4]@M led_driver.V_arg[1]@ // led_driver.argAdj[4] = led_driver.mdlArg[5] - led_driver.V_arg[1] .* systemDef.hrms[5]
eq_127 : led_driver.argAdj[5]@M led_driver.V_arg[1]@ // led_driver.argAdj[5] = led_driver.mdlArg[6] - led_driver.V_arg[1] .* systemDef.hrms[6]
eq_128 : led_driver.argAdj[6]@M led_driver.V_arg[1]@ // led_driver.argAdj[6] = led_driver.mdlArg[7] - led_driver.V_arg[1] .* systemDef.hrms[7]
eq_129 : led_driver.argAdj[7]@M led_driver.V_arg[1]@ // led_driver.argAdj[7] = led_driver.mdlArg[8] - led_driver.V_arg[1] .* systemDef.hrms[8]
eq_130 : led_driver.a[1].re@M led_driver.argAdj[1]@ // led_driver.a[1].re = cos(led_driver.argAdj[1])
eq_131 : led_driver.a[1].im@M led_driver.argAdj[1]@ // led_driver.a[1].im = sin(led_driver.argAdj[1])
eq_132 : led_driver.a[2].re@M led_driver.argAdj[2]@ // led_driver.a[2].re = cos(led_driver.argAdj[2])
eq_133 : led_driver.a[2].im@M led_driver.argAdj[2]@ // led_driver.a[2].im = sin(led_driver.argAdj[2])
eq_134 : led_driver.a[3].re@M led_driver.argAdj[3]@ // led_driver.a[3].re = cos(led_driver.argAdj[3])
eq_135 : led_driver.a[3].im@M led_driver.argAdj[3]@ // led_driver.a[3].im = sin(led_driver.argAdj[3])
eq_136 : led_driver.a[4].re@M led_driver.argAdj[4]@ // led_driver.a[4].re = cos(led_driver.argAdj[4])
eq_137 : led_driver.a[4].im@M led_driver.argAdj[4]@ // led_driver.a[4].im = sin(led_driver.argAdj[4])
eq_138 : led_driver.a[5].re@M led_driver.argAdj[5]@ // led_driver.a[5].re = cos(led_driver.argAdj[5])
eq_139 : led_driver.a[5].im@M led_driver.argAdj[5]@ // led_driver.a[5].im = sin(led_driver.argAdj[5])
eq_140 : led_driver.a[6].re@M led_driver.argAdj[6]@ // led_driver.a[6].re = cos(led_driver.argAdj[6])
eq_141 : led_driver.a[6].im@M led_driver.argAdj[6]@ // led_driver.a[6].im = sin(led_driver.argAdj[6])
eq_142 : led_driver.a[7].re@M led_driver.argAdj[7]@ // led_driver.a[7].re = cos(led_driver.argAdj[7])
eq_143 : led_driver.a[7].im@M led_driver.argAdj[7]@ // led_driver.a[7].im = sin(led_driver.argAdj[7])
eq_144 : led_driver.c[1]@M led_driver.magScale@ // led_driver.c[1] = led_driver.magScale * led_driver.mdlMag[2]
eq_145 : led_driver.c[2]@M led_driver.magScale@ // led_driver.c[2] = led_driver.magScale * led_driver.mdlMag[3]
eq_146 : led_driver.c[3]@M led_driver.magScale@ // led_driver.c[3] = led_driver.magScale * led_driver.mdlMag[4]
eq_147 : led_driver.c[4]@M led_driver.magScale@ // led_driver.c[4] = led_driver.magScale * led_driver.mdlMag[5]
eq_148 : led_driver.c[5]@M led_driver.magScale@ // led_driver.c[5] = led_driver.magScale * led_driver.mdlMag[6]
eq_149 : led_driver.c[6]@M led_driver.magScale@ // led_driver.c[6] = led_driver.magScale * led_driver.mdlMag[7]
eq_150 : led_driver.c[7]@M led_driver.magScale@ // led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[8]
eq_151 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_152 : led_driver.V_arg[1]@M z.v[1].im@ led_driver.loadBase.v[1].re@ // led_driver.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)

Init DAE BiPGraph
BiPGraph (153 equations, 150 variables)
Variables: {der(v.theta) ground.pin.iIm[1] ground.pin.iIm[2] ground.pin.iIm[3] ground.pin.iIm[4] ground.pin.iIm[5] ground.pin.iIm[6] ground.pin.iIm[7] ground.pin.iIm[8] ground.pin.iRe[1] ground.pin.iRe[2] ground.pin.iRe[3] ground.pin.iRe[4] ground.pin.iRe[5] ground.pin.iRe[6] ground.pin.iRe[7] ground.pin.iRe[8] ground2.p.i v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.omega led_driver.PLoss led_driver.loadBase.v[1].re led_driver.loadBase.v[2].re led_driver.loadBase.v[3].re led_driver.loadBase.v[4].re led_driver.loadBase.v[5].re led_driver.loadBase.v[6].re led_driver.loadBase.v[7].re led_driver.loadBase.v[8].re led_driver.loadBase.omega led_driver.P led_driver.I_mag[1] led_driver.I_mag[2] led_driver.I_mag[3] led_driver.I_mag[4] led_driver.I_mag[5] led_driver.I_mag[6] led_driver.I_mag[7] led_driver.I_mag[8] led_driver.I_arg[2] led_driver.I_arg[3] led_driver.I_arg[4] led_driver.I_arg[5] led_driver.I_arg[6] led_driver.I_arg[7] led_driver.I_arg[8] led_driver.V_mag[1] led_driver.V_mag[2] led_driver.V_mag[3] led_driver.V_mag[4] led_driver.V_mag[5] led_driver.V_mag[6] led_driver.V_mag[7] led_driver.V_mag[8] led_driver.V_arg[1] led_driver.V_arg[2] led_driver.V_arg[3] led_driver.V_arg[4] led_driver.V_arg[5] led_driver.V_arg[6] led_driver.V_arg[7] led_driver.V_arg[8] led_driver.S led_driver.Q led_driver.magScale led_driver.argAdj[1] led_driver.argAdj[2] led_driver.argAdj[3] led_driver.argAdj[4] led_driver.argAdj[5] led_driver.argAdj[6] led_driver.argAdj[7] led_driver.a[1].re led_driver.a[1].im led_driver.a[2].re led_driver.a[2].im led_driver.a[3].re led_driver.a[3].im led_driver.a[4].re led_driver.a[4].im led_driver.a[5].re led_driver.a[5].im led_driver.a[6].re led_driver.a[6].im led_driver.a[7].re led_driver.a[7].im led_driver.c[1] led_driver.c[2] led_driver.c[3] led_driver.c[4] led_driver.c[5] led_driver.c[6] led_driver.c[7] load.u load.i y v.theta }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_5 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_6 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_7 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_8 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_9 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_10 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_11 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_12 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_13 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_14 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_15 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_16 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_17 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_18 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_19 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_20 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_21 : z.v[1].re@ led_driver.loadBase.v[1].re@M // z.v[1].re = 120.0 - led_driver.loadBase.v[1].re
eq_22 : z.v[2].re@ led_driver.loadBase.v[2].re@M // z.v[2].re = 0.001 - led_driver.loadBase.v[2].re
eq_23 : z.v[3].re@ led_driver.loadBase.v[3].re@M // z.v[3].re = 0.001 - led_driver.loadBase.v[3].re
eq_24 : z.v[4].re@ led_driver.loadBase.v[4].re@M // z.v[4].re = 0.001 - led_driver.loadBase.v[4].re
eq_25 : z.v[5].re@ led_driver.loadBase.v[5].re@M // z.v[5].re = 0.001 - led_driver.loadBase.v[5].re
eq_26 : z.v[6].re@ led_driver.loadBase.v[6].re@M // z.v[6].re = 0.001 - led_driver.loadBase.v[6].re
eq_27 : z.v[7].re@ led_driver.loadBase.v[7].re@M // z.v[7].re = 0.001 - led_driver.loadBase.v[7].re
eq_28 : z.v[8].re@ led_driver.loadBase.v[8].re@M // z.v[8].re = 0.001 - led_driver.loadBase.v[8].re
eq_29 : led_driver.P@ led_driver.S@M // led_driver.P = led_driver.S * cos(led_driver.argS)
eq_30 : led_driver.Q@M led_driver.S@ // led_driver.Q = led_driver.S * sin(led_driver.argS)
eq_31 : led_driver.P@ led_driver.loadBase.v[1].re@ v.i[1].re@M z.v[1].im@ v.i[1].im@ // led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
eq_32 : led_driver.Q@ led_driver.loadBase.v[1].re@ v.i[1].im@M z.v[1].im@ v.i[1].re@ // led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
eq_33 : v.i[2].re@M led_driver.c[1]@ led_driver.a[1].re@ // - v.i[2].re = led_driver.c[1] * led_driver.a[1].re
eq_34 : v.i[2].im@M led_driver.c[1]@ led_driver.a[1].im@ // - v.i[2].im = led_driver.c[1] * led_driver.a[1].im
eq_35 : v.i[3].re@M led_driver.c[2]@ led_driver.a[2].re@ // - v.i[3].re = led_driver.c[2] * led_driver.a[2].re
eq_36 : v.i[3].im@M led_driver.c[2]@ led_driver.a[2].im@ // - v.i[3].im = led_driver.c[2] * led_driver.a[2].im
eq_37 : v.i[4].re@M led_driver.c[3]@ led_driver.a[3].re@ // - v.i[4].re = led_driver.c[3] * led_driver.a[3].re
eq_38 : v.i[4].im@M led_driver.c[3]@ led_driver.a[3].im@ // - v.i[4].im = led_driver.c[3] * led_driver.a[3].im
eq_39 : v.i[5].re@M led_driver.c[4]@ led_driver.a[4].re@ // - v.i[5].re = led_driver.c[4] * led_driver.a[4].re
eq_40 : v.i[5].im@M led_driver.c[4]@ led_driver.a[4].im@ // - v.i[5].im = led_driver.c[4] * led_driver.a[4].im
eq_41 : v.i[6].re@M led_driver.c[5]@ led_driver.a[5].re@ // - v.i[6].re = led_driver.c[5] * led_driver.a[5].re
eq_42 : v.i[6].im@M led_driver.c[5]@ led_driver.a[5].im@ // - v.i[6].im = led_driver.c[5] * led_driver.a[5].im
eq_43 : v.i[7].re@M led_driver.c[6]@ led_driver.a[6].re@ // - v.i[7].re = led_driver.c[6] * led_driver.a[6].re
eq_44 : v.i[7].im@M led_driver.c[6]@ led_driver.a[6].im@ // - v.i[7].im = led_driver.c[6] * led_driver.a[6].im
eq_45 : v.i[8].re@M led_driver.c[7]@ led_driver.a[7].re@ // - v.i[8].re = led_driver.c[7] * led_driver.a[7].re
eq_46 : v.i[8].im@M led_driver.c[7]@ led_driver.a[7].im@ // - v.i[8].im = led_driver.c[7] * led_driver.a[7].im
eq_47 : led_driver.PLoss@M led_driver.P@ // led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency
eq_48 : // algorithm

eq_49 : led_driver.loadBase.omega@M der(v.theta)@ // led_driver.loadBase.omega = der(v.theta)
eq_50 : load.i@M load.u@ // load.i = load.u / led_driver.vDC.V
eq_51 : ground.pin.iIm[1]@M // ground.pin.iIm[1] = 0
eq_52 : ground.pin.iIm[2]@M // ground.pin.iIm[2] = 0
eq_53 : ground.pin.iIm[3]@M // ground.pin.iIm[3] = 0
eq_54 : ground.pin.iIm[4]@M // ground.pin.iIm[4] = 0
eq_55 : ground.pin.iIm[5]@M // ground.pin.iIm[5] = 0
eq_56 : ground.pin.iIm[6]@M // ground.pin.iIm[6] = 0
eq_57 : ground.pin.iIm[7]@M // ground.pin.iIm[7] = 0
eq_58 : ground.pin.iIm[8]@M // ground.pin.iIm[8] = 0
eq_59 : ground.pin.iRe[1]@M // ground.pin.iRe[1] = 0
eq_60 : ground.pin.iRe[2]@M // ground.pin.iRe[2] = 0
eq_61 : ground.pin.iRe[3]@M // ground.pin.iRe[3] = 0
eq_62 : ground.pin.iRe[4]@M // ground.pin.iRe[4] = 0
eq_63 : ground.pin.iRe[5]@M // ground.pin.iRe[5] = 0
eq_64 : ground.pin.iRe[6]@M // ground.pin.iRe[6] = 0
eq_65 : ground.pin.iRe[7]@M // ground.pin.iRe[7] = 0
eq_66 : ground.pin.iRe[8]@M // ground.pin.iRe[8] = 0
eq_67 : ground2.p.i@M // ground2.p.i = 0
eq_68 : led_driver.PLoss@ y@M // led_driver.PLoss = y
eq_69 : load.u@M // load.u = u
eq_70 : v.theta# // HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))
eq_71 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_72 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_73 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_74 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_75 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_76 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_77 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_78 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_79 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_80 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_81 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_82 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_83 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_84 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_85 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_86 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_87 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_88 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_89 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_90 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_91 : led_driver.P@M load.i@ // led_driver.P = abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)
eq_92 : led_driver.I_mag[1]@M v.i[1].re@ v.i[1].im@ // led_driver.I_mag[1] = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_93 : led_driver.I_mag[2]@M v.i[2].re@ v.i[2].im@ // led_driver.I_mag[2] = ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5
eq_94 : led_driver.I_mag[3]@M v.i[3].re@ v.i[3].im@ // led_driver.I_mag[3] = ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5
eq_95 : led_driver.I_mag[4]@M v.i[4].re@ v.i[4].im@ // led_driver.I_mag[4] = ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5
eq_96 : led_driver.I_mag[5]@M v.i[5].re@ v.i[5].im@ // led_driver.I_mag[5] = ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5
eq_97 : led_driver.I_mag[6]@M v.i[6].re@ v.i[6].im@ // led_driver.I_mag[6] = ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5
eq_98 : led_driver.I_mag[7]@M v.i[7].re@ v.i[7].im@ // led_driver.I_mag[7] = ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5
eq_99 : led_driver.I_mag[8]@M v.i[8].re@ v.i[8].im@ // led_driver.I_mag[8] = ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5
eq_100 : led_driver.I_arg[2]@M v.i[2].im@ v.i[2].re@ // led_driver.I_arg[2] = Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)
eq_101 : led_driver.I_arg[3]@M v.i[3].im@ v.i[3].re@ // led_driver.I_arg[3] = Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)
eq_102 : led_driver.I_arg[4]@M v.i[4].im@ v.i[4].re@ // led_driver.I_arg[4] = Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)
eq_103 : led_driver.I_arg[5]@M v.i[5].im@ v.i[5].re@ // led_driver.I_arg[5] = Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)
eq_104 : led_driver.I_arg[6]@M v.i[6].im@ v.i[6].re@ // led_driver.I_arg[6] = Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)
eq_105 : led_driver.I_arg[7]@M v.i[7].im@ v.i[7].re@ // led_driver.I_arg[7] = Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)
eq_106 : led_driver.I_arg[8]@M v.i[8].im@ v.i[8].re@ // led_driver.I_arg[8] = Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)
eq_107 : led_driver.V_mag[1]@M led_driver.loadBase.v[1].re@ z.v[1].im@ // led_driver.V_mag[1] = (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_108 : led_driver.V_mag[2]@M led_driver.loadBase.v[2].re@ z.v[2].im@ // led_driver.V_mag[2] = (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_109 : led_driver.V_mag[3]@M led_driver.loadBase.v[3].re@ z.v[3].im@ // led_driver.V_mag[3] = (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_110 : led_driver.V_mag[4]@M led_driver.loadBase.v[4].re@ z.v[4].im@ // led_driver.V_mag[4] = (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_111 : led_driver.V_mag[5]@M led_driver.loadBase.v[5].re@ z.v[5].im@ // led_driver.V_mag[5] = (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_112 : led_driver.V_mag[6]@M led_driver.loadBase.v[6].re@ z.v[6].im@ // led_driver.V_mag[6] = (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_113 : led_driver.V_mag[7]@M led_driver.loadBase.v[7].re@ z.v[7].im@ // led_driver.V_mag[7] = (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_114 : led_driver.V_mag[8]@M led_driver.loadBase.v[8].re@ z.v[8].im@ // led_driver.V_mag[8] = (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_115 : led_driver.V_arg[2]@M z.v[2].im@ led_driver.loadBase.v[2].re@ // led_driver.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)
eq_116 : led_driver.V_arg[3]@M z.v[3].im@ led_driver.loadBase.v[3].re@ // led_driver.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)
eq_117 : led_driver.V_arg[4]@M z.v[4].im@ led_driver.loadBase.v[4].re@ // led_driver.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)
eq_118 : led_driver.V_arg[5]@M z.v[5].im@ led_driver.loadBase.v[5].re@ // led_driver.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)
eq_119 : led_driver.V_arg[6]@M z.v[6].im@ led_driver.loadBase.v[6].re@ // led_driver.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)
eq_120 : led_driver.V_arg[7]@M z.v[7].im@ led_driver.loadBase.v[7].re@ // led_driver.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)
eq_121 : led_driver.V_arg[8]@M z.v[8].im@ led_driver.loadBase.v[8].re@ // led_driver.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)
eq_122 : led_driver.magScale@M v.i[1].re@ v.i[1].im@ // led_driver.magScale = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_123 : led_driver.argAdj[1]@M led_driver.V_arg[1]@ // led_driver.argAdj[1] = led_driver.mdlArg[2] - led_driver.V_arg[1] .* systemDef.hrms[2]
eq_124 : led_driver.argAdj[2]@M led_driver.V_arg[1]@ // led_driver.argAdj[2] = led_driver.mdlArg[3] - led_driver.V_arg[1] .* systemDef.hrms[3]
eq_125 : led_driver.argAdj[3]@M led_driver.V_arg[1]@ // led_driver.argAdj[3] = led_driver.mdlArg[4] - led_driver.V_arg[1] .* systemDef.hrms[4]
eq_126 : led_driver.argAdj[4]@M led_driver.V_arg[1]@ // led_driver.argAdj[4] = led_driver.mdlArg[5] - led_driver.V_arg[1] .* systemDef.hrms[5]
eq_127 : led_driver.argAdj[5]@M led_driver.V_arg[1]@ // led_driver.argAdj[5] = led_driver.mdlArg[6] - led_driver.V_arg[1] .* systemDef.hrms[6]
eq_128 : led_driver.argAdj[6]@M led_driver.V_arg[1]@ // led_driver.argAdj[6] = led_driver.mdlArg[7] - led_driver.V_arg[1] .* systemDef.hrms[7]
eq_129 : led_driver.argAdj[7]@M led_driver.V_arg[1]@ // led_driver.argAdj[7] = led_driver.mdlArg[8] - led_driver.V_arg[1] .* systemDef.hrms[8]
eq_130 : led_driver.a[1].re@M led_driver.argAdj[1]@ // led_driver.a[1].re = cos(led_driver.argAdj[1])
eq_131 : led_driver.a[1].im@M led_driver.argAdj[1]@ // led_driver.a[1].im = sin(led_driver.argAdj[1])
eq_132 : led_driver.a[2].re@M led_driver.argAdj[2]@ // led_driver.a[2].re = cos(led_driver.argAdj[2])
eq_133 : led_driver.a[2].im@M led_driver.argAdj[2]@ // led_driver.a[2].im = sin(led_driver.argAdj[2])
eq_134 : led_driver.a[3].re@M led_driver.argAdj[3]@ // led_driver.a[3].re = cos(led_driver.argAdj[3])
eq_135 : led_driver.a[3].im@M led_driver.argAdj[3]@ // led_driver.a[3].im = sin(led_driver.argAdj[3])
eq_136 : led_driver.a[4].re@M led_driver.argAdj[4]@ // led_driver.a[4].re = cos(led_driver.argAdj[4])
eq_137 : led_driver.a[4].im@M led_driver.argAdj[4]@ // led_driver.a[4].im = sin(led_driver.argAdj[4])
eq_138 : led_driver.a[5].re@M led_driver.argAdj[5]@ // led_driver.a[5].re = cos(led_driver.argAdj[5])
eq_139 : led_driver.a[5].im@M led_driver.argAdj[5]@ // led_driver.a[5].im = sin(led_driver.argAdj[5])
eq_140 : led_driver.a[6].re@M led_driver.argAdj[6]@ // led_driver.a[6].re = cos(led_driver.argAdj[6])
eq_141 : led_driver.a[6].im@M led_driver.argAdj[6]@ // led_driver.a[6].im = sin(led_driver.argAdj[6])
eq_142 : led_driver.a[7].re@M led_driver.argAdj[7]@ // led_driver.a[7].re = cos(led_driver.argAdj[7])
eq_143 : led_driver.a[7].im@M led_driver.argAdj[7]@ // led_driver.a[7].im = sin(led_driver.argAdj[7])
eq_144 : led_driver.c[1]@M led_driver.magScale@ // led_driver.c[1] = led_driver.magScale * led_driver.mdlMag[2]
eq_145 : led_driver.c[2]@M led_driver.magScale@ // led_driver.c[2] = led_driver.magScale * led_driver.mdlMag[3]
eq_146 : led_driver.c[3]@M led_driver.magScale@ // led_driver.c[3] = led_driver.magScale * led_driver.mdlMag[4]
eq_147 : led_driver.c[4]@M led_driver.magScale@ // led_driver.c[4] = led_driver.magScale * led_driver.mdlMag[5]
eq_148 : led_driver.c[5]@M led_driver.magScale@ // led_driver.c[5] = led_driver.magScale * led_driver.mdlMag[6]
eq_149 : led_driver.c[6]@M led_driver.magScale@ // led_driver.c[6] = led_driver.magScale * led_driver.mdlMag[7]
eq_150 : led_driver.c[7]@M led_driver.magScale@ // led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[8]
eq_151 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_152 : led_driver.V_arg[1]@M z.v[1].im@ led_driver.loadBase.v[1].re@ // led_driver.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)
eq_153 : // algorithm


Init BiPGraph matching
----------------------------------------
BiPGraph matching:
eq_2 : der(v.theta)
eq_3 : v.omega
eq_4 : z.v[1].re
eq_5 : z.v[2].re
eq_6 : z.v[3].re
eq_7 : z.v[4].re
eq_8 : z.v[5].re
eq_9 : z.v[6].re
eq_10 : z.v[7].re
eq_11 : z.v[8].re
eq_12 : z.v[1].im
eq_13 : z.v[2].im
eq_14 : z.v[3].im
eq_15 : z.v[4].im
eq_16 : z.v[5].im
eq_17 : z.v[6].im
eq_18 : z.v[7].im
eq_19 : z.v[8].im
eq_20 : z.omega
eq_21 : led_driver.loadBase.v[1].re
eq_22 : led_driver.loadBase.v[2].re
eq_23 : led_driver.loadBase.v[3].re
eq_24 : led_driver.loadBase.v[4].re
eq_25 : led_driver.loadBase.v[5].re
eq_26 : led_driver.loadBase.v[6].re
eq_27 : led_driver.loadBase.v[7].re
eq_28 : led_driver.loadBase.v[8].re
eq_29 : led_driver.S
eq_30 : led_driver.Q
eq_31 : v.i[1].re
eq_32 : v.i[1].im
eq_33 : v.i[2].re
eq_34 : v.i[2].im
eq_35 : v.i[3].re
eq_36 : v.i[3].im
eq_37 : v.i[4].re
eq_38 : v.i[4].im
eq_39 : v.i[5].re
eq_40 : v.i[5].im
eq_41 : v.i[6].re
eq_42 : v.i[6].im
eq_43 : v.i[7].re
eq_44 : v.i[7].im
eq_45 : v.i[8].re
eq_46 : v.i[8].im
eq_47 : led_driver.PLoss
eq_49 : led_driver.loadBase.omega
eq_50 : load.i
eq_51 : ground.pin.iIm[1]
eq_52 : ground.pin.iIm[2]
eq_53 : ground.pin.iIm[3]
eq_54 : ground.pin.iIm[4]
eq_55 : ground.pin.iIm[5]
eq_56 : ground.pin.iIm[6]
eq_57 : ground.pin.iIm[7]
eq_58 : ground.pin.iIm[8]
eq_59 : ground.pin.iRe[1]
eq_60 : ground.pin.iRe[2]
eq_61 : ground.pin.iRe[3]
eq_62 : ground.pin.iRe[4]
eq_63 : ground.pin.iRe[5]
eq_64 : ground.pin.iRe[6]
eq_65 : ground.pin.iRe[7]
eq_66 : ground.pin.iRe[8]
eq_67 : ground2.p.i
eq_68 : y
eq_69 : load.u
eq_71 : v.P1
eq_72 : v.iMag[1]
eq_73 : v.iMag[2]
eq_74 : v.iMag[3]
eq_75 : v.iMag[4]
eq_76 : v.iMag[5]
eq_77 : v.iMag[6]
eq_78 : v.iMag[7]
eq_79 : v.iMag[8]
eq_80 : v.iArg[1]
eq_81 : v.iArg[2]
eq_82 : v.iArg[3]
eq_83 : v.iArg[4]
eq_84 : v.iArg[5]
eq_85 : v.iArg[6]
eq_86 : v.iArg[7]
eq_87 : v.iArg[8]
eq_88 : z.vFundAbs
eq_89 : z.vFundArg
eq_90 : z.iFundAbs
eq_91 : led_driver.P
eq_92 : led_driver.I_mag[1]
eq_93 : led_driver.I_mag[2]
eq_94 : led_driver.I_mag[3]
eq_95 : led_driver.I_mag[4]
eq_96 : led_driver.I_mag[5]
eq_97 : led_driver.I_mag[6]
eq_98 : led_driver.I_mag[7]
eq_99 : led_driver.I_mag[8]
eq_100 : led_driver.I_arg[2]
eq_101 : led_driver.I_arg[3]
eq_102 : led_driver.I_arg[4]
eq_103 : led_driver.I_arg[5]
eq_104 : led_driver.I_arg[6]
eq_105 : led_driver.I_arg[7]
eq_106 : led_driver.I_arg[8]
eq_107 : led_driver.V_mag[1]
eq_108 : led_driver.V_mag[2]
eq_109 : led_driver.V_mag[3]
eq_110 : led_driver.V_mag[4]
eq_111 : led_driver.V_mag[5]
eq_112 : led_driver.V_mag[6]
eq_113 : led_driver.V_mag[7]
eq_114 : led_driver.V_mag[8]
eq_115 : led_driver.V_arg[2]
eq_116 : led_driver.V_arg[3]
eq_117 : led_driver.V_arg[4]
eq_118 : led_driver.V_arg[5]
eq_119 : led_driver.V_arg[6]
eq_120 : led_driver.V_arg[7]
eq_121 : led_driver.V_arg[8]
eq_122 : led_driver.magScale
eq_123 : led_driver.argAdj[1]
eq_124 : led_driver.argAdj[2]
eq_125 : led_driver.argAdj[3]
eq_126 : led_driver.argAdj[4]
eq_127 : led_driver.argAdj[5]
eq_128 : led_driver.argAdj[6]
eq_129 : led_driver.argAdj[7]
eq_130 : led_driver.a[1].re
eq_131 : led_driver.a[1].im
eq_132 : led_driver.a[2].re
eq_133 : led_driver.a[2].im
eq_134 : led_driver.a[3].re
eq_135 : led_driver.a[3].im
eq_136 : led_driver.a[4].re
eq_137 : led_driver.a[4].im
eq_138 : led_driver.a[5].re
eq_139 : led_driver.a[5].im
eq_140 : led_driver.a[6].re
eq_141 : led_driver.a[6].im
eq_142 : led_driver.a[7].re
eq_143 : led_driver.a[7].im
eq_144 : led_driver.c[1]
eq_145 : led_driver.c[2]
eq_146 : led_driver.c[3]
eq_147 : led_driver.c[4]
eq_148 : led_driver.c[5]
eq_149 : led_driver.c[6]
eq_150 : led_driver.c[7]
eq_151 : z.iFundArg
eq_152 : led_driver.V_arg[1]
Unmatched equations: {}
Unmatched variables: {v.theta }
----------------------------------------

Analysing initial system for redundant equations to remove.
All seems to be ok!
Init DAE BiPGraph after addition of initial equations
BiPGraph (154 equations, 150 variables)
Variables: {der(v.theta) ground.pin.iIm[1] ground.pin.iIm[2] ground.pin.iIm[3] ground.pin.iIm[4] ground.pin.iIm[5] ground.pin.iIm[6] ground.pin.iIm[7] ground.pin.iIm[8] ground.pin.iRe[1] ground.pin.iRe[2] ground.pin.iRe[3] ground.pin.iRe[4] ground.pin.iRe[5] ground.pin.iRe[6] ground.pin.iRe[7] ground.pin.iRe[8] ground2.p.i v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.omega z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.omega led_driver.PLoss led_driver.loadBase.v[1].re led_driver.loadBase.v[2].re led_driver.loadBase.v[3].re led_driver.loadBase.v[4].re led_driver.loadBase.v[5].re led_driver.loadBase.v[6].re led_driver.loadBase.v[7].re led_driver.loadBase.v[8].re led_driver.loadBase.omega led_driver.P led_driver.I_mag[1] led_driver.I_mag[2] led_driver.I_mag[3] led_driver.I_mag[4] led_driver.I_mag[5] led_driver.I_mag[6] led_driver.I_mag[7] led_driver.I_mag[8] led_driver.I_arg[2] led_driver.I_arg[3] led_driver.I_arg[4] led_driver.I_arg[5] led_driver.I_arg[6] led_driver.I_arg[7] led_driver.I_arg[8] led_driver.V_mag[1] led_driver.V_mag[2] led_driver.V_mag[3] led_driver.V_mag[4] led_driver.V_mag[5] led_driver.V_mag[6] led_driver.V_mag[7] led_driver.V_mag[8] led_driver.V_arg[1] led_driver.V_arg[2] led_driver.V_arg[3] led_driver.V_arg[4] led_driver.V_arg[5] led_driver.V_arg[6] led_driver.V_arg[7] led_driver.V_arg[8] led_driver.S led_driver.Q led_driver.magScale led_driver.argAdj[1] led_driver.argAdj[2] led_driver.argAdj[3] led_driver.argAdj[4] led_driver.argAdj[5] led_driver.argAdj[6] led_driver.argAdj[7] led_driver.a[1].re led_driver.a[1].im led_driver.a[2].re led_driver.a[2].im led_driver.a[3].re led_driver.a[3].im led_driver.a[4].re led_driver.a[4].im led_driver.a[5].re led_driver.a[5].im led_driver.a[6].re led_driver.a[6].im led_driver.a[7].re led_driver.a[7].im led_driver.c[1] led_driver.c[2] led_driver.c[3] led_driver.c[4] led_driver.c[5] led_driver.c[6] led_driver.c[7] load.u load.i y v.theta }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_5 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_6 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_7 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_8 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_9 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_10 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_11 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_12 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_13 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_14 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_15 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_16 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_17 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_18 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_19 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_20 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_21 : z.v[1].re@ led_driver.loadBase.v[1].re@M // z.v[1].re = 120.0 - led_driver.loadBase.v[1].re
eq_22 : z.v[2].re@ led_driver.loadBase.v[2].re@M // z.v[2].re = 0.001 - led_driver.loadBase.v[2].re
eq_23 : z.v[3].re@ led_driver.loadBase.v[3].re@M // z.v[3].re = 0.001 - led_driver.loadBase.v[3].re
eq_24 : z.v[4].re@ led_driver.loadBase.v[4].re@M // z.v[4].re = 0.001 - led_driver.loadBase.v[4].re
eq_25 : z.v[5].re@ led_driver.loadBase.v[5].re@M // z.v[5].re = 0.001 - led_driver.loadBase.v[5].re
eq_26 : z.v[6].re@ led_driver.loadBase.v[6].re@M // z.v[6].re = 0.001 - led_driver.loadBase.v[6].re
eq_27 : z.v[7].re@ led_driver.loadBase.v[7].re@M // z.v[7].re = 0.001 - led_driver.loadBase.v[7].re
eq_28 : z.v[8].re@ led_driver.loadBase.v[8].re@M // z.v[8].re = 0.001 - led_driver.loadBase.v[8].re
eq_29 : led_driver.P@ led_driver.S@M // led_driver.P = led_driver.S * cos(led_driver.argS)
eq_30 : led_driver.Q@M led_driver.S@ // led_driver.Q = led_driver.S * sin(led_driver.argS)
eq_31 : led_driver.P@ led_driver.loadBase.v[1].re@ v.i[1].re@M z.v[1].im@ v.i[1].im@ // led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
eq_32 : led_driver.Q@ led_driver.loadBase.v[1].re@ v.i[1].im@M z.v[1].im@ v.i[1].re@ // led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
eq_33 : v.i[2].re@M led_driver.c[1]@ led_driver.a[1].re@ // - v.i[2].re = led_driver.c[1] * led_driver.a[1].re
eq_34 : v.i[2].im@M led_driver.c[1]@ led_driver.a[1].im@ // - v.i[2].im = led_driver.c[1] * led_driver.a[1].im
eq_35 : v.i[3].re@M led_driver.c[2]@ led_driver.a[2].re@ // - v.i[3].re = led_driver.c[2] * led_driver.a[2].re
eq_36 : v.i[3].im@M led_driver.c[2]@ led_driver.a[2].im@ // - v.i[3].im = led_driver.c[2] * led_driver.a[2].im
eq_37 : v.i[4].re@M led_driver.c[3]@ led_driver.a[3].re@ // - v.i[4].re = led_driver.c[3] * led_driver.a[3].re
eq_38 : v.i[4].im@M led_driver.c[3]@ led_driver.a[3].im@ // - v.i[4].im = led_driver.c[3] * led_driver.a[3].im
eq_39 : v.i[5].re@M led_driver.c[4]@ led_driver.a[4].re@ // - v.i[5].re = led_driver.c[4] * led_driver.a[4].re
eq_40 : v.i[5].im@M led_driver.c[4]@ led_driver.a[4].im@ // - v.i[5].im = led_driver.c[4] * led_driver.a[4].im
eq_41 : v.i[6].re@M led_driver.c[5]@ led_driver.a[5].re@ // - v.i[6].re = led_driver.c[5] * led_driver.a[5].re
eq_42 : v.i[6].im@M led_driver.c[5]@ led_driver.a[5].im@ // - v.i[6].im = led_driver.c[5] * led_driver.a[5].im
eq_43 : v.i[7].re@M led_driver.c[6]@ led_driver.a[6].re@ // - v.i[7].re = led_driver.c[6] * led_driver.a[6].re
eq_44 : v.i[7].im@M led_driver.c[6]@ led_driver.a[6].im@ // - v.i[7].im = led_driver.c[6] * led_driver.a[6].im
eq_45 : v.i[8].re@M led_driver.c[7]@ led_driver.a[7].re@ // - v.i[8].re = led_driver.c[7] * led_driver.a[7].re
eq_46 : v.i[8].im@M led_driver.c[7]@ led_driver.a[7].im@ // - v.i[8].im = led_driver.c[7] * led_driver.a[7].im
eq_47 : led_driver.PLoss@M led_driver.P@ // led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency
eq_48 : // algorithm

eq_49 : led_driver.loadBase.omega@M der(v.theta)@ // led_driver.loadBase.omega = der(v.theta)
eq_50 : load.i@M load.u@ // load.i = load.u / led_driver.vDC.V
eq_51 : ground.pin.iIm[1]@M // ground.pin.iIm[1] = 0
eq_52 : ground.pin.iIm[2]@M // ground.pin.iIm[2] = 0
eq_53 : ground.pin.iIm[3]@M // ground.pin.iIm[3] = 0
eq_54 : ground.pin.iIm[4]@M // ground.pin.iIm[4] = 0
eq_55 : ground.pin.iIm[5]@M // ground.pin.iIm[5] = 0
eq_56 : ground.pin.iIm[6]@M // ground.pin.iIm[6] = 0
eq_57 : ground.pin.iIm[7]@M // ground.pin.iIm[7] = 0
eq_58 : ground.pin.iIm[8]@M // ground.pin.iIm[8] = 0
eq_59 : ground.pin.iRe[1]@M // ground.pin.iRe[1] = 0
eq_60 : ground.pin.iRe[2]@M // ground.pin.iRe[2] = 0
eq_61 : ground.pin.iRe[3]@M // ground.pin.iRe[3] = 0
eq_62 : ground.pin.iRe[4]@M // ground.pin.iRe[4] = 0
eq_63 : ground.pin.iRe[5]@M // ground.pin.iRe[5] = 0
eq_64 : ground.pin.iRe[6]@M // ground.pin.iRe[6] = 0
eq_65 : ground.pin.iRe[7]@M // ground.pin.iRe[7] = 0
eq_66 : ground.pin.iRe[8]@M // ground.pin.iRe[8] = 0
eq_67 : ground2.p.i@M // ground2.p.i = 0
eq_68 : led_driver.PLoss@ y@M // led_driver.PLoss = y
eq_69 : load.u@M // load.u = u
eq_70 : v.theta# // HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))
eq_71 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_72 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_73 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_74 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_75 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_76 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_77 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_78 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_79 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_80 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_81 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_82 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_83 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_84 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_85 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_86 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_87 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_88 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_89 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_90 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_91 : led_driver.P@M load.i@ // led_driver.P = abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)
eq_92 : led_driver.I_mag[1]@M v.i[1].re@ v.i[1].im@ // led_driver.I_mag[1] = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_93 : led_driver.I_mag[2]@M v.i[2].re@ v.i[2].im@ // led_driver.I_mag[2] = ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5
eq_94 : led_driver.I_mag[3]@M v.i[3].re@ v.i[3].im@ // led_driver.I_mag[3] = ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5
eq_95 : led_driver.I_mag[4]@M v.i[4].re@ v.i[4].im@ // led_driver.I_mag[4] = ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5
eq_96 : led_driver.I_mag[5]@M v.i[5].re@ v.i[5].im@ // led_driver.I_mag[5] = ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5
eq_97 : led_driver.I_mag[6]@M v.i[6].re@ v.i[6].im@ // led_driver.I_mag[6] = ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5
eq_98 : led_driver.I_mag[7]@M v.i[7].re@ v.i[7].im@ // led_driver.I_mag[7] = ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5
eq_99 : led_driver.I_mag[8]@M v.i[8].re@ v.i[8].im@ // led_driver.I_mag[8] = ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5
eq_100 : led_driver.I_arg[2]@M v.i[2].im@ v.i[2].re@ // led_driver.I_arg[2] = Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)
eq_101 : led_driver.I_arg[3]@M v.i[3].im@ v.i[3].re@ // led_driver.I_arg[3] = Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)
eq_102 : led_driver.I_arg[4]@M v.i[4].im@ v.i[4].re@ // led_driver.I_arg[4] = Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)
eq_103 : led_driver.I_arg[5]@M v.i[5].im@ v.i[5].re@ // led_driver.I_arg[5] = Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)
eq_104 : led_driver.I_arg[6]@M v.i[6].im@ v.i[6].re@ // led_driver.I_arg[6] = Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)
eq_105 : led_driver.I_arg[7]@M v.i[7].im@ v.i[7].re@ // led_driver.I_arg[7] = Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)
eq_106 : led_driver.I_arg[8]@M v.i[8].im@ v.i[8].re@ // led_driver.I_arg[8] = Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)
eq_107 : led_driver.V_mag[1]@M led_driver.loadBase.v[1].re@ z.v[1].im@ // led_driver.V_mag[1] = (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_108 : led_driver.V_mag[2]@M led_driver.loadBase.v[2].re@ z.v[2].im@ // led_driver.V_mag[2] = (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_109 : led_driver.V_mag[3]@M led_driver.loadBase.v[3].re@ z.v[3].im@ // led_driver.V_mag[3] = (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_110 : led_driver.V_mag[4]@M led_driver.loadBase.v[4].re@ z.v[4].im@ // led_driver.V_mag[4] = (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_111 : led_driver.V_mag[5]@M led_driver.loadBase.v[5].re@ z.v[5].im@ // led_driver.V_mag[5] = (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_112 : led_driver.V_mag[6]@M led_driver.loadBase.v[6].re@ z.v[6].im@ // led_driver.V_mag[6] = (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_113 : led_driver.V_mag[7]@M led_driver.loadBase.v[7].re@ z.v[7].im@ // led_driver.V_mag[7] = (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_114 : led_driver.V_mag[8]@M led_driver.loadBase.v[8].re@ z.v[8].im@ // led_driver.V_mag[8] = (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_115 : led_driver.V_arg[2]@M z.v[2].im@ led_driver.loadBase.v[2].re@ // led_driver.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)
eq_116 : led_driver.V_arg[3]@M z.v[3].im@ led_driver.loadBase.v[3].re@ // led_driver.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)
eq_117 : led_driver.V_arg[4]@M z.v[4].im@ led_driver.loadBase.v[4].re@ // led_driver.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)
eq_118 : led_driver.V_arg[5]@M z.v[5].im@ led_driver.loadBase.v[5].re@ // led_driver.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)
eq_119 : led_driver.V_arg[6]@M z.v[6].im@ led_driver.loadBase.v[6].re@ // led_driver.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)
eq_120 : led_driver.V_arg[7]@M z.v[7].im@ led_driver.loadBase.v[7].re@ // led_driver.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)
eq_121 : led_driver.V_arg[8]@M z.v[8].im@ led_driver.loadBase.v[8].re@ // led_driver.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)
eq_122 : led_driver.magScale@M v.i[1].re@ v.i[1].im@ // led_driver.magScale = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_123 : led_driver.argAdj[1]@M led_driver.V_arg[1]@ // led_driver.argAdj[1] = led_driver.mdlArg[2] - led_driver.V_arg[1] .* systemDef.hrms[2]
eq_124 : led_driver.argAdj[2]@M led_driver.V_arg[1]@ // led_driver.argAdj[2] = led_driver.mdlArg[3] - led_driver.V_arg[1] .* systemDef.hrms[3]
eq_125 : led_driver.argAdj[3]@M led_driver.V_arg[1]@ // led_driver.argAdj[3] = led_driver.mdlArg[4] - led_driver.V_arg[1] .* systemDef.hrms[4]
eq_126 : led_driver.argAdj[4]@M led_driver.V_arg[1]@ // led_driver.argAdj[4] = led_driver.mdlArg[5] - led_driver.V_arg[1] .* systemDef.hrms[5]
eq_127 : led_driver.argAdj[5]@M led_driver.V_arg[1]@ // led_driver.argAdj[5] = led_driver.mdlArg[6] - led_driver.V_arg[1] .* systemDef.hrms[6]
eq_128 : led_driver.argAdj[6]@M led_driver.V_arg[1]@ // led_driver.argAdj[6] = led_driver.mdlArg[7] - led_driver.V_arg[1] .* systemDef.hrms[7]
eq_129 : led_driver.argAdj[7]@M led_driver.V_arg[1]@ // led_driver.argAdj[7] = led_driver.mdlArg[8] - led_driver.V_arg[1] .* systemDef.hrms[8]
eq_130 : led_driver.a[1].re@M led_driver.argAdj[1]@ // led_driver.a[1].re = cos(led_driver.argAdj[1])
eq_131 : led_driver.a[1].im@M led_driver.argAdj[1]@ // led_driver.a[1].im = sin(led_driver.argAdj[1])
eq_132 : led_driver.a[2].re@M led_driver.argAdj[2]@ // led_driver.a[2].re = cos(led_driver.argAdj[2])
eq_133 : led_driver.a[2].im@M led_driver.argAdj[2]@ // led_driver.a[2].im = sin(led_driver.argAdj[2])
eq_134 : led_driver.a[3].re@M led_driver.argAdj[3]@ // led_driver.a[3].re = cos(led_driver.argAdj[3])
eq_135 : led_driver.a[3].im@M led_driver.argAdj[3]@ // led_driver.a[3].im = sin(led_driver.argAdj[3])
eq_136 : led_driver.a[4].re@M led_driver.argAdj[4]@ // led_driver.a[4].re = cos(led_driver.argAdj[4])
eq_137 : led_driver.a[4].im@M led_driver.argAdj[4]@ // led_driver.a[4].im = sin(led_driver.argAdj[4])
eq_138 : led_driver.a[5].re@M led_driver.argAdj[5]@ // led_driver.a[5].re = cos(led_driver.argAdj[5])
eq_139 : led_driver.a[5].im@M led_driver.argAdj[5]@ // led_driver.a[5].im = sin(led_driver.argAdj[5])
eq_140 : led_driver.a[6].re@M led_driver.argAdj[6]@ // led_driver.a[6].re = cos(led_driver.argAdj[6])
eq_141 : led_driver.a[6].im@M led_driver.argAdj[6]@ // led_driver.a[6].im = sin(led_driver.argAdj[6])
eq_142 : led_driver.a[7].re@M led_driver.argAdj[7]@ // led_driver.a[7].re = cos(led_driver.argAdj[7])
eq_143 : led_driver.a[7].im@M led_driver.argAdj[7]@ // led_driver.a[7].im = sin(led_driver.argAdj[7])
eq_144 : led_driver.c[1]@M led_driver.magScale@ // led_driver.c[1] = led_driver.magScale * led_driver.mdlMag[2]
eq_145 : led_driver.c[2]@M led_driver.magScale@ // led_driver.c[2] = led_driver.magScale * led_driver.mdlMag[3]
eq_146 : led_driver.c[3]@M led_driver.magScale@ // led_driver.c[3] = led_driver.magScale * led_driver.mdlMag[4]
eq_147 : led_driver.c[4]@M led_driver.magScale@ // led_driver.c[4] = led_driver.magScale * led_driver.mdlMag[5]
eq_148 : led_driver.c[5]@M led_driver.magScale@ // led_driver.c[5] = led_driver.magScale * led_driver.mdlMag[6]
eq_149 : led_driver.c[6]@M led_driver.magScale@ // led_driver.c[6] = led_driver.magScale * led_driver.mdlMag[7]
eq_150 : led_driver.c[7]@M led_driver.magScale@ // led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[8]
eq_151 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_152 : led_driver.V_arg[1]@M z.v[1].im@ led_driver.loadBase.v[1].re@ // led_driver.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)
eq_153 : // algorithm

eq_154 : v.theta@M // v.theta = 0

Init BiPGraph matching after addition of initial equations
----------------------------------------
BiPGraph matching:
eq_2 : der(v.theta)
eq_3 : v.omega
eq_4 : z.v[1].re
eq_5 : z.v[2].re
eq_6 : z.v[3].re
eq_7 : z.v[4].re
eq_8 : z.v[5].re
eq_9 : z.v[6].re
eq_10 : z.v[7].re
eq_11 : z.v[8].re
eq_12 : z.v[1].im
eq_13 : z.v[2].im
eq_14 : z.v[3].im
eq_15 : z.v[4].im
eq_16 : z.v[5].im
eq_17 : z.v[6].im
eq_18 : z.v[7].im
eq_19 : z.v[8].im
eq_20 : z.omega
eq_21 : led_driver.loadBase.v[1].re
eq_22 : led_driver.loadBase.v[2].re
eq_23 : led_driver.loadBase.v[3].re
eq_24 : led_driver.loadBase.v[4].re
eq_25 : led_driver.loadBase.v[5].re
eq_26 : led_driver.loadBase.v[6].re
eq_27 : led_driver.loadBase.v[7].re
eq_28 : led_driver.loadBase.v[8].re
eq_29 : led_driver.S
eq_30 : led_driver.Q
eq_31 : v.i[1].re
eq_32 : v.i[1].im
eq_33 : v.i[2].re
eq_34 : v.i[2].im
eq_35 : v.i[3].re
eq_36 : v.i[3].im
eq_37 : v.i[4].re
eq_38 : v.i[4].im
eq_39 : v.i[5].re
eq_40 : v.i[5].im
eq_41 : v.i[6].re
eq_42 : v.i[6].im
eq_43 : v.i[7].re
eq_44 : v.i[7].im
eq_45 : v.i[8].re
eq_46 : v.i[8].im
eq_47 : led_driver.PLoss
eq_49 : led_driver.loadBase.omega
eq_50 : load.i
eq_51 : ground.pin.iIm[1]
eq_52 : ground.pin.iIm[2]
eq_53 : ground.pin.iIm[3]
eq_54 : ground.pin.iIm[4]
eq_55 : ground.pin.iIm[5]
eq_56 : ground.pin.iIm[6]
eq_57 : ground.pin.iIm[7]
eq_58 : ground.pin.iIm[8]
eq_59 : ground.pin.iRe[1]
eq_60 : ground.pin.iRe[2]
eq_61 : ground.pin.iRe[3]
eq_62 : ground.pin.iRe[4]
eq_63 : ground.pin.iRe[5]
eq_64 : ground.pin.iRe[6]
eq_65 : ground.pin.iRe[7]
eq_66 : ground.pin.iRe[8]
eq_67 : ground2.p.i
eq_68 : y
eq_69 : load.u
eq_71 : v.P1
eq_72 : v.iMag[1]
eq_73 : v.iMag[2]
eq_74 : v.iMag[3]
eq_75 : v.iMag[4]
eq_76 : v.iMag[5]
eq_77 : v.iMag[6]
eq_78 : v.iMag[7]
eq_79 : v.iMag[8]
eq_80 : v.iArg[1]
eq_81 : v.iArg[2]
eq_82 : v.iArg[3]
eq_83 : v.iArg[4]
eq_84 : v.iArg[5]
eq_85 : v.iArg[6]
eq_86 : v.iArg[7]
eq_87 : v.iArg[8]
eq_88 : z.vFundAbs
eq_89 : z.vFundArg
eq_90 : z.iFundAbs
eq_91 : led_driver.P
eq_92 : led_driver.I_mag[1]
eq_93 : led_driver.I_mag[2]
eq_94 : led_driver.I_mag[3]
eq_95 : led_driver.I_mag[4]
eq_96 : led_driver.I_mag[5]
eq_97 : led_driver.I_mag[6]
eq_98 : led_driver.I_mag[7]
eq_99 : led_driver.I_mag[8]
eq_100 : led_driver.I_arg[2]
eq_101 : led_driver.I_arg[3]
eq_102 : led_driver.I_arg[4]
eq_103 : led_driver.I_arg[5]
eq_104 : led_driver.I_arg[6]
eq_105 : led_driver.I_arg[7]
eq_106 : led_driver.I_arg[8]
eq_107 : led_driver.V_mag[1]
eq_108 : led_driver.V_mag[2]
eq_109 : led_driver.V_mag[3]
eq_110 : led_driver.V_mag[4]
eq_111 : led_driver.V_mag[5]
eq_112 : led_driver.V_mag[6]
eq_113 : led_driver.V_mag[7]
eq_114 : led_driver.V_mag[8]
eq_115 : led_driver.V_arg[2]
eq_116 : led_driver.V_arg[3]
eq_117 : led_driver.V_arg[4]
eq_118 : led_driver.V_arg[5]
eq_119 : led_driver.V_arg[6]
eq_120 : led_driver.V_arg[7]
eq_121 : led_driver.V_arg[8]
eq_122 : led_driver.magScale
eq_123 : led_driver.argAdj[1]
eq_124 : led_driver.argAdj[2]
eq_125 : led_driver.argAdj[3]
eq_126 : led_driver.argAdj[4]
eq_127 : led_driver.argAdj[5]
eq_128 : led_driver.argAdj[6]
eq_129 : led_driver.argAdj[7]
eq_130 : led_driver.a[1].re
eq_131 : led_driver.a[1].im
eq_132 : led_driver.a[2].re
eq_133 : led_driver.a[2].im
eq_134 : led_driver.a[3].re
eq_135 : led_driver.a[3].im
eq_136 : led_driver.a[4].re
eq_137 : led_driver.a[4].im
eq_138 : led_driver.a[5].re
eq_139 : led_driver.a[5].im
eq_140 : led_driver.a[6].re
eq_141 : led_driver.a[6].im
eq_142 : led_driver.a[7].re
eq_143 : led_driver.a[7].im
eq_144 : led_driver.c[1]
eq_145 : led_driver.c[2]
eq_146 : led_driver.c[3]
eq_147 : led_driver.c[4]
eq_148 : led_driver.c[5]
eq_149 : led_driver.c[6]
eq_150 : led_driver.c[7]
eq_151 : z.iFundArg
eq_152 : led_driver.V_arg[1]
eq_154 : v.theta
Unmatched equations: {}
Unmatched variables: {}
----------------------------------------

Initial system contains homotopy, computing homotopy block components...
... block components computed: []
Starting automatic tearing
BiPGraph (5 equations, 5 variables)
Variables: {v.i[1].im z.v[1].im led_driver.loadBase.v[1].re v.i[1].re z.v[1].re }
eq_32 : led_driver.loadBase.v[1].re# v.i[1].im# z.v[1].im# v.i[1].re# // led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
eq_12 : z.v[1].im@M v.i[1].im# v.i[1].re# // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_21 : z.v[1].re@ led_driver.loadBase.v[1].re@M // z.v[1].re = 120.0 - led_driver.loadBase.v[1].re
eq_31 : led_driver.loadBase.v[1].re# v.i[1].re# z.v[1].im# v.i[1].im# // led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
eq_4 : z.v[1].re@M v.i[1].re# v.i[1].im# // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_12 : z.v[1].im
eq_21 : led_driver.loadBase.v[1].re
eq_4 : z.v[1].re
Unmatched equations: {eq_32 eq_31 }
Unmatched variables: {v.i[1].im v.i[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_12 : z.v[1].im
eq_21 : led_driver.loadBase.v[1].re
eq_4 : z.v[1].re
Unmatched equations: {eq_32 eq_31 }
Unmatched variables: {v.i[1].im v.i[1].re }
----------------------------------------

Automatic tearing pair, equation: led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re), tearing with variable: v.i[1].im
Automatic tearing pair, equation: led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im, tearing with variable: v.i[1].re
--- Meta equation block ---
algorithm


--- Solved equation ---
der(v.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
v.omega := der(v.theta)

--- Solved equation ---
load.u := u

--- Solved equation ---
load.i := load.u / led_driver.vDC.V

--- Solved equation ---
led_driver.P := abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency)

--- Solved equation ---
led_driver.S := (- led_driver.P) / (- cos(led_driver.argS))

--- Solved equation ---
led_driver.Q := led_driver.S * sin(led_driver.argS)

--- Torn system (Block 1) of 2 iteration variables and 3 solved variables ---
Torn variables:
  z.v[1].im
  z.v[1].re
  led_driver.loadBase.v[1].re

Iteration variables:
  v.i[1].im (start=0)
  v.i[1].re (start=0)

Torn equations:
  z.v[1].im := z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
  z.v[1].re := z.z.re .* (- v.i[1].re) + (- z.z.im .* systemDef.hrms[1] .* (- v.i[1].im))
  led_driver.loadBase.v[1].re := - z.v[1].re + 120.0

Residual equations:
  led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re)
    Iteration variables: v.i[1].im
  led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im
    Iteration variables: v.i[1].re

--- Solved equation ---
led_driver.magScale := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.c[1] := led_driver.magScale * led_driver.mdlMag[2]

--- Solved equation ---
led_driver.V_arg[1] := Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0)

--- Solved equation ---
led_driver.argAdj[1] := led_driver.mdlArg[2] + (- led_driver.V_arg[1] .* systemDef.hrms[2])

--- Solved equation ---
led_driver.a[1].re := cos(led_driver.argAdj[1])

--- Solved equation ---
v.i[2].re := - led_driver.c[1] * led_driver.a[1].re

--- Solved equation ---
led_driver.a[1].im := sin(led_driver.argAdj[1])

--- Solved equation ---
v.i[2].im := - led_driver.c[1] * led_driver.a[1].im

--- Solved equation ---
z.v[2].re := z.z.re .* (- v.i[2].re) + (- z.z.im .* systemDef.hrms[2] .* (- v.i[2].im))

--- Solved equation ---
led_driver.c[2] := led_driver.magScale * led_driver.mdlMag[3]

--- Solved equation ---
led_driver.argAdj[2] := led_driver.mdlArg[3] + (- led_driver.V_arg[1] .* systemDef.hrms[3])

--- Solved equation ---
led_driver.a[2].re := cos(led_driver.argAdj[2])

--- Solved equation ---
v.i[3].re := - led_driver.c[2] * led_driver.a[2].re

--- Solved equation ---
led_driver.a[2].im := sin(led_driver.argAdj[2])

--- Solved equation ---
v.i[3].im := - led_driver.c[2] * led_driver.a[2].im

--- Solved equation ---
z.v[3].re := z.z.re .* (- v.i[3].re) + (- z.z.im .* systemDef.hrms[3] .* (- v.i[3].im))

--- Solved equation ---
led_driver.c[3] := led_driver.magScale * led_driver.mdlMag[4]

--- Solved equation ---
led_driver.argAdj[3] := led_driver.mdlArg[4] + (- led_driver.V_arg[1] .* systemDef.hrms[4])

--- Solved equation ---
led_driver.a[3].re := cos(led_driver.argAdj[3])

--- Solved equation ---
v.i[4].re := - led_driver.c[3] * led_driver.a[3].re

--- Solved equation ---
led_driver.a[3].im := sin(led_driver.argAdj[3])

--- Solved equation ---
v.i[4].im := - led_driver.c[3] * led_driver.a[3].im

--- Solved equation ---
z.v[4].re := z.z.re .* (- v.i[4].re) + (- z.z.im .* systemDef.hrms[4] .* (- v.i[4].im))

--- Solved equation ---
led_driver.c[4] := led_driver.magScale * led_driver.mdlMag[5]

--- Solved equation ---
led_driver.argAdj[4] := led_driver.mdlArg[5] + (- led_driver.V_arg[1] .* systemDef.hrms[5])

--- Solved equation ---
led_driver.a[4].re := cos(led_driver.argAdj[4])

--- Solved equation ---
v.i[5].re := - led_driver.c[4] * led_driver.a[4].re

--- Solved equation ---
led_driver.a[4].im := sin(led_driver.argAdj[4])

--- Solved equation ---
v.i[5].im := - led_driver.c[4] * led_driver.a[4].im

--- Solved equation ---
z.v[5].re := z.z.re .* (- v.i[5].re) + (- z.z.im .* systemDef.hrms[5] .* (- v.i[5].im))

--- Solved equation ---
led_driver.c[5] := led_driver.magScale * led_driver.mdlMag[6]

--- Solved equation ---
led_driver.argAdj[5] := led_driver.mdlArg[6] + (- led_driver.V_arg[1] .* systemDef.hrms[6])

--- Solved equation ---
led_driver.a[5].re := cos(led_driver.argAdj[5])

--- Solved equation ---
v.i[6].re := - led_driver.c[5] * led_driver.a[5].re

--- Solved equation ---
led_driver.a[5].im := sin(led_driver.argAdj[5])

--- Solved equation ---
v.i[6].im := - led_driver.c[5] * led_driver.a[5].im

--- Solved equation ---
z.v[6].re := z.z.re .* (- v.i[6].re) + (- z.z.im .* systemDef.hrms[6] .* (- v.i[6].im))

--- Solved equation ---
led_driver.c[6] := led_driver.magScale * led_driver.mdlMag[7]

--- Solved equation ---
led_driver.argAdj[6] := led_driver.mdlArg[7] + (- led_driver.V_arg[1] .* systemDef.hrms[7])

--- Solved equation ---
led_driver.a[6].re := cos(led_driver.argAdj[6])

--- Solved equation ---
v.i[7].re := - led_driver.c[6] * led_driver.a[6].re

--- Solved equation ---
led_driver.a[6].im := sin(led_driver.argAdj[6])

--- Solved equation ---
v.i[7].im := - led_driver.c[6] * led_driver.a[6].im

--- Solved equation ---
z.v[7].re := z.z.re .* (- v.i[7].re) + (- z.z.im .* systemDef.hrms[7] .* (- v.i[7].im))

--- Solved equation ---
led_driver.c[7] := led_driver.magScale * led_driver.mdlMag[8]

--- Solved equation ---
led_driver.argAdj[7] := led_driver.mdlArg[8] + (- led_driver.V_arg[1] .* systemDef.hrms[8])

--- Solved equation ---
led_driver.a[7].re := cos(led_driver.argAdj[7])

--- Solved equation ---
v.i[8].re := - led_driver.c[7] * led_driver.a[7].re

--- Solved equation ---
led_driver.a[7].im := sin(led_driver.argAdj[7])

--- Solved equation ---
v.i[8].im := - led_driver.c[7] * led_driver.a[7].im

--- Solved equation ---
z.v[8].re := z.z.re .* (- v.i[8].re) + (- z.z.im .* systemDef.hrms[8] .* (- v.i[8].im))

--- Solved equation ---
z.v[2].im := z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)

--- Solved equation ---
z.v[3].im := z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)

--- Solved equation ---
z.v[4].im := z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)

--- Solved equation ---
z.v[5].im := z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)

--- Solved equation ---
z.v[6].im := z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)

--- Solved equation ---
z.v[7].im := z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)

--- Solved equation ---
z.v[8].im := z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)

--- Solved equation ---
z.omega := der(v.theta)

--- Solved equation ---
led_driver.loadBase.v[2].re := - z.v[2].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[3].re := - z.v[3].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[4].re := - z.v[4].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[5].re := - z.v[5].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[6].re := - z.v[6].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[7].re := - z.v[7].re + 0.001

--- Solved equation ---
led_driver.loadBase.v[8].re := - z.v[8].re + 0.001

--- Solved equation ---
led_driver.PLoss := led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency

--- Meta equation block ---
algorithm


--- Solved equation ---
led_driver.loadBase.omega := der(v.theta)

--- Solved equation ---
ground.pin.iIm[1] := 0

--- Solved equation ---
ground.pin.iIm[2] := 0

--- Solved equation ---
ground.pin.iIm[3] := 0

--- Solved equation ---
ground.pin.iIm[4] := 0

--- Solved equation ---
ground.pin.iIm[5] := 0

--- Solved equation ---
ground.pin.iIm[6] := 0

--- Solved equation ---
ground.pin.iIm[7] := 0

--- Solved equation ---
ground.pin.iIm[8] := 0

--- Solved equation ---
ground.pin.iRe[1] := 0

--- Solved equation ---
ground.pin.iRe[2] := 0

--- Solved equation ---
ground.pin.iRe[3] := 0

--- Solved equation ---
ground.pin.iRe[4] := 0

--- Solved equation ---
ground.pin.iRe[5] := 0

--- Solved equation ---
ground.pin.iRe[6] := 0

--- Solved equation ---
ground.pin.iRe[7] := 0

--- Solved equation ---
ground.pin.iRe[8] := 0

--- Solved equation ---
ground2.p.i := 0

--- Solved equation ---
y := led_driver.PLoss

--- Solved equation ---
v.theta := 0

--- Meta equation block ---
HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta))

--- Solved equation ---
v.P1 := 120.0 * v.i[1].re

--- Solved equation ---
v.iMag[1] := (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[2] := (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[3] := (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[4] := (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[5] := (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[6] := (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[7] := (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[8] := (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
v.iArg[1] := Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)

--- Solved equation ---
v.iArg[2] := Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)

--- Solved equation ---
v.iArg[3] := Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)

--- Solved equation ---
v.iArg[4] := Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)

--- Solved equation ---
v.iArg[5] := Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)

--- Solved equation ---
v.iArg[6] := Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)

--- Solved equation ---
v.iArg[7] := Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)

--- Solved equation ---
v.iArg[8] := Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[1] := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[2] := ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[3] := ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[4] := ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[5] := ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[6] := ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[7] := ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_mag[8] := ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.I_arg[2] := Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0)

--- Solved equation ---
led_driver.I_arg[3] := Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0)

--- Solved equation ---
led_driver.I_arg[4] := Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0)

--- Solved equation ---
led_driver.I_arg[5] := Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0)

--- Solved equation ---
led_driver.I_arg[6] := Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0)

--- Solved equation ---
led_driver.I_arg[7] := Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0)

--- Solved equation ---
led_driver.I_arg[8] := Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0)

--- Solved equation ---
led_driver.V_mag[1] := (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[2] := (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[3] := (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[4] := (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[5] := (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[6] := (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[7] := (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_mag[8] := (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5

--- Solved equation ---
led_driver.V_arg[2] := Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0)

--- Solved equation ---
led_driver.V_arg[3] := Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0)

--- Solved equation ---
led_driver.V_arg[4] := Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0)

--- Solved equation ---
led_driver.V_arg[5] := Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0)

--- Solved equation ---
led_driver.V_arg[6] := Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0)

--- Solved equation ---
led_driver.V_arg[7] := Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0)

--- Solved equation ---
led_driver.V_arg[8] := Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0)

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)

--- Meta equation block ---
algorithm

-------------------------------

Diagnostics for transformed flattened model:
Diagnostics for flattened class HPF.Examples.Demo
Number of independent constants:                   8(    8 scalars)
  Number of Real independent constants:            3(    3 scalars)
  Number of Real independent constants:            3(    3 scalars)
  Number of Integer independent constants:         0(    0 scalars)
  Number of Enum independent constants:            0(    0 scalars)
  Number of Boolean independent constants:         0(    0 scalars)
  Number of String independent constants:          5(    5 scalars)
Number of dependent constants:                     0(    0 scalars)
  Number of Real dependent constants:              0(    0 scalars)
  Number of Integer dependent constants:           0(    0 scalars)
  Number of Enum dependent constants:              0(    0 scalars)
  Number of Boolean dependent constants:           0(    0 scalars)
  Number of String dependent constants:            0(    0 scalars)
Number of independent parameters:                 89(   89 scalars)
  Number of Real independent parameters:          54(   54 scalars)
  Number of Integer independent parameters:       22(   22 scalars)
  Number of Enum independent parameters:           0(    0 scalars)
  Number of Boolean independent parameters:       13(   13 scalars)
  Number of String independent parameters:         0(    0 scalars)
Number of dependent parameters:                    3(    3 scalars)
  Number of Real dependent parameters:             2(    2 scalars)
  Number of Integer dependent parameters:          1(    1 scalars)
  Number of Enum dependent parameters:             0(    0 scalars)
  Number of Boolean dependent parameters:          0(    0 scalars)
  Number of String dependent parameters:           0(    0 scalars)
Number of initial parameters:                      0(    0 scalars)
  Number of Real dependent parameters:             0(    0 scalars)
  Number of Integer dependent parameters:          0(    0 scalars)
  Number of Enum dependent parameters:             0(    0 scalars)
  Number of Boolean dependent parameters:          0(    0 scalars)
  Number of String dependent parameters:           0(    0 scalars)
Number of variables:                             151(  151 scalars)
  Number of Real variables:                      151(  151 scalars)
  Number of Integer variables:                     0(    0 scalars)
  Number of Enum variables:                        0(    0 scalars)
  Number of Boolean variables:                     0(    0 scalars)
  Number of String variables:                      0(    0 scalars)
Number of Real differentiated variables:           1(    1 scalars)
Number of Real derivative variables:               1(    1 scalars)
Number of Real continous algebraic variables:    148(  148 scalars)
Number of inputs:                                  1(    1 scalars)
  Number of Real inputs:                           1(    1 scalars)
  Number of Integer inputs:                        0(    0 scalars)
  Number of Enum inputs:                           0(    0 scalars)
  Number of Boolean inputs:                        0(    0 scalars)
  Number of String inputs:                         0(    0 scalars)
Number of discrete variables:                      0(    0 scalars)
  Number of Real discrete variables:               0(    0 scalars)
  Number of Integer discrete variables:            0(    0 scalars)
  Number of Enum discrete variables:               0(    0 scalars)
  Number of Boolean discrete variables:            0(    0 scalars)
  Number of String discrete variables:             0(    0 scalars)
Number of equations:                             152(  149 scalars)
Number of variables with binding expression:       0(    0 scalars)
  Number of Real variables with binding exp:       0(    0 scalars)
  Number of Integer variables binding exp:         0(    0 scalars)
  Number of Enum variables binding exp:            0(    0 scalars)
  Number of Boolean variables binding exp:         0(    0 scalars)
  Number of String variables binding exp:          0(    0 scalars)
Total number of equations:                       152(  149 scalars)
Number of initial equations:                       2(    1 scalars)
Number of event indicators in equations:           0
Number of event indicators in init equations:      0

Independent constants: 
 v.v[1].re: number of uses: 0, isLinear: true
 v.v[1].im: number of uses: 0, isLinear: true
 v.v[2].re: number of uses: 0, isLinear: true
 ground.properties.ComponentType: number of uses: 0, isLinear: true
 v.properties.ComponentType: number of uses: 0, isLinear: true
 z.properties.ComponentType: number of uses: 0, isLinear: true
 led_driver.properties.ComponentType: number of uses: 0, isLinear: true
 load.properties.ComponentType: number of uses: 0, isLinear: true

Dependent constants: 

Independent parameters: 
 systemDef.fFund: number of uses: 2, isLinear: true, evaluated binding exp: 60
 systemDef.fs: number of uses: 1, isLinear: true, evaluated binding exp: 5000.0
 z.z.re: number of uses: 16, isLinear: true, evaluated binding exp: 0.5
 z.z.im: number of uses: 16, isLinear: true, evaluated binding exp: 0.02
 led_driver.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 24
 led_driver.efficiency: number of uses: 3, isLinear: true, evaluated binding exp: 0.95
 led_driver.mdlMag[1]: number of uses: 0, isLinear: true, evaluated binding exp: 1.0
 led_driver.mdlMag[2]: number of uses: 1, isLinear: true, evaluated binding exp: 0.8904
 led_driver.mdlMag[3]: number of uses: 1, isLinear: true, evaluated binding exp: 0.7418
 led_driver.mdlMag[4]: number of uses: 1, isLinear: true, evaluated binding exp: 0.5673
 led_driver.mdlMag[5]: number of uses: 1, isLinear: true, evaluated binding exp: 0.3937
 led_driver.mdlMag[6]: number of uses: 1, isLinear: true, evaluated binding exp: 0.2526
 led_driver.mdlMag[7]: number of uses: 1, isLinear: true, evaluated binding exp: 0.1565
 led_driver.mdlMag[8]: number of uses: 1, isLinear: true, evaluated binding exp: 0.1086
 led_driver.mdlMag[9]: number of uses: 0, isLinear: true, evaluated binding exp: 0.1028
 led_driver.mdlMag[10]: number of uses: 0, isLinear: true, evaluated binding exp: 0.1117
 led_driver.mdlMag[11]: number of uses: 0, isLinear: true, evaluated binding exp: 0.1074
 led_driver.mdlMag[12]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0875
 led_driver.mdlMag[13]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0578
 led_driver.mdlMag[14]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0366
 led_driver.mdlMag[15]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0289
 led_driver.mdlMag[16]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0275
 led_driver.mdlArg[1]: number of uses: 1, isLinear: true, evaluated binding exp: 0.3876
 led_driver.mdlArg[2]: number of uses: 1, isLinear: true, evaluated binding exp: -2.179
 led_driver.mdlArg[3]: number of uses: 1, isLinear: true, evaluated binding exp: 1.6303
 led_driver.mdlArg[4]: number of uses: 1, isLinear: true, evaluated binding exp: -0.7953
 led_driver.mdlArg[5]: number of uses: 1, isLinear: true, evaluated binding exp: 3.1273
 led_driver.mdlArg[6]: number of uses: 1, isLinear: true, evaluated binding exp: 0.8908
 led_driver.mdlArg[7]: number of uses: 1, isLinear: true, evaluated binding exp: -1.1864
 led_driver.mdlArg[8]: number of uses: 1, isLinear: true, evaluated binding exp: -2.9993
 led_driver.mdlArg[9]: number of uses: 0, isLinear: true, evaluated binding exp: 1.4699
 led_driver.mdlArg[10]: number of uses: 0, isLinear: true, evaluated binding exp: -0.6068
 led_driver.mdlArg[11]: number of uses: 0, isLinear: true, evaluated binding exp: -2.8447
 led_driver.mdlArg[12]: number of uses: 0, isLinear: true, evaluated binding exp: 1.1602
 led_driver.mdlArg[13]: number of uses: 0, isLinear: true, evaluated binding exp: -1.0324
 led_driver.mdlArg[14]: number of uses: 0, isLinear: true, evaluated binding exp: -2.9612
 led_driver.mdlArg[15]: number of uses: 0, isLinear: true, evaluated binding exp: 1.5582
 led_driver.mdlArg[16]: number of uses: 0, isLinear: true, evaluated binding exp: -0.3532
 _block_jacobian_check_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-6
 _cs_rel_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-6
 _cs_step_size: number of uses: 0, isLinear: true, evaluated binding exp: 0.001
 _events_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _events_tol_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-4
 _nle_jacobian_finite_difference_delta: number of uses: 0, isLinear: true, evaluated binding exp: 1.490116119384766E-8
 _nle_solver_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _nle_solver_max_residual_scaling_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E10
 _nle_solver_min_residual_scaling_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _nle_solver_min_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-12
 _nle_solver_regularization_tolerance: number of uses: 0, isLinear: true, evaluated binding exp: -1.0
 _nle_solver_step_limit_factor: number of uses: 0, isLinear: true, evaluated binding exp: 10.0
 _nle_solver_tol_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-4
 _time_events_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 2.220446049250313E-14
 v.vMag[1]: number of uses: 0, isLinear: true, evaluated binding exp: 120
 v.vArg[1]: number of uses: 0, isLinear: true, evaluated binding exp: 0
 systemDef.hrms[1]: number of uses: 2, isLinear: true, evaluated binding exp: 1
 systemDef.hrms[2]: number of uses: 3, isLinear: true, evaluated binding exp: 3
 systemDef.hrms[3]: number of uses: 3, isLinear: true, evaluated binding exp: 5
 systemDef.hrms[4]: number of uses: 3, isLinear: true, evaluated binding exp: 7
 systemDef.hrms[5]: number of uses: 3, isLinear: true, evaluated binding exp: 9
 systemDef.hrms[6]: number of uses: 3, isLinear: true, evaluated binding exp: 11
 systemDef.hrms[7]: number of uses: 3, isLinear: true, evaluated binding exp: 13
 systemDef.hrms[8]: number of uses: 3, isLinear: true, evaluated binding exp: 15
 systemDef.numPh: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _block_solver_experimental_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _cs_experimental_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _cs_solver: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _iteration_variable_scaling: number of uses: 0, isLinear: true, evaluated binding exp: 1
 _log_level: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _nle_active_bounds_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _nle_jacobian_calculation_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _nle_jacobian_update_mode: number of uses: 0, isLinear: true, evaluated binding exp: 2
 _nle_solver_exit_criterion: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _nle_solver_max_iter: number of uses: 0, isLinear: true, evaluated binding exp: 100
 _nle_solver_max_iter_no_jacobian: number of uses: 0, isLinear: true, evaluated binding exp: 10
 _residual_equation_scaling: number of uses: 0, isLinear: true, evaluated binding exp: 1
 systemDef.numHrm: number of uses: 0, isLinear: true, evaluated binding exp: 8
 _block_jacobian_check: number of uses: 0, isLinear: true, evaluated binding exp: false
 _block_solver_profiling: number of uses: 0, isLinear: true, evaluated binding exp: false
 _enforce_bounds: number of uses: 0, isLinear: true, evaluated binding exp: true
 _nle_brent_ignore_error: number of uses: 0, isLinear: true, evaluated binding exp: false
 _nle_solver_check_jac_cond: number of uses: 0, isLinear: true, evaluated binding exp: false
 _nle_solver_use_last_integrator_step: number of uses: 0, isLinear: true, evaluated binding exp: true
 _nle_solver_use_nominals_as_fallback: number of uses: 0, isLinear: true, evaluated binding exp: true
 _rescale_after_singular_jac: number of uses: 0, isLinear: true, evaluated binding exp: true
 _rescale_each_step: number of uses: 0, isLinear: true, evaluated binding exp: false
 _runtime_log_to_file: number of uses: 0, isLinear: true, evaluated binding exp: false
 _use_Brent_in_1d: number of uses: 0, isLinear: true, evaluated binding exp: true
 _use_jacobian_equilibration: number of uses: 0, isLinear: true, evaluated binding exp: false
 _use_newton_for_brent: number of uses: 0, isLinear: true, evaluated binding exp: true

Dependent parameters: 
 led_driver.vDC.V: number of uses: 3, isLinear: true
 led_driver.argS: number of uses: 3, isLinear: true
 systemDef.N: number of uses: 1, isLinear: true

Differentiated variables: 
 v.theta: number of uses: 3, isLinear: false

Derivative variables: 
 der(v.theta): number of uses: 4, isLinear: true

Discrete variables: 

Algebraic real variables: 
 ground.pin.iIm[1]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iIm[2]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iIm[3]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iIm[4]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iIm[5]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iIm[6]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iIm[7]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iIm[8]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[1]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[2]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[3]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[4]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[5]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[6]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[7]: number of uses: 1, isLinear: true, alias: no
 ground.pin.iRe[8]: number of uses: 1, isLinear: true, alias: no
 ground2.p.i: number of uses: 1, isLinear: true, alias: no
 v.P1: number of uses: 1, isLinear: true, alias: no
 v.iMag[1]: number of uses: 1, isLinear: true, alias: no
 v.iMag[2]: number of uses: 1, isLinear: true, alias: no
 v.iMag[3]: number of uses: 1, isLinear: true, alias: no
 v.iMag[4]: number of uses: 1, isLinear: true, alias: no
 v.iMag[5]: number of uses: 1, isLinear: true, alias: no
 v.iMag[6]: number of uses: 1, isLinear: true, alias: no
 v.iMag[7]: number of uses: 1, isLinear: true, alias: no
 v.iMag[8]: number of uses: 1, isLinear: true, alias: no
 v.iArg[1]: number of uses: 1, isLinear: true, alias: no
 v.iArg[2]: number of uses: 1, isLinear: true, alias: no
 v.iArg[3]: number of uses: 1, isLinear: true, alias: no
 v.iArg[4]: number of uses: 1, isLinear: true, alias: no
 v.iArg[5]: number of uses: 1, isLinear: true, alias: no
 v.iArg[6]: number of uses: 1, isLinear: true, alias: no
 v.iArg[7]: number of uses: 1, isLinear: true, alias: no
 v.iArg[8]: number of uses: 1, isLinear: true, alias: no
 v.i[1].re: number of uses: 11, isLinear: false, alias: no
 v.i[1].im: number of uses: 10, isLinear: false, alias: no
 v.i[2].re: number of uses: 7, isLinear: false, alias: no
 v.i[2].im: number of uses: 7, isLinear: false, alias: no
 v.i[3].re: number of uses: 7, isLinear: false, alias: no
 v.i[3].im: number of uses: 7, isLinear: false, alias: no
 v.i[4].re: number of uses: 7, isLinear: false, alias: no
 v.i[4].im: number of uses: 7, isLinear: false, alias: no
 v.i[5].re: number of uses: 7, isLinear: false, alias: no
 v.i[5].im: number of uses: 7, isLinear: false, alias: no
 v.i[6].re: number of uses: 7, isLinear: false, alias: no
 v.i[6].im: number of uses: 7, isLinear: false, alias: no
 v.i[7].re: number of uses: 7, isLinear: false, alias: no
 v.i[7].im: number of uses: 7, isLinear: false, alias: no
 v.i[8].re: number of uses: 7, isLinear: false, alias: no
 v.i[8].im: number of uses: 7, isLinear: false, alias: no
 v.omega: number of uses: 1, isLinear: true, alias: no
 z.vFundAbs: number of uses: 1, isLinear: true, alias: no
 z.vFundArg: number of uses: 1, isLinear: true, alias: no
 z.iFundAbs: number of uses: 1, isLinear: true, alias: no
 z.iFundArg: number of uses: 1, isLinear: true, alias: no
 z.v[1].re: number of uses: 4, isLinear: false, alias: no
 z.v[1].im: number of uses: 7, isLinear: false, alias: no
 z.v[2].re: number of uses: 2, isLinear: true, alias: no
 z.v[2].im: number of uses: 3, isLinear: false, alias: no
 z.v[3].re: number of uses: 2, isLinear: true, alias: no
 z.v[3].im: number of uses: 3, isLinear: false, alias: no
 z.v[4].re: number of uses: 2, isLinear: true, alias: no
 z.v[4].im: number of uses: 3, isLinear: false, alias: no
 z.v[5].re: number of uses: 2, isLinear: true, alias: no
 z.v[5].im: number of uses: 3, isLinear: false, alias: no
 z.v[6].re: number of uses: 2, isLinear: true, alias: no
 z.v[6].im: number of uses: 3, isLinear: false, alias: no
 z.v[7].re: number of uses: 2, isLinear: true, alias: no
 z.v[7].im: number of uses: 3, isLinear: false, alias: no
 z.v[8].re: number of uses: 2, isLinear: true, alias: no
 z.v[8].im: number of uses: 3, isLinear: false, alias: no
 z.omega: number of uses: 1, isLinear: true, alias: no
 led_driver.PLoss: number of uses: 2, isLinear: true, alias: no
 led_driver.loadBase.v[1].re: number of uses: 5, isLinear: false, alias: no
 led_driver.loadBase.v[2].re: number of uses: 3, isLinear: false, alias: no
 led_driver.loadBase.v[3].re: number of uses: 3, isLinear: false, alias: no
 led_driver.loadBase.v[4].re: number of uses: 3, isLinear: false, alias: no
 led_driver.loadBase.v[5].re: number of uses: 3, isLinear: false, alias: no
 led_driver.loadBase.v[6].re: number of uses: 3, isLinear: false, alias: no
 led_driver.loadBase.v[7].re: number of uses: 3, isLinear: false, alias: no
 led_driver.loadBase.v[8].re: number of uses: 3, isLinear: false, alias: no
 led_driver.loadBase.omega: number of uses: 1, isLinear: true, alias: no
 led_driver.P: number of uses: 4, isLinear: true, alias: no
 led_driver.I_mag[1]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_mag[2]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_mag[3]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_mag[4]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_mag[5]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_mag[6]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_mag[7]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_mag[8]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_arg[2]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_arg[3]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_arg[4]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_arg[5]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_arg[6]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_arg[7]: number of uses: 1, isLinear: true, alias: no
 led_driver.I_arg[8]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[1]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[2]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[3]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[4]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[5]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[6]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[7]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_mag[8]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_arg[1]: number of uses: 8, isLinear: true, alias: no
 led_driver.V_arg[2]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_arg[3]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_arg[4]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_arg[5]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_arg[6]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_arg[7]: number of uses: 1, isLinear: true, alias: no
 led_driver.V_arg[8]: number of uses: 1, isLinear: true, alias: no
 led_driver.S: number of uses: 2, isLinear: true, alias: no
 led_driver.Q: number of uses: 2, isLinear: true, alias: no
 led_driver.magScale: number of uses: 8, isLinear: true, alias: no
 led_driver.argAdj[1]: number of uses: 3, isLinear: false, alias: no
 led_driver.argAdj[2]: number of uses: 3, isLinear: false, alias: no
 led_driver.argAdj[3]: number of uses: 3, isLinear: false, alias: no
 led_driver.argAdj[4]: number of uses: 3, isLinear: false, alias: no
 led_driver.argAdj[5]: number of uses: 3, isLinear: false, alias: no
 led_driver.argAdj[6]: number of uses: 3, isLinear: false, alias: no
 led_driver.argAdj[7]: number of uses: 3, isLinear: false, alias: no
 led_driver.a[1].re: number of uses: 2, isLinear: false, alias: no
 led_driver.a[1].im: number of uses: 2, isLinear: false, alias: no
 led_driver.a[2].re: number of uses: 2, isLinear: false, alias: no
 led_driver.a[2].im: number of uses: 2, isLinear: false, alias: no
 led_driver.a[3].re: number of uses: 2, isLinear: false, alias: no
 led_driver.a[3].im: number of uses: 2, isLinear: false, alias: no
 led_driver.a[4].re: number of uses: 2, isLinear: false, alias: no
 led_driver.a[4].im: number of uses: 2, isLinear: false, alias: no
 led_driver.a[5].re: number of uses: 2, isLinear: false, alias: no
 led_driver.a[5].im: number of uses: 2, isLinear: false, alias: no
 led_driver.a[6].re: number of uses: 2, isLinear: false, alias: no
 led_driver.a[6].im: number of uses: 2, isLinear: false, alias: no
 led_driver.a[7].re: number of uses: 2, isLinear: false, alias: no
 led_driver.a[7].im: number of uses: 2, isLinear: false, alias: no
 led_driver.c[1]: number of uses: 3, isLinear: false, alias: no
 led_driver.c[2]: number of uses: 3, isLinear: false, alias: no
 led_driver.c[3]: number of uses: 3, isLinear: false, alias: no
 led_driver.c[4]: number of uses: 3, isLinear: false, alias: no
 led_driver.c[5]: number of uses: 3, isLinear: false, alias: no
 led_driver.c[6]: number of uses: 3, isLinear: false, alias: no
 led_driver.c[7]: number of uses: 3, isLinear: false, alias: no
 load.u: number of uses: 2, isLinear: true, alias: no
 load.i: number of uses: 2, isLinear: true, alias: no
 y: number of uses: 1, isLinear: true, alias: no

Input variables: 
 u: number of uses: 1, isLinear: true

Alias sets:
{v.i[1].re(start=0), v.pin_p.iRe[1], -v.pin_n.iRe[1], -z.i[1].re(start=0), -z.pin_p.iRe[1], z.pin_n.iRe[1], -led_driver.hPin_P.iRe[1], -led_driver.loadBase.i[1].re(start=0), -led_driver.loadBase.pin_p.iRe[1], led_driver.loadBase.pin_n.iRe[1], led_driver.hPin_N.iRe[1]}
{v.i[2].re(start=0), v.pin_p.iRe[2], -v.pin_n.iRe[2], -z.i[2].re(start=0), -z.pin_p.iRe[2], z.pin_n.iRe[2], -led_driver.hPin_P.iRe[2], -led_driver.loadBase.i[2].re(start=0), -led_driver.loadBase.pin_p.iRe[2], led_driver.loadBase.pin_n.iRe[2], led_driver.hPin_N.iRe[2]}
{v.i[3].re(start=0), v.pin_p.iRe[3], -v.pin_n.iRe[3], -z.i[3].re(start=0), -z.pin_p.iRe[3], z.pin_n.iRe[3], -led_driver.hPin_P.iRe[3], -led_driver.loadBase.i[3].re(start=0), -led_driver.loadBase.pin_p.iRe[3], led_driver.loadBase.pin_n.iRe[3], led_driver.hPin_N.iRe[3]}
{v.i[4].re(start=0), v.pin_p.iRe[4], -v.pin_n.iRe[4], -z.i[4].re(start=0), -z.pin_p.iRe[4], z.pin_n.iRe[4], -led_driver.hPin_P.iRe[4], -led_driver.loadBase.i[4].re(start=0), -led_driver.loadBase.pin_p.iRe[4], led_driver.loadBase.pin_n.iRe[4], led_driver.hPin_N.iRe[4]}
{v.i[5].re(start=0), v.pin_p.iRe[5], -v.pin_n.iRe[5], -z.i[5].re(start=0), -z.pin_p.iRe[5], z.pin_n.iRe[5], -led_driver.hPin_P.iRe[5], -led_driver.loadBase.i[5].re(start=0), -led_driver.loadBase.pin_p.iRe[5], led_driver.loadBase.pin_n.iRe[5], led_driver.hPin_N.iRe[5]}
{v.i[6].re(start=0), v.pin_p.iRe[6], -v.pin_n.iRe[6], -z.i[6].re(start=0), -z.pin_p.iRe[6], z.pin_n.iRe[6], -led_driver.hPin_P.iRe[6], -led_driver.loadBase.i[6].re(start=0), -led_driver.loadBase.pin_p.iRe[6], led_driver.loadBase.pin_n.iRe[6], led_driver.hPin_N.iRe[6]}
{v.i[7].re(start=0), v.pin_p.iRe[7], -v.pin_n.iRe[7], -z.i[7].re(start=0), -z.pin_p.iRe[7], z.pin_n.iRe[7], -led_driver.hPin_P.iRe[7], -led_driver.loadBase.i[7].re(start=0), -led_driver.loadBase.pin_p.iRe[7], led_driver.loadBase.pin_n.iRe[7], led_driver.hPin_N.iRe[7]}
{v.i[8].re(start=0), v.pin_p.iRe[8], -v.pin_n.iRe[8], -z.i[8].re(start=0), -z.pin_p.iRe[8], z.pin_n.iRe[8], -led_driver.hPin_P.iRe[8], -led_driver.loadBase.i[8].re(start=0), -led_driver.loadBase.pin_p.iRe[8], led_driver.loadBase.pin_n.iRe[8], led_driver.hPin_N.iRe[8]}
{v.i[1].im(start=0), v.pin_p.iIm[1], -v.pin_n.iIm[1], -z.i[1].im(start=0), -z.pin_p.iIm[1], z.pin_n.iIm[1], -led_driver.hPin_P.iIm[1], temp_260, -led_driver.loadBase.i[1].im(start=0), -led_driver.loadBase.pin_p.iIm[1], led_driver.loadBase.pin_n.iIm[1], led_driver.hPin_N.iIm[1]}
{v.i[2].im(start=0), v.pin_p.iIm[2], -v.pin_n.iIm[2], -z.i[2].im(start=0), -z.pin_p.iIm[2], z.pin_n.iIm[2], -led_driver.hPin_P.iIm[2], -led_driver.loadBase.i[2].im(start=0), -led_driver.loadBase.pin_p.iIm[2], led_driver.loadBase.pin_n.iIm[2], led_driver.hPin_N.iIm[2]}
{v.i[3].im(start=0), v.pin_p.iIm[3], -v.pin_n.iIm[3], -z.i[3].im(start=0), -z.pin_p.iIm[3], z.pin_n.iIm[3], -led_driver.hPin_P.iIm[3], -led_driver.loadBase.i[3].im(start=0), -led_driver.loadBase.pin_p.iIm[3], led_driver.loadBase.pin_n.iIm[3], led_driver.hPin_N.iIm[3]}
{v.i[4].im(start=0), v.pin_p.iIm[4], -v.pin_n.iIm[4], -z.i[4].im(start=0), -z.pin_p.iIm[4], z.pin_n.iIm[4], -led_driver.hPin_P.iIm[4], -led_driver.loadBase.i[4].im(start=0), -led_driver.loadBase.pin_p.iIm[4], led_driver.loadBase.pin_n.iIm[4], led_driver.hPin_N.iIm[4]}
{v.i[5].im(start=0), v.pin_p.iIm[5], -v.pin_n.iIm[5], -z.i[5].im(start=0), -z.pin_p.iIm[5], z.pin_n.iIm[5], -led_driver.hPin_P.iIm[5], -led_driver.loadBase.i[5].im(start=0), -led_driver.loadBase.pin_p.iIm[5], led_driver.loadBase.pin_n.iIm[5], led_driver.hPin_N.iIm[5]}
{v.i[6].im(start=0), v.pin_p.iIm[6], -v.pin_n.iIm[6], -z.i[6].im(start=0), -z.pin_p.iIm[6], z.pin_n.iIm[6], -led_driver.hPin_P.iIm[6], -led_driver.loadBase.i[6].im(start=0), -led_driver.loadBase.pin_p.iIm[6], led_driver.loadBase.pin_n.iIm[6], led_driver.hPin_N.iIm[6]}
{v.i[7].im(start=0), v.pin_p.iIm[7], -v.pin_n.iIm[7], -z.i[7].im(start=0), -z.pin_p.iIm[7], z.pin_n.iIm[7], -led_driver.hPin_P.iIm[7], -led_driver.loadBase.i[7].im(start=0), -led_driver.loadBase.pin_p.iIm[7], led_driver.loadBase.pin_n.iIm[7], led_driver.hPin_N.iIm[7]}
{v.i[8].im(start=0), v.pin_p.iIm[8], -v.pin_n.iIm[8], -z.i[8].im(start=0), -z.pin_p.iIm[8], z.pin_n.iIm[8], -led_driver.hPin_P.iIm[8], -led_driver.loadBase.i[8].im(start=0), -led_driver.loadBase.pin_p.iIm[8], led_driver.loadBase.pin_n.iIm[8], led_driver.hPin_N.iIm[8]}
{led_driver.P, temp_25.re}
{led_driver.Q(start=1), temp_25.im}
{load.i, load.p.i, -load.n.i, -led_driver.pin_p.i, -led_driver.vDC.p.i, led_driver.vDC.n.i, -led_driver.vDC.i, led_driver.pin_n.i}
{v.v[1].re(start=100), v.pin_p.v[1].re, z.pin_p.v[1].re}
{v.vArg[1], ground.pin.v[1].im, led_driver.hPin_N.v[1].im, v.pin_n.v[1].im, led_driver.loadBase.pin_n.v[1].im, ground.pin.v[2].im, led_driver.hPin_N.v[2].im, v.pin_n.v[2].im, led_driver.loadBase.pin_n.v[2].im, ground.pin.v[3].im, led_driver.hPin_N.v[3].im, v.pin_n.v[3].im, led_driver.loadBase.pin_n.v[3].im, ground.pin.v[4].im, led_driver.hPin_N.v[4].im, v.pin_n.v[4].im, led_driver.loadBase.pin_n.v[4].im, ground.pin.v[5].im, led_driver.hPin_N.v[5].im, v.pin_n.v[5].im, led_driver.loadBase.pin_n.v[5].im, ground.pin.v[6].im, led_driver.hPin_N.v[6].im, v.pin_n.v[6].im, led_driver.loadBase.pin_n.v[6].im, ground.pin.v[7].im, led_driver.hPin_N.v[7].im, v.pin_n.v[7].im, led_driver.loadBase.pin_n.v[7].im, ground.pin.v[8].im, led_driver.hPin_N.v[8].im, v.pin_n.v[8].im, led_driver.loadBase.pin_n.v[8].im, ground2.p.v, led_driver.pin_n.v, load.n.v, led_driver.vDC.n.v, v.vArg[2], v.vArg[3], v.vArg[4], v.vArg[5], v.vArg[6], v.vArg[7], v.vArg[8], temp_265.im, temp_280.im, temp_295.im, temp_310.im, temp_325.im, temp_340.im, temp_355.im}
{v.v[1].im(start=0), ground.pin.v[1].re, led_driver.hPin_N.v[1].re, v.pin_n.v[1].re, led_driver.loadBase.pin_n.v[1].re, ground.pin.v[2].re, led_driver.hPin_N.v[2].re, v.pin_n.v[2].re, led_driver.loadBase.pin_n.v[2].re, ground.pin.v[3].re, led_driver.hPin_N.v[3].re, v.pin_n.v[3].re, led_driver.loadBase.pin_n.v[3].re, ground.pin.v[4].re, led_driver.hPin_N.v[4].re, v.pin_n.v[4].re, led_driver.loadBase.pin_n.v[4].re, ground.pin.v[5].re, led_driver.hPin_N.v[5].re, v.pin_n.v[5].re, led_driver.loadBase.pin_n.v[5].re, ground.pin.v[6].re, led_driver.hPin_N.v[6].re, v.pin_n.v[6].re, led_driver.loadBase.pin_n.v[6].re, ground.pin.v[7].re, led_driver.hPin_N.v[7].re, v.pin_n.v[7].re, led_driver.loadBase.pin_n.v[7].re, ground.pin.v[8].re, led_driver.hPin_N.v[8].re, v.pin_n.v[8].re, led_driver.loadBase.pin_n.v[8].re, v.v[2].im(start=0), v.v[3].im(start=0), v.v[4].im(start=0), v.v[5].im(start=0), v.v[6].im(start=0), v.v[7].im(start=0), v.v[8].im(start=0), v.pin_p.v[1].im, z.pin_p.v[1].im, v.pin_p.v[2].im, z.pin_p.v[2].im, v.pin_p.v[3].im, z.pin_p.v[3].im, v.pin_p.v[4].im, z.pin_p.v[4].im, v.pin_p.v[5].im, z.pin_p.v[5].im, v.pin_p.v[6].im, z.pin_p.v[6].im, v.pin_p.v[7].im, z.pin_p.v[7].im, v.pin_p.v[8].im, z.pin_p.v[8].im}
{led_driver.vDC.V(start=1), led_driver.pin_p.v, load.p.v, led_driver.vDC.p.v, led_driver.vDC.v, load.v}
{-z.v[1].im(start=0), led_driver.hPin_P.v[1].im, z.pin_n.v[1].im, led_driver.loadBase.pin_p.v[1].im, led_driver.loadBase.v[1].im(start=0)}
{led_driver.loadBase.v[1].re(start=100), led_driver.hPin_P.v[1].re, z.pin_n.v[1].re, led_driver.loadBase.pin_p.v[1].re}
{-z.v[2].im(start=0), led_driver.hPin_P.v[2].im, z.pin_n.v[2].im, led_driver.loadBase.pin_p.v[2].im, led_driver.loadBase.v[2].im(start=0)}
{led_driver.loadBase.v[2].re(start=100), led_driver.hPin_P.v[2].re, z.pin_n.v[2].re, led_driver.loadBase.pin_p.v[2].re}
{-z.v[3].im(start=0), led_driver.hPin_P.v[3].im, z.pin_n.v[3].im, led_driver.loadBase.pin_p.v[3].im, led_driver.loadBase.v[3].im(start=0)}
{led_driver.loadBase.v[3].re(start=100), led_driver.hPin_P.v[3].re, z.pin_n.v[3].re, led_driver.loadBase.pin_p.v[3].re}
{-z.v[4].im(start=0), led_driver.hPin_P.v[4].im, z.pin_n.v[4].im, led_driver.loadBase.pin_p.v[4].im, led_driver.loadBase.v[4].im(start=0)}
{led_driver.loadBase.v[4].re(start=100), led_driver.hPin_P.v[4].re, z.pin_n.v[4].re, led_driver.loadBase.pin_p.v[4].re}
{-z.v[5].im(start=0), led_driver.hPin_P.v[5].im, z.pin_n.v[5].im, led_driver.loadBase.pin_p.v[5].im, led_driver.loadBase.v[5].im(start=0)}
{led_driver.loadBase.v[5].re(start=100), led_driver.hPin_P.v[5].re, z.pin_n.v[5].re, led_driver.loadBase.pin_p.v[5].re}
{-z.v[6].im(start=0), led_driver.hPin_P.v[6].im, z.pin_n.v[6].im, led_driver.loadBase.pin_p.v[6].im, led_driver.loadBase.v[6].im(start=0)}
{led_driver.loadBase.v[6].re(start=100), led_driver.hPin_P.v[6].re, z.pin_n.v[6].re, led_driver.loadBase.pin_p.v[6].re}
{-z.v[7].im(start=0), led_driver.hPin_P.v[7].im, z.pin_n.v[7].im, led_driver.loadBase.pin_p.v[7].im, led_driver.loadBase.v[7].im(start=0)}
{led_driver.loadBase.v[7].re(start=100), led_driver.hPin_P.v[7].re, z.pin_n.v[7].re, led_driver.loadBase.pin_p.v[7].re}
{-z.v[8].im(start=0), led_driver.hPin_P.v[8].im, z.pin_n.v[8].im, led_driver.loadBase.pin_p.v[8].im, led_driver.loadBase.v[8].im(start=0)}
{led_driver.loadBase.v[8].re(start=100), led_driver.hPin_P.v[8].re, z.pin_n.v[8].re, led_driver.loadBase.pin_p.v[8].re}
{v.theta(start=0), ground.pin.reference.theta(start=0), led_driver.hPin_N.reference.theta(start=0), v.pin_p.reference.theta(start=0), v.pin_n.reference.theta(start=0), z.pin_p.reference.theta(start=0), z.pin_n.reference.theta(start=0), led_driver.hPin_P.reference.theta(start=0), led_driver.loadBase.pin_p.reference.theta(start=0), led_driver.loadBase.pin_n.reference.theta(start=0)}
{systemDef.numHrm, ground.pin.h, v.pin_p.h, v.pin_n.h, z.pin_p.h, z.pin_n.h, led_driver.hPin_P.h, led_driver.hPin_N.h, led_driver.loadBase.pin_p.h, led_driver.loadBase.pin_n.h}
{v.v[2].re(start=100), v.vMag[2], v.vMag[3], v.vMag[4], v.vMag[5], v.vMag[6], v.vMag[7], v.vMag[8], v.v[3].re(start=100), v.v[4].re(start=100), v.v[5].re(start=100), v.v[6].re(start=100), v.v[7].re(start=100), v.v[8].re(start=100), v.pin_p.v[2].re, z.pin_p.v[2].re, v.pin_p.v[3].re, z.pin_p.v[3].re, v.pin_p.v[4].re, z.pin_p.v[4].re, v.pin_p.v[5].re, z.pin_p.v[5].re, v.pin_p.v[6].re, z.pin_p.v[6].re, v.pin_p.v[7].re, z.pin_p.v[7].re, v.pin_p.v[8].re, z.pin_p.v[8].re}
{v.P1, v.P}
{z.iFundArg, temp_720, led_driver.I_arg[1]}
{led_driver.V_arg[1], temp_721}
387 variables can be eliminated

Incidence:
 eq 0:
 eq 1: der(v.theta)
 eq 2: der(v.theta) v.omega
 eq 3: z.v[1].re v.i[1].re v.i[1].im
 eq 4: z.v[2].re v.i[2].re v.i[2].im
 eq 5: z.v[3].re v.i[3].re v.i[3].im
 eq 6: z.v[4].re v.i[4].re v.i[4].im
 eq 7: z.v[5].re v.i[5].re v.i[5].im
 eq 8: z.v[6].re v.i[6].re v.i[6].im
 eq 9: z.v[7].re v.i[7].re v.i[7].im
 eq 10: z.v[8].re v.i[8].re v.i[8].im
 eq 11: z.v[1].im v.i[1].im v.i[1].re
 eq 12: z.v[2].im v.i[2].im v.i[2].re
 eq 13: z.v[3].im v.i[3].im v.i[3].re
 eq 14: z.v[4].im v.i[4].im v.i[4].re
 eq 15: z.v[5].im v.i[5].im v.i[5].re
 eq 16: z.v[6].im v.i[6].im v.i[6].re
 eq 17: z.v[7].im v.i[7].im v.i[7].re
 eq 18: z.v[8].im v.i[8].im v.i[8].re
 eq 19: der(v.theta) z.omega
 eq 20: z.v[1].re led_driver.loadBase.v[1].re
 eq 21: z.v[2].re led_driver.loadBase.v[2].re
 eq 22: z.v[3].re led_driver.loadBase.v[3].re
 eq 23: z.v[4].re led_driver.loadBase.v[4].re
 eq 24: z.v[5].re led_driver.loadBase.v[5].re
 eq 25: z.v[6].re led_driver.loadBase.v[6].re
 eq 26: z.v[7].re led_driver.loadBase.v[7].re
 eq 27: z.v[8].re led_driver.loadBase.v[8].re
 eq 28: led_driver.P led_driver.S
 eq 29: led_driver.Q led_driver.S
 eq 30: led_driver.P led_driver.loadBase.v[1].re v.i[1].re z.v[1].im v.i[1].im
 eq 31: led_driver.Q led_driver.loadBase.v[1].re v.i[1].im z.v[1].im v.i[1].re
 eq 32: v.i[2].re led_driver.c[1] led_driver.a[1].re
 eq 33: v.i[2].im led_driver.c[1] led_driver.a[1].im
 eq 34: v.i[3].re led_driver.c[2] led_driver.a[2].re
 eq 35: v.i[3].im led_driver.c[2] led_driver.a[2].im
 eq 36: v.i[4].re led_driver.c[3] led_driver.a[3].re
 eq 37: v.i[4].im led_driver.c[3] led_driver.a[3].im
 eq 38: v.i[5].re led_driver.c[4] led_driver.a[4].re
 eq 39: v.i[5].im led_driver.c[4] led_driver.a[4].im
 eq 40: v.i[6].re led_driver.c[5] led_driver.a[5].re
 eq 41: v.i[6].im led_driver.c[5] led_driver.a[5].im
 eq 42: v.i[7].re led_driver.c[6] led_driver.a[6].re
 eq 43: v.i[7].im led_driver.c[6] led_driver.a[6].im
 eq 44: v.i[8].re led_driver.c[7] led_driver.a[7].re
 eq 45: v.i[8].im led_driver.c[7] led_driver.a[7].im
 eq 46: led_driver.PLoss led_driver.P
 eq 47:
 eq 48: der(v.theta) led_driver.loadBase.omega
 eq 49: load.i load.u
 eq 50: ground.pin.iIm[1]
 eq 51: ground.pin.iIm[2]
 eq 52: ground.pin.iIm[3]
 eq 53: ground.pin.iIm[4]
 eq 54: ground.pin.iIm[5]
 eq 55: ground.pin.iIm[6]
 eq 56: ground.pin.iIm[7]
 eq 57: ground.pin.iIm[8]
 eq 58: ground.pin.iRe[1]
 eq 59: ground.pin.iRe[2]
 eq 60: ground.pin.iRe[3]
 eq 61: ground.pin.iRe[4]
 eq 62: ground.pin.iRe[5]
 eq 63: ground.pin.iRe[6]
 eq 64: ground.pin.iRe[7]
 eq 65: ground.pin.iRe[8]
 eq 66: ground2.p.i
 eq 67: led_driver.PLoss y
 eq 68: load.u
 eq 69:
 eq 70: v.P1 v.i[1].re
 eq 71: v.iMag[1] v.i[1].re v.i[1].im
 eq 72: v.iMag[2] v.i[2].re v.i[2].im
 eq 73: v.iMag[3] v.i[3].re v.i[3].im
 eq 74: v.iMag[4] v.i[4].re v.i[4].im
 eq 75: v.iMag[5] v.i[5].re v.i[5].im
 eq 76: v.iMag[6] v.i[6].re v.i[6].im
 eq 77: v.iMag[7] v.i[7].re v.i[7].im
 eq 78: v.iMag[8] v.i[8].re v.i[8].im
 eq 79: v.iArg[1] v.i[1].im v.i[1].re
 eq 80: v.iArg[2] v.i[2].im v.i[2].re
 eq 81: v.iArg[3] v.i[3].im v.i[3].re
 eq 82: v.iArg[4] v.i[4].im v.i[4].re
 eq 83: v.iArg[5] v.i[5].im v.i[5].re
 eq 84: v.iArg[6] v.i[6].im v.i[6].re
 eq 85: v.iArg[7] v.i[7].im v.i[7].re
 eq 86: v.iArg[8] v.i[8].im v.i[8].re
 eq 87: z.vFundAbs z.v[1].re z.v[1].im
 eq 88: z.vFundArg z.v[1].im z.v[1].re
 eq 89: z.iFundAbs v.i[1].re v.i[1].im
 eq 90: led_driver.P load.i
 eq 91: led_driver.I_mag[1] v.i[1].re v.i[1].im
 eq 92: led_driver.I_mag[2] v.i[2].re v.i[2].im
 eq 93: led_driver.I_mag[3] v.i[3].re v.i[3].im
 eq 94: led_driver.I_mag[4] v.i[4].re v.i[4].im
 eq 95: led_driver.I_mag[5] v.i[5].re v.i[5].im
 eq 96: led_driver.I_mag[6] v.i[6].re v.i[6].im
 eq 97: led_driver.I_mag[7] v.i[7].re v.i[7].im
 eq 98: led_driver.I_mag[8] v.i[8].re v.i[8].im
 eq 99: led_driver.I_arg[2] v.i[2].im v.i[2].re
 eq 100: led_driver.I_arg[3] v.i[3].im v.i[3].re
 eq 101: led_driver.I_arg[4] v.i[4].im v.i[4].re
 eq 102: led_driver.I_arg[5] v.i[5].im v.i[5].re
 eq 103: led_driver.I_arg[6] v.i[6].im v.i[6].re
 eq 104: led_driver.I_arg[7] v.i[7].im v.i[7].re
 eq 105: led_driver.I_arg[8] v.i[8].im v.i[8].re
 eq 106: led_driver.V_mag[1] led_driver.loadBase.v[1].re z.v[1].im
 eq 107: led_driver.V_mag[2] led_driver.loadBase.v[2].re z.v[2].im
 eq 108: led_driver.V_mag[3] led_driver.loadBase.v[3].re z.v[3].im
 eq 109: led_driver.V_mag[4] led_driver.loadBase.v[4].re z.v[4].im
 eq 110: led_driver.V_mag[5] led_driver.loadBase.v[5].re z.v[5].im
 eq 111: led_driver.V_mag[6] led_driver.loadBase.v[6].re z.v[6].im
 eq 112: led_driver.V_mag[7] led_driver.loadBase.v[7].re z.v[7].im
 eq 113: led_driver.V_mag[8] led_driver.loadBase.v[8].re z.v[8].im
 eq 114: led_driver.V_arg[2] z.v[2].im led_driver.loadBase.v[2].re
 eq 115: led_driver.V_arg[3] z.v[3].im led_driver.loadBase.v[3].re
 eq 116: led_driver.V_arg[4] z.v[4].im led_driver.loadBase.v[4].re
 eq 117: led_driver.V_arg[5] z.v[5].im led_driver.loadBase.v[5].re
 eq 118: led_driver.V_arg[6] z.v[6].im led_driver.loadBase.v[6].re
 eq 119: led_driver.V_arg[7] z.v[7].im led_driver.loadBase.v[7].re
 eq 120: led_driver.V_arg[8] z.v[8].im led_driver.loadBase.v[8].re
 eq 121: led_driver.magScale v.i[1].re v.i[1].im
 eq 122: led_driver.argAdj[1] led_driver.V_arg[1]
 eq 123: led_driver.argAdj[2] led_driver.V_arg[1]
 eq 124: led_driver.argAdj[3] led_driver.V_arg[1]
 eq 125: led_driver.argAdj[4] led_driver.V_arg[1]
 eq 126: led_driver.argAdj[5] led_driver.V_arg[1]
 eq 127: led_driver.argAdj[6] led_driver.V_arg[1]
 eq 128: led_driver.argAdj[7] led_driver.V_arg[1]
 eq 129: led_driver.a[1].re led_driver.argAdj[1]
 eq 130: led_driver.a[1].im led_driver.argAdj[1]
 eq 131: led_driver.a[2].re led_driver.argAdj[2]
 eq 132: led_driver.a[2].im led_driver.argAdj[2]
 eq 133: led_driver.a[3].re led_driver.argAdj[3]
 eq 134: led_driver.a[3].im led_driver.argAdj[3]
 eq 135: led_driver.a[4].re led_driver.argAdj[4]
 eq 136: led_driver.a[4].im led_driver.argAdj[4]
 eq 137: led_driver.a[5].re led_driver.argAdj[5]
 eq 138: led_driver.a[5].im led_driver.argAdj[5]
 eq 139: led_driver.a[6].re led_driver.argAdj[6]
 eq 140: led_driver.a[6].im led_driver.argAdj[6]
 eq 141: led_driver.a[7].re led_driver.argAdj[7]
 eq 142: led_driver.a[7].im led_driver.argAdj[7]
 eq 143: led_driver.c[1] led_driver.magScale
 eq 144: led_driver.c[2] led_driver.magScale
 eq 145: led_driver.c[3] led_driver.magScale
 eq 146: led_driver.c[4] led_driver.magScale
 eq 147: led_driver.c[5] led_driver.magScale
 eq 148: led_driver.c[6] led_driver.magScale
 eq 149: led_driver.c[7] led_driver.magScale
 eq 150: z.iFundArg v.i[1].im v.i[1].re
 eq 151: led_driver.V_arg[1] z.v[1].im led_driver.loadBase.v[1].re

Variable dependencies:
Derivative variables: 
 der(v.theta)
    systemDef.fFund

Differentiated variables: 
 v.theta

Algebraic real variables: 
 ground.pin.iIm[1]
 ground.pin.iIm[2]
 ground.pin.iIm[3]
 ground.pin.iIm[4]
 ground.pin.iIm[5]
 ground.pin.iIm[6]
 ground.pin.iIm[7]
 ground.pin.iIm[8]
 ground.pin.iRe[1]
 ground.pin.iRe[2]
 ground.pin.iRe[3]
 ground.pin.iRe[4]
 ground.pin.iRe[5]
 ground.pin.iRe[6]
 ground.pin.iRe[7]
 ground.pin.iRe[8]
 ground2.p.i
 v.P1
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 v.iMag[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 v.iMag[2]
    led_driver.mdlMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
    systemDef.hrms[2]
 v.iMag[3]
    led_driver.mdlMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
    systemDef.hrms[3]
 v.iMag[4]
    led_driver.mdlMag[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
    systemDef.hrms[4]
 v.iMag[5]
    led_driver.mdlMag[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
    systemDef.hrms[5]
 v.iMag[6]
    led_driver.mdlMag[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
    systemDef.hrms[6]
 v.iMag[7]
    led_driver.mdlMag[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
    systemDef.hrms[7]
 v.iMag[8]
    led_driver.mdlMag[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
    systemDef.hrms[8]
 v.iArg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 v.iArg[2]
    led_driver.mdlMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
    systemDef.hrms[2]
 v.iArg[3]
    led_driver.mdlMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
    systemDef.hrms[3]
 v.iArg[4]
    led_driver.mdlMag[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
    systemDef.hrms[4]
 v.iArg[5]
    led_driver.mdlMag[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
    systemDef.hrms[5]
 v.iArg[6]
    led_driver.mdlMag[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
    systemDef.hrms[6]
 v.iArg[7]
    led_driver.mdlMag[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
    systemDef.hrms[7]
 v.iArg[8]
    led_driver.mdlMag[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
    systemDef.hrms[8]
 v.i[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 v.i[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 v.i[2].re
    led_driver.mdlMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
    systemDef.hrms[2]
 v.i[2].im
    led_driver.mdlMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
    systemDef.hrms[2]
 v.i[3].re
    led_driver.mdlMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
    systemDef.hrms[3]
 v.i[3].im
    led_driver.mdlMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
    systemDef.hrms[3]
 v.i[4].re
    led_driver.mdlMag[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
    systemDef.hrms[4]
 v.i[4].im
    led_driver.mdlMag[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
    systemDef.hrms[4]
 v.i[5].re
    led_driver.mdlMag[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
    systemDef.hrms[5]
 v.i[5].im
    led_driver.mdlMag[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
    systemDef.hrms[5]
 v.i[6].re
    led_driver.mdlMag[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
    systemDef.hrms[6]
 v.i[6].im
    led_driver.mdlMag[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
    systemDef.hrms[6]
 v.i[7].re
    led_driver.mdlMag[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
    systemDef.hrms[7]
 v.i[7].im
    led_driver.mdlMag[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
    systemDef.hrms[7]
 v.i[8].re
    led_driver.mdlMag[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
    systemDef.hrms[8]
 v.i[8].im
    led_driver.mdlMag[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
    systemDef.hrms[8]
 v.omega
    systemDef.fFund
 z.vFundAbs
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 z.vFundArg
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 z.iFundAbs
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 z.iFundArg
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 z.v[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 z.v[1].im
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 z.v[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    led_driver.mdlMag[2]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
 z.v[2].im
    z.z.re
    z.z.im
    systemDef.hrms[2]
    led_driver.mdlMag[2]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
 z.v[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    led_driver.mdlMag[3]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
 z.v[3].im
    z.z.re
    z.z.im
    systemDef.hrms[3]
    led_driver.mdlMag[3]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
 z.v[4].re
    z.z.re
    z.z.im
    systemDef.hrms[4]
    led_driver.mdlMag[4]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
 z.v[4].im
    z.z.re
    z.z.im
    systemDef.hrms[4]
    led_driver.mdlMag[4]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
 z.v[5].re
    z.z.re
    z.z.im
    systemDef.hrms[5]
    led_driver.mdlMag[5]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
 z.v[5].im
    z.z.re
    z.z.im
    systemDef.hrms[5]
    led_driver.mdlMag[5]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
 z.v[6].re
    z.z.re
    z.z.im
    systemDef.hrms[6]
    led_driver.mdlMag[6]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
 z.v[6].im
    z.z.re
    z.z.im
    systemDef.hrms[6]
    led_driver.mdlMag[6]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
 z.v[7].re
    z.z.re
    z.z.im
    systemDef.hrms[7]
    led_driver.mdlMag[7]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
 z.v[7].im
    z.z.re
    z.z.im
    systemDef.hrms[7]
    led_driver.mdlMag[7]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
 z.v[8].re
    z.z.re
    z.z.im
    systemDef.hrms[8]
    led_driver.mdlMag[8]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
 z.v[8].im
    z.z.re
    z.z.im
    systemDef.hrms[8]
    led_driver.mdlMag[8]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
 z.omega
    systemDef.fFund
 led_driver.PLoss
    led_driver.efficiency
    led_driver.V_Rect
    u
 led_driver.loadBase.v[1].re
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.loadBase.v[2].re
    z.z.re
    z.z.im
    systemDef.hrms[2]
    led_driver.mdlMag[2]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
 led_driver.loadBase.v[3].re
    z.z.re
    z.z.im
    systemDef.hrms[3]
    led_driver.mdlMag[3]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
 led_driver.loadBase.v[4].re
    z.z.re
    z.z.im
    systemDef.hrms[4]
    led_driver.mdlMag[4]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
 led_driver.loadBase.v[5].re
    z.z.re
    z.z.im
    systemDef.hrms[5]
    led_driver.mdlMag[5]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
 led_driver.loadBase.v[6].re
    z.z.re
    z.z.im
    systemDef.hrms[6]
    led_driver.mdlMag[6]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
 led_driver.loadBase.v[7].re
    z.z.re
    z.z.im
    systemDef.hrms[7]
    led_driver.mdlMag[7]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
 led_driver.loadBase.v[8].re
    z.z.re
    z.z.im
    systemDef.hrms[8]
    led_driver.mdlMag[8]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
 led_driver.loadBase.omega
    systemDef.fFund
 led_driver.P
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.I_mag[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.I_mag[2]
    led_driver.mdlMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
    systemDef.hrms[2]
 led_driver.I_mag[3]
    led_driver.mdlMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
    systemDef.hrms[3]
 led_driver.I_mag[4]
    led_driver.mdlMag[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
    systemDef.hrms[4]
 led_driver.I_mag[5]
    led_driver.mdlMag[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
    systemDef.hrms[5]
 led_driver.I_mag[6]
    led_driver.mdlMag[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
    systemDef.hrms[6]
 led_driver.I_mag[7]
    led_driver.mdlMag[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
    systemDef.hrms[7]
 led_driver.I_mag[8]
    led_driver.mdlMag[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
    systemDef.hrms[8]
 led_driver.I_arg[2]
    led_driver.mdlMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
    systemDef.hrms[2]
 led_driver.I_arg[3]
    led_driver.mdlMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
    systemDef.hrms[3]
 led_driver.I_arg[4]
    led_driver.mdlMag[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
    systemDef.hrms[4]
 led_driver.I_arg[5]
    led_driver.mdlMag[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
    systemDef.hrms[5]
 led_driver.I_arg[6]
    led_driver.mdlMag[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
    systemDef.hrms[6]
 led_driver.I_arg[7]
    led_driver.mdlMag[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
    systemDef.hrms[7]
 led_driver.I_arg[8]
    led_driver.mdlMag[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
    systemDef.hrms[8]
 led_driver.V_mag[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.V_mag[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    led_driver.mdlMag[2]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
 led_driver.V_mag[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    led_driver.mdlMag[3]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
 led_driver.V_mag[4]
    z.z.re
    z.z.im
    systemDef.hrms[4]
    led_driver.mdlMag[4]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
 led_driver.V_mag[5]
    z.z.re
    z.z.im
    systemDef.hrms[5]
    led_driver.mdlMag[5]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
 led_driver.V_mag[6]
    z.z.re
    z.z.im
    systemDef.hrms[6]
    led_driver.mdlMag[6]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
 led_driver.V_mag[7]
    z.z.re
    z.z.im
    systemDef.hrms[7]
    led_driver.mdlMag[7]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
 led_driver.V_mag[8]
    z.z.re
    z.z.im
    systemDef.hrms[8]
    led_driver.mdlMag[8]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
 led_driver.V_arg[1]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.V_arg[2]
    z.z.re
    z.z.im
    systemDef.hrms[2]
    led_driver.mdlMag[2]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[2]
 led_driver.V_arg[3]
    z.z.re
    z.z.im
    systemDef.hrms[3]
    led_driver.mdlMag[3]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[3]
 led_driver.V_arg[4]
    z.z.re
    z.z.im
    systemDef.hrms[4]
    led_driver.mdlMag[4]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[4]
 led_driver.V_arg[5]
    z.z.re
    z.z.im
    systemDef.hrms[5]
    led_driver.mdlMag[5]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[5]
 led_driver.V_arg[6]
    z.z.re
    z.z.im
    systemDef.hrms[6]
    led_driver.mdlMag[6]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[6]
 led_driver.V_arg[7]
    z.z.re
    z.z.im
    systemDef.hrms[7]
    led_driver.mdlMag[7]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[7]
 led_driver.V_arg[8]
    z.z.re
    z.z.im
    systemDef.hrms[8]
    led_driver.mdlMag[8]
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
    led_driver.mdlArg[8]
 led_driver.S
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.Q
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.magScale
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.argAdj[1]
    led_driver.mdlArg[2]
    systemDef.hrms[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.argAdj[2]
    led_driver.mdlArg[3]
    systemDef.hrms[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.argAdj[3]
    led_driver.mdlArg[4]
    systemDef.hrms[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.argAdj[4]
    led_driver.mdlArg[5]
    systemDef.hrms[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.argAdj[5]
    led_driver.mdlArg[6]
    systemDef.hrms[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.argAdj[6]
    led_driver.mdlArg[7]
    systemDef.hrms[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.argAdj[7]
    led_driver.mdlArg[8]
    systemDef.hrms[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[1].re
    led_driver.mdlArg[2]
    systemDef.hrms[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[1].im
    led_driver.mdlArg[2]
    systemDef.hrms[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[2].re
    led_driver.mdlArg[3]
    systemDef.hrms[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[2].im
    led_driver.mdlArg[3]
    systemDef.hrms[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[3].re
    led_driver.mdlArg[4]
    systemDef.hrms[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[3].im
    led_driver.mdlArg[4]
    systemDef.hrms[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[4].re
    led_driver.mdlArg[5]
    systemDef.hrms[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[4].im
    led_driver.mdlArg[5]
    systemDef.hrms[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[5].re
    led_driver.mdlArg[6]
    systemDef.hrms[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[5].im
    led_driver.mdlArg[6]
    systemDef.hrms[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[6].re
    led_driver.mdlArg[7]
    systemDef.hrms[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[6].im
    led_driver.mdlArg[7]
    systemDef.hrms[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[7].re
    led_driver.mdlArg[8]
    systemDef.hrms[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.a[7].im
    led_driver.mdlArg[8]
    systemDef.hrms[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.c[1]
    led_driver.mdlMag[2]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.c[2]
    led_driver.mdlMag[3]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.c[3]
    led_driver.mdlMag[4]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.c[4]
    led_driver.mdlMag[5]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.c[5]
    led_driver.mdlMag[6]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.c[6]
    led_driver.mdlMag[7]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 led_driver.c[7]
    led_driver.mdlMag[8]
    z.z.re
    z.z.im
    systemDef.hrms[1]
    led_driver.mdlArg[1]
    led_driver.V_Rect
    led_driver.efficiency
    u
 load.u
    u
 load.i
    led_driver.V_Rect
    u
 y
    led_driver.efficiency
    led_driver.V_Rect
    u



Connection sets: 104 sets
Connection set (flow): {v.pin_p.iIm[1:8] (i), z.pin_p.iIm[1:8] (i)}
Connection set (flow): {v.pin_p.iRe[1:8] (i), z.pin_p.iRe[1:8] (i)}
Connection set (potential): {v.pin_p.v[1].im (i), z.pin_p.v[1].im (i)}
Connection set (potential): {v.pin_p.v[1].re (i), z.pin_p.v[1].re (i)}
Connection set (potential): {v.pin_p.v[2].im (i), z.pin_p.v[2].im (i)}
Connection set (potential): {v.pin_p.v[2].re (i), z.pin_p.v[2].re (i)}
Connection set (potential): {v.pin_p.v[3].im (i), z.pin_p.v[3].im (i)}
Connection set (potential): {v.pin_p.v[3].re (i), z.pin_p.v[3].re (i)}
Connection set (potential): {v.pin_p.v[4].im (i), z.pin_p.v[4].im (i)}
Connection set (potential): {v.pin_p.v[4].re (i), z.pin_p.v[4].re (i)}
Connection set (potential): {v.pin_p.v[5].im (i), z.pin_p.v[5].im (i)}
Connection set (potential): {v.pin_p.v[5].re (i), z.pin_p.v[5].re (i)}
Connection set (potential): {v.pin_p.v[6].im (i), z.pin_p.v[6].im (i)}
Connection set (potential): {v.pin_p.v[6].re (i), z.pin_p.v[6].re (i)}
Connection set (potential): {v.pin_p.v[7].im (i), z.pin_p.v[7].im (i)}
Connection set (potential): {v.pin_p.v[7].re (i), z.pin_p.v[7].re (i)}
Connection set (potential): {v.pin_p.v[8].im (i), z.pin_p.v[8].im (i)}
Connection set (potential): {v.pin_p.v[8].re (i), z.pin_p.v[8].re (i)}
Connection set (flow): {ground.pin.iIm[1:8] (i), led_driver.hPin_N.iIm[1:8] (i), v.pin_n.iIm[1:8] (i)}
Connection set (flow): {ground.pin.iRe[1:8] (i), led_driver.hPin_N.iRe[1:8] (i), v.pin_n.iRe[1:8] (i)}
Connection set (potential): {ground.pin.v[1].im (i), led_driver.hPin_N.v[1].im (i), v.pin_n.v[1].im (i)}
Connection set (potential): {ground.pin.v[1].re (i), led_driver.hPin_N.v[1].re (i), v.pin_n.v[1].re (i)}
Connection set (potential): {ground.pin.v[2].im (i), led_driver.hPin_N.v[2].im (i), v.pin_n.v[2].im (i)}
Connection set (potential): {ground.pin.v[2].re (i), led_driver.hPin_N.v[2].re (i), v.pin_n.v[2].re (i)}
Connection set (potential): {ground.pin.v[3].im (i), led_driver.hPin_N.v[3].im (i), v.pin_n.v[3].im (i)}
Connection set (potential): {ground.pin.v[3].re (i), led_driver.hPin_N.v[3].re (i), v.pin_n.v[3].re (i)}
Connection set (potential): {ground.pin.v[4].im (i), led_driver.hPin_N.v[4].im (i), v.pin_n.v[4].im (i)}
Connection set (potential): {ground.pin.v[4].re (i), led_driver.hPin_N.v[4].re (i), v.pin_n.v[4].re (i)}
Connection set (potential): {ground.pin.v[5].im (i), led_driver.hPin_N.v[5].im (i), v.pin_n.v[5].im (i)}
Connection set (potential): {ground.pin.v[5].re (i), led_driver.hPin_N.v[5].re (i), v.pin_n.v[5].re (i)}
Connection set (potential): {ground.pin.v[6].im (i), led_driver.hPin_N.v[6].im (i), v.pin_n.v[6].im (i)}
Connection set (potential): {ground.pin.v[6].re (i), led_driver.hPin_N.v[6].re (i), v.pin_n.v[6].re (i)}
Connection set (potential): {ground.pin.v[7].im (i), led_driver.hPin_N.v[7].im (i), v.pin_n.v[7].im (i)}
Connection set (potential): {ground.pin.v[7].re (i), led_driver.hPin_N.v[7].re (i), v.pin_n.v[7].re (i)}
Connection set (potential): {ground.pin.v[8].im (i), led_driver.hPin_N.v[8].im (i), v.pin_n.v[8].im (i)}
Connection set (potential): {ground.pin.v[8].re (i), led_driver.hPin_N.v[8].re (i), v.pin_n.v[8].re (i)}
Connection set (flow): {ground2.p.i (i), led_driver.pin_n.i (i), load.n.i (i)}
Connection set (potential): {ground2.p.v (i), led_driver.pin_n.v (i), load.n.v (i)}
Connection set (flow): {led_driver.pin_p.i (i), load.p.i (i)}
Connection set (potential): {led_driver.pin_p.v (i), load.p.v (i)}
Connection set (potential): {led_driver.PLoss (i), y (o)}
Connection set (flow): {led_driver.hPin_P.iIm[1:8] (i), z.pin_n.iIm[1:8] (i)}
Connection set (flow): {led_driver.hPin_P.iRe[1:8] (i), z.pin_n.iRe[1:8] (i)}
Connection set (potential): {led_driver.hPin_P.v[1].im (i), z.pin_n.v[1].im (i)}
Connection set (potential): {led_driver.hPin_P.v[1].re (i), z.pin_n.v[1].re (i)}
Connection set (potential): {led_driver.hPin_P.v[2].im (i), z.pin_n.v[2].im (i)}
Connection set (potential): {led_driver.hPin_P.v[2].re (i), z.pin_n.v[2].re (i)}
Connection set (potential): {led_driver.hPin_P.v[3].im (i), z.pin_n.v[3].im (i)}
Connection set (potential): {led_driver.hPin_P.v[3].re (i), z.pin_n.v[3].re (i)}
Connection set (potential): {led_driver.hPin_P.v[4].im (i), z.pin_n.v[4].im (i)}
Connection set (potential): {led_driver.hPin_P.v[4].re (i), z.pin_n.v[4].re (i)}
Connection set (potential): {led_driver.hPin_P.v[5].im (i), z.pin_n.v[5].im (i)}
Connection set (potential): {led_driver.hPin_P.v[5].re (i), z.pin_n.v[5].re (i)}
Connection set (potential): {led_driver.hPin_P.v[6].im (i), z.pin_n.v[6].im (i)}
Connection set (potential): {led_driver.hPin_P.v[6].re (i), z.pin_n.v[6].re (i)}
Connection set (potential): {led_driver.hPin_P.v[7].im (i), z.pin_n.v[7].im (i)}
Connection set (potential): {led_driver.hPin_P.v[7].re (i), z.pin_n.v[7].re (i)}
Connection set (potential): {led_driver.hPin_P.v[8].im (i), z.pin_n.v[8].im (i)}
Connection set (potential): {led_driver.hPin_P.v[8].re (i), z.pin_n.v[8].re (i)}
Connection set (potential): {load.u (i), u (o)}
Connection set (flow): {led_driver.pin_p.i (o), led_driver.vDC.p.i (i)}
Connection set (potential): {led_driver.pin_p.v (o), led_driver.vDC.p.v (i)}
Connection set (flow): {led_driver.pin_n.i (o), led_driver.vDC.n.i (i)}
Connection set (potential): {led_driver.pin_n.v (o), led_driver.vDC.n.v (i)}
Connection set (flow): {led_driver.hPin_P.iIm[1:8] (o), led_driver.loadBase.pin_p.iIm[1:8] (i)}
Connection set (flow): {led_driver.hPin_P.iRe[1:8] (o), led_driver.loadBase.pin_p.iRe[1:8] (i)}
Connection set (potential): {led_driver.hPin_P.v[1].im (o), led_driver.loadBase.pin_p.v[1].im (i)}
Connection set (potential): {led_driver.hPin_P.v[1].re (o), led_driver.loadBase.pin_p.v[1].re (i)}
Connection set (potential): {led_driver.hPin_P.v[2].im (o), led_driver.loadBase.pin_p.v[2].im (i)}
Connection set (potential): {led_driver.hPin_P.v[2].re (o), led_driver.loadBase.pin_p.v[2].re (i)}
Connection set (potential): {led_driver.hPin_P.v[3].im (o), led_driver.loadBase.pin_p.v[3].im (i)}
Connection set (potential): {led_driver.hPin_P.v[3].re (o), led_driver.loadBase.pin_p.v[3].re (i)}
Connection set (potential): {led_driver.hPin_P.v[4].im (o), led_driver.loadBase.pin_p.v[4].im (i)}
Connection set (potential): {led_driver.hPin_P.v[4].re (o), led_driver.loadBase.pin_p.v[4].re (i)}
Connection set (potential): {led_driver.hPin_P.v[5].im (o), led_driver.loadBase.pin_p.v[5].im (i)}
Connection set (potential): {led_driver.hPin_P.v[5].re (o), led_driver.loadBase.pin_p.v[5].re (i)}
Connection set (potential): {led_driver.hPin_P.v[6].im (o), led_driver.loadBase.pin_p.v[6].im (i)}
Connection set (potential): {led_driver.hPin_P.v[6].re (o), led_driver.loadBase.pin_p.v[6].re (i)}
Connection set (potential): {led_driver.hPin_P.v[7].im (o), led_driver.loadBase.pin_p.v[7].im (i)}
Connection set (potential): {led_driver.hPin_P.v[7].re (o), led_driver.loadBase.pin_p.v[7].re (i)}
Connection set (potential): {led_driver.hPin_P.v[8].im (o), led_driver.loadBase.pin_p.v[8].im (i)}
Connection set (potential): {led_driver.hPin_P.v[8].re (o), led_driver.loadBase.pin_p.v[8].re (i)}
Connection set (flow): {led_driver.hPin_N.iIm[1:8] (o), led_driver.loadBase.pin_n.iIm[1:8] (i)}
Connection set (flow): {led_driver.hPin_N.iRe[1:8] (o), led_driver.loadBase.pin_n.iRe[1:8] (i)}
Connection set (potential): {led_driver.hPin_N.v[1].im (o), led_driver.loadBase.pin_n.v[1].im (i)}
Connection set (potential): {led_driver.hPin_N.v[1].re (o), led_driver.loadBase.pin_n.v[1].re (i)}
Connection set (potential): {led_driver.hPin_N.v[2].im (o), led_driver.loadBase.pin_n.v[2].im (i)}
Connection set (potential): {led_driver.hPin_N.v[2].re (o), led_driver.loadBase.pin_n.v[2].re (i)}
Connection set (potential): {led_driver.hPin_N.v[3].im (o), led_driver.loadBase.pin_n.v[3].im (i)}
Connection set (potential): {led_driver.hPin_N.v[3].re (o), led_driver.loadBase.pin_n.v[3].re (i)}
Connection set (potential): {led_driver.hPin_N.v[4].im (o), led_driver.loadBase.pin_n.v[4].im (i)}
Connection set (potential): {led_driver.hPin_N.v[4].re (o), led_driver.loadBase.pin_n.v[4].re (i)}
Connection set (potential): {led_driver.hPin_N.v[5].im (o), led_driver.loadBase.pin_n.v[5].im (i)}
Connection set (potential): {led_driver.hPin_N.v[5].re (o), led_driver.loadBase.pin_n.v[5].re (i)}
Connection set (potential): {led_driver.hPin_N.v[6].im (o), led_driver.loadBase.pin_n.v[6].im (i)}
Connection set (potential): {led_driver.hPin_N.v[6].re (o), led_driver.loadBase.pin_n.v[6].re (i)}
Connection set (potential): {led_driver.hPin_N.v[7].im (o), led_driver.loadBase.pin_n.v[7].im (i)}
Connection set (potential): {led_driver.hPin_N.v[7].re (o), led_driver.loadBase.pin_n.v[7].re (i)}
Connection set (potential): {led_driver.hPin_N.v[8].im (o), led_driver.loadBase.pin_n.v[8].im (i)}
Connection set (potential): {led_driver.hPin_N.v[8].re (o), led_driver.loadBase.pin_n.v[8].re (i)}
Connection set (potential): {v.pin_p.reference.theta (i), z.pin_p.reference.theta (i)}
Connection set (potential): {led_driver.hPin_P.reference.theta (i), z.pin_n.reference.theta (i)}
Connection set (potential): {ground.pin.reference.theta (i), led_driver.hPin_N.reference.theta (i), v.pin_n.reference.theta (i)}
Connection set (potential): {led_driver.hPin_P.reference.theta (o), led_driver.loadBase.pin_p.reference.theta (i)}

Transformed flattened model:
fclass HPF.Examples.Demo
 parameter Integer systemDef.hrms[1] = 1 "Harmonics to simulate" /* 1 */;
 parameter Integer systemDef.hrms[2] = 3 "Harmonics to simulate" /* 3 */;
 parameter Integer systemDef.hrms[3] = 5 "Harmonics to simulate" /* 5 */;
 parameter Integer systemDef.hrms[4] = 7 "Harmonics to simulate" /* 7 */;
 parameter Integer systemDef.hrms[5] = 9 "Harmonics to simulate" /* 9 */;
 parameter Integer systemDef.hrms[6] = 11 "Harmonics to simulate" /* 11 */;
 parameter Integer systemDef.hrms[7] = 13 "Harmonics to simulate" /* 13 */;
 parameter Integer systemDef.hrms[8] = 15 "Harmonics to simulate" /* 15 */;
 structural parameter Integer systemDef.numHrm = 8 "Number of harmonics. (Automatically generated from hrms.)" /* 8 */;
 parameter Modelica.SIunits.Frequency systemDef.fFund = 60 "Fundamental frequency (Hz)" /* 60 */;
 parameter Modelica.SIunits.Frequency systemDef.fs = 5000.0 "Sampling frequency (Hz)" /* 5000.0 */;
 parameter Integer systemDef.N "Size of FFT";
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 constant String ground.properties.ComponentType = "Ground" "Type of the component";
 Real ground.pin.iIm[1];
 Real ground.pin.iIm[2];
 Real ground.pin.iIm[3];
 Real ground.pin.iIm[4];
 Real ground.pin.iIm[5];
 Real ground.pin.iIm[6];
 Real ground.pin.iIm[7];
 Real ground.pin.iIm[8];
 Real ground.pin.iRe[1];
 Real ground.pin.iRe[2];
 Real ground.pin.iRe[3];
 Real ground.pin.iRe[4];
 Real ground.pin.iRe[5];
 Real ground.pin.iRe[6];
 Real ground.pin.iRe[7];
 Real ground.pin.iRe[8];
 Modelica.SIunits.ElectricCurrent ground2.p.i "Current flowing into the pin";
 constant String v.properties.ComponentType = "VoltageSource" "Type of the component";
 structural parameter Real v.vMag[1] = 120 "Voltage Magnitude (Volts rms)" /* 120 */;
 structural parameter Real v.vArg[1] = 0 "Voltage angle (rad)" /* 0 */;
 Real v.P1;
 Real v.iMag[1];
 Real v.iMag[2];
 Real v.iMag[3];
 Real v.iMag[4];
 Real v.iMag[5];
 Real v.iMag[6];
 Real v.iMag[7];
 Real v.iMag[8];
 Real v.iArg[1];
 Real v.iArg[2];
 Real v.iArg[3];
 Real v.iArg[4];
 Real v.iArg[5];
 Real v.iArg[6];
 Real v.iArg[7];
 Real v.iArg[8];
 Modelica.SIunits.Angle v.theta(start = 0);
 constant Real v.v[1].re(start = 100) = 120.0 "Real part of complex number";
 constant Real v.v[1].im(start = 0) = 0.0 "Imaginary part of complex number";
 constant Real v.v[2].re(start = 100) = 0.001 "Real part of complex number";
 Real v.i[1].re(start = 0) "Real part of complex number";
 Real v.i[1].im(start = 0) "Imaginary part of complex number";
 Real v.i[2].re(start = 0) "Real part of complex number";
 Real v.i[2].im(start = 0) "Imaginary part of complex number";
 Real v.i[3].re(start = 0) "Real part of complex number";
 Real v.i[3].im(start = 0) "Imaginary part of complex number";
 Real v.i[4].re(start = 0) "Real part of complex number";
 Real v.i[4].im(start = 0) "Imaginary part of complex number";
 Real v.i[5].re(start = 0) "Real part of complex number";
 Real v.i[5].im(start = 0) "Imaginary part of complex number";
 Real v.i[6].re(start = 0) "Real part of complex number";
 Real v.i[6].im(start = 0) "Imaginary part of complex number";
 Real v.i[7].re(start = 0) "Real part of complex number";
 Real v.i[7].im(start = 0) "Imaginary part of complex number";
 Real v.i[8].re(start = 0) "Real part of complex number";
 Real v.i[8].im(start = 0) "Imaginary part of complex number";
 Real v.omega;
 constant String z.properties.ComponentType = "Impedance" "Type of the component";
 parameter Real z.z.re(start = 1) = 0.5 "Real part of complex number" /* 0.5 */;
 parameter Real z.z.im(start = 0) = 0.02 "Imaginary part of complex number" /* 0.02 */;
 Real z.vFundAbs;
 Real z.vFundArg;
 Real z.iFundAbs;
 Real z.iFundArg;
 Real z.v[1].re(start = 100) "Real part of complex number";
 Real z.v[1].im(start = 0) "Imaginary part of complex number";
 Real z.v[2].re(start = 100) "Real part of complex number";
 Real z.v[2].im(start = 0) "Imaginary part of complex number";
 Real z.v[3].re(start = 100) "Real part of complex number";
 Real z.v[3].im(start = 0) "Imaginary part of complex number";
 Real z.v[4].re(start = 100) "Real part of complex number";
 Real z.v[4].im(start = 0) "Imaginary part of complex number";
 Real z.v[5].re(start = 100) "Real part of complex number";
 Real z.v[5].im(start = 0) "Imaginary part of complex number";
 Real z.v[6].re(start = 100) "Real part of complex number";
 Real z.v[6].im(start = 0) "Imaginary part of complex number";
 Real z.v[7].re(start = 100) "Real part of complex number";
 Real z.v[7].im(start = 0) "Imaginary part of complex number";
 Real z.v[8].re(start = 100) "Real part of complex number";
 Real z.v[8].im(start = 0) "Imaginary part of complex number";
 Real z.omega;
 constant String led_driver.properties.ComponentType = "NonlinearLoad" "Type of the component";
 Modelica.Blocks.Interfaces.RealOutput led_driver.PLoss;
 parameter Real led_driver.V_Rect(start = 0) = 24 "Rectifier DC output" /* 24 */;
 parameter Real led_driver.efficiency(start = 1) = 0.95 "Rectifier efficiency (replace with efficiency model or curve)" /* 0.95 */;
 parameter Modelica.SIunits.ElectricPotential led_driver.vDC.V(start = 1) "Value of constant voltage";
 Real led_driver.loadBase.v[1].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[2].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[3].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[4].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[5].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[6].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[7].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.v[8].re(start = 100) "Real part of complex number";
 Real led_driver.loadBase.omega;
 Real led_driver.P;
 Real led_driver.I_mag[1];
 Real led_driver.I_mag[2];
 Real led_driver.I_mag[3];
 Real led_driver.I_mag[4];
 Real led_driver.I_mag[5];
 Real led_driver.I_mag[6];
 Real led_driver.I_mag[7];
 Real led_driver.I_mag[8];
 Real led_driver.I_arg[2];
 Real led_driver.I_arg[3];
 Real led_driver.I_arg[4];
 Real led_driver.I_arg[5];
 Real led_driver.I_arg[6];
 Real led_driver.I_arg[7];
 Real led_driver.I_arg[8];
 Real led_driver.V_mag[1];
 Real led_driver.V_mag[2];
 Real led_driver.V_mag[3];
 Real led_driver.V_mag[4];
 Real led_driver.V_mag[5];
 Real led_driver.V_mag[6];
 Real led_driver.V_mag[7];
 Real led_driver.V_mag[8];
 Real led_driver.V_arg[1];
 Real led_driver.V_arg[2];
 Real led_driver.V_arg[3];
 Real led_driver.V_arg[4];
 Real led_driver.V_arg[5];
 Real led_driver.V_arg[6];
 Real led_driver.V_arg[7];
 Real led_driver.V_arg[8];
 Real led_driver.S(start = 1) "Apparent power at fundamental";
 Real led_driver.Q(start = 1) "Imaginary power at fundamental";
 parameter Real led_driver.mdlMag[1] = 1.0 "Harmonic magnitudes (normalized wrt fundamental)" /* 1.0 */;
 parameter Real led_driver.mdlMag[2] = 0.8904 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.8904 */;
 parameter Real led_driver.mdlMag[3] = 0.7418 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.7418 */;
 parameter Real led_driver.mdlMag[4] = 0.5673 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.5673 */;
 parameter Real led_driver.mdlMag[5] = 0.3937 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.3937 */;
 parameter Real led_driver.mdlMag[6] = 0.2526 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.2526 */;
 parameter Real led_driver.mdlMag[7] = 0.1565 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1565 */;
 parameter Real led_driver.mdlMag[8] = 0.1086 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1086 */;
 parameter Real led_driver.mdlMag[9] = 0.1028 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1028 */;
 parameter Real led_driver.mdlMag[10] = 0.1117 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1117 */;
 parameter Real led_driver.mdlMag[11] = 0.1074 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.1074 */;
 parameter Real led_driver.mdlMag[12] = 0.0875 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0875 */;
 parameter Real led_driver.mdlMag[13] = 0.0578 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0578 */;
 parameter Real led_driver.mdlMag[14] = 0.0366 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0366 */;
 parameter Real led_driver.mdlMag[15] = 0.0289 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0289 */;
 parameter Real led_driver.mdlMag[16] = 0.0275 "Harmonic magnitudes (normalized wrt fundamental)" /* 0.0275 */;
 parameter Real led_driver.mdlArg[1] = 0.3876 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 0.3876 */;
 parameter Real led_driver.mdlArg[2] = -2.179 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.179 */;
 parameter Real led_driver.mdlArg[3] = 1.6303 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.6303 */;
 parameter Real led_driver.mdlArg[4] = -0.7953 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -0.7953 */;
 parameter Real led_driver.mdlArg[5] = 3.1273 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 3.1273 */;
 parameter Real led_driver.mdlArg[6] = 0.8908 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 0.8908 */;
 parameter Real led_driver.mdlArg[7] = -1.1864 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -1.1864 */;
 parameter Real led_driver.mdlArg[8] = -2.9993 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.9993 */;
 parameter Real led_driver.mdlArg[9] = 1.4699 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.4699 */;
 parameter Real led_driver.mdlArg[10] = -0.6068 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -0.6068 */;
 parameter Real led_driver.mdlArg[11] = -2.8447 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.8447 */;
 parameter Real led_driver.mdlArg[12] = 1.1602 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.1602 */;
 parameter Real led_driver.mdlArg[13] = -1.0324 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -1.0324 */;
 parameter Real led_driver.mdlArg[14] = -2.9612 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -2.9612 */;
 parameter Real led_driver.mdlArg[15] = 1.5582 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* 1.5582 */;
 parameter Real led_driver.mdlArg[16] = -0.3532 "Harmonic phases (modeled w/ voltage fundamental at zero rad)" /* -0.3532 */;
 parameter Real led_driver.argS "Phase angle for fundamental apparent power";
 Real led_driver.magScale;
 Real led_driver.argAdj[1];
 Real led_driver.argAdj[2];
 Real led_driver.argAdj[3];
 Real led_driver.argAdj[4];
 Real led_driver.argAdj[5];
 Real led_driver.argAdj[6];
 Real led_driver.argAdj[7];
 Real led_driver.a[1].re "Real part of complex number";
 Real led_driver.a[1].im "Imaginary part of complex number";
 Real led_driver.a[2].re "Real part of complex number";
 Real led_driver.a[2].im "Imaginary part of complex number";
 Real led_driver.a[3].re "Real part of complex number";
 Real led_driver.a[3].im "Imaginary part of complex number";
 Real led_driver.a[4].re "Real part of complex number";
 Real led_driver.a[4].im "Imaginary part of complex number";
 Real led_driver.a[5].re "Real part of complex number";
 Real led_driver.a[5].im "Imaginary part of complex number";
 Real led_driver.a[6].re "Real part of complex number";
 Real led_driver.a[6].im "Imaginary part of complex number";
 Real led_driver.a[7].re "Real part of complex number";
 Real led_driver.a[7].im "Imaginary part of complex number";
 Real led_driver.c[1];
 Real led_driver.c[2];
 Real led_driver.c[3];
 Real led_driver.c[4];
 Real led_driver.c[5];
 Real led_driver.c[6];
 Real led_driver.c[7];
 constant String load.properties.ComponentType = "DC_Load" "Type of the component";
 Modelica.Blocks.Interfaces.RealInput load.u(start = 0) "Input Power";
 Modelica.SIunits.ElectricCurrent load.i "Current flowing from pin p to pin n";
 output Modelica.Blocks.Interfaces.RealOutput y;
 input Modelica.Blocks.Interfaces.RealInput u;
initial equation
 algorithm
;
 v.theta = 0;
parameter equation
 systemDef.N = integer(floor(systemDef.fs / systemDef.fFund));
 led_driver.vDC.V = led_driver.V_Rect;
 led_driver.argS = - led_driver.mdlArg[1];
algorithm
equation
 der(v.theta) = 6.283185307179586 * systemDef.fFund;
 v.omega = der(v.theta);
 z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im);
 z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im);
 z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im);
 z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im);
 z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im);
 z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im);
 z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im);
 z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im);
 z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re);
 z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re);
 z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re);
 z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re);
 z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re);
 z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re);
 z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re);
 z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re);
 z.omega = der(v.theta);
 z.v[1].re = 120.0 - led_driver.loadBase.v[1].re;
 z.v[2].re = 0.001 - led_driver.loadBase.v[2].re;
 z.v[3].re = 0.001 - led_driver.loadBase.v[3].re;
 z.v[4].re = 0.001 - led_driver.loadBase.v[4].re;
 z.v[5].re = 0.001 - led_driver.loadBase.v[5].re;
 z.v[6].re = 0.001 - led_driver.loadBase.v[6].re;
 z.v[7].re = 0.001 - led_driver.loadBase.v[7].re;
 z.v[8].re = 0.001 - led_driver.loadBase.v[8].re;
 led_driver.P = led_driver.S * cos(led_driver.argS);
 led_driver.Q = led_driver.S * sin(led_driver.argS);
 led_driver.P = led_driver.loadBase.v[1].re * (- v.i[1].re) - (- z.v[1].im) * v.i[1].im;
 led_driver.Q = led_driver.loadBase.v[1].re * v.i[1].im + (- z.v[1].im) * (- v.i[1].re);
 - v.i[2].re = led_driver.c[1] * led_driver.a[1].re;
 - v.i[2].im = led_driver.c[1] * led_driver.a[1].im;
 - v.i[3].re = led_driver.c[2] * led_driver.a[2].re;
 - v.i[3].im = led_driver.c[2] * led_driver.a[2].im;
 - v.i[4].re = led_driver.c[3] * led_driver.a[3].re;
 - v.i[4].im = led_driver.c[3] * led_driver.a[3].im;
 - v.i[5].re = led_driver.c[4] * led_driver.a[4].re;
 - v.i[5].im = led_driver.c[4] * led_driver.a[4].im;
 - v.i[6].re = led_driver.c[5] * led_driver.a[5].re;
 - v.i[6].im = led_driver.c[5] * led_driver.a[5].im;
 - v.i[7].re = led_driver.c[6] * led_driver.a[6].re;
 - v.i[7].im = led_driver.c[6] * led_driver.a[6].im;
 - v.i[8].re = led_driver.c[7] * led_driver.a[7].re;
 - v.i[8].im = led_driver.c[7] * led_driver.a[7].im;
 led_driver.PLoss = led_driver.P * (1 - led_driver.efficiency) / led_driver.efficiency;
algorithm
equation
 led_driver.loadBase.omega = der(v.theta);
 load.i = load.u / led_driver.vDC.V;
 ground.pin.iIm[1] = 0;
 ground.pin.iIm[2] = 0;
 ground.pin.iIm[3] = 0;
 ground.pin.iIm[4] = 0;
 ground.pin.iIm[5] = 0;
 ground.pin.iIm[6] = 0;
 ground.pin.iIm[7] = 0;
 ground.pin.iIm[8] = 0;
 ground.pin.iRe[1] = 0;
 ground.pin.iRe[2] = 0;
 ground.pin.iRe[3] = 0;
 ground.pin.iRe[4] = 0;
 ground.pin.iRe[5] = 0;
 ground.pin.iRe[6] = 0;
 ground.pin.iRe[7] = 0;
 ground.pin.iRe[8] = 0;
 ground2.p.i = 0;
 led_driver.PLoss = y;
 load.u = u;
 HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint(HPF.Types.Reference(v.theta), HPF.Types.Reference(v.theta));
 v.P1 = 120.0 * v.i[1].re;
 v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5;
 v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5;
 v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5;
 v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5;
 v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5;
 v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5;
 v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5;
 v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5;
 v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0);
 v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0);
 v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0);
 v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0);
 v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0);
 v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0);
 v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0);
 v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0);
 z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5;
 z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0);
 z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 led_driver.P = abs(led_driver.vDC.V * (- load.i) / led_driver.efficiency);
 led_driver.I_mag[1] = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 led_driver.I_mag[2] = ((- v.i[2].re) ^ 2 + (- v.i[2].im) ^ 2) ^ 0.5;
 led_driver.I_mag[3] = ((- v.i[3].re) ^ 2 + (- v.i[3].im) ^ 2) ^ 0.5;
 led_driver.I_mag[4] = ((- v.i[4].re) ^ 2 + (- v.i[4].im) ^ 2) ^ 0.5;
 led_driver.I_mag[5] = ((- v.i[5].re) ^ 2 + (- v.i[5].im) ^ 2) ^ 0.5;
 led_driver.I_mag[6] = ((- v.i[6].re) ^ 2 + (- v.i[6].im) ^ 2) ^ 0.5;
 led_driver.I_mag[7] = ((- v.i[7].re) ^ 2 + (- v.i[7].im) ^ 2) ^ 0.5;
 led_driver.I_mag[8] = ((- v.i[8].re) ^ 2 + (- v.i[8].im) ^ 2) ^ 0.5;
 led_driver.I_arg[2] = Modelica.Math.atan3(- v.i[2].im, - v.i[2].re, 0);
 led_driver.I_arg[3] = Modelica.Math.atan3(- v.i[3].im, - v.i[3].re, 0);
 led_driver.I_arg[4] = Modelica.Math.atan3(- v.i[4].im, - v.i[4].re, 0);
 led_driver.I_arg[5] = Modelica.Math.atan3(- v.i[5].im, - v.i[5].re, 0);
 led_driver.I_arg[6] = Modelica.Math.atan3(- v.i[6].im, - v.i[6].re, 0);
 led_driver.I_arg[7] = Modelica.Math.atan3(- v.i[7].im, - v.i[7].re, 0);
 led_driver.I_arg[8] = Modelica.Math.atan3(- v.i[8].im, - v.i[8].re, 0);
 led_driver.V_mag[1] = (led_driver.loadBase.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5;
 led_driver.V_mag[2] = (led_driver.loadBase.v[2].re ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5;
 led_driver.V_mag[3] = (led_driver.loadBase.v[3].re ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5;
 led_driver.V_mag[4] = (led_driver.loadBase.v[4].re ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5;
 led_driver.V_mag[5] = (led_driver.loadBase.v[5].re ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5;
 led_driver.V_mag[6] = (led_driver.loadBase.v[6].re ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5;
 led_driver.V_mag[7] = (led_driver.loadBase.v[7].re ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5;
 led_driver.V_mag[8] = (led_driver.loadBase.v[8].re ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5;
 led_driver.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, led_driver.loadBase.v[2].re, 0);
 led_driver.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, led_driver.loadBase.v[3].re, 0);
 led_driver.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, led_driver.loadBase.v[4].re, 0);
 led_driver.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, led_driver.loadBase.v[5].re, 0);
 led_driver.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, led_driver.loadBase.v[6].re, 0);
 led_driver.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, led_driver.loadBase.v[7].re, 0);
 led_driver.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, led_driver.loadBase.v[8].re, 0);
 led_driver.magScale = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 led_driver.argAdj[1] = led_driver.mdlArg[2] - led_driver.V_arg[1] .* systemDef.hrms[2];
 led_driver.argAdj[2] = led_driver.mdlArg[3] - led_driver.V_arg[1] .* systemDef.hrms[3];
 led_driver.argAdj[3] = led_driver.mdlArg[4] - led_driver.V_arg[1] .* systemDef.hrms[4];
 led_driver.argAdj[4] = led_driver.mdlArg[5] - led_driver.V_arg[1] .* systemDef.hrms[5];
 led_driver.argAdj[5] = led_driver.mdlArg[6] - led_driver.V_arg[1] .* systemDef.hrms[6];
 led_driver.argAdj[6] = led_driver.mdlArg[7] - led_driver.V_arg[1] .* systemDef.hrms[7];
 led_driver.argAdj[7] = led_driver.mdlArg[8] - led_driver.V_arg[1] .* systemDef.hrms[8];
 led_driver.a[1].re = cos(led_driver.argAdj[1]);
 led_driver.a[1].im = sin(led_driver.argAdj[1]);
 led_driver.a[2].re = cos(led_driver.argAdj[2]);
 led_driver.a[2].im = sin(led_driver.argAdj[2]);
 led_driver.a[3].re = cos(led_driver.argAdj[3]);
 led_driver.a[3].im = sin(led_driver.argAdj[3]);
 led_driver.a[4].re = cos(led_driver.argAdj[4]);
 led_driver.a[4].im = sin(led_driver.argAdj[4]);
 led_driver.a[5].re = cos(led_driver.argAdj[5]);
 led_driver.a[5].im = sin(led_driver.argAdj[5]);
 led_driver.a[6].re = cos(led_driver.argAdj[6]);
 led_driver.a[6].im = sin(led_driver.argAdj[6]);
 led_driver.a[7].re = cos(led_driver.argAdj[7]);
 led_driver.a[7].im = sin(led_driver.argAdj[7]);
 led_driver.c[1] = led_driver.magScale * led_driver.mdlMag[2];
 led_driver.c[2] = led_driver.magScale * led_driver.mdlMag[3];
 led_driver.c[3] = led_driver.magScale * led_driver.mdlMag[4];
 led_driver.c[4] = led_driver.magScale * led_driver.mdlMag[5];
 led_driver.c[5] = led_driver.magScale * led_driver.mdlMag[6];
 led_driver.c[6] = led_driver.magScale * led_driver.mdlMag[7];
 led_driver.c[7] = led_driver.magScale * led_driver.mdlMag[8];
 z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0);
 led_driver.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, led_driver.loadBase.v[1].re, 0);

public
 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint
  input HPF.Types.Reference reference1;
  input HPF.Types.Reference reference2;
  output Real[:] residue;
 algorithm
  init residue as Real[0];
  assert(abs(reference1.theta - reference2.theta) < 1.0E-6 * 2 * 3.141592653589793, "Reference angles should be equal!");
  return;
 end HPF.Examples.Demo.led_driver.loadBase.pin_n.reference.equalityConstraint;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 type Modelica.SIunits.Frequency = Real(final quantity = "Frequency",final unit = "Hz");
 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
 type Modelica.Blocks.Interfaces.RealOutput = Real;
 type Modelica.Blocks.Interfaces.RealInput = Real;
end HPF.Examples.Demo;

Generating code...
====== Model compiled successfully =======
make -f /home/linuxdev/jmodelica/Makefiles/MakeFile fmume20_
make[1]: Entering directory '/tmp/jmc5008504268916816469out'
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -O1 -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Examples_Demo_funcs.o sources/HPF_Examples_Demo_funcs.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Examples_Demo.o sources/HPF_Examples_Demo.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Examples_Demo_equ_init.o sources/HPF_Examples_Demo_equ_init.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Examples_Demo_equ.o sources/HPF_Examples_Demo_equ.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Examples_Demo_base.o sources/HPF_Examples_Demo_base.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Examples_Demo_init_dependent.o sources/HPF_Examples_Demo_init_dependent.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Examples_Demo_init_independent.o sources/HPF_Examples_Demo_init_independent.c
mkdir -p binaries/linux64
g++ -shared -Wl,-rpath,'$ORIGIN',--no-undefined -pthread -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -o binaries/linux64/HPF_Examples_Demo.so  HPF_Examples_Demo_funcs.o  HPF_Examples_Demo.o  HPF_Examples_Demo_equ_init.o  HPF_Examples_Demo_equ.o  HPF_Examples_Demo_base.o  HPF_Examples_Demo_init_dependent.o  HPF_Examples_Demo_init_independent.o  -L/home/linuxdev/jmodelica/lib/RuntimeLibrary -lfmi2 -ljmi -ldl "-L/home/linuxdev/jmodelica/lib"  -ljmi_get_set_default -ljmi_get_set_default -llapack -lblas -lgfortran -lModelicaExternalC -lzlib -ljmi -L/home/linuxdev/jmodelica/ThirdParty/Sundials/lib -l:libsundials_kinsol.a -l:libsundials_nvecserial.a -L/home/linuxdev/jmodelica/ThirdParty/Minpack/lib -l:libcminpack.a -lstdc++ -lm -l:libsundials_cvode.a
rm -f  HPF_Examples_Demo_funcs.o  HPF_Examples_Demo.o  HPF_Examples_Demo_equ_init.o  HPF_Examples_Demo_equ.o  HPF_Examples_Demo_base.o  HPF_Examples_Demo_init_dependent.o  HPF_Examples_Demo_init_independent.o 
make[1]: Leaving directory '/tmp/jmc5008504268916816469out'

