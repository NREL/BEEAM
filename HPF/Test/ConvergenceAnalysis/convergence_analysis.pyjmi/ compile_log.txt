Compiler arguments:
  -log=verbose: compile_log.txt,w|xml|stderr -target=me -version=2.0 -platform=linux64 -out=. -modelicapath=/home/linuxdev/jmodelica/ThirdParty/MSL ../../../../HPF HPF.Test.Test_Rectifier 
Current working directory:
  /media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/Test/ConvergenceAnalysis/convergence_analysis.pyjmi
Compiler version: r13863
Java version: 11.0.6
OS name: Linux
OS architecture: amd64
MODELICAPATH    = 
JAVA_HOME       = /usr/lib/jvm/java-11-openjdk-amd64
JMODELICA_HOME  = /home/linuxdev/jmodelica
======= Compiling model =======
Parsing ../../../../HPF/package.mo...
Checking for errors...
MODELICAPATH = /home/linuxdev/jmodelica/ThirdParty/MSL
extra_lib_dirs = 
Parsing ../../../../HPF/package.mo...
Parsing ../../../../HPF/Test/package.mo...
Parsing ../../../../HPF/Test/Test_Rectifier.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Icons.mo...
Parsing ../../../../HPF/SystemDef.mo...
Parsing ../../../../HPF/SinglePhase/package.mo...
Parsing ../../../../HPF/SinglePhase/Sources/package.mo...
Parsing ../../../../HPF/SinglePhase/Sources/VoltageSource.mo...
Parsing ../../../../HPF/SinglePhase/Interface.mo...
Parsing ../../../../HPF/SinglePhase/Components/package.mo...
Parsing ../../../../HPF/SinglePhase/Components/Ground.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/Basic.mo...
Parsing ../../../../HPF/PowerElectronicsConverters/package.mo...
Parsing ../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo...
Parsing ../../../../HPF/DC/package.mo...
Parsing ../../../../HPF/DC/DC_Load.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/Interfaces.mo...
Parsing ../../../../HPF/SinglePhase/Components/Impedance.mo...
Parsing ../../../../HPF/Sensors/package.mo...
Parsing ../../../../HPF/Sensors/CurrentSensor.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/SIunits.mo...
Parsing ../../../../HPF/Utilities/package.mo...
Parsing ../../../../HPF/Utilities/ComponentProperties.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Complex.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/ComplexMath.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Math/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Constants.mo...
Parsing ../../../../HPF/Types.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Blocks/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Blocks/Interfaces.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Electrical/Analog/Sources.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Utilities/package.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Utilities/Streams.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Utilities/Files.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Utilities/Internal.mo...
Parsing /home/linuxdev/jmodelica/ThirdParty/MSL/ModelicaServices/package.mo...
make -f /home/linuxdev/jmodelica/Makefiles/MakeFile ceval_
make[1]: Entering directory '/tmp/jmc1425673908801391115out'
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o ModelicaIO_readMatrixSizes.o sources/ModelicaIO_readMatrixSizes.c
mkdir -p binaries
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -o binaries/ModelicaIO_readMatrixSizes  ModelicaIO_readMatrixSizes.o  -L/home/linuxdev/jmodelica/lib/RuntimeLibrary -ljmi_evaluator_util -ljmi -ldl "-L/home/linuxdev/jmodelica/lib" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library/linux64/gcc921-9ubuntu2" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library/linux64" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library" -lModelicaIO -lModelicaMatIO -lzlib -ljmi_get_set_default -lModelicaIO -lModelicaMatIO -lzlib -ljmi_get_set_default -llapack -lblas -lgfortran -lModelicaExternalC -lzlib -ljmi -lstdc++ -lm
/usr/bin/ld: /home/linuxdev/jmodelica/lib/RuntimeLibrary/libModelicaMatIO.a(ModelicaMatIO.c.o): in function `Mat_VarDelete':
/home/linuxdev/tmp/JModelica.org/ThirdParty/MSL/Modelica/Resources/C-Sources/ModelicaMatIO.c:8521: warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
rm -f  ModelicaIO_readMatrixSizes.o 
make[1]: Leaving directory '/tmp/jmc1425673908801391115out'
Flattening model...
make -f /home/linuxdev/jmodelica/Makefiles/MakeFile ceval_
make[1]: Entering directory '/tmp/jmc1425673908801391115out'
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o ModelicaIO_readRealMatrix.o sources/ModelicaIO_readRealMatrix.c
mkdir -p binaries
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -o binaries/ModelicaIO_readRealMatrix  ModelicaIO_readRealMatrix.o  -L/home/linuxdev/jmodelica/lib/RuntimeLibrary -ljmi_evaluator_util -ljmi -ldl "-L/home/linuxdev/jmodelica/lib" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library/linux64/gcc921-9ubuntu2" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library/linux64" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library" -lModelicaIO -lModelicaMatIO -lzlib -ljmi_get_set_default -lModelicaIO -lModelicaMatIO -lzlib -ljmi_get_set_default -llapack -lblas -lgfortran -lModelicaExternalC -lzlib -ljmi -lstdc++ -lm
/usr/bin/ld: /home/linuxdev/jmodelica/lib/RuntimeLibrary/libModelicaMatIO.a(ModelicaMatIO.c.o): in function `Mat_VarDelete':
/home/linuxdev/tmp/JModelica.org/ThirdParty/MSL/Modelica/Resources/C-Sources/ModelicaMatIO.c:8521: warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
rm -f  ModelicaIO_readRealMatrix.o 
make[1]: Leaving directory '/tmp/jmc1425673908801391115out'
ModelicaMessage: <msg:... loading "arg" from "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat"
>
ModelicaMessage: <msg:... loading "mag" from "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat"
>
ModelicaMessage: <msg:... loading "mag" from "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat"
>
ModelicaMessage: <msg:... loading "arg" from "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat"
>
Raw flattened model:
fclass HPF.Test.Test_Rectifier
 parameter Integer systemDef.hrms[13] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25} "Harmonics to simulate" /* { 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25 } */;
 structural parameter Integer systemDef.numHrm = 13 "Number of harmonics. (Automatically generated from hrms.)" /* 13 */;
 parameter Modelica.SIunits.Frequency systemDef.fFund = 60 "Fundamental frequency (Hz)" /* 60 */;
 parameter Modelica.SIunits.Frequency systemDef.fs = 10000.0 "Sampling frequency (Hz)" /* 10000.0 */;
 parameter Integer systemDef.N = integer(floor(systemDef.fs / systemDef.fFund)) "Size of FFT";
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 discrete HPF.Utilities.ComponentProperties v.properties(ComponentType = "VoltageSource");
 structural parameter Real v.vMag[13] = {120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0} "Voltage Magnitude (Volts rms)" /* { 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } */;
 structural parameter Real v.vArg[13] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0} "Voltage angle (rad)" /* { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } */;
 Real v.P = v.v[1].re * v.i[1].re + v.v[1].im * v.i[1].im "Real Power";
 Real v.P1 = Modelica.ComplexMath.real(Complex.'*'.multiply(v.v[1], Modelica.ComplexMath.conj(v.i[1])));
 Real v.iMag[13] = Modelica.ComplexMath.'abs'(v.i[1:13]);
 Real v.iArg[13] = Modelica.ComplexMath.arg(v.i[1:13], 0);
 Modelica.SIunits.Angle v.theta(start = 0) = v.pin_p.reference.theta;
 Complex v.v[13](each re(start = 100),each im(start = 100)) "Complex voltage";
 Complex v.i[13](each re(start = -1),each im(start = 1)) "Complex current";
 Real v.omega;
 HPF.Types.Reference v.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer v.pin_p.h = 13 "Numbder of harmonics" /* 13 */;
 Complex v.pin_p.v[13] "Complex potential at the node";
 Real v.pin_p.iIm[13];
 Real v.pin_p.iRe[13];
 HPF.Types.Reference v.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer v.pin_n.h = 13 "Numbder of harmonics" /* 13 */;
 Complex v.pin_n.v[13] "Complex potential at the node";
 Real v.pin_n.iIm[13];
 Real v.pin_n.iRe[13];
 discrete HPF.Utilities.ComponentProperties ground1.properties(ComponentType = "Ground");
 HPF.Types.Reference ground1.pin.reference(theta(start = 0)) "Reference";
 structural parameter Integer ground1.pin.h = 13 "Numbder of harmonics" /* 13 */;
 Complex ground1.pin.v[13] "Complex potential at the node";
 Real ground1.pin.iIm[13];
 Real ground1.pin.iRe[13];
 Modelica.SIunits.ElectricPotential ground2.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent ground2.p.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties laptop_adapter.properties(ComponentType = "NonlinearLoad");
 Modelica.SIunits.ElectricPotential laptop_adapter.pin_p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adapter.pin_p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adapter.pin_n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adapter.pin_n.i "Current flowing into the pin";
 HPF.Types.Reference laptop_adapter.hPin_P.reference(theta(start = 0)) "Reference";
 structural parameter Integer laptop_adapter.hPin_P.h = 13 "Numbder of harmonics" /* 13 */;
 Complex laptop_adapter.hPin_P.v[13] "Complex potential at the node";
 Real laptop_adapter.hPin_P.iIm[13];
 Real laptop_adapter.hPin_P.iRe[13];
 HPF.Types.Reference laptop_adapter.hPin_N.reference(theta(start = 0)) "Reference";
 structural parameter Integer laptop_adapter.hPin_N.h = 13 "Numbder of harmonics" /* 13 */;
 Complex laptop_adapter.hPin_N.v[13] "Complex potential at the node";
 Real laptop_adapter.hPin_N.iIm[13];
 Real laptop_adapter.hPin_N.iRe[13];
 Modelica.Blocks.Interfaces.RealOutput laptop_adapter.PLoss;
 parameter Real laptop_adapter.V_Rect(start = 0) = 24 "Rectifier DC output" /* 24 */;
 parameter Modelica.SIunits.ElectricPotential laptop_adapter.vDC.V(start = 1) = laptop_adapter.V_Rect "Value of constant voltage";
 Modelica.SIunits.ElectricPotential laptop_adapter.vDC.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop_adapter.vDC.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop_adapter.vDC.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adapter.vDC.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop_adapter.vDC.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop_adapter.vDC.n.i "Current flowing into the pin";
 Complex laptop_adapter.loadBase.v[13](each re(start = 100),each im(start = 100)) "Complex voltage";
 Complex laptop_adapter.loadBase.i[13](each re(start = -1),each im(start = 1)) "Complex current";
 Real laptop_adapter.loadBase.omega;
 HPF.Types.Reference laptop_adapter.loadBase.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer laptop_adapter.loadBase.pin_p.h = 13 "Numbder of harmonics" /* 13 */;
 Complex laptop_adapter.loadBase.pin_p.v[13] "Complex potential at the node";
 Real laptop_adapter.loadBase.pin_p.iIm[13];
 Real laptop_adapter.loadBase.pin_p.iRe[13];
 HPF.Types.Reference laptop_adapter.loadBase.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer laptop_adapter.loadBase.pin_n.h = 13 "Numbder of harmonics" /* 13 */;
 Complex laptop_adapter.loadBase.pin_n.v[13] "Complex potential at the node";
 Real laptop_adapter.loadBase.pin_n.iIm[13];
 Real laptop_adapter.loadBase.pin_n.iRe[13];
 Real laptop_adapter.P_DC = abs(laptop_adapter.vDC.v * laptop_adapter.vDC.i);
 Real laptop_adapter.P = laptop_adapter.P_DC + laptop_adapter.alpha[1,1] + laptop_adapter.beta[1,1] * laptop_adapter.P_DC + laptop_adapter.gamma[1,1] * laptop_adapter.P_DC ^ 2;
 Real laptop_adapter.I_mag[13] = Modelica.ComplexMath.'abs'(laptop_adapter.loadBase.i[1:13]);
 Real laptop_adapter.I_arg[13] = Modelica.ComplexMath.arg(laptop_adapter.loadBase.i[1:13], 0);
 Real laptop_adapter.V_mag[13] = Modelica.ComplexMath.'abs'(laptop_adapter.loadBase.v[1:13]);
 Real laptop_adapter.V_arg[13] = Modelica.ComplexMath.arg(laptop_adapter.loadBase.v[1:13], 0);
 Real laptop_adapter.S(start = 1) "Apparent power at fundamental";
 Real laptop_adapter.Q(start = 1) "Imaginary power at fundamental";
 structural (loadResource) parameter String laptop_adapter.modelFileName = "HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" "Rectifier harmonic model mat file" /* "HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" */;
 structural parameter String laptop_adapter.resourceRetValue = "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" /* "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" */;
 structural parameter Integer laptop_adapter.matDim[2] = {64, 1} /* { 64, 1 } */;
 structural parameter Real laptop_adapter.magDataMat[64,1] = {{1.0}, {0.9421865565594479}, {0.846418595204449}, {0.7174634219299512}, {0.568269396387493}, {0.4142504288040016}, {0.2722289795439818}, {0.1499700094183941}, {0.060532358446546}, {0.0286742846032879}, {0.0500554183998412}, {0.0574038038345626}, {0.0490634253296239}, {0.0324675024798272}, {0.0146979293649181}, {0.0073091525847841}, {0.0133897682494032}, {0.0149525422599743}, {0.0124074456883277}, {0.0064342667493201}, {0.0042631791151444}, {0.0071677605312837}, {0.0091300920177219}, {0.0082848764712874}, {0.0048054384993071}, {0.0012086520647777}, {0.0027696713010395}, {0.0055623203060336}, {0.0055763163700916}, {0.0037301558865152}, {0.0024556766113934}, {0.0012570089195559}, {0.003770235713609}, {0.0039951909704598}, {0.003979236913258}, {0.0028266732141967}, {0.001264556073809}, {0.0014301712599034}, {0.0026235911913337}, {0.0030745379143357}, {0.0026371048002209}, {0.0018785812678715}, {0.001366164653877}, {0.0017315154435983}, {0.0021186936112594}, {0.0020698341543364}, {0.0015827909180839}, {0.0014207653497698}, {0.0011044947826996}, {0.0016983251721508}, {0.001561470455193}, {0.0015551892377107}, {0.0010806576917404}, {0.0010324284223161}, {0.0010316250408048}, {0.0013704444558566}, {0.0012887373861165}, {0.001046804766309}, {8.397154504633E-4}, {8.443247596072E-4}, {0.0010482447031368}, {0.0010834317712761}, {0.0010717313423612}, {7.336011041168E-4}} /* { { 1.0 }, { 0.9421865565594479 }, { 0.846418595204449 }, { 0.7174634219299512 }, { 0.568269396387493 }, { 0.4142504288040016 }, { 0.2722289795439818 }, { 0.1499700094183941 }, { 0.060532358446546 }, { 0.0286742846032879 }, { 0.0500554183998412 }, { 0.0574038038345626 }, { 0.0490634253296239 }, { 0.0324675024798272 }, { 0.0146979293649181 }, { 0.0073091525847841 }, { 0.0133897682494032 }, { 0.0149525422599743 }, { 0.0124074456883277 }, { 0.0064342667493201 }, { 0.0042631791151444 }, { 0.0071677605312837 }, { 0.0091300920177219 }, { 0.0082848764712874 }, { 0.0048054384993071 }, { 0.0012086520647777 }, { 0.0027696713010395 }, { 0.0055623203060336 }, { 0.0055763163700916 }, { 0.0037301558865152 }, { 0.0024556766113934 }, { 0.0012570089195559 }, { 0.003770235713609 }, { 0.0039951909704598 }, { 0.003979236913258 }, { 0.0028266732141967 }, { 0.001264556073809 }, { 0.0014301712599034 }, { 0.0026235911913337 }, { 0.0030745379143357 }, { 0.0026371048002209 }, { 0.0018785812678715 }, { 0.001366164653877 }, { 0.0017315154435983 }, { 0.0021186936112594 }, { 0.0020698341543364 }, { 0.0015827909180839 }, { 0.0014207653497698 }, { 0.0011044947826996 }, { 0.0016983251721508 }, { 0.001561470455193 }, { 0.0015551892377107 }, { 0.0010806576917404 }, { 0.0010324284223161 }, { 0.0010316250408048 }, { 0.0013704444558566 }, { 0.0012887373861165 }, { 0.001046804766309 }, { 8.397154504633E-4 }, { 8.443247596072E-4 }, { 0.0010482447031368 }, { 0.0010834317712761 }, { 0.0010717313423612 }, { 7.336011041168E-4 } } */;
 structural parameter Real laptop_adapter.argDataMat[64,1] = {{0.3127770854783603}, {4.011174689529625}, {1.450168565960499}, {-1.1075502226650735}, {2.6203684023114735}, {0.0753120963493918}, {3.827672644040883}, {1.3488113399227557}, {-0.9361140777472652}, {4.21514766462882}, {2.355077880795469}, {-0.0788148364525277}, {3.630875802098702}, {0.9927328953061971}, {4.441522037499742}, {0.3468512749946424}, {3.309703112235414}, {0.507820696333874}, {4.07225325999216}, {1.125957866606311}, {3.387549006743685}, {0.0888214916736243}, {3.5804813791252355}, {0.8850851115756876}, {4.508705061667298}, {1.333205530719895}, {2.838653112336029}, {-0.0432835109945579}, {3.5796675079179767}, {0.8886624228751261}, {4.322397183880533}, {-0.1413429189228533}, {2.9447237027794717}, {0.1859626520117329}, {3.7067555487786406}, {1.0115866895784416}, {4.0692014348202035}, {-0.0024077524125743}, {3.0652063567780674}, {0.2653273947161821}, {3.7889601388042937}, {0.8887383696249729}, {3.773875593167732}, {0.2280500334845815}, {3.3217592983561017}, {0.520752728593681}, {3.9273528368650745}, {0.8614853143189236}, {3.5850098696099186}, {0.2783322398316583}, {3.4761184892641808}, {0.5249082917156735}, {4.1162792410645075}, {0.5750851928849768}, {3.6130535171919336}, {0.2438187166602324}, {3.591573823283689}, {0.3884444678214555}, {3.8049056626874496}, {0.4536424332042123}, {3.589644373975073}, {0.2244991938468375}, {3.37684736761545}, {0.2594769189504608}} /* { { 0.3127770854783603 }, { 4.011174689529625 }, { 1.450168565960499 }, { -1.1075502226650735 }, { 2.6203684023114735 }, { 0.0753120963493918 }, { 3.827672644040883 }, { 1.3488113399227557 }, { -0.9361140777472652 }, { 4.21514766462882 }, { 2.355077880795469 }, { -0.0788148364525277 }, { 3.630875802098702 }, { 0.9927328953061971 }, { 4.441522037499742 }, { 0.3468512749946424 }, { 3.309703112235414 }, { 0.507820696333874 }, { 4.07225325999216 }, { 1.125957866606311 }, { 3.387549006743685 }, { 0.0888214916736243 }, { 3.5804813791252355 }, { 0.8850851115756876 }, { 4.508705061667298 }, { 1.333205530719895 }, { 2.838653112336029 }, { -0.0432835109945579 }, { 3.5796675079179767 }, { 0.8886624228751261 }, { 4.322397183880533 }, { -0.1413429189228533 }, { 2.9447237027794717 }, { 0.1859626520117329 }, { 3.7067555487786406 }, { 1.0115866895784416 }, { 4.0692014348202035 }, { -0.0024077524125743 }, { 3.0652063567780674 }, { 0.2653273947161821 }, { 3.7889601388042937 }, { 0.8887383696249729 }, { 3.773875593167732 }, { 0.2280500334845815 }, { 3.3217592983561017 }, { 0.520752728593681 }, { 3.9273528368650745 }, { 0.8614853143189236 }, { 3.5850098696099186 }, { 0.2783322398316583 }, { 3.4761184892641808 }, { 0.5249082917156735 }, { 4.1162792410645075 }, { 0.5750851928849768 }, { 3.6130535171919336 }, { 0.2438187166602324 }, { 3.591573823283689 }, { 0.3884444678214555 }, { 3.8049056626874496 }, { 0.4536424332042123 }, { 3.589644373975073 }, { 0.2244991938468375 }, { 3.37684736761545 }, { 0.2594769189504608 } } */;
 parameter Real laptop_adapter.alpha[1,1] = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "alpha", 1, 1, true);
 parameter Real laptop_adapter.beta[1,1] = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "beta", 1, 1, true);
 parameter Real laptop_adapter.gamma[1,1] = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "gamma", 1, 1, true);
 Real laptop_adapter.argS "Phase angle for fundamental apparent power";
 Real laptop_adapter.magScale = Modelica.ComplexMath.'abs'(laptop_adapter.loadBase.i[1]);
 Real laptop_adapter.argAdj[12] = {4.011174689529625, 1.450168565960499, -1.1075502226650735, 2.6203684023114735, 0.0753120963493918, 3.827672644040883, 1.3488113399227557, -0.9361140777472652, 4.21514766462882, 2.355077880795469, -0.0788148364525277, 3.630875802098702} + Modelica.ComplexMath.arg(laptop_adapter.loadBase.v[1], 0) .* systemDef.hrms[2:13];
 Complex laptop_adapter.a[12] = {Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[1]), sin(laptop_adapter.argAdj[1])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[2]), sin(laptop_adapter.argAdj[2])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[3]), sin(laptop_adapter.argAdj[3])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[4]), sin(laptop_adapter.argAdj[4])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[5]), sin(laptop_adapter.argAdj[5])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[6]), sin(laptop_adapter.argAdj[6])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[7]), sin(laptop_adapter.argAdj[7])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[8]), sin(laptop_adapter.argAdj[8])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[9]), sin(laptop_adapter.argAdj[9])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[10]), sin(laptop_adapter.argAdj[10])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[11]), sin(laptop_adapter.argAdj[11])), Complex.'constructor'.fromReal(cos(laptop_adapter.argAdj[12]), sin(laptop_adapter.argAdj[12]))};
 Real laptop_adapter.c[12] = laptop_adapter.magScale * {0.9421865565594479, 0.846418595204449, 0.7174634219299512, 0.568269396387493, 0.4142504288040016, 0.2722289795439818, 0.1499700094183941, 0.060532358446546, 0.0286742846032879, 0.0500554183998412, 0.0574038038345626, 0.0490634253296239};
 discrete HPF.Utilities.ComponentProperties laptop.properties(ComponentType = "DC_Load");
 parameter Modelica.SIunits.Power laptop.pwr(start = 1) = 10 "Power (watts)" /* 10 */;
 Modelica.SIunits.ElectricPotential laptop.v "Voltage drop between the two pins (= p.v - n.v)";
 Modelica.SIunits.ElectricCurrent laptop.i "Current flowing from pin p to pin n";
 Modelica.SIunits.ElectricPotential laptop.p.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop.p.i "Current flowing into the pin";
 Modelica.SIunits.ElectricPotential laptop.n.v "Potential at the pin";
 Modelica.SIunits.ElectricCurrent laptop.n.i "Current flowing into the pin";
 discrete HPF.Utilities.ComponentProperties z.properties(ComponentType = "Impedance");
 parameter Complex z.z(re(start = 1),im(start = 0)) = Complex.'+'(Complex.'constructor'.fromReal(0.1, 0), Complex.'*'.multiply(Complex.'constructor'.fromReal(5, 0), Complex(0, 1))) "Impedance, R + jX";
 Real z.vFundAbs = Modelica.ComplexMath.'abs'(z.v[1]);
 Real z.vFundArg = Modelica.ComplexMath.arg(z.v[1], 0);
 Real z.iFundAbs = Modelica.ComplexMath.'abs'(z.i[1]);
 Real z.iFundArg = Modelica.ComplexMath.arg(z.i[1], 0);
 Complex z.v[13](each re(start = 100),each im(start = 100)) "Complex voltage";
 Complex z.i[13](each re(start = -1),each im(start = 1)) "Complex current";
 Real z.omega;
 HPF.Types.Reference z.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer z.pin_p.h = 13 "Numbder of harmonics" /* 13 */;
 Complex z.pin_p.v[13] "Complex potential at the node";
 Real z.pin_p.iIm[13];
 Real z.pin_p.iRe[13];
 HPF.Types.Reference z.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer z.pin_n.h = 13 "Numbder of harmonics" /* 13 */;
 Complex z.pin_n.v[13] "Complex potential at the node";
 Real z.pin_n.iIm[13];
 Real z.pin_n.iRe[13];
 discrete HPF.Utilities.ComponentProperties ground.properties(ComponentType = "Ground");
 HPF.Types.Reference ground.pin.reference(theta(start = 0)) "Reference";
 structural parameter Integer ground.pin.h = 13 "Numbder of harmonics" /* 13 */;
 Complex ground.pin.v[13] "Complex potential at the node";
 Real ground.pin.iIm[13];
 Real ground.pin.iRe[13];
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[13](each unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[13](each unit = "rad");
 Complex currentSensor.v[13](each re(start = 100),each im(start = 100)) "Complex voltage";
 Complex currentSensor.i[13](each re(start = -1),each im(start = 1)) "Complex current";
 Real currentSensor.omega;
 HPF.Types.Reference currentSensor.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer currentSensor.pin_p.h = 13 "Numbder of harmonics" /* 13 */;
 Complex currentSensor.pin_p.v[13] "Complex potential at the node";
 Real currentSensor.pin_p.iIm[13];
 Real currentSensor.pin_p.iRe[13];
 HPF.Types.Reference currentSensor.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer currentSensor.pin_n.h = 13 "Numbder of harmonics" /* 13 */;
 Complex currentSensor.pin_n.v[13] "Complex potential at the node";
 Real currentSensor.pin_n.iIm[13];
 Real currentSensor.pin_n.iRe[13];
 discrete HPF.Utilities.ComponentProperties z1.properties(ComponentType = "Impedance");
 parameter Complex z1.z(re(start = 1),im(start = 0)) = Complex.'+'(Complex.'constructor'.fromReal(20, 0), Complex.'*'.multiply(Complex.'constructor'.fromReal(60, 0), Complex(0, 1))) "Impedance, R + jX";
 Real z1.vFundAbs = Modelica.ComplexMath.'abs'(z1.v[1]);
 Real z1.vFundArg = Modelica.ComplexMath.arg(z1.v[1], 0);
 Real z1.iFundAbs = Modelica.ComplexMath.'abs'(z1.i[1]);
 Real z1.iFundArg = Modelica.ComplexMath.arg(z1.i[1], 0);
 Complex z1.v[13](each re(start = 100),each im(start = 100)) "Complex voltage";
 Complex z1.i[13](each re(start = -1),each im(start = 1)) "Complex current";
 Real z1.omega;
 HPF.Types.Reference z1.pin_p.reference(theta(start = 0)) "Reference";
 structural parameter Integer z1.pin_p.h = 13 "Numbder of harmonics" /* 13 */;
 Complex z1.pin_p.v[13] "Complex potential at the node";
 Real z1.pin_p.iIm[13];
 Real z1.pin_p.iRe[13];
 HPF.Types.Reference z1.pin_n.reference(theta(start = 0)) "Reference";
 structural parameter Integer z1.pin_n.h = 13 "Numbder of harmonics" /* 13 */;
 Complex z1.pin_n.v[13] "Complex potential at the node";
 Real z1.pin_n.iIm[13];
 Real z1.pin_n.iRe[13];
 discrete HPF.Utilities.ComponentProperties ground4.properties(ComponentType = "Ground");
 HPF.Types.Reference ground4.pin.reference(theta(start = 0)) "Reference";
 structural parameter Integer ground4.pin.h = 13 "Numbder of harmonics" /* 13 */;
 Complex ground4.pin.v[13] "Complex potential at the node";
 Real ground4.pin.iIm[13];
 Real ground4.pin.iRe[13];
initial equation
 algorithm
;
parameter equation
 assert({64, 1} == Modelica.Utilities.Streams.readMatrixSize("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "mag"), "Error Error at line 49, column 39, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readMatrixSize' did not evaluate to same result as during compilation");
 assert({{1.0}, {0.9421865565594479}, {0.846418595204449}, {0.7174634219299512}, {0.568269396387493}, {0.4142504288040016}, {0.2722289795439818}, {0.1499700094183941}, {0.060532358446546}, {0.0286742846032879}, {0.0500554183998412}, {0.0574038038345626}, {0.0490634253296239}, {0.0324675024798272}, {0.0146979293649181}, {0.0073091525847841}, {0.0133897682494032}, {0.0149525422599743}, {0.0124074456883277}, {0.0064342667493201}, {0.0042631791151444}, {0.0071677605312837}, {0.0091300920177219}, {0.0082848764712874}, {0.0048054384993071}, {0.0012086520647777}, {0.0027696713010395}, {0.0055623203060336}, {0.0055763163700916}, {0.0037301558865152}, {0.0024556766113934}, {0.0012570089195559}, {0.003770235713609}, {0.0039951909704598}, {0.003979236913258}, {0.0028266732141967}, {0.001264556073809}, {0.0014301712599034}, {0.0026235911913337}, {0.0030745379143357}, {0.0026371048002209}, {0.0018785812678715}, {0.001366164653877}, {0.0017315154435983}, {0.0021186936112594}, {0.0020698341543364}, {0.0015827909180839}, {0.0014207653497698}, {0.0011044947826996}, {0.0016983251721508}, {0.001561470455193}, {0.0015551892377107}, {0.0010806576917404}, {0.0010324284223161}, {0.0010316250408048}, {0.0013704444558566}, {0.0012887373861165}, {0.001046804766309}, {8.397154504633E-4}, {8.443247596072E-4}, {0.0010482447031368}, {0.0010834317712761}, {0.0010717313423612}, {7.336011041168E-4}} == Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "mag", 64, 1, true), "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert({{0.3127770854783603}, {4.011174689529625}, {1.450168565960499}, {-1.1075502226650735}, {2.6203684023114735}, {0.0753120963493918}, {3.827672644040883}, {1.3488113399227557}, {-0.9361140777472652}, {4.21514766462882}, {2.355077880795469}, {-0.0788148364525277}, {3.630875802098702}, {0.9927328953061971}, {4.441522037499742}, {0.3468512749946424}, {3.309703112235414}, {0.507820696333874}, {4.07225325999216}, {1.125957866606311}, {3.387549006743685}, {0.0888214916736243}, {3.5804813791252355}, {0.8850851115756876}, {4.508705061667298}, {1.333205530719895}, {2.838653112336029}, {-0.0432835109945579}, {3.5796675079179767}, {0.8886624228751261}, {4.322397183880533}, {-0.1413429189228533}, {2.9447237027794717}, {0.1859626520117329}, {3.7067555487786406}, {1.0115866895784416}, {4.0692014348202035}, {-0.0024077524125743}, {3.0652063567780674}, {0.2653273947161821}, {3.7889601388042937}, {0.8887383696249729}, {3.773875593167732}, {0.2280500334845815}, {3.3217592983561017}, {0.520752728593681}, {3.9273528368650745}, {0.8614853143189236}, {3.5850098696099186}, {0.2783322398316583}, {3.4761184892641808}, {0.5249082917156735}, {4.1162792410645075}, {0.5750851928849768}, {3.6130535171919336}, {0.2438187166602324}, {3.591573823283689}, {0.3884444678214555}, {3.8049056626874496}, {0.4536424332042123}, {3.589644373975073}, {0.2244991938468375}, {3.37684736761545}, {0.2594769189504608}} == Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "arg", 64, 1, true), "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
algorithm
equation
 v.omega = 2 * 3.141592653589793 * systemDef.fFund;
 v.v[1:13].re = {120.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0} .* cos({0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0});
 v.v[1:13].im = {120.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0} .* sin({0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0});
 v.pin_p.reference.theta = v.pin_n.reference.theta;
 v.omega = der(v.pin_p.reference.theta);
 v.v[1:13] = {Complex.'-'.subtract(v.pin_p.v[1], v.pin_n.v[1]), Complex.'-'.subtract(v.pin_p.v[2], v.pin_n.v[2]), Complex.'-'.subtract(v.pin_p.v[3], v.pin_n.v[3]), Complex.'-'.subtract(v.pin_p.v[4], v.pin_n.v[4]), Complex.'-'.subtract(v.pin_p.v[5], v.pin_n.v[5]), Complex.'-'.subtract(v.pin_p.v[6], v.pin_n.v[6]), Complex.'-'.subtract(v.pin_p.v[7], v.pin_n.v[7]), Complex.'-'.subtract(v.pin_p.v[8], v.pin_n.v[8]), Complex.'-'.subtract(v.pin_p.v[9], v.pin_n.v[9]), Complex.'-'.subtract(v.pin_p.v[10], v.pin_n.v[10]), Complex.'-'.subtract(v.pin_p.v[11], v.pin_n.v[11]), Complex.'-'.subtract(v.pin_p.v[12], v.pin_n.v[12]), Complex.'-'.subtract(v.pin_p.v[13], v.pin_n.v[13])};
 v.i[1:13].re = v.pin_p.iRe[1:13];
 v.i[1:13].im = v.pin_p.iIm[1:13];
 v.pin_p.iRe[1:13] + v.pin_n.iRe[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 v.pin_p.iIm[1:13] + v.pin_n.iIm[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 if Connections.isRoot(ground1.pin.reference) then
  ground1.pin.reference.theta = 0;
 end if;
 ground1.pin.v[1:13] = {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)};
 ground2.p.v = 0;
 laptop_adapter.argS = -0.3127770854783603;
 laptop_adapter.P = laptop_adapter.S * cos(laptop_adapter.argS);
 laptop_adapter.Q = laptop_adapter.S * sin(laptop_adapter.argS);
 laptop_adapter.loadBase.i[1].re = (laptop_adapter.P * laptop_adapter.loadBase.v[1].re + laptop_adapter.Q * laptop_adapter.loadBase.v[1].im) / (laptop_adapter.loadBase.v[1].re ^ 2 + laptop_adapter.loadBase.v[1].im ^ 2);
 laptop_adapter.loadBase.i[1].im = (laptop_adapter.P * laptop_adapter.loadBase.v[1].im - laptop_adapter.Q * laptop_adapter.loadBase.v[1].re) / (laptop_adapter.loadBase.v[1].re ^ 2 + laptop_adapter.loadBase.v[1].im ^ 2);
 laptop_adapter.loadBase.i[2:1:13] = {Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[1], 0), laptop_adapter.a[1]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[2], 0), laptop_adapter.a[2]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[3], 0), laptop_adapter.a[3]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[4], 0), laptop_adapter.a[4]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[5], 0), laptop_adapter.a[5]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[6], 0), laptop_adapter.a[6]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[7], 0), laptop_adapter.a[7]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[8], 0), laptop_adapter.a[8]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[9], 0), laptop_adapter.a[9]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[10], 0), laptop_adapter.a[10]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[11], 0), laptop_adapter.a[11]), Complex.'*'.multiply(Complex.'constructor'.fromReal(laptop_adapter.c[12], 0), laptop_adapter.a[12])};
 laptop_adapter.PLoss = laptop_adapter.P - laptop_adapter.P_DC;
algorithm
equation
 laptop_adapter.vDC.v = laptop_adapter.vDC.V;
 laptop_adapter.vDC.v = laptop_adapter.vDC.p.v - laptop_adapter.vDC.n.v;
 0 = laptop_adapter.vDC.p.i + laptop_adapter.vDC.n.i;
 laptop_adapter.vDC.i = laptop_adapter.vDC.p.i;
 laptop_adapter.loadBase.pin_p.reference.theta = laptop_adapter.loadBase.pin_n.reference.theta;
 laptop_adapter.loadBase.omega = der(laptop_adapter.loadBase.pin_p.reference.theta);
 laptop_adapter.loadBase.v[1:13] = {Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[1], laptop_adapter.loadBase.pin_n.v[1]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[2], laptop_adapter.loadBase.pin_n.v[2]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[3], laptop_adapter.loadBase.pin_n.v[3]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[4], laptop_adapter.loadBase.pin_n.v[4]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[5], laptop_adapter.loadBase.pin_n.v[5]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[6], laptop_adapter.loadBase.pin_n.v[6]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[7], laptop_adapter.loadBase.pin_n.v[7]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[8], laptop_adapter.loadBase.pin_n.v[8]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[9], laptop_adapter.loadBase.pin_n.v[9]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[10], laptop_adapter.loadBase.pin_n.v[10]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[11], laptop_adapter.loadBase.pin_n.v[11]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[12], laptop_adapter.loadBase.pin_n.v[12]), Complex.'-'.subtract(laptop_adapter.loadBase.pin_p.v[13], laptop_adapter.loadBase.pin_n.v[13])};
 laptop_adapter.loadBase.i[1:13].re = laptop_adapter.loadBase.pin_p.iRe[1:13];
 laptop_adapter.loadBase.i[1:13].im = laptop_adapter.loadBase.pin_p.iIm[1:13];
 laptop_adapter.loadBase.pin_p.iRe[1:13] + laptop_adapter.loadBase.pin_n.iRe[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 laptop_adapter.loadBase.pin_p.iIm[1:13] + laptop_adapter.loadBase.pin_n.iIm[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 laptop.i = laptop.pwr / laptop.v;
 laptop.v = laptop.p.v - laptop.n.v;
 0 = laptop.p.i + laptop.n.i;
 laptop.i = laptop.p.i;
 z.v[1:13].re = z.z.re .* z.i[1:13].re - z.z.im .* systemDef.hrms[1:13] .* z.i[1:13].im;
 z.v[1:13].im = z.z.re .* z.i[1:13].im + z.z.im .* systemDef.hrms[1:13] .* z.i[1:13].re;
 z.pin_p.reference.theta = z.pin_n.reference.theta;
 z.omega = der(z.pin_p.reference.theta);
 z.v[1:13] = {Complex.'-'.subtract(z.pin_p.v[1], z.pin_n.v[1]), Complex.'-'.subtract(z.pin_p.v[2], z.pin_n.v[2]), Complex.'-'.subtract(z.pin_p.v[3], z.pin_n.v[3]), Complex.'-'.subtract(z.pin_p.v[4], z.pin_n.v[4]), Complex.'-'.subtract(z.pin_p.v[5], z.pin_n.v[5]), Complex.'-'.subtract(z.pin_p.v[6], z.pin_n.v[6]), Complex.'-'.subtract(z.pin_p.v[7], z.pin_n.v[7]), Complex.'-'.subtract(z.pin_p.v[8], z.pin_n.v[8]), Complex.'-'.subtract(z.pin_p.v[9], z.pin_n.v[9]), Complex.'-'.subtract(z.pin_p.v[10], z.pin_n.v[10]), Complex.'-'.subtract(z.pin_p.v[11], z.pin_n.v[11]), Complex.'-'.subtract(z.pin_p.v[12], z.pin_n.v[12]), Complex.'-'.subtract(z.pin_p.v[13], z.pin_n.v[13])};
 z.i[1:13].re = z.pin_p.iRe[1:13];
 z.i[1:13].im = z.pin_p.iIm[1:13];
 z.pin_p.iRe[1:13] + z.pin_n.iRe[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 z.pin_p.iIm[1:13] + z.pin_n.iIm[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 if Connections.isRoot(ground.pin.reference) then
  ground.pin.reference.theta = 0;
 end if;
 ground.pin.v[1:13] = {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)};
 currentSensor.iMag[1:13] = Modelica.ComplexMath.'abs'(currentSensor.i[1:13]);
 currentSensor.iArg[1:13] = Modelica.ComplexMath.arg(currentSensor.i[1:13], 0);
 currentSensor.v[1:13].re = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 currentSensor.v[1:13].im = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 currentSensor.pin_p.reference.theta = currentSensor.pin_n.reference.theta;
 currentSensor.omega = der(currentSensor.pin_p.reference.theta);
 currentSensor.v[1:13] = {Complex.'-'.subtract(currentSensor.pin_p.v[1], currentSensor.pin_n.v[1]), Complex.'-'.subtract(currentSensor.pin_p.v[2], currentSensor.pin_n.v[2]), Complex.'-'.subtract(currentSensor.pin_p.v[3], currentSensor.pin_n.v[3]), Complex.'-'.subtract(currentSensor.pin_p.v[4], currentSensor.pin_n.v[4]), Complex.'-'.subtract(currentSensor.pin_p.v[5], currentSensor.pin_n.v[5]), Complex.'-'.subtract(currentSensor.pin_p.v[6], currentSensor.pin_n.v[6]), Complex.'-'.subtract(currentSensor.pin_p.v[7], currentSensor.pin_n.v[7]), Complex.'-'.subtract(currentSensor.pin_p.v[8], currentSensor.pin_n.v[8]), Complex.'-'.subtract(currentSensor.pin_p.v[9], currentSensor.pin_n.v[9]), Complex.'-'.subtract(currentSensor.pin_p.v[10], currentSensor.pin_n.v[10]), Complex.'-'.subtract(currentSensor.pin_p.v[11], currentSensor.pin_n.v[11]), Complex.'-'.subtract(currentSensor.pin_p.v[12], currentSensor.pin_n.v[12]), Complex.'-'.subtract(currentSensor.pin_p.v[13], currentSensor.pin_n.v[13])};
 currentSensor.i[1:13].re = currentSensor.pin_p.iRe[1:13];
 currentSensor.i[1:13].im = currentSensor.pin_p.iIm[1:13];
 currentSensor.pin_p.iRe[1:13] + currentSensor.pin_n.iRe[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 currentSensor.pin_p.iIm[1:13] + currentSensor.pin_n.iIm[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 z1.v[1:13].re = z1.z.re .* z1.i[1:13].re - z1.z.im .* systemDef.hrms[1:13] .* z1.i[1:13].im;
 z1.v[1:13].im = z1.z.re .* z1.i[1:13].im + z1.z.im .* systemDef.hrms[1:13] .* z1.i[1:13].re;
 z1.pin_p.reference.theta = z1.pin_n.reference.theta;
 z1.omega = der(z1.pin_p.reference.theta);
 z1.v[1:13] = {Complex.'-'.subtract(z1.pin_p.v[1], z1.pin_n.v[1]), Complex.'-'.subtract(z1.pin_p.v[2], z1.pin_n.v[2]), Complex.'-'.subtract(z1.pin_p.v[3], z1.pin_n.v[3]), Complex.'-'.subtract(z1.pin_p.v[4], z1.pin_n.v[4]), Complex.'-'.subtract(z1.pin_p.v[5], z1.pin_n.v[5]), Complex.'-'.subtract(z1.pin_p.v[6], z1.pin_n.v[6]), Complex.'-'.subtract(z1.pin_p.v[7], z1.pin_n.v[7]), Complex.'-'.subtract(z1.pin_p.v[8], z1.pin_n.v[8]), Complex.'-'.subtract(z1.pin_p.v[9], z1.pin_n.v[9]), Complex.'-'.subtract(z1.pin_p.v[10], z1.pin_n.v[10]), Complex.'-'.subtract(z1.pin_p.v[11], z1.pin_n.v[11]), Complex.'-'.subtract(z1.pin_p.v[12], z1.pin_n.v[12]), Complex.'-'.subtract(z1.pin_p.v[13], z1.pin_n.v[13])};
 z1.i[1:13].re = z1.pin_p.iRe[1:13];
 z1.i[1:13].im = z1.pin_p.iIm[1:13];
 z1.pin_p.iRe[1:13] + z1.pin_n.iRe[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 z1.pin_p.iIm[1:13] + z1.pin_n.iIm[1:13] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
 if Connections.isRoot(ground4.pin.reference) then
  ground4.pin.reference.theta = 0;
 end if;
 ground4.pin.v[1:13] = {Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0), Complex.'constructor'.fromReal(0.0, 0)};
 ground1.pin.iIm[1:13] + v.pin_n.iIm[1:13] = zeros(13);
 ground1.pin.iRe[1:13] + v.pin_n.iRe[1:13] = zeros(13);
 ground1.pin.v[1].im = v.pin_n.v[1].im;
 ground1.pin.v[1].re = v.pin_n.v[1].re;
 ground1.pin.v[2].im = v.pin_n.v[2].im;
 ground1.pin.v[2].re = v.pin_n.v[2].re;
 ground1.pin.v[3].im = v.pin_n.v[3].im;
 ground1.pin.v[3].re = v.pin_n.v[3].re;
 ground1.pin.v[4].im = v.pin_n.v[4].im;
 ground1.pin.v[4].re = v.pin_n.v[4].re;
 ground1.pin.v[5].im = v.pin_n.v[5].im;
 ground1.pin.v[5].re = v.pin_n.v[5].re;
 ground1.pin.v[6].im = v.pin_n.v[6].im;
 ground1.pin.v[6].re = v.pin_n.v[6].re;
 ground1.pin.v[7].im = v.pin_n.v[7].im;
 ground1.pin.v[7].re = v.pin_n.v[7].re;
 ground1.pin.v[8].im = v.pin_n.v[8].im;
 ground1.pin.v[8].re = v.pin_n.v[8].re;
 ground1.pin.v[9].im = v.pin_n.v[9].im;
 ground1.pin.v[9].re = v.pin_n.v[9].re;
 ground1.pin.v[10].im = v.pin_n.v[10].im;
 ground1.pin.v[10].re = v.pin_n.v[10].re;
 ground1.pin.v[11].im = v.pin_n.v[11].im;
 ground1.pin.v[11].re = v.pin_n.v[11].re;
 ground1.pin.v[12].im = v.pin_n.v[12].im;
 ground1.pin.v[12].re = v.pin_n.v[12].re;
 ground1.pin.v[13].im = v.pin_n.v[13].im;
 ground1.pin.v[13].re = v.pin_n.v[13].re;
 ground2.p.i + laptop.n.i + laptop_adapter.pin_n.i = 0.0;
 ground2.p.v = laptop.n.v;
 laptop.n.v = laptop_adapter.pin_n.v;
 laptop.p.i + laptop_adapter.pin_p.i = 0.0;
 laptop.p.v = laptop_adapter.pin_p.v;
 v.pin_p.iIm[1:13] + z.pin_p.iIm[1:13] = zeros(13);
 v.pin_p.iRe[1:13] + z.pin_p.iRe[1:13] = zeros(13);
 v.pin_p.v[1].im = z.pin_p.v[1].im;
 v.pin_p.v[1].re = z.pin_p.v[1].re;
 v.pin_p.v[2].im = z.pin_p.v[2].im;
 v.pin_p.v[2].re = z.pin_p.v[2].re;
 v.pin_p.v[3].im = z.pin_p.v[3].im;
 v.pin_p.v[3].re = z.pin_p.v[3].re;
 v.pin_p.v[4].im = z.pin_p.v[4].im;
 v.pin_p.v[4].re = z.pin_p.v[4].re;
 v.pin_p.v[5].im = z.pin_p.v[5].im;
 v.pin_p.v[5].re = z.pin_p.v[5].re;
 v.pin_p.v[6].im = z.pin_p.v[6].im;
 v.pin_p.v[6].re = z.pin_p.v[6].re;
 v.pin_p.v[7].im = z.pin_p.v[7].im;
 v.pin_p.v[7].re = z.pin_p.v[7].re;
 v.pin_p.v[8].im = z.pin_p.v[8].im;
 v.pin_p.v[8].re = z.pin_p.v[8].re;
 v.pin_p.v[9].im = z.pin_p.v[9].im;
 v.pin_p.v[9].re = z.pin_p.v[9].re;
 v.pin_p.v[10].im = z.pin_p.v[10].im;
 v.pin_p.v[10].re = z.pin_p.v[10].re;
 v.pin_p.v[11].im = z.pin_p.v[11].im;
 v.pin_p.v[11].re = z.pin_p.v[11].re;
 v.pin_p.v[12].im = z.pin_p.v[12].im;
 v.pin_p.v[12].re = z.pin_p.v[12].re;
 v.pin_p.v[13].im = z.pin_p.v[13].im;
 v.pin_p.v[13].re = z.pin_p.v[13].re;
 ground.pin.iIm[1:13] + laptop_adapter.hPin_N.iIm[1:13] = zeros(13);
 ground.pin.iRe[1:13] + laptop_adapter.hPin_N.iRe[1:13] = zeros(13);
 ground.pin.v[1].im = laptop_adapter.hPin_N.v[1].im;
 ground.pin.v[1].re = laptop_adapter.hPin_N.v[1].re;
 ground.pin.v[2].im = laptop_adapter.hPin_N.v[2].im;
 ground.pin.v[2].re = laptop_adapter.hPin_N.v[2].re;
 ground.pin.v[3].im = laptop_adapter.hPin_N.v[3].im;
 ground.pin.v[3].re = laptop_adapter.hPin_N.v[3].re;
 ground.pin.v[4].im = laptop_adapter.hPin_N.v[4].im;
 ground.pin.v[4].re = laptop_adapter.hPin_N.v[4].re;
 ground.pin.v[5].im = laptop_adapter.hPin_N.v[5].im;
 ground.pin.v[5].re = laptop_adapter.hPin_N.v[5].re;
 ground.pin.v[6].im = laptop_adapter.hPin_N.v[6].im;
 ground.pin.v[6].re = laptop_adapter.hPin_N.v[6].re;
 ground.pin.v[7].im = laptop_adapter.hPin_N.v[7].im;
 ground.pin.v[7].re = laptop_adapter.hPin_N.v[7].re;
 ground.pin.v[8].im = laptop_adapter.hPin_N.v[8].im;
 ground.pin.v[8].re = laptop_adapter.hPin_N.v[8].re;
 ground.pin.v[9].im = laptop_adapter.hPin_N.v[9].im;
 ground.pin.v[9].re = laptop_adapter.hPin_N.v[9].re;
 ground.pin.v[10].im = laptop_adapter.hPin_N.v[10].im;
 ground.pin.v[10].re = laptop_adapter.hPin_N.v[10].re;
 ground.pin.v[11].im = laptop_adapter.hPin_N.v[11].im;
 ground.pin.v[11].re = laptop_adapter.hPin_N.v[11].re;
 ground.pin.v[12].im = laptop_adapter.hPin_N.v[12].im;
 ground.pin.v[12].re = laptop_adapter.hPin_N.v[12].re;
 ground.pin.v[13].im = laptop_adapter.hPin_N.v[13].im;
 ground.pin.v[13].re = laptop_adapter.hPin_N.v[13].re;
 currentSensor.pin_p.iIm[1:13] + z.pin_n.iIm[1:13] + z1.pin_p.iIm[1:13] = zeros(13);
 currentSensor.pin_p.iRe[1:13] + z.pin_n.iRe[1:13] + z1.pin_p.iRe[1:13] = zeros(13);
 currentSensor.pin_p.v[1].im = z.pin_n.v[1].im;
 z.pin_n.v[1].im = z1.pin_p.v[1].im;
 currentSensor.pin_p.v[1].re = z.pin_n.v[1].re;
 z.pin_n.v[1].re = z1.pin_p.v[1].re;
 currentSensor.pin_p.v[2].im = z.pin_n.v[2].im;
 z.pin_n.v[2].im = z1.pin_p.v[2].im;
 currentSensor.pin_p.v[2].re = z.pin_n.v[2].re;
 z.pin_n.v[2].re = z1.pin_p.v[2].re;
 currentSensor.pin_p.v[3].im = z.pin_n.v[3].im;
 z.pin_n.v[3].im = z1.pin_p.v[3].im;
 currentSensor.pin_p.v[3].re = z.pin_n.v[3].re;
 z.pin_n.v[3].re = z1.pin_p.v[3].re;
 currentSensor.pin_p.v[4].im = z.pin_n.v[4].im;
 z.pin_n.v[4].im = z1.pin_p.v[4].im;
 currentSensor.pin_p.v[4].re = z.pin_n.v[4].re;
 z.pin_n.v[4].re = z1.pin_p.v[4].re;
 currentSensor.pin_p.v[5].im = z.pin_n.v[5].im;
 z.pin_n.v[5].im = z1.pin_p.v[5].im;
 currentSensor.pin_p.v[5].re = z.pin_n.v[5].re;
 z.pin_n.v[5].re = z1.pin_p.v[5].re;
 currentSensor.pin_p.v[6].im = z.pin_n.v[6].im;
 z.pin_n.v[6].im = z1.pin_p.v[6].im;
 currentSensor.pin_p.v[6].re = z.pin_n.v[6].re;
 z.pin_n.v[6].re = z1.pin_p.v[6].re;
 currentSensor.pin_p.v[7].im = z.pin_n.v[7].im;
 z.pin_n.v[7].im = z1.pin_p.v[7].im;
 currentSensor.pin_p.v[7].re = z.pin_n.v[7].re;
 z.pin_n.v[7].re = z1.pin_p.v[7].re;
 currentSensor.pin_p.v[8].im = z.pin_n.v[8].im;
 z.pin_n.v[8].im = z1.pin_p.v[8].im;
 currentSensor.pin_p.v[8].re = z.pin_n.v[8].re;
 z.pin_n.v[8].re = z1.pin_p.v[8].re;
 currentSensor.pin_p.v[9].im = z.pin_n.v[9].im;
 z.pin_n.v[9].im = z1.pin_p.v[9].im;
 currentSensor.pin_p.v[9].re = z.pin_n.v[9].re;
 z.pin_n.v[9].re = z1.pin_p.v[9].re;
 currentSensor.pin_p.v[10].im = z.pin_n.v[10].im;
 z.pin_n.v[10].im = z1.pin_p.v[10].im;
 currentSensor.pin_p.v[10].re = z.pin_n.v[10].re;
 z.pin_n.v[10].re = z1.pin_p.v[10].re;
 currentSensor.pin_p.v[11].im = z.pin_n.v[11].im;
 z.pin_n.v[11].im = z1.pin_p.v[11].im;
 currentSensor.pin_p.v[11].re = z.pin_n.v[11].re;
 z.pin_n.v[11].re = z1.pin_p.v[11].re;
 currentSensor.pin_p.v[12].im = z.pin_n.v[12].im;
 z.pin_n.v[12].im = z1.pin_p.v[12].im;
 currentSensor.pin_p.v[12].re = z.pin_n.v[12].re;
 z.pin_n.v[12].re = z1.pin_p.v[12].re;
 currentSensor.pin_p.v[13].im = z.pin_n.v[13].im;
 z.pin_n.v[13].im = z1.pin_p.v[13].im;
 currentSensor.pin_p.v[13].re = z.pin_n.v[13].re;
 z.pin_n.v[13].re = z1.pin_p.v[13].re;
 currentSensor.pin_n.iIm[1:13] + laptop_adapter.hPin_P.iIm[1:13] = zeros(13);
 currentSensor.pin_n.iRe[1:13] + laptop_adapter.hPin_P.iRe[1:13] = zeros(13);
 currentSensor.pin_n.v[1].im = laptop_adapter.hPin_P.v[1].im;
 currentSensor.pin_n.v[1].re = laptop_adapter.hPin_P.v[1].re;
 currentSensor.pin_n.v[2].im = laptop_adapter.hPin_P.v[2].im;
 currentSensor.pin_n.v[2].re = laptop_adapter.hPin_P.v[2].re;
 currentSensor.pin_n.v[3].im = laptop_adapter.hPin_P.v[3].im;
 currentSensor.pin_n.v[3].re = laptop_adapter.hPin_P.v[3].re;
 currentSensor.pin_n.v[4].im = laptop_adapter.hPin_P.v[4].im;
 currentSensor.pin_n.v[4].re = laptop_adapter.hPin_P.v[4].re;
 currentSensor.pin_n.v[5].im = laptop_adapter.hPin_P.v[5].im;
 currentSensor.pin_n.v[5].re = laptop_adapter.hPin_P.v[5].re;
 currentSensor.pin_n.v[6].im = laptop_adapter.hPin_P.v[6].im;
 currentSensor.pin_n.v[6].re = laptop_adapter.hPin_P.v[6].re;
 currentSensor.pin_n.v[7].im = laptop_adapter.hPin_P.v[7].im;
 currentSensor.pin_n.v[7].re = laptop_adapter.hPin_P.v[7].re;
 currentSensor.pin_n.v[8].im = laptop_adapter.hPin_P.v[8].im;
 currentSensor.pin_n.v[8].re = laptop_adapter.hPin_P.v[8].re;
 currentSensor.pin_n.v[9].im = laptop_adapter.hPin_P.v[9].im;
 currentSensor.pin_n.v[9].re = laptop_adapter.hPin_P.v[9].re;
 currentSensor.pin_n.v[10].im = laptop_adapter.hPin_P.v[10].im;
 currentSensor.pin_n.v[10].re = laptop_adapter.hPin_P.v[10].re;
 currentSensor.pin_n.v[11].im = laptop_adapter.hPin_P.v[11].im;
 currentSensor.pin_n.v[11].re = laptop_adapter.hPin_P.v[11].re;
 currentSensor.pin_n.v[12].im = laptop_adapter.hPin_P.v[12].im;
 currentSensor.pin_n.v[12].re = laptop_adapter.hPin_P.v[12].re;
 currentSensor.pin_n.v[13].im = laptop_adapter.hPin_P.v[13].im;
 currentSensor.pin_n.v[13].re = laptop_adapter.hPin_P.v[13].re;
 ground4.pin.iIm[1:13] + z1.pin_n.iIm[1:13] = zeros(13);
 ground4.pin.iRe[1:13] + z1.pin_n.iRe[1:13] = zeros(13);
 ground4.pin.v[1].im = z1.pin_n.v[1].im;
 ground4.pin.v[1].re = z1.pin_n.v[1].re;
 ground4.pin.v[2].im = z1.pin_n.v[2].im;
 ground4.pin.v[2].re = z1.pin_n.v[2].re;
 ground4.pin.v[3].im = z1.pin_n.v[3].im;
 ground4.pin.v[3].re = z1.pin_n.v[3].re;
 ground4.pin.v[4].im = z1.pin_n.v[4].im;
 ground4.pin.v[4].re = z1.pin_n.v[4].re;
 ground4.pin.v[5].im = z1.pin_n.v[5].im;
 ground4.pin.v[5].re = z1.pin_n.v[5].re;
 ground4.pin.v[6].im = z1.pin_n.v[6].im;
 ground4.pin.v[6].re = z1.pin_n.v[6].re;
 ground4.pin.v[7].im = z1.pin_n.v[7].im;
 ground4.pin.v[7].re = z1.pin_n.v[7].re;
 ground4.pin.v[8].im = z1.pin_n.v[8].im;
 ground4.pin.v[8].re = z1.pin_n.v[8].re;
 ground4.pin.v[9].im = z1.pin_n.v[9].im;
 ground4.pin.v[9].re = z1.pin_n.v[9].re;
 ground4.pin.v[10].im = z1.pin_n.v[10].im;
 ground4.pin.v[10].re = z1.pin_n.v[10].re;
 ground4.pin.v[11].im = z1.pin_n.v[11].im;
 ground4.pin.v[11].re = z1.pin_n.v[11].re;
 ground4.pin.v[12].im = z1.pin_n.v[12].im;
 ground4.pin.v[12].re = z1.pin_n.v[12].re;
 ground4.pin.v[13].im = z1.pin_n.v[13].im;
 ground4.pin.v[13].re = z1.pin_n.v[13].re;
 - laptop_adapter.pin_p.i + laptop_adapter.vDC.p.i = 0.0;
 laptop_adapter.pin_p.v = laptop_adapter.vDC.p.v;
 - laptop_adapter.pin_n.i + laptop_adapter.vDC.n.i = 0.0;
 laptop_adapter.pin_n.v = laptop_adapter.vDC.n.v;
 - laptop_adapter.hPin_N.iIm[1:13] + laptop_adapter.loadBase.pin_n.iIm[1:13] = zeros(13);
 - laptop_adapter.hPin_N.iRe[1:13] + laptop_adapter.loadBase.pin_n.iRe[1:13] = zeros(13);
 laptop_adapter.hPin_N.v[1].im = laptop_adapter.loadBase.pin_n.v[1].im;
 laptop_adapter.hPin_N.v[1].re = laptop_adapter.loadBase.pin_n.v[1].re;
 laptop_adapter.hPin_N.v[2].im = laptop_adapter.loadBase.pin_n.v[2].im;
 laptop_adapter.hPin_N.v[2].re = laptop_adapter.loadBase.pin_n.v[2].re;
 laptop_adapter.hPin_N.v[3].im = laptop_adapter.loadBase.pin_n.v[3].im;
 laptop_adapter.hPin_N.v[3].re = laptop_adapter.loadBase.pin_n.v[3].re;
 laptop_adapter.hPin_N.v[4].im = laptop_adapter.loadBase.pin_n.v[4].im;
 laptop_adapter.hPin_N.v[4].re = laptop_adapter.loadBase.pin_n.v[4].re;
 laptop_adapter.hPin_N.v[5].im = laptop_adapter.loadBase.pin_n.v[5].im;
 laptop_adapter.hPin_N.v[5].re = laptop_adapter.loadBase.pin_n.v[5].re;
 laptop_adapter.hPin_N.v[6].im = laptop_adapter.loadBase.pin_n.v[6].im;
 laptop_adapter.hPin_N.v[6].re = laptop_adapter.loadBase.pin_n.v[6].re;
 laptop_adapter.hPin_N.v[7].im = laptop_adapter.loadBase.pin_n.v[7].im;
 laptop_adapter.hPin_N.v[7].re = laptop_adapter.loadBase.pin_n.v[7].re;
 laptop_adapter.hPin_N.v[8].im = laptop_adapter.loadBase.pin_n.v[8].im;
 laptop_adapter.hPin_N.v[8].re = laptop_adapter.loadBase.pin_n.v[8].re;
 laptop_adapter.hPin_N.v[9].im = laptop_adapter.loadBase.pin_n.v[9].im;
 laptop_adapter.hPin_N.v[9].re = laptop_adapter.loadBase.pin_n.v[9].re;
 laptop_adapter.hPin_N.v[10].im = laptop_adapter.loadBase.pin_n.v[10].im;
 laptop_adapter.hPin_N.v[10].re = laptop_adapter.loadBase.pin_n.v[10].re;
 laptop_adapter.hPin_N.v[11].im = laptop_adapter.loadBase.pin_n.v[11].im;
 laptop_adapter.hPin_N.v[11].re = laptop_adapter.loadBase.pin_n.v[11].re;
 laptop_adapter.hPin_N.v[12].im = laptop_adapter.loadBase.pin_n.v[12].im;
 laptop_adapter.hPin_N.v[12].re = laptop_adapter.loadBase.pin_n.v[12].re;
 laptop_adapter.hPin_N.v[13].im = laptop_adapter.loadBase.pin_n.v[13].im;
 laptop_adapter.hPin_N.v[13].re = laptop_adapter.loadBase.pin_n.v[13].re;
 - laptop_adapter.hPin_P.iIm[1:13] + laptop_adapter.loadBase.pin_p.iIm[1:13] = zeros(13);
 - laptop_adapter.hPin_P.iRe[1:13] + laptop_adapter.loadBase.pin_p.iRe[1:13] = zeros(13);
 laptop_adapter.hPin_P.v[1].im = laptop_adapter.loadBase.pin_p.v[1].im;
 laptop_adapter.hPin_P.v[1].re = laptop_adapter.loadBase.pin_p.v[1].re;
 laptop_adapter.hPin_P.v[2].im = laptop_adapter.loadBase.pin_p.v[2].im;
 laptop_adapter.hPin_P.v[2].re = laptop_adapter.loadBase.pin_p.v[2].re;
 laptop_adapter.hPin_P.v[3].im = laptop_adapter.loadBase.pin_p.v[3].im;
 laptop_adapter.hPin_P.v[3].re = laptop_adapter.loadBase.pin_p.v[3].re;
 laptop_adapter.hPin_P.v[4].im = laptop_adapter.loadBase.pin_p.v[4].im;
 laptop_adapter.hPin_P.v[4].re = laptop_adapter.loadBase.pin_p.v[4].re;
 laptop_adapter.hPin_P.v[5].im = laptop_adapter.loadBase.pin_p.v[5].im;
 laptop_adapter.hPin_P.v[5].re = laptop_adapter.loadBase.pin_p.v[5].re;
 laptop_adapter.hPin_P.v[6].im = laptop_adapter.loadBase.pin_p.v[6].im;
 laptop_adapter.hPin_P.v[6].re = laptop_adapter.loadBase.pin_p.v[6].re;
 laptop_adapter.hPin_P.v[7].im = laptop_adapter.loadBase.pin_p.v[7].im;
 laptop_adapter.hPin_P.v[7].re = laptop_adapter.loadBase.pin_p.v[7].re;
 laptop_adapter.hPin_P.v[8].im = laptop_adapter.loadBase.pin_p.v[8].im;
 laptop_adapter.hPin_P.v[8].re = laptop_adapter.loadBase.pin_p.v[8].re;
 laptop_adapter.hPin_P.v[9].im = laptop_adapter.loadBase.pin_p.v[9].im;
 laptop_adapter.hPin_P.v[9].re = laptop_adapter.loadBase.pin_p.v[9].re;
 laptop_adapter.hPin_P.v[10].im = laptop_adapter.loadBase.pin_p.v[10].im;
 laptop_adapter.hPin_P.v[10].re = laptop_adapter.loadBase.pin_p.v[10].re;
 laptop_adapter.hPin_P.v[11].im = laptop_adapter.loadBase.pin_p.v[11].im;
 laptop_adapter.hPin_P.v[11].re = laptop_adapter.loadBase.pin_p.v[11].re;
 laptop_adapter.hPin_P.v[12].im = laptop_adapter.loadBase.pin_p.v[12].im;
 laptop_adapter.hPin_P.v[12].re = laptop_adapter.loadBase.pin_p.v[12].re;
 laptop_adapter.hPin_P.v[13].im = laptop_adapter.loadBase.pin_p.v[13].im;
 laptop_adapter.hPin_P.v[13].re = laptop_adapter.loadBase.pin_p.v[13].re;
 v.pin_p.reference.theta = z.pin_p.reference.theta;
 currentSensor.pin_p.reference.theta = z.pin_n.reference.theta;
 z.pin_n.reference.theta = z1.pin_p.reference.theta;
 ground1.pin.reference.theta = v.pin_n.reference.theta;
 currentSensor.pin_n.reference.theta = laptop_adapter.hPin_P.reference.theta;
 ground4.pin.reference.theta = z1.pin_n.reference.theta;
 laptop_adapter.hPin_P.reference.theta = laptop_adapter.loadBase.pin_p.reference.theta;
 laptop_adapter.hPin_N.reference.theta = laptop_adapter.loadBase.pin_n.reference.theta;
 ground.pin.reference.theta = laptop_adapter.hPin_N.reference.theta;

public
 function Modelica.ComplexMath.real
  input Complex c;
  output Real r;
 algorithm
  r := c.re;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.real;

 function Modelica.ComplexMath.conj
  input Complex c1;
  output Complex c2;
 algorithm
  (c2) := Complex.'constructor'.fromReal(c1.re, - c1.im);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.conj;

 function Complex.'constructor'.fromReal
  input Real re;
  input Real im;
  output Complex result;
 algorithm
  result.re := re;
  result.im := im;
  return;
 annotation(Inline = true);
 end Complex.'constructor'.fromReal;

 function Complex.'*'.multiply
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re * c2.re - c1.im * c2.im, c1.re * c2.im + c1.im * c2.re);
  return;
 annotation(Inline = true);
 end Complex.'*'.multiply;

 function Modelica.ComplexMath.'abs'
  input Complex c;
  output Real result;
 algorithm
  result := (c.re ^ 2 + c.im ^ 2) ^ 0.5;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.'abs';

 function Modelica.ComplexMath.arg
  input Complex c;
  input Real phi0;
  output Real phi;
 algorithm
  phi := Modelica.Math.atan3(c.im, c.re, phi0);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.arg;

 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function Modelica.Utilities.Streams.readMatrixSize
  input String fileName;
  input String matrixName;
  output Integer[:] dim;
 algorithm
  init dim as Integer[2];
  external "C" ModelicaIO_readMatrixSizes(fileName, matrixName, dim);
  return;
 end Modelica.Utilities.Streams.readMatrixSize;

 function Modelica.Utilities.Streams.readRealMatrix
  input String fileName;
  input String matrixName;
  input Integer nrow;
  input Integer ncol;
  input Boolean verboseRead;
  output Real[:,:] matrix;
 algorithm
  init matrix as Real[nrow, ncol];
  external "C" ModelicaIO_readRealMatrix(fileName, matrixName, matrix, size(matrix, 1), size(matrix, 2), verboseRead);
  return;
 end Modelica.Utilities.Streams.readRealMatrix;

 function Complex.'-'.subtract
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re - c2.re, c1.im - c2.im);
  return;
 annotation(Inline = true);
 end Complex.'-'.subtract;

 function Complex.'+'
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re + c2.re, c1.im + c2.im);
  return;
 annotation(Inline = true);
 end Complex.'+';

 record HPF.Utilities.ComponentProperties
  discrete String ComponentType "Type of the component";
 end HPF.Utilities.ComponentProperties;

 record Complex
  Real re "Real part of complex number";
  Real im "Imaginary part of complex number";
 end Complex;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 type Modelica.SIunits.Frequency = Real(final quantity = "Frequency",final unit = "Hz");
 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
 type Modelica.Blocks.Interfaces.RealOutput = Real;
 type Modelica.SIunits.Power = Real(final quantity = "Power",final unit = "W");
end HPF.Test.Test_Rectifier;

Applying transformation: enableIfEquationElimination...
Applying transformation: genInitArrayStatements...
Applying transformation: scalarize...
Applying transformation: MakeReinitedVarsStates...
Applying transformation: enableIfEquationElimination...
Applying transformation: enableStreamsRewrite...
Applying transformation: ExtractEventGeneratingExpressions...
Applying transformation: GenerateEventIndicators...
Applying transformation: convertWhenToIf...
Applying transformation: FunctionInliningIfSet...
Applying transformation: setFDerivativeVariables...
Applying transformation: addFPreVariables...
Applying transformation: enableIfEquationRewrite...
Applying transformation: aliasEliminationIfSet...
Applying transformation: variabilityPropagationIfSet...
Applying transformation: aliasEliminationIfSet...
Applying transformation: eliminateLinearEquations...
Applying transformation: aliasEliminationIfSet...
Applying transformation: enableExpandedInStreamRewrite...
Applying transformation: evaluateAsserts...
Applying transformation: enableSemiLinearRewrite...
Applying transformation: eliminateEqualSwitches...
Applying transformation: genInitialEquations...
Applying transformation: setFDerivativeVariablesPreBLT...
Applying transformation: indexReduction...
Applying transformation: LateFunctionInliningIfSet...
Applying transformation: commonSubexpressionEliminationIfSet...
Applying transformation: addFPreVariables...
Applying transformation: aliasEliminationIfSet...
Applying transformation: eliminateLinearEquations...
Applying transformation: sortDependentParameters...
Applying transformation: addRuntimeOptionParameters...
Applying transformation: computeMatchingsAndBLT...
Flat tree before matching and BLT:
fclass HPF.Test.Test_Rectifier
 parameter Integer systemDef.hrms[1] = 1 "Harmonics to simulate" /* 1 */;
 parameter Integer systemDef.hrms[2] = 3 "Harmonics to simulate" /* 3 */;
 parameter Integer systemDef.hrms[3] = 5 "Harmonics to simulate" /* 5 */;
 parameter Integer systemDef.hrms[4] = 7 "Harmonics to simulate" /* 7 */;
 parameter Integer systemDef.hrms[5] = 9 "Harmonics to simulate" /* 9 */;
 parameter Integer systemDef.hrms[6] = 11 "Harmonics to simulate" /* 11 */;
 parameter Integer systemDef.hrms[7] = 13 "Harmonics to simulate" /* 13 */;
 parameter Integer systemDef.hrms[8] = 15 "Harmonics to simulate" /* 15 */;
 parameter Integer systemDef.hrms[9] = 17 "Harmonics to simulate" /* 17 */;
 parameter Integer systemDef.hrms[10] = 19 "Harmonics to simulate" /* 19 */;
 parameter Integer systemDef.hrms[11] = 21 "Harmonics to simulate" /* 21 */;
 parameter Integer systemDef.hrms[12] = 23 "Harmonics to simulate" /* 23 */;
 parameter Integer systemDef.hrms[13] = 25 "Harmonics to simulate" /* 25 */;
 structural parameter Integer systemDef.numHrm = 13 "Number of harmonics. (Automatically generated from hrms.)" /* 13 */;
 parameter Modelica.SIunits.Frequency systemDef.fFund = 60 "Fundamental frequency (Hz)" /* 60 */;
 parameter Modelica.SIunits.Frequency systemDef.fs = 10000.0 "Sampling frequency (Hz)" /* 10000.0 */;
 parameter Integer temp_117[1];
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 constant String v.properties.ComponentType = "VoltageSource" "Type of the component";
 structural parameter Real v.vMag[1] = 120 "Voltage Magnitude (Volts rms)" /* 120 */;
 Real v.P1;
 Real v.iMag[1];
 Real v.iMag[2];
 Real v.iMag[3];
 Real v.iMag[4];
 Real v.iMag[5];
 Real v.iMag[6];
 Real v.iMag[7];
 Real v.iMag[8];
 Real v.iMag[9];
 Real v.iMag[10];
 Real v.iMag[11];
 Real v.iMag[12];
 Real v.iMag[13];
 Real v.iArg[1];
 Real v.iArg[2];
 Real v.iArg[3];
 Real v.iArg[4];
 Real v.iArg[5];
 Real v.iArg[6];
 Real v.iArg[7];
 Real v.iArg[8];
 Real v.iArg[9];
 Real v.iArg[10];
 Real v.iArg[11];
 Real v.iArg[12];
 Real v.iArg[13];
 Modelica.SIunits.Angle v.theta(start = 0);
 constant Real v.v[1].re(start = 100) = 120.0 "Real part of complex number";
 constant Real v.v[1].im(start = 100) = 0.0 "Imaginary part of complex number";
 constant Real v.v[2].re(start = 100) = 0 "Real part of complex number";
 Real v.i[1].re(start = 1) "Real part of complex number";
 Real v.i[1].im(start = -1) "Imaginary part of complex number";
 Real v.i[2].re(start = 1) "Real part of complex number";
 Real v.i[2].im(start = -1) "Imaginary part of complex number";
 Real v.i[3].re(start = 1) "Real part of complex number";
 Real v.i[3].im(start = -1) "Imaginary part of complex number";
 Real v.i[4].re(start = 1) "Real part of complex number";
 Real v.i[4].im(start = -1) "Imaginary part of complex number";
 Real v.i[5].re(start = 1) "Real part of complex number";
 Real v.i[5].im(start = -1) "Imaginary part of complex number";
 Real v.i[6].re(start = 1) "Real part of complex number";
 Real v.i[6].im(start = -1) "Imaginary part of complex number";
 Real v.i[7].re(start = 1) "Real part of complex number";
 Real v.i[7].im(start = -1) "Imaginary part of complex number";
 Real v.i[8].re(start = 1) "Real part of complex number";
 Real v.i[8].im(start = -1) "Imaginary part of complex number";
 Real v.i[9].re(start = 1) "Real part of complex number";
 Real v.i[9].im(start = -1) "Imaginary part of complex number";
 Real v.i[10].re(start = 1) "Real part of complex number";
 Real v.i[10].im(start = -1) "Imaginary part of complex number";
 Real v.i[11].re(start = 1) "Real part of complex number";
 Real v.i[11].im(start = -1) "Imaginary part of complex number";
 Real v.i[12].re(start = 1) "Real part of complex number";
 Real v.i[12].im(start = -1) "Imaginary part of complex number";
 Real v.i[13].re(start = 1) "Real part of complex number";
 Real v.i[13].im(start = -1) "Imaginary part of complex number";
 Real v.omega;
 constant String ground1.properties.ComponentType = "Ground" "Type of the component";
 parameter Integer temp_117[2];
 constant String laptop_adapter.properties.ComponentType = "NonlinearLoad" "Type of the component";
 parameter Real temp_118[1,1];
 parameter Real laptop_adapter.V_Rect(start = 0) = 24 "Rectifier DC output" /* 24 */;
 parameter Real temp_118[2,1];
 Real laptop_adapter.loadBase.omega;
 parameter Real temp_118[3,1];
 parameter Real temp_118[4,1];
 Real laptop_adapter.I_mag[1];
 Real laptop_adapter.I_mag[2];
 Real laptop_adapter.I_mag[3];
 Real laptop_adapter.I_mag[4];
 Real laptop_adapter.I_mag[5];
 Real laptop_adapter.I_mag[6];
 Real laptop_adapter.I_mag[7];
 Real laptop_adapter.I_mag[8];
 Real laptop_adapter.I_mag[9];
 Real laptop_adapter.I_mag[10];
 Real laptop_adapter.I_mag[11];
 Real laptop_adapter.I_mag[12];
 Real laptop_adapter.I_mag[13];
 Real laptop_adapter.V_mag[1];
 Real laptop_adapter.V_mag[2];
 Real laptop_adapter.V_mag[3];
 Real laptop_adapter.V_mag[4];
 Real laptop_adapter.V_mag[5];
 Real laptop_adapter.V_mag[6];
 Real laptop_adapter.V_mag[7];
 Real laptop_adapter.V_mag[8];
 Real laptop_adapter.V_mag[9];
 Real laptop_adapter.V_mag[10];
 Real laptop_adapter.V_mag[11];
 Real laptop_adapter.V_mag[12];
 Real laptop_adapter.V_mag[13];
 Real laptop_adapter.V_arg[1];
 Real laptop_adapter.V_arg[2];
 Real laptop_adapter.V_arg[3];
 Real laptop_adapter.V_arg[4];
 Real laptop_adapter.V_arg[5];
 Real laptop_adapter.V_arg[6];
 Real laptop_adapter.V_arg[7];
 Real laptop_adapter.V_arg[8];
 Real laptop_adapter.V_arg[9];
 Real laptop_adapter.V_arg[10];
 Real laptop_adapter.V_arg[11];
 Real laptop_adapter.V_arg[12];
 Real laptop_adapter.V_arg[13];
 parameter Real temp_118[5,1];
 parameter Real temp_118[6,1];
 structural (loadResource) parameter String laptop_adapter.modelFileName = "HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" "Rectifier harmonic model mat file" /* "HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" */;
 structural parameter String laptop_adapter.resourceRetValue = "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" /* "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" */;
 structural parameter Integer laptop_adapter.matDim[1] = 64 /* 64 */;
 structural parameter Integer laptop_adapter.matDim[2] = 1 /* 1 */;
 structural parameter Real laptop_adapter.magDataMat[1,1] = 1.0 /* 1.0 */;
 structural parameter Real laptop_adapter.magDataMat[2,1] = 0.9421865565594479 /* 0.9421865565594479 */;
 structural parameter Real laptop_adapter.magDataMat[3,1] = 0.846418595204449 /* 0.846418595204449 */;
 structural parameter Real laptop_adapter.magDataMat[4,1] = 0.7174634219299512 /* 0.7174634219299512 */;
 structural parameter Real laptop_adapter.magDataMat[5,1] = 0.568269396387493 /* 0.568269396387493 */;
 structural parameter Real laptop_adapter.magDataMat[6,1] = 0.4142504288040016 /* 0.4142504288040016 */;
 structural parameter Real laptop_adapter.magDataMat[7,1] = 0.2722289795439818 /* 0.2722289795439818 */;
 structural parameter Real laptop_adapter.magDataMat[8,1] = 0.1499700094183941 /* 0.1499700094183941 */;
 structural parameter Real laptop_adapter.magDataMat[9,1] = 0.060532358446546 /* 0.060532358446546 */;
 structural parameter Real laptop_adapter.magDataMat[10,1] = 0.0286742846032879 /* 0.0286742846032879 */;
 structural parameter Real laptop_adapter.magDataMat[11,1] = 0.0500554183998412 /* 0.0500554183998412 */;
 structural parameter Real laptop_adapter.magDataMat[12,1] = 0.0574038038345626 /* 0.0574038038345626 */;
 structural parameter Real laptop_adapter.magDataMat[13,1] = 0.0490634253296239 /* 0.0490634253296239 */;
 structural parameter Real laptop_adapter.magDataMat[14,1] = 0.0324675024798272 /* 0.0324675024798272 */;
 structural parameter Real laptop_adapter.magDataMat[15,1] = 0.0146979293649181 /* 0.0146979293649181 */;
 structural parameter Real laptop_adapter.magDataMat[16,1] = 0.0073091525847841 /* 0.0073091525847841 */;
 structural parameter Real laptop_adapter.magDataMat[17,1] = 0.0133897682494032 /* 0.0133897682494032 */;
 structural parameter Real laptop_adapter.magDataMat[18,1] = 0.0149525422599743 /* 0.0149525422599743 */;
 structural parameter Real laptop_adapter.magDataMat[19,1] = 0.0124074456883277 /* 0.0124074456883277 */;
 structural parameter Real laptop_adapter.magDataMat[20,1] = 0.0064342667493201 /* 0.0064342667493201 */;
 structural parameter Real laptop_adapter.magDataMat[21,1] = 0.0042631791151444 /* 0.0042631791151444 */;
 structural parameter Real laptop_adapter.magDataMat[22,1] = 0.0071677605312837 /* 0.0071677605312837 */;
 structural parameter Real laptop_adapter.magDataMat[23,1] = 0.0091300920177219 /* 0.0091300920177219 */;
 structural parameter Real laptop_adapter.magDataMat[24,1] = 0.0082848764712874 /* 0.0082848764712874 */;
 structural parameter Real laptop_adapter.magDataMat[25,1] = 0.0048054384993071 /* 0.0048054384993071 */;
 structural parameter Real laptop_adapter.magDataMat[26,1] = 0.0012086520647777 /* 0.0012086520647777 */;
 structural parameter Real laptop_adapter.magDataMat[27,1] = 0.0027696713010395 /* 0.0027696713010395 */;
 structural parameter Real laptop_adapter.magDataMat[28,1] = 0.0055623203060336 /* 0.0055623203060336 */;
 structural parameter Real laptop_adapter.magDataMat[29,1] = 0.0055763163700916 /* 0.0055763163700916 */;
 structural parameter Real laptop_adapter.magDataMat[30,1] = 0.0037301558865152 /* 0.0037301558865152 */;
 structural parameter Real laptop_adapter.magDataMat[31,1] = 0.0024556766113934 /* 0.0024556766113934 */;
 structural parameter Real laptop_adapter.magDataMat[32,1] = 0.0012570089195559 /* 0.0012570089195559 */;
 structural parameter Real laptop_adapter.magDataMat[33,1] = 0.003770235713609 /* 0.003770235713609 */;
 structural parameter Real laptop_adapter.magDataMat[34,1] = 0.0039951909704598 /* 0.0039951909704598 */;
 structural parameter Real laptop_adapter.magDataMat[35,1] = 0.003979236913258 /* 0.003979236913258 */;
 structural parameter Real laptop_adapter.magDataMat[36,1] = 0.0028266732141967 /* 0.0028266732141967 */;
 structural parameter Real laptop_adapter.magDataMat[37,1] = 0.001264556073809 /* 0.001264556073809 */;
 structural parameter Real laptop_adapter.magDataMat[38,1] = 0.0014301712599034 /* 0.0014301712599034 */;
 structural parameter Real laptop_adapter.magDataMat[39,1] = 0.0026235911913337 /* 0.0026235911913337 */;
 structural parameter Real laptop_adapter.magDataMat[40,1] = 0.0030745379143357 /* 0.0030745379143357 */;
 structural parameter Real laptop_adapter.magDataMat[41,1] = 0.0026371048002209 /* 0.0026371048002209 */;
 structural parameter Real laptop_adapter.magDataMat[42,1] = 0.0018785812678715 /* 0.0018785812678715 */;
 structural parameter Real laptop_adapter.magDataMat[43,1] = 0.001366164653877 /* 0.001366164653877 */;
 structural parameter Real laptop_adapter.magDataMat[44,1] = 0.0017315154435983 /* 0.0017315154435983 */;
 structural parameter Real laptop_adapter.magDataMat[45,1] = 0.0021186936112594 /* 0.0021186936112594 */;
 structural parameter Real laptop_adapter.magDataMat[46,1] = 0.0020698341543364 /* 0.0020698341543364 */;
 structural parameter Real laptop_adapter.magDataMat[47,1] = 0.0015827909180839 /* 0.0015827909180839 */;
 structural parameter Real laptop_adapter.magDataMat[48,1] = 0.0014207653497698 /* 0.0014207653497698 */;
 structural parameter Real laptop_adapter.magDataMat[49,1] = 0.0011044947826996 /* 0.0011044947826996 */;
 structural parameter Real laptop_adapter.magDataMat[50,1] = 0.0016983251721508 /* 0.0016983251721508 */;
 structural parameter Real laptop_adapter.magDataMat[51,1] = 0.001561470455193 /* 0.001561470455193 */;
 structural parameter Real laptop_adapter.magDataMat[52,1] = 0.0015551892377107 /* 0.0015551892377107 */;
 structural parameter Real laptop_adapter.magDataMat[53,1] = 0.0010806576917404 /* 0.0010806576917404 */;
 structural parameter Real laptop_adapter.magDataMat[54,1] = 0.0010324284223161 /* 0.0010324284223161 */;
 structural parameter Real laptop_adapter.magDataMat[55,1] = 0.0010316250408048 /* 0.0010316250408048 */;
 structural parameter Real laptop_adapter.magDataMat[56,1] = 0.0013704444558566 /* 0.0013704444558566 */;
 structural parameter Real laptop_adapter.magDataMat[57,1] = 0.0012887373861165 /* 0.0012887373861165 */;
 structural parameter Real laptop_adapter.magDataMat[58,1] = 0.001046804766309 /* 0.001046804766309 */;
 structural parameter Real laptop_adapter.magDataMat[59,1] = 8.397154504633E-4 /* 8.397154504633E-4 */;
 structural parameter Real laptop_adapter.magDataMat[60,1] = 8.443247596072E-4 /* 8.443247596072E-4 */;
 structural parameter Real laptop_adapter.magDataMat[61,1] = 0.0010482447031368 /* 0.0010482447031368 */;
 structural parameter Real laptop_adapter.magDataMat[62,1] = 0.0010834317712761 /* 0.0010834317712761 */;
 structural parameter Real laptop_adapter.magDataMat[63,1] = 0.0010717313423612 /* 0.0010717313423612 */;
 structural parameter Real laptop_adapter.magDataMat[64,1] = 7.336011041168E-4 /* 7.336011041168E-4 */;
 structural parameter Real laptop_adapter.argDataMat[1,1] = 0.3127770854783603 /* 0.3127770854783603 */;
 structural parameter Real laptop_adapter.argDataMat[2,1] = 4.011174689529625 /* 4.011174689529625 */;
 structural parameter Real laptop_adapter.argDataMat[3,1] = 1.450168565960499 /* 1.450168565960499 */;
 structural parameter Real laptop_adapter.argDataMat[4,1] = -1.1075502226650735 /* -1.1075502226650735 */;
 structural parameter Real laptop_adapter.argDataMat[5,1] = 2.6203684023114735 /* 2.6203684023114735 */;
 structural parameter Real laptop_adapter.argDataMat[6,1] = 0.0753120963493918 /* 0.0753120963493918 */;
 structural parameter Real laptop_adapter.argDataMat[7,1] = 3.827672644040883 /* 3.827672644040883 */;
 structural parameter Real laptop_adapter.argDataMat[8,1] = 1.3488113399227557 /* 1.3488113399227557 */;
 structural parameter Real laptop_adapter.argDataMat[9,1] = -0.9361140777472652 /* -0.9361140777472652 */;
 structural parameter Real laptop_adapter.argDataMat[10,1] = 4.21514766462882 /* 4.21514766462882 */;
 structural parameter Real laptop_adapter.argDataMat[11,1] = 2.355077880795469 /* 2.355077880795469 */;
 structural parameter Real laptop_adapter.argDataMat[12,1] = -0.0788148364525277 /* -0.0788148364525277 */;
 structural parameter Real laptop_adapter.argDataMat[13,1] = 3.630875802098702 /* 3.630875802098702 */;
 structural parameter Real laptop_adapter.argDataMat[14,1] = 0.9927328953061971 /* 0.9927328953061971 */;
 structural parameter Real laptop_adapter.argDataMat[15,1] = 4.441522037499742 /* 4.441522037499742 */;
 structural parameter Real laptop_adapter.argDataMat[16,1] = 0.3468512749946424 /* 0.3468512749946424 */;
 structural parameter Real laptop_adapter.argDataMat[17,1] = 3.309703112235414 /* 3.309703112235414 */;
 structural parameter Real laptop_adapter.argDataMat[18,1] = 0.507820696333874 /* 0.507820696333874 */;
 structural parameter Real laptop_adapter.argDataMat[19,1] = 4.07225325999216 /* 4.07225325999216 */;
 structural parameter Real laptop_adapter.argDataMat[20,1] = 1.125957866606311 /* 1.125957866606311 */;
 structural parameter Real laptop_adapter.argDataMat[21,1] = 3.387549006743685 /* 3.387549006743685 */;
 structural parameter Real laptop_adapter.argDataMat[22,1] = 0.0888214916736243 /* 0.0888214916736243 */;
 structural parameter Real laptop_adapter.argDataMat[23,1] = 3.5804813791252355 /* 3.5804813791252355 */;
 structural parameter Real laptop_adapter.argDataMat[24,1] = 0.8850851115756876 /* 0.8850851115756876 */;
 structural parameter Real laptop_adapter.argDataMat[25,1] = 4.508705061667298 /* 4.508705061667298 */;
 structural parameter Real laptop_adapter.argDataMat[26,1] = 1.333205530719895 /* 1.333205530719895 */;
 structural parameter Real laptop_adapter.argDataMat[27,1] = 2.838653112336029 /* 2.838653112336029 */;
 structural parameter Real laptop_adapter.argDataMat[28,1] = -0.0432835109945579 /* -0.0432835109945579 */;
 structural parameter Real laptop_adapter.argDataMat[29,1] = 3.5796675079179767 /* 3.5796675079179767 */;
 structural parameter Real laptop_adapter.argDataMat[30,1] = 0.8886624228751261 /* 0.8886624228751261 */;
 structural parameter Real laptop_adapter.argDataMat[31,1] = 4.322397183880533 /* 4.322397183880533 */;
 structural parameter Real laptop_adapter.argDataMat[32,1] = -0.1413429189228533 /* -0.1413429189228533 */;
 structural parameter Real laptop_adapter.argDataMat[33,1] = 2.9447237027794717 /* 2.9447237027794717 */;
 structural parameter Real laptop_adapter.argDataMat[34,1] = 0.1859626520117329 /* 0.1859626520117329 */;
 structural parameter Real laptop_adapter.argDataMat[35,1] = 3.7067555487786406 /* 3.7067555487786406 */;
 structural parameter Real laptop_adapter.argDataMat[36,1] = 1.0115866895784416 /* 1.0115866895784416 */;
 structural parameter Real laptop_adapter.argDataMat[37,1] = 4.0692014348202035 /* 4.0692014348202035 */;
 structural parameter Real laptop_adapter.argDataMat[38,1] = -0.0024077524125743 /* -0.0024077524125743 */;
 structural parameter Real laptop_adapter.argDataMat[39,1] = 3.0652063567780674 /* 3.0652063567780674 */;
 structural parameter Real laptop_adapter.argDataMat[40,1] = 0.2653273947161821 /* 0.2653273947161821 */;
 structural parameter Real laptop_adapter.argDataMat[41,1] = 3.7889601388042937 /* 3.7889601388042937 */;
 structural parameter Real laptop_adapter.argDataMat[42,1] = 0.8887383696249729 /* 0.8887383696249729 */;
 structural parameter Real laptop_adapter.argDataMat[43,1] = 3.773875593167732 /* 3.773875593167732 */;
 structural parameter Real laptop_adapter.argDataMat[44,1] = 0.2280500334845815 /* 0.2280500334845815 */;
 structural parameter Real laptop_adapter.argDataMat[45,1] = 3.3217592983561017 /* 3.3217592983561017 */;
 structural parameter Real laptop_adapter.argDataMat[46,1] = 0.520752728593681 /* 0.520752728593681 */;
 structural parameter Real laptop_adapter.argDataMat[47,1] = 3.9273528368650745 /* 3.9273528368650745 */;
 structural parameter Real laptop_adapter.argDataMat[48,1] = 0.8614853143189236 /* 0.8614853143189236 */;
 structural parameter Real laptop_adapter.argDataMat[49,1] = 3.5850098696099186 /* 3.5850098696099186 */;
 structural parameter Real laptop_adapter.argDataMat[50,1] = 0.2783322398316583 /* 0.2783322398316583 */;
 structural parameter Real laptop_adapter.argDataMat[51,1] = 3.4761184892641808 /* 3.4761184892641808 */;
 structural parameter Real laptop_adapter.argDataMat[52,1] = 0.5249082917156735 /* 0.5249082917156735 */;
 structural parameter Real laptop_adapter.argDataMat[53,1] = 4.1162792410645075 /* 4.1162792410645075 */;
 structural parameter Real laptop_adapter.argDataMat[54,1] = 0.5750851928849768 /* 0.5750851928849768 */;
 structural parameter Real laptop_adapter.argDataMat[55,1] = 3.6130535171919336 /* 3.6130535171919336 */;
 structural parameter Real laptop_adapter.argDataMat[56,1] = 0.2438187166602324 /* 0.2438187166602324 */;
 structural parameter Real laptop_adapter.argDataMat[57,1] = 3.591573823283689 /* 3.591573823283689 */;
 structural parameter Real laptop_adapter.argDataMat[58,1] = 0.3884444678214555 /* 0.3884444678214555 */;
 structural parameter Real laptop_adapter.argDataMat[59,1] = 3.8049056626874496 /* 3.8049056626874496 */;
 structural parameter Real laptop_adapter.argDataMat[60,1] = 0.4536424332042123 /* 0.4536424332042123 */;
 structural parameter Real laptop_adapter.argDataMat[61,1] = 3.589644373975073 /* 3.589644373975073 */;
 structural parameter Real laptop_adapter.argDataMat[62,1] = 0.2244991938468375 /* 0.2244991938468375 */;
 structural parameter Real laptop_adapter.argDataMat[63,1] = 3.37684736761545 /* 3.37684736761545 */;
 structural parameter Real laptop_adapter.argDataMat[64,1] = 0.2594769189504608 /* 0.2594769189504608 */;
 parameter Real temp_118[7,1];
 parameter Real temp_118[8,1];
 parameter Real temp_118[9,1];
 constant Real laptop_adapter.argS = -0.3127770854783603 "Phase angle for fundamental apparent power";
 Real laptop_adapter.magScale;
 Real laptop_adapter.argAdj[1];
 Real laptop_adapter.argAdj[2];
 Real laptop_adapter.argAdj[3];
 Real laptop_adapter.argAdj[4];
 Real laptop_adapter.argAdj[5];
 Real laptop_adapter.argAdj[6];
 Real laptop_adapter.argAdj[7];
 Real laptop_adapter.argAdj[8];
 Real laptop_adapter.argAdj[9];
 Real laptop_adapter.argAdj[10];
 Real laptop_adapter.argAdj[11];
 Real laptop_adapter.argAdj[12];
 Real laptop_adapter.a[1].re "Real part of complex number";
 Real laptop_adapter.a[1].im "Imaginary part of complex number";
 Real laptop_adapter.a[2].re "Real part of complex number";
 Real laptop_adapter.a[2].im "Imaginary part of complex number";
 Real laptop_adapter.a[3].re "Real part of complex number";
 Real laptop_adapter.a[3].im "Imaginary part of complex number";
 Real laptop_adapter.a[4].re "Real part of complex number";
 Real laptop_adapter.a[4].im "Imaginary part of complex number";
 Real laptop_adapter.a[5].re "Real part of complex number";
 Real laptop_adapter.a[5].im "Imaginary part of complex number";
 Real laptop_adapter.a[6].re "Real part of complex number";
 Real laptop_adapter.a[6].im "Imaginary part of complex number";
 Real laptop_adapter.a[7].re "Real part of complex number";
 Real laptop_adapter.a[7].im "Imaginary part of complex number";
 Real laptop_adapter.a[8].re "Real part of complex number";
 Real laptop_adapter.a[8].im "Imaginary part of complex number";
 Real laptop_adapter.a[9].re "Real part of complex number";
 Real laptop_adapter.a[9].im "Imaginary part of complex number";
 Real laptop_adapter.a[10].re "Real part of complex number";
 Real laptop_adapter.a[10].im "Imaginary part of complex number";
 Real laptop_adapter.a[11].re "Real part of complex number";
 Real laptop_adapter.a[11].im "Imaginary part of complex number";
 Real laptop_adapter.a[12].re "Real part of complex number";
 Real laptop_adapter.a[12].im "Imaginary part of complex number";
 Real laptop_adapter.c[1];
 Real laptop_adapter.c[2];
 Real laptop_adapter.c[3];
 Real laptop_adapter.c[4];
 Real laptop_adapter.c[5];
 Real laptop_adapter.c[6];
 Real laptop_adapter.c[7];
 Real laptop_adapter.c[8];
 Real laptop_adapter.c[9];
 Real laptop_adapter.c[10];
 Real laptop_adapter.c[11];
 Real laptop_adapter.c[12];
 constant String laptop.properties.ComponentType = "DC_Load" "Type of the component";
 parameter Modelica.SIunits.Power laptop.pwr(start = 1) = 10 "Power (watts)" /* 10 */;
 parameter Real temp_118[10,1];
 constant String z.properties.ComponentType = "Impedance" "Type of the component";
 parameter Real z.z.re(start = 1) = 0.1 "Real part of complex number" /* 0.1 */;
 parameter Real z.z.im(start = 0) = 5.0 "Imaginary part of complex number" /* 5.0 */;
 Real z.vFundAbs;
 Real z.vFundArg;
 Real z.iFundAbs;
 Real z.iFundArg;
 Real z.v[1].re(start = 100) "Real part of complex number";
 Real z.v[1].im(start = 100) "Imaginary part of complex number";
 Real z.v[2].re(start = 100) "Real part of complex number";
 Real z.v[2].im(start = 100) "Imaginary part of complex number";
 Real z.v[3].re(start = 100) "Real part of complex number";
 Real z.v[3].im(start = 100) "Imaginary part of complex number";
 Real z.v[4].re(start = 100) "Real part of complex number";
 Real z.v[4].im(start = 100) "Imaginary part of complex number";
 Real z.v[5].re(start = 100) "Real part of complex number";
 Real z.v[5].im(start = 100) "Imaginary part of complex number";
 Real z.v[6].re(start = 100) "Real part of complex number";
 Real z.v[6].im(start = 100) "Imaginary part of complex number";
 Real z.v[7].re(start = 100) "Real part of complex number";
 Real z.v[7].im(start = 100) "Imaginary part of complex number";
 Real z.v[8].re(start = 100) "Real part of complex number";
 Real z.v[8].im(start = 100) "Imaginary part of complex number";
 Real z.v[9].re(start = 100) "Real part of complex number";
 Real z.v[9].im(start = 100) "Imaginary part of complex number";
 Real z.v[10].re(start = 100) "Real part of complex number";
 Real z.v[10].im(start = 100) "Imaginary part of complex number";
 Real z.v[11].re(start = 100) "Real part of complex number";
 Real z.v[11].im(start = 100) "Imaginary part of complex number";
 Real z.v[12].re(start = 100) "Real part of complex number";
 Real z.v[12].im(start = 100) "Imaginary part of complex number";
 Real z.v[13].re(start = 100) "Real part of complex number";
 Real z.v[13].im(start = 100) "Imaginary part of complex number";
 Real z.omega;
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[1](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[2](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[3](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[4](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[5](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[6](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[7](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[8](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[9](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[10](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[11](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[12](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[13](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[1](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[2](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[3](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[4](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[5](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[6](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[7](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[8](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[9](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[10](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[11](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[12](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[13](unit = "rad");
 Real currentSensor.i[1].re(start = -1) "Real part of complex number";
 Real currentSensor.i[1].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[2].re(start = -1) "Real part of complex number";
 Real currentSensor.i[2].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[3].re(start = -1) "Real part of complex number";
 Real currentSensor.i[3].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[4].re(start = -1) "Real part of complex number";
 Real currentSensor.i[4].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[5].re(start = -1) "Real part of complex number";
 Real currentSensor.i[5].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[6].re(start = -1) "Real part of complex number";
 Real currentSensor.i[6].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[7].re(start = -1) "Real part of complex number";
 Real currentSensor.i[7].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[8].re(start = -1) "Real part of complex number";
 Real currentSensor.i[8].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[9].re(start = -1) "Real part of complex number";
 Real currentSensor.i[9].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[10].re(start = -1) "Real part of complex number";
 Real currentSensor.i[10].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[11].re(start = -1) "Real part of complex number";
 Real currentSensor.i[11].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[12].re(start = -1) "Real part of complex number";
 Real currentSensor.i[12].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[13].re(start = -1) "Real part of complex number";
 Real currentSensor.i[13].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.omega;
 parameter Real z1.z.re(start = 1) = 20.0 "Real part of complex number" /* 20.0 */;
 parameter Real z1.z.im(start = 0) = 60.0 "Imaginary part of complex number" /* 60.0 */;
 Real z1.vFundAbs;
 Real z1.iFundAbs;
 Real z1.iFundArg;
 Real z1.v[1].re(start = 100) "Real part of complex number";
 Real z1.i[1].re(start = -1) "Real part of complex number";
 Real z1.i[1].im(start = 1) "Imaginary part of complex number";
 Real z1.i[2].re(start = -1) "Real part of complex number";
 Real z1.i[2].im(start = 1) "Imaginary part of complex number";
 Real z1.i[3].re(start = -1) "Real part of complex number";
 Real z1.i[3].im(start = 1) "Imaginary part of complex number";
 Real z1.i[4].re(start = -1) "Real part of complex number";
 Real z1.i[4].im(start = 1) "Imaginary part of complex number";
 Real z1.i[5].re(start = -1) "Real part of complex number";
 Real z1.i[5].im(start = 1) "Imaginary part of complex number";
 Real z1.i[6].re(start = -1) "Real part of complex number";
 Real z1.i[6].im(start = 1) "Imaginary part of complex number";
 Real z1.i[7].re(start = -1) "Real part of complex number";
 Real z1.i[7].im(start = 1) "Imaginary part of complex number";
 Real z1.i[8].re(start = -1) "Real part of complex number";
 Real z1.i[8].im(start = 1) "Imaginary part of complex number";
 Real z1.i[9].re(start = -1) "Real part of complex number";
 Real z1.i[9].im(start = 1) "Imaginary part of complex number";
 Real z1.i[10].re(start = -1) "Real part of complex number";
 Real z1.i[10].im(start = 1) "Imaginary part of complex number";
 Real z1.i[11].re(start = -1) "Real part of complex number";
 Real z1.i[11].im(start = 1) "Imaginary part of complex number";
 Real z1.i[12].re(start = -1) "Real part of complex number";
 Real z1.i[12].im(start = 1) "Imaginary part of complex number";
 Real z1.i[13].re(start = -1) "Real part of complex number";
 Real z1.i[13].im(start = 1) "Imaginary part of complex number";
 Real z1.omega;
 parameter Real temp_118[11,1];
 parameter Real temp_118[12,1];
 parameter Real temp_118[13,1];
 parameter Real temp_118[14,1];
 parameter Real temp_118[15,1];
 parameter Real temp_118[16,1];
 parameter Real temp_118[17,1];
 parameter Real temp_118[18,1];
 parameter Real temp_118[19,1];
 parameter Real temp_118[20,1];
 parameter Real temp_118[21,1];
 parameter Real temp_118[22,1];
 parameter Real temp_118[23,1];
 parameter Real temp_118[24,1];
 parameter Real temp_118[25,1];
 parameter Real temp_118[26,1];
 parameter Real temp_118[27,1];
 parameter Real temp_118[28,1];
 parameter Real temp_118[29,1];
 parameter Real temp_118[30,1];
 parameter Real temp_118[31,1];
 parameter Real temp_118[32,1];
 parameter Real temp_118[33,1];
 parameter Real temp_118[34,1];
 parameter Real temp_118[35,1];
 parameter Real temp_118[36,1];
 parameter Real temp_118[37,1];
 parameter Real temp_118[38,1];
 parameter Real temp_118[39,1];
 parameter Real temp_118[40,1];
 parameter Real temp_118[41,1];
 parameter Real temp_118[42,1];
 parameter Real temp_118[43,1];
 parameter Real temp_118[44,1];
 parameter Real temp_118[45,1];
 parameter Real temp_118[46,1];
 parameter Real temp_118[47,1];
 parameter Real temp_118[48,1];
 parameter Real temp_118[49,1];
 parameter Real temp_118[50,1];
 parameter Real temp_118[51,1];
 parameter Real temp_118[52,1];
 parameter Real temp_118[53,1];
 parameter Real temp_118[54,1];
 parameter Real temp_118[55,1];
 parameter Real temp_118[56,1];
 parameter Real temp_118[57,1];
 parameter Real temp_118[58,1];
 parameter Real temp_118[59,1];
 parameter Real temp_118[60,1];
 parameter Real temp_118[61,1];
 parameter Real temp_118[62,1];
 parameter Real temp_118[63,1];
 parameter Real temp_118[64,1];
 parameter Real temp_119[1,1];
 parameter Real temp_119[2,1];
 parameter Real temp_119[3,1];
 parameter Real temp_119[4,1];
 parameter Real temp_119[5,1];
 parameter Real temp_119[6,1];
 parameter Real temp_119[7,1];
 parameter Real temp_119[8,1];
 parameter Real temp_119[9,1];
 parameter Real temp_119[10,1];
 parameter Real temp_119[11,1];
 parameter Real temp_119[12,1];
 parameter Real temp_119[13,1];
 parameter Real temp_119[14,1];
 parameter Real temp_119[15,1];
 parameter Real temp_119[16,1];
 parameter Real temp_119[17,1];
 parameter Real temp_119[18,1];
 parameter Real temp_119[19,1];
 parameter Real temp_119[20,1];
 parameter Real temp_119[21,1];
 parameter Real temp_119[22,1];
 parameter Real temp_119[23,1];
 parameter Real temp_119[24,1];
 parameter Real temp_119[25,1];
 parameter Real temp_119[26,1];
 parameter Real temp_119[27,1];
 parameter Real temp_119[28,1];
 parameter Real temp_119[29,1];
 parameter Real temp_119[30,1];
 parameter Real temp_119[31,1];
 parameter Real temp_119[32,1];
 parameter Real temp_119[33,1];
 parameter Real temp_119[34,1];
 parameter Real temp_119[35,1];
 parameter Real temp_119[36,1];
 parameter Real temp_119[37,1];
 parameter Real temp_119[38,1];
 parameter Real temp_119[39,1];
 parameter Real temp_119[40,1];
 parameter Real temp_119[41,1];
 parameter Real temp_119[42,1];
 parameter Real temp_119[43,1];
 parameter Real temp_119[44,1];
 parameter Real temp_119[45,1];
 parameter Real temp_119[46,1];
 parameter Real temp_119[47,1];
 parameter Real temp_119[48,1];
 parameter Real temp_119[49,1];
 parameter Real temp_119[50,1];
 parameter Real temp_119[51,1];
 parameter Real temp_119[52,1];
 parameter Real temp_119[53,1];
 parameter Real temp_119[54,1];
 parameter Real temp_119[55,1];
 parameter Real temp_119[56,1];
 parameter Real temp_119[57,1];
 parameter Real temp_119[58,1];
 parameter Real temp_119[59,1];
 parameter Real temp_119[60,1];
 parameter Real temp_119[61,1];
 parameter Real temp_119[62,1];
 parameter Real temp_119[63,1];
 parameter Real temp_119[64,1];
 parameter Integer systemDef.N "Size of FFT";
 parameter Modelica.SIunits.ElectricPotential laptop_adapter.vDC.V(start = 1) "Value of constant voltage";
 parameter Real laptop_adapter.alpha[1,1];
 parameter Real laptop_adapter.beta[1,1];
 parameter Real laptop_adapter.gamma[1,1];
 parameter Modelica.SIunits.ElectricCurrent laptop.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent ground2.p.i "Current flowing into the pin";
 parameter Real laptop_adapter.P_DC;
 parameter Real laptop_adapter.P;
 parameter Real laptop_adapter.S(start = 1) "Apparent power at fundamental";
 parameter Modelica.Blocks.Interfaces.RealOutput laptop_adapter.PLoss;
 parameter Real laptop_adapter.Q(start = 1) "Imaginary power at fundamental";
initial equation
 algorithm
;
parameter equation
 ({temp_117[1], temp_117[2]}) = Modelica.Utilities.Streams.readMatrixSize("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "mag");
 ({{temp_118[1,1]}, {temp_118[2,1]}, {temp_118[3,1]}, {temp_118[4,1]}, {temp_118[5,1]}, {temp_118[6,1]}, {temp_118[7,1]}, {temp_118[8,1]}, {temp_118[9,1]}, {temp_118[10,1]}, {temp_118[11,1]}, {temp_118[12,1]}, {temp_118[13,1]}, {temp_118[14,1]}, {temp_118[15,1]}, {temp_118[16,1]}, {temp_118[17,1]}, {temp_118[18,1]}, {temp_118[19,1]}, {temp_118[20,1]}, {temp_118[21,1]}, {temp_118[22,1]}, {temp_118[23,1]}, {temp_118[24,1]}, {temp_118[25,1]}, {temp_118[26,1]}, {temp_118[27,1]}, {temp_118[28,1]}, {temp_118[29,1]}, {temp_118[30,1]}, {temp_118[31,1]}, {temp_118[32,1]}, {temp_118[33,1]}, {temp_118[34,1]}, {temp_118[35,1]}, {temp_118[36,1]}, {temp_118[37,1]}, {temp_118[38,1]}, {temp_118[39,1]}, {temp_118[40,1]}, {temp_118[41,1]}, {temp_118[42,1]}, {temp_118[43,1]}, {temp_118[44,1]}, {temp_118[45,1]}, {temp_118[46,1]}, {temp_118[47,1]}, {temp_118[48,1]}, {temp_118[49,1]}, {temp_118[50,1]}, {temp_118[51,1]}, {temp_118[52,1]}, {temp_118[53,1]}, {temp_118[54,1]}, {temp_118[55,1]}, {temp_118[56,1]}, {temp_118[57,1]}, {temp_118[58,1]}, {temp_118[59,1]}, {temp_118[60,1]}, {temp_118[61,1]}, {temp_118[62,1]}, {temp_118[63,1]}, {temp_118[64,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "mag", 64, 1, true);
 ({{temp_119[1,1]}, {temp_119[2,1]}, {temp_119[3,1]}, {temp_119[4,1]}, {temp_119[5,1]}, {temp_119[6,1]}, {temp_119[7,1]}, {temp_119[8,1]}, {temp_119[9,1]}, {temp_119[10,1]}, {temp_119[11,1]}, {temp_119[12,1]}, {temp_119[13,1]}, {temp_119[14,1]}, {temp_119[15,1]}, {temp_119[16,1]}, {temp_119[17,1]}, {temp_119[18,1]}, {temp_119[19,1]}, {temp_119[20,1]}, {temp_119[21,1]}, {temp_119[22,1]}, {temp_119[23,1]}, {temp_119[24,1]}, {temp_119[25,1]}, {temp_119[26,1]}, {temp_119[27,1]}, {temp_119[28,1]}, {temp_119[29,1]}, {temp_119[30,1]}, {temp_119[31,1]}, {temp_119[32,1]}, {temp_119[33,1]}, {temp_119[34,1]}, {temp_119[35,1]}, {temp_119[36,1]}, {temp_119[37,1]}, {temp_119[38,1]}, {temp_119[39,1]}, {temp_119[40,1]}, {temp_119[41,1]}, {temp_119[42,1]}, {temp_119[43,1]}, {temp_119[44,1]}, {temp_119[45,1]}, {temp_119[46,1]}, {temp_119[47,1]}, {temp_119[48,1]}, {temp_119[49,1]}, {temp_119[50,1]}, {temp_119[51,1]}, {temp_119[52,1]}, {temp_119[53,1]}, {temp_119[54,1]}, {temp_119[55,1]}, {temp_119[56,1]}, {temp_119[57,1]}, {temp_119[58,1]}, {temp_119[59,1]}, {temp_119[60,1]}, {temp_119[61,1]}, {temp_119[62,1]}, {temp_119[63,1]}, {temp_119[64,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "arg", 64, 1, true);
 systemDef.N = integer(floor(systemDef.fs / systemDef.fFund));
 laptop_adapter.vDC.V = laptop_adapter.V_Rect;
 ({{laptop_adapter.alpha[1,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "alpha", 1, 1, true);
 ({{laptop_adapter.beta[1,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "beta", 1, 1, true);
 ({{laptop_adapter.gamma[1,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "gamma", 1, 1, true);
 assert(64 == temp_117[1], "Error Error at line 49, column 39, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readMatrixSize' did not evaluate to same result as during compilation");
 assert(1 == temp_117[2], "Error Error at line 49, column 39, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readMatrixSize' did not evaluate to same result as during compilation");
 assert(1.0 == temp_118[1,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.9421865565594479 == temp_118[2,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.846418595204449 == temp_118[3,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.7174634219299512 == temp_118[4,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.568269396387493 == temp_118[5,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.4142504288040016 == temp_118[6,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2722289795439818 == temp_118[7,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.1499700094183941 == temp_118[8,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.060532358446546 == temp_118[9,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0286742846032879 == temp_118[10,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0500554183998412 == temp_118[11,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0574038038345626 == temp_118[12,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0490634253296239 == temp_118[13,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0324675024798272 == temp_118[14,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0146979293649181 == temp_118[15,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0073091525847841 == temp_118[16,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0133897682494032 == temp_118[17,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0149525422599743 == temp_118[18,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0124074456883277 == temp_118[19,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0064342667493201 == temp_118[20,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0042631791151444 == temp_118[21,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0071677605312837 == temp_118[22,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0091300920177219 == temp_118[23,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0082848764712874 == temp_118[24,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0048054384993071 == temp_118[25,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0012086520647777 == temp_118[26,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0027696713010395 == temp_118[27,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0055623203060336 == temp_118[28,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0055763163700916 == temp_118[29,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0037301558865152 == temp_118[30,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0024556766113934 == temp_118[31,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0012570089195559 == temp_118[32,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.003770235713609 == temp_118[33,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0039951909704598 == temp_118[34,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.003979236913258 == temp_118[35,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0028266732141967 == temp_118[36,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001264556073809 == temp_118[37,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0014301712599034 == temp_118[38,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0026235911913337 == temp_118[39,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0030745379143357 == temp_118[40,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0026371048002209 == temp_118[41,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0018785812678715 == temp_118[42,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001366164653877 == temp_118[43,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0017315154435983 == temp_118[44,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0021186936112594 == temp_118[45,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0020698341543364 == temp_118[46,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0015827909180839 == temp_118[47,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0014207653497698 == temp_118[48,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0011044947826996 == temp_118[49,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0016983251721508 == temp_118[50,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001561470455193 == temp_118[51,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0015551892377107 == temp_118[52,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010806576917404 == temp_118[53,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010324284223161 == temp_118[54,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010316250408048 == temp_118[55,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0013704444558566 == temp_118[56,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0012887373861165 == temp_118[57,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001046804766309 == temp_118[58,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(8.397154504633E-4 == temp_118[59,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(8.443247596072E-4 == temp_118[60,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010482447031368 == temp_118[61,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010834317712761 == temp_118[62,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010717313423612 == temp_118[63,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(7.336011041168E-4 == temp_118[64,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.3127770854783603 == temp_119[1,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.011174689529625 == temp_119[2,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.450168565960499 == temp_119[3,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-1.1075502226650735 == temp_119[4,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.6203684023114735 == temp_119[5,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0753120963493918 == temp_119[6,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.827672644040883 == temp_119[7,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.3488113399227557 == temp_119[8,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.9361140777472652 == temp_119[9,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.21514766462882 == temp_119[10,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.355077880795469 == temp_119[11,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.0788148364525277 == temp_119[12,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.630875802098702 == temp_119[13,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.9927328953061971 == temp_119[14,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.441522037499742 == temp_119[15,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.3468512749946424 == temp_119[16,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.309703112235414 == temp_119[17,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.507820696333874 == temp_119[18,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.07225325999216 == temp_119[19,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.125957866606311 == temp_119[20,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.387549006743685 == temp_119[21,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0888214916736243 == temp_119[22,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.5804813791252355 == temp_119[23,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8850851115756876 == temp_119[24,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.508705061667298 == temp_119[25,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.333205530719895 == temp_119[26,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.838653112336029 == temp_119[27,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.0432835109945579 == temp_119[28,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.5796675079179767 == temp_119[29,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8886624228751261 == temp_119[30,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.322397183880533 == temp_119[31,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.1413429189228533 == temp_119[32,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.9447237027794717 == temp_119[33,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.1859626520117329 == temp_119[34,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.7067555487786406 == temp_119[35,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.0115866895784416 == temp_119[36,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.0692014348202035 == temp_119[37,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.0024077524125743 == temp_119[38,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.0652063567780674 == temp_119[39,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2653273947161821 == temp_119[40,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.7889601388042937 == temp_119[41,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8887383696249729 == temp_119[42,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.773875593167732 == temp_119[43,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2280500334845815 == temp_119[44,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.3217592983561017 == temp_119[45,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.520752728593681 == temp_119[46,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.9273528368650745 == temp_119[47,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8614853143189236 == temp_119[48,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.5850098696099186 == temp_119[49,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2783322398316583 == temp_119[50,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.4761184892641808 == temp_119[51,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.5249082917156735 == temp_119[52,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.1162792410645075 == temp_119[53,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.5750851928849768 == temp_119[54,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.6130535171919336 == temp_119[55,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2438187166602324 == temp_119[56,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.591573823283689 == temp_119[57,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.3884444678214555 == temp_119[58,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.8049056626874496 == temp_119[59,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.4536424332042123 == temp_119[60,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.589644373975073 == temp_119[61,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2244991938468375 == temp_119[62,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.37684736761545 == temp_119[63,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2594769189504608 == temp_119[64,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 laptop.i = laptop.pwr / laptop_adapter.vDC.V;
 ground2.p.i = laptop.i + (- laptop.i);
 laptop_adapter.P_DC = abs(laptop_adapter.vDC.V * (- laptop.i));
 laptop_adapter.P = laptop_adapter.P_DC + laptop_adapter.alpha[1,1] + (laptop_adapter.beta[1,1] * laptop_adapter.P_DC + laptop_adapter.gamma[1,1] * laptop_adapter.P_DC ^ 2);
 laptop_adapter.S = (- laptop_adapter.P) / -0.9514827247724208;
 laptop_adapter.PLoss = laptop_adapter.P + (- laptop_adapter.P_DC);
 laptop_adapter.Q = laptop_adapter.S * -0.3077021684350789;
algorithm
equation
 der(v.theta) = 6.283185307179586 * systemDef.fFund;
 v.omega = der(v.theta);
 currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2);
 currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2);
 currentSensor.i[2].re = laptop_adapter.c[1] * laptop_adapter.a[1].re;
 currentSensor.i[2].im = laptop_adapter.c[1] * laptop_adapter.a[1].im;
 currentSensor.i[3].re = laptop_adapter.c[2] * laptop_adapter.a[2].re;
 currentSensor.i[3].im = laptop_adapter.c[2] * laptop_adapter.a[2].im;
 currentSensor.i[4].re = laptop_adapter.c[3] * laptop_adapter.a[3].re;
 currentSensor.i[4].im = laptop_adapter.c[3] * laptop_adapter.a[3].im;
 currentSensor.i[5].re = laptop_adapter.c[4] * laptop_adapter.a[4].re;
 currentSensor.i[5].im = laptop_adapter.c[4] * laptop_adapter.a[4].im;
 currentSensor.i[6].re = laptop_adapter.c[5] * laptop_adapter.a[5].re;
 currentSensor.i[6].im = laptop_adapter.c[5] * laptop_adapter.a[5].im;
 currentSensor.i[7].re = laptop_adapter.c[6] * laptop_adapter.a[6].re;
 currentSensor.i[7].im = laptop_adapter.c[6] * laptop_adapter.a[6].im;
 currentSensor.i[8].re = laptop_adapter.c[7] * laptop_adapter.a[7].re;
 currentSensor.i[8].im = laptop_adapter.c[7] * laptop_adapter.a[7].im;
 currentSensor.i[9].re = laptop_adapter.c[8] * laptop_adapter.a[8].re;
 currentSensor.i[9].im = laptop_adapter.c[8] * laptop_adapter.a[8].im;
 currentSensor.i[10].re = laptop_adapter.c[9] * laptop_adapter.a[9].re;
 currentSensor.i[10].im = laptop_adapter.c[9] * laptop_adapter.a[9].im;
 currentSensor.i[11].re = laptop_adapter.c[10] * laptop_adapter.a[10].re;
 currentSensor.i[11].im = laptop_adapter.c[10] * laptop_adapter.a[10].im;
 currentSensor.i[12].re = laptop_adapter.c[11] * laptop_adapter.a[11].re;
 currentSensor.i[12].im = laptop_adapter.c[11] * laptop_adapter.a[11].im;
 currentSensor.i[13].re = laptop_adapter.c[12] * laptop_adapter.a[12].re;
 currentSensor.i[13].im = laptop_adapter.c[12] * laptop_adapter.a[12].im;
algorithm
equation
 laptop_adapter.loadBase.omega = der(v.theta);
 z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im);
 z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im);
 z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im);
 z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im);
 z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im);
 z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im);
 z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im);
 z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im);
 z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im);
 z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im);
 z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im);
 z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im);
 z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im);
 z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re);
 z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re);
 z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re);
 z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re);
 z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re);
 z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re);
 z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re);
 z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re);
 z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re);
 z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re);
 z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re);
 z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re);
 z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re);
 z.omega = der(v.theta);
 z.v[1].re = 120.0 - z1.v[1].re;
 currentSensor.iMag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5;
 currentSensor.iMag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5;
 currentSensor.iMag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5;
 currentSensor.iMag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5;
 currentSensor.iMag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5;
 currentSensor.iMag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5;
 currentSensor.iMag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5;
 currentSensor.iMag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5;
 currentSensor.iMag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5;
 currentSensor.iMag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5;
 currentSensor.iMag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5;
 currentSensor.iMag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5;
 currentSensor.iMag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5;
 currentSensor.omega = der(v.theta);
 z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im;
 - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im;
 - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im;
 - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im;
 - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im;
 - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im;
 - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im;
 - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im;
 - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im;
 - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im;
 - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im;
 - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im;
 - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im;
 - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re;
 - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re;
 - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re;
 - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re;
 - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re;
 - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re;
 - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re;
 - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re;
 - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re;
 - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re;
 - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re;
 - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re;
 - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re;
 z1.omega = der(v.theta);
 currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0;
 currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0;
 currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0;
 currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0;
 currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0;
 currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0;
 currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0;
 currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0;
 currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0;
 currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0;
 currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0;
 currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0;
 currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0;
 currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0;
 currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0;
 currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0;
 currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0;
 currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0;
 currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0;
 currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0;
 currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0;
 currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0;
 currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0;
 currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0;
 currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0;
 currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0;
 v.P1 = 120.0 * v.i[1].re;
 v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5;
 v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5;
 v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5;
 v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5;
 v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5;
 v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5;
 v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5;
 v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5;
 v.iMag[9] = (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5;
 v.iMag[10] = (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5;
 v.iMag[11] = (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5;
 v.iMag[12] = (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5;
 v.iMag[13] = (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5;
 v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0);
 v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0);
 v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0);
 v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0);
 v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0);
 v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0);
 v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0);
 v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0);
 v.iArg[9] = Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0);
 v.iArg[10] = Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0);
 v.iArg[11] = Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0);
 v.iArg[12] = Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0);
 v.iArg[13] = Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0);
 laptop_adapter.I_mag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5;
 laptop_adapter.V_mag[1] = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[2] = ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[3] = ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[4] = ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[5] = ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[6] = ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[7] = ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[8] = ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[9] = ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[10] = ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[11] = ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[12] = ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[13] = ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5;
 laptop_adapter.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0);
 laptop_adapter.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0);
 laptop_adapter.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0);
 laptop_adapter.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0);
 laptop_adapter.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0);
 laptop_adapter.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0);
 laptop_adapter.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0);
 laptop_adapter.V_arg[9] = Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0);
 laptop_adapter.V_arg[10] = Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0);
 laptop_adapter.V_arg[11] = Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0);
 laptop_adapter.V_arg[12] = Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0);
 laptop_adapter.V_arg[13] = Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0);
 laptop_adapter.magScale = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5;
 laptop_adapter.argAdj[1] = 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2];
 laptop_adapter.argAdj[2] = 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3];
 laptop_adapter.argAdj[3] = -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4];
 laptop_adapter.argAdj[4] = 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5];
 laptop_adapter.argAdj[5] = 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6];
 laptop_adapter.argAdj[6] = 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7];
 laptop_adapter.argAdj[7] = 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8];
 laptop_adapter.argAdj[8] = -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9];
 laptop_adapter.argAdj[9] = 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10];
 laptop_adapter.argAdj[10] = 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11];
 laptop_adapter.argAdj[11] = -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12];
 laptop_adapter.argAdj[12] = 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13];
 laptop_adapter.a[1].re = cos(laptop_adapter.argAdj[1]);
 laptop_adapter.a[1].im = sin(laptop_adapter.argAdj[1]);
 laptop_adapter.a[2].re = cos(laptop_adapter.argAdj[2]);
 laptop_adapter.a[2].im = sin(laptop_adapter.argAdj[2]);
 laptop_adapter.a[3].re = cos(laptop_adapter.argAdj[3]);
 laptop_adapter.a[3].im = sin(laptop_adapter.argAdj[3]);
 laptop_adapter.a[4].re = cos(laptop_adapter.argAdj[4]);
 laptop_adapter.a[4].im = sin(laptop_adapter.argAdj[4]);
 laptop_adapter.a[5].re = cos(laptop_adapter.argAdj[5]);
 laptop_adapter.a[5].im = sin(laptop_adapter.argAdj[5]);
 laptop_adapter.a[6].re = cos(laptop_adapter.argAdj[6]);
 laptop_adapter.a[6].im = sin(laptop_adapter.argAdj[6]);
 laptop_adapter.a[7].re = cos(laptop_adapter.argAdj[7]);
 laptop_adapter.a[7].im = sin(laptop_adapter.argAdj[7]);
 laptop_adapter.a[8].re = cos(laptop_adapter.argAdj[8]);
 laptop_adapter.a[8].im = sin(laptop_adapter.argAdj[8]);
 laptop_adapter.a[9].re = cos(laptop_adapter.argAdj[9]);
 laptop_adapter.a[9].im = sin(laptop_adapter.argAdj[9]);
 laptop_adapter.a[10].re = cos(laptop_adapter.argAdj[10]);
 laptop_adapter.a[10].im = sin(laptop_adapter.argAdj[10]);
 laptop_adapter.a[11].re = cos(laptop_adapter.argAdj[11]);
 laptop_adapter.a[11].im = sin(laptop_adapter.argAdj[11]);
 laptop_adapter.a[12].re = cos(laptop_adapter.argAdj[12]);
 laptop_adapter.a[12].im = sin(laptop_adapter.argAdj[12]);
 laptop_adapter.c[1] = laptop_adapter.magScale * 0.9421865565594479;
 laptop_adapter.c[2] = laptop_adapter.magScale * 0.846418595204449;
 laptop_adapter.c[3] = laptop_adapter.magScale * 0.7174634219299512;
 laptop_adapter.c[4] = laptop_adapter.magScale * 0.568269396387493;
 laptop_adapter.c[5] = laptop_adapter.magScale * 0.4142504288040016;
 laptop_adapter.c[6] = laptop_adapter.magScale * 0.2722289795439818;
 laptop_adapter.c[7] = laptop_adapter.magScale * 0.1499700094183941;
 laptop_adapter.c[8] = laptop_adapter.magScale * 0.060532358446546;
 laptop_adapter.c[9] = laptop_adapter.magScale * 0.0286742846032879;
 laptop_adapter.c[10] = laptop_adapter.magScale * 0.0500554183998412;
 laptop_adapter.c[11] = laptop_adapter.magScale * 0.0574038038345626;
 laptop_adapter.c[12] = laptop_adapter.magScale * 0.0490634253296239;
 z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5;
 z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0);
 z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0);
 z1.vFundAbs = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5;
 z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5;
 z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0);
 currentSensor.iArg[1] = Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0);
 currentSensor.iArg[2] = Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0);
 currentSensor.iArg[3] = Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0);
 currentSensor.iArg[4] = Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0);
 currentSensor.iArg[5] = Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0);
 currentSensor.iArg[6] = Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0);
 currentSensor.iArg[7] = Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0);
 currentSensor.iArg[8] = Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0);
 currentSensor.iArg[9] = Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0);
 currentSensor.iArg[10] = Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0);
 currentSensor.iArg[11] = Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0);
 currentSensor.iArg[12] = Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0);
 currentSensor.iArg[13] = Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0);
 laptop_adapter.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0);

public
 function Modelica.ComplexMath.real
  input Complex c;
  output Real r;
 algorithm
  r := c.re;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.real;

 function Modelica.ComplexMath.conj
  input Complex c1;
  output Complex c2;
 algorithm
  (c2) := Complex.'constructor'.fromReal(c1.re, - c1.im);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.conj;

 function Complex.'constructor'.fromReal
  input Real re;
  input Real im;
  output Complex result;
 algorithm
  result.re := re;
  result.im := im;
  return;
 annotation(Inline = true);
 end Complex.'constructor'.fromReal;

 function Complex.'*'.multiply
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re * c2.re - c1.im * c2.im, c1.re * c2.im + c1.im * c2.re);
  return;
 annotation(Inline = true);
 end Complex.'*'.multiply;

 function Modelica.ComplexMath.'abs'
  input Complex c;
  output Real result;
 algorithm
  result := (c.re ^ 2 + c.im ^ 2) ^ 0.5;
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.'abs';

 function Modelica.ComplexMath.arg
  input Complex c;
  input Real phi0;
  output Real phi;
 algorithm
  phi := Modelica.Math.atan3(c.im, c.re, phi0);
  return;
 annotation(Inline = true);
 end Modelica.ComplexMath.arg;

 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function Modelica.Utilities.Streams.readMatrixSize
  input String fileName;
  input String matrixName;
  output Integer[:] dim;
 algorithm
  init dim as Integer[2];
  external "C" ModelicaIO_readMatrixSizes(fileName, matrixName, dim);
  return;
 end Modelica.Utilities.Streams.readMatrixSize;

 function Modelica.Utilities.Streams.readRealMatrix
  input String fileName;
  input String matrixName;
  input Integer nrow;
  input Integer ncol;
  input Boolean verboseRead;
  output Real[:,:] matrix;
 algorithm
  init matrix as Real[nrow, ncol];
  external "C" ModelicaIO_readRealMatrix(fileName, matrixName, matrix, size(matrix, 1), size(matrix, 2), verboseRead);
  return;
 end Modelica.Utilities.Streams.readRealMatrix;

 function Complex.'-'.subtract
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re - c2.re, c1.im - c2.im);
  return;
 annotation(Inline = true);
 end Complex.'-'.subtract;

 function Complex.'+'
  input Complex c1;
  input Complex c2;
  output Complex c3;
 algorithm
  (c3) := Complex.'constructor'.fromReal(c1.re + c2.re, c1.im + c2.im);
  return;
 annotation(Inline = true);
 end Complex.'+';

 record HPF.Utilities.ComponentProperties
  discrete String ComponentType "Type of the component";
 end HPF.Utilities.ComponentProperties;

 record Complex
  Real re "Real part of complex number";
  Real im "Imaginary part of complex number";
 end Complex;

 record HPF.Types.Reference
  Modelica.SIunits.Angle theta;
 end HPF.Types.Reference;

 type Modelica.SIunits.Frequency = Real(final quantity = "Frequency",final unit = "Hz");
 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
 type Modelica.Blocks.Interfaces.RealOutput = Real;
 type Modelica.SIunits.Power = Real(final quantity = "Power",final unit = "W");
end HPF.Test.Test_Rectifier;

DAE BiPGraph
BiPGraph (261 equations, 259 variables)
Variables: {der(v.theta) v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iMag[9] v.iMag[10] v.iMag[11] v.iMag[12] v.iMag[13] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.iArg[9] v.iArg[10] v.iArg[11] v.iArg[12] v.iArg[13] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.i[9].re v.i[9].im v.i[10].re v.i[10].im v.i[11].re v.i[11].im v.i[12].re v.i[12].im v.i[13].re v.i[13].im v.omega laptop_adapter.loadBase.omega laptop_adapter.I_mag[1] laptop_adapter.I_mag[2] laptop_adapter.I_mag[3] laptop_adapter.I_mag[4] laptop_adapter.I_mag[5] laptop_adapter.I_mag[6] laptop_adapter.I_mag[7] laptop_adapter.I_mag[8] laptop_adapter.I_mag[9] laptop_adapter.I_mag[10] laptop_adapter.I_mag[11] laptop_adapter.I_mag[12] laptop_adapter.I_mag[13] laptop_adapter.V_mag[1] laptop_adapter.V_mag[2] laptop_adapter.V_mag[3] laptop_adapter.V_mag[4] laptop_adapter.V_mag[5] laptop_adapter.V_mag[6] laptop_adapter.V_mag[7] laptop_adapter.V_mag[8] laptop_adapter.V_mag[9] laptop_adapter.V_mag[10] laptop_adapter.V_mag[11] laptop_adapter.V_mag[12] laptop_adapter.V_mag[13] laptop_adapter.V_arg[1] laptop_adapter.V_arg[2] laptop_adapter.V_arg[3] laptop_adapter.V_arg[4] laptop_adapter.V_arg[5] laptop_adapter.V_arg[6] laptop_adapter.V_arg[7] laptop_adapter.V_arg[8] laptop_adapter.V_arg[9] laptop_adapter.V_arg[10] laptop_adapter.V_arg[11] laptop_adapter.V_arg[12] laptop_adapter.V_arg[13] laptop_adapter.magScale laptop_adapter.argAdj[1] laptop_adapter.argAdj[2] laptop_adapter.argAdj[3] laptop_adapter.argAdj[4] laptop_adapter.argAdj[5] laptop_adapter.argAdj[6] laptop_adapter.argAdj[7] laptop_adapter.argAdj[8] laptop_adapter.argAdj[9] laptop_adapter.argAdj[10] laptop_adapter.argAdj[11] laptop_adapter.argAdj[12] laptop_adapter.a[1].re laptop_adapter.a[1].im laptop_adapter.a[2].re laptop_adapter.a[2].im laptop_adapter.a[3].re laptop_adapter.a[3].im laptop_adapter.a[4].re laptop_adapter.a[4].im laptop_adapter.a[5].re laptop_adapter.a[5].im laptop_adapter.a[6].re laptop_adapter.a[6].im laptop_adapter.a[7].re laptop_adapter.a[7].im laptop_adapter.a[8].re laptop_adapter.a[8].im laptop_adapter.a[9].re laptop_adapter.a[9].im laptop_adapter.a[10].re laptop_adapter.a[10].im laptop_adapter.a[11].re laptop_adapter.a[11].im laptop_adapter.a[12].re laptop_adapter.a[12].im laptop_adapter.c[1] laptop_adapter.c[2] laptop_adapter.c[3] laptop_adapter.c[4] laptop_adapter.c[5] laptop_adapter.c[6] laptop_adapter.c[7] laptop_adapter.c[8] laptop_adapter.c[9] laptop_adapter.c[10] laptop_adapter.c[11] laptop_adapter.c[12] z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.v[9].re z.v[9].im z.v[10].re z.v[10].im z.v[11].re z.v[11].im z.v[12].re z.v[12].im z.v[13].re z.v[13].im z.omega currentSensor.iMag[1] currentSensor.iMag[2] currentSensor.iMag[3] currentSensor.iMag[4] currentSensor.iMag[5] currentSensor.iMag[6] currentSensor.iMag[7] currentSensor.iMag[8] currentSensor.iMag[9] currentSensor.iMag[10] currentSensor.iMag[11] currentSensor.iMag[12] currentSensor.iMag[13] currentSensor.iArg[1] currentSensor.iArg[2] currentSensor.iArg[3] currentSensor.iArg[4] currentSensor.iArg[5] currentSensor.iArg[6] currentSensor.iArg[7] currentSensor.iArg[8] currentSensor.iArg[9] currentSensor.iArg[10] currentSensor.iArg[11] currentSensor.iArg[12] currentSensor.iArg[13] currentSensor.i[1].re currentSensor.i[1].im currentSensor.i[2].re currentSensor.i[2].im currentSensor.i[3].re currentSensor.i[3].im currentSensor.i[4].re currentSensor.i[4].im currentSensor.i[5].re currentSensor.i[5].im currentSensor.i[6].re currentSensor.i[6].im currentSensor.i[7].re currentSensor.i[7].im currentSensor.i[8].re currentSensor.i[8].im currentSensor.i[9].re currentSensor.i[9].im currentSensor.i[10].re currentSensor.i[10].im currentSensor.i[11].re currentSensor.i[11].im currentSensor.i[12].re currentSensor.i[12].im currentSensor.i[13].re currentSensor.i[13].im currentSensor.omega z1.vFundAbs z1.iFundAbs z1.iFundArg z1.v[1].re z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.i[4].re z1.i[4].im z1.i[5].re z1.i[5].im z1.i[6].re z1.i[6].im z1.i[7].re z1.i[7].im z1.i[8].re z1.i[8].im z1.i[9].re z1.i[9].im z1.i[10].re z1.i[10].im z1.i[11].re z1.i[11].im z1.i[12].re z1.i[12].im z1.i[13].re z1.i[13].im z1.omega }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : currentSensor.i[1].re@M z1.v[1].re@ z.v[1].im@ // currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_5 : currentSensor.i[1].im@M z.v[1].im@ z1.v[1].re@ // currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_6 : currentSensor.i[2].re@M laptop_adapter.c[1]@ laptop_adapter.a[1].re@ // currentSensor.i[2].re = laptop_adapter.c[1] * laptop_adapter.a[1].re
eq_7 : currentSensor.i[2].im@M laptop_adapter.c[1]@ laptop_adapter.a[1].im@ // currentSensor.i[2].im = laptop_adapter.c[1] * laptop_adapter.a[1].im
eq_8 : currentSensor.i[3].re@M laptop_adapter.c[2]@ laptop_adapter.a[2].re@ // currentSensor.i[3].re = laptop_adapter.c[2] * laptop_adapter.a[2].re
eq_9 : currentSensor.i[3].im@M laptop_adapter.c[2]@ laptop_adapter.a[2].im@ // currentSensor.i[3].im = laptop_adapter.c[2] * laptop_adapter.a[2].im
eq_10 : currentSensor.i[4].re@M laptop_adapter.c[3]@ laptop_adapter.a[3].re@ // currentSensor.i[4].re = laptop_adapter.c[3] * laptop_adapter.a[3].re
eq_11 : currentSensor.i[4].im@M laptop_adapter.c[3]@ laptop_adapter.a[3].im@ // currentSensor.i[4].im = laptop_adapter.c[3] * laptop_adapter.a[3].im
eq_12 : currentSensor.i[5].re@M laptop_adapter.c[4]@ laptop_adapter.a[4].re@ // currentSensor.i[5].re = laptop_adapter.c[4] * laptop_adapter.a[4].re
eq_13 : currentSensor.i[5].im@M laptop_adapter.c[4]@ laptop_adapter.a[4].im@ // currentSensor.i[5].im = laptop_adapter.c[4] * laptop_adapter.a[4].im
eq_14 : currentSensor.i[6].re@M laptop_adapter.c[5]@ laptop_adapter.a[5].re@ // currentSensor.i[6].re = laptop_adapter.c[5] * laptop_adapter.a[5].re
eq_15 : currentSensor.i[6].im@M laptop_adapter.c[5]@ laptop_adapter.a[5].im@ // currentSensor.i[6].im = laptop_adapter.c[5] * laptop_adapter.a[5].im
eq_16 : currentSensor.i[7].re@M laptop_adapter.c[6]@ laptop_adapter.a[6].re@ // currentSensor.i[7].re = laptop_adapter.c[6] * laptop_adapter.a[6].re
eq_17 : currentSensor.i[7].im@M laptop_adapter.c[6]@ laptop_adapter.a[6].im@ // currentSensor.i[7].im = laptop_adapter.c[6] * laptop_adapter.a[6].im
eq_18 : currentSensor.i[8].re@M laptop_adapter.c[7]@ laptop_adapter.a[7].re@ // currentSensor.i[8].re = laptop_adapter.c[7] * laptop_adapter.a[7].re
eq_19 : currentSensor.i[8].im@M laptop_adapter.c[7]@ laptop_adapter.a[7].im@ // currentSensor.i[8].im = laptop_adapter.c[7] * laptop_adapter.a[7].im
eq_20 : currentSensor.i[9].re@M laptop_adapter.c[8]@ laptop_adapter.a[8].re@ // currentSensor.i[9].re = laptop_adapter.c[8] * laptop_adapter.a[8].re
eq_21 : currentSensor.i[9].im@M laptop_adapter.c[8]@ laptop_adapter.a[8].im@ // currentSensor.i[9].im = laptop_adapter.c[8] * laptop_adapter.a[8].im
eq_22 : currentSensor.i[10].re@M laptop_adapter.c[9]@ laptop_adapter.a[9].re@ // currentSensor.i[10].re = laptop_adapter.c[9] * laptop_adapter.a[9].re
eq_23 : currentSensor.i[10].im@M laptop_adapter.c[9]@ laptop_adapter.a[9].im@ // currentSensor.i[10].im = laptop_adapter.c[9] * laptop_adapter.a[9].im
eq_24 : currentSensor.i[11].re@M laptop_adapter.c[10]@ laptop_adapter.a[10].re@ // currentSensor.i[11].re = laptop_adapter.c[10] * laptop_adapter.a[10].re
eq_25 : currentSensor.i[11].im@M laptop_adapter.c[10]@ laptop_adapter.a[10].im@ // currentSensor.i[11].im = laptop_adapter.c[10] * laptop_adapter.a[10].im
eq_26 : currentSensor.i[12].re@M laptop_adapter.c[11]@ laptop_adapter.a[11].re@ // currentSensor.i[12].re = laptop_adapter.c[11] * laptop_adapter.a[11].re
eq_27 : currentSensor.i[12].im@M laptop_adapter.c[11]@ laptop_adapter.a[11].im@ // currentSensor.i[12].im = laptop_adapter.c[11] * laptop_adapter.a[11].im
eq_28 : currentSensor.i[13].re@M laptop_adapter.c[12]@ laptop_adapter.a[12].re@ // currentSensor.i[13].re = laptop_adapter.c[12] * laptop_adapter.a[12].re
eq_29 : currentSensor.i[13].im@M laptop_adapter.c[12]@ laptop_adapter.a[12].im@ // currentSensor.i[13].im = laptop_adapter.c[12] * laptop_adapter.a[12].im
eq_30 : // algorithm

eq_31 : laptop_adapter.loadBase.omega@M der(v.theta)@ // laptop_adapter.loadBase.omega = der(v.theta)
eq_32 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_33 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_34 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_35 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_36 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_37 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_38 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_39 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_40 : z.v[9].re@M v.i[9].re@ v.i[9].im@ // z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im)
eq_41 : z.v[10].re@M v.i[10].re@ v.i[10].im@ // z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im)
eq_42 : z.v[11].re@M v.i[11].re@ v.i[11].im@ // z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im)
eq_43 : z.v[12].re@M v.i[12].re@ v.i[12].im@ // z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im)
eq_44 : z.v[13].re@M v.i[13].re@ v.i[13].im@ // z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im)
eq_45 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_46 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_47 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_48 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_49 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_50 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_51 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_52 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_53 : z.v[9].im@M v.i[9].im@ v.i[9].re@ // z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
eq_54 : z.v[10].im@M v.i[10].im@ v.i[10].re@ // z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
eq_55 : z.v[11].im@M v.i[11].im@ v.i[11].re@ // z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
eq_56 : z.v[12].im@M v.i[12].im@ v.i[12].re@ // z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
eq_57 : z.v[13].im@M v.i[13].im@ v.i[13].re@ // z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
eq_58 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_59 : z.v[1].re@ z1.v[1].re@M // z.v[1].re = 120.0 - z1.v[1].re
eq_60 : currentSensor.iMag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // currentSensor.iMag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_61 : currentSensor.iMag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // currentSensor.iMag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_62 : currentSensor.iMag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // currentSensor.iMag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_63 : currentSensor.iMag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // currentSensor.iMag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_64 : currentSensor.iMag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // currentSensor.iMag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_65 : currentSensor.iMag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // currentSensor.iMag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_66 : currentSensor.iMag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // currentSensor.iMag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_67 : currentSensor.iMag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // currentSensor.iMag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_68 : currentSensor.iMag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // currentSensor.iMag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_69 : currentSensor.iMag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // currentSensor.iMag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_70 : currentSensor.iMag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // currentSensor.iMag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_71 : currentSensor.iMag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // currentSensor.iMag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_72 : currentSensor.iMag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // currentSensor.iMag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_73 : currentSensor.omega@M der(v.theta)@ // currentSensor.omega = der(v.theta)
eq_74 : z1.v[1].re@ z1.i[1].re@M z1.i[1].im@ // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_75 : z.v[2].re@ z1.i[2].re@M z1.i[2].im@ // - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_76 : z.v[3].re@ z1.i[3].re@M z1.i[3].im@ // - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_77 : z.v[4].re@ z1.i[4].re@M z1.i[4].im@ // - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
eq_78 : z.v[5].re@ z1.i[5].re@M z1.i[5].im@ // - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
eq_79 : z.v[6].re@ z1.i[6].re@M z1.i[6].im@ // - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
eq_80 : z.v[7].re@ z1.i[7].re@M z1.i[7].im@ // - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
eq_81 : z.v[8].re@ z1.i[8].re@M z1.i[8].im@ // - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
eq_82 : z.v[9].re@ z1.i[9].re@M z1.i[9].im@ // - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
eq_83 : z.v[10].re@ z1.i[10].re@M z1.i[10].im@ // - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
eq_84 : z.v[11].re@ z1.i[11].re@M z1.i[11].im@ // - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
eq_85 : z.v[12].re@ z1.i[12].re@M z1.i[12].im@ // - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
eq_86 : z.v[13].re@ z1.i[13].re@M z1.i[13].im@ // - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
eq_87 : z.v[1].im@ z1.i[1].im@M z1.i[1].re@ // - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_88 : z.v[2].im@ z1.i[2].im@M z1.i[2].re@ // - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_89 : z.v[3].im@ z1.i[3].im@M z1.i[3].re@ // - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_90 : z.v[4].im@ z1.i[4].im@M z1.i[4].re@ // - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
eq_91 : z.v[5].im@ z1.i[5].im@M z1.i[5].re@ // - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
eq_92 : z.v[6].im@ z1.i[6].im@M z1.i[6].re@ // - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
eq_93 : z.v[7].im@ z1.i[7].im@M z1.i[7].re@ // - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
eq_94 : z.v[8].im@ z1.i[8].im@M z1.i[8].re@ // - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
eq_95 : z.v[9].im@ z1.i[9].im@M z1.i[9].re@ // - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
eq_96 : z.v[10].im@ z1.i[10].im@M z1.i[10].re@ // - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
eq_97 : z.v[11].im@ z1.i[11].im@M z1.i[11].re@ // - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
eq_98 : z.v[12].im@ z1.i[12].im@M z1.i[12].re@ // - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
eq_99 : z.v[13].im@ z1.i[13].im@M z1.i[13].re@ // - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
eq_100 : z1.omega@M der(v.theta)@ // z1.omega = der(v.theta)
eq_101 : currentSensor.i[1].im@ v.i[1].im@M z1.i[1].im@ // currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0
eq_102 : currentSensor.i[2].im@ v.i[2].im@M z1.i[2].im@ // currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0
eq_103 : currentSensor.i[3].im@ v.i[3].im@M z1.i[3].im@ // currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0
eq_104 : currentSensor.i[4].im@ v.i[4].im@M z1.i[4].im@ // currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0
eq_105 : currentSensor.i[5].im@ v.i[5].im@M z1.i[5].im@ // currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0
eq_106 : currentSensor.i[6].im@ v.i[6].im@M z1.i[6].im@ // currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0
eq_107 : currentSensor.i[7].im@ v.i[7].im@M z1.i[7].im@ // currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0
eq_108 : currentSensor.i[8].im@ v.i[8].im@M z1.i[8].im@ // currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0
eq_109 : currentSensor.i[9].im@ v.i[9].im@M z1.i[9].im@ // currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0
eq_110 : currentSensor.i[10].im@ v.i[10].im@M z1.i[10].im@ // currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0
eq_111 : currentSensor.i[11].im@ v.i[11].im@M z1.i[11].im@ // currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0
eq_112 : currentSensor.i[12].im@ v.i[12].im@M z1.i[12].im@ // currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0
eq_113 : currentSensor.i[13].im@ v.i[13].im@M z1.i[13].im@ // currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0
eq_114 : currentSensor.i[1].re@ v.i[1].re@M z1.i[1].re@ // currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0
eq_115 : currentSensor.i[2].re@ v.i[2].re@M z1.i[2].re@ // currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0
eq_116 : currentSensor.i[3].re@ v.i[3].re@M z1.i[3].re@ // currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0
eq_117 : currentSensor.i[4].re@ v.i[4].re@M z1.i[4].re@ // currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0
eq_118 : currentSensor.i[5].re@ v.i[5].re@M z1.i[5].re@ // currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0
eq_119 : currentSensor.i[6].re@ v.i[6].re@M z1.i[6].re@ // currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0
eq_120 : currentSensor.i[7].re@ v.i[7].re@M z1.i[7].re@ // currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0
eq_121 : currentSensor.i[8].re@ v.i[8].re@M z1.i[8].re@ // currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0
eq_122 : currentSensor.i[9].re@ v.i[9].re@M z1.i[9].re@ // currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0
eq_123 : currentSensor.i[10].re@ v.i[10].re@M z1.i[10].re@ // currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0
eq_124 : currentSensor.i[11].re@ v.i[11].re@M z1.i[11].re@ // currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0
eq_125 : currentSensor.i[12].re@ v.i[12].re@M z1.i[12].re@ // currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0
eq_126 : currentSensor.i[13].re@ v.i[13].re@M z1.i[13].re@ // currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0
eq_127 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_128 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_129 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_130 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_131 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_132 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_133 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_134 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_135 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_136 : v.iMag[9]@M v.i[9].re@ v.i[9].im@ // v.iMag[9] = (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5
eq_137 : v.iMag[10]@M v.i[10].re@ v.i[10].im@ // v.iMag[10] = (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5
eq_138 : v.iMag[11]@M v.i[11].re@ v.i[11].im@ // v.iMag[11] = (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5
eq_139 : v.iMag[12]@M v.i[12].re@ v.i[12].im@ // v.iMag[12] = (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5
eq_140 : v.iMag[13]@M v.i[13].re@ v.i[13].im@ // v.iMag[13] = (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5
eq_141 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_142 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_143 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_144 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_145 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_146 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_147 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_148 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_149 : v.iArg[9]@M v.i[9].im@ v.i[9].re@ // v.iArg[9] = Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)
eq_150 : v.iArg[10]@M v.i[10].im@ v.i[10].re@ // v.iArg[10] = Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)
eq_151 : v.iArg[11]@M v.i[11].im@ v.i[11].re@ // v.iArg[11] = Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)
eq_152 : v.iArg[12]@M v.i[12].im@ v.i[12].re@ // v.iArg[12] = Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)
eq_153 : v.iArg[13]@M v.i[13].im@ v.i[13].re@ // v.iArg[13] = Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)
eq_154 : laptop_adapter.I_mag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.I_mag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_155 : laptop_adapter.I_mag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // laptop_adapter.I_mag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_156 : laptop_adapter.I_mag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // laptop_adapter.I_mag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_157 : laptop_adapter.I_mag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // laptop_adapter.I_mag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_158 : laptop_adapter.I_mag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // laptop_adapter.I_mag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_159 : laptop_adapter.I_mag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // laptop_adapter.I_mag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_160 : laptop_adapter.I_mag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // laptop_adapter.I_mag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_161 : laptop_adapter.I_mag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // laptop_adapter.I_mag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_162 : laptop_adapter.I_mag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // laptop_adapter.I_mag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_163 : laptop_adapter.I_mag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // laptop_adapter.I_mag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_164 : laptop_adapter.I_mag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // laptop_adapter.I_mag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_165 : laptop_adapter.I_mag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // laptop_adapter.I_mag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_166 : laptop_adapter.I_mag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // laptop_adapter.I_mag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_167 : laptop_adapter.V_mag[1]@M z1.v[1].re@ z.v[1].im@ // laptop_adapter.V_mag[1] = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_168 : laptop_adapter.V_mag[2]@M z.v[2].re@ z.v[2].im@ // laptop_adapter.V_mag[2] = ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_169 : laptop_adapter.V_mag[3]@M z.v[3].re@ z.v[3].im@ // laptop_adapter.V_mag[3] = ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_170 : laptop_adapter.V_mag[4]@M z.v[4].re@ z.v[4].im@ // laptop_adapter.V_mag[4] = ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_171 : laptop_adapter.V_mag[5]@M z.v[5].re@ z.v[5].im@ // laptop_adapter.V_mag[5] = ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_172 : laptop_adapter.V_mag[6]@M z.v[6].re@ z.v[6].im@ // laptop_adapter.V_mag[6] = ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_173 : laptop_adapter.V_mag[7]@M z.v[7].re@ z.v[7].im@ // laptop_adapter.V_mag[7] = ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_174 : laptop_adapter.V_mag[8]@M z.v[8].re@ z.v[8].im@ // laptop_adapter.V_mag[8] = ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_175 : laptop_adapter.V_mag[9]@M z.v[9].re@ z.v[9].im@ // laptop_adapter.V_mag[9] = ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5
eq_176 : laptop_adapter.V_mag[10]@M z.v[10].re@ z.v[10].im@ // laptop_adapter.V_mag[10] = ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5
eq_177 : laptop_adapter.V_mag[11]@M z.v[11].re@ z.v[11].im@ // laptop_adapter.V_mag[11] = ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5
eq_178 : laptop_adapter.V_mag[12]@M z.v[12].re@ z.v[12].im@ // laptop_adapter.V_mag[12] = ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5
eq_179 : laptop_adapter.V_mag[13]@M z.v[13].re@ z.v[13].im@ // laptop_adapter.V_mag[13] = ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5
eq_180 : laptop_adapter.V_arg[2]@M z.v[2].im@ z.v[2].re@ // laptop_adapter.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)
eq_181 : laptop_adapter.V_arg[3]@M z.v[3].im@ z.v[3].re@ // laptop_adapter.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)
eq_182 : laptop_adapter.V_arg[4]@M z.v[4].im@ z.v[4].re@ // laptop_adapter.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)
eq_183 : laptop_adapter.V_arg[5]@M z.v[5].im@ z.v[5].re@ // laptop_adapter.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)
eq_184 : laptop_adapter.V_arg[6]@M z.v[6].im@ z.v[6].re@ // laptop_adapter.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)
eq_185 : laptop_adapter.V_arg[7]@M z.v[7].im@ z.v[7].re@ // laptop_adapter.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)
eq_186 : laptop_adapter.V_arg[8]@M z.v[8].im@ z.v[8].re@ // laptop_adapter.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)
eq_187 : laptop_adapter.V_arg[9]@M z.v[9].im@ z.v[9].re@ // laptop_adapter.V_arg[9] = Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)
eq_188 : laptop_adapter.V_arg[10]@M z.v[10].im@ z.v[10].re@ // laptop_adapter.V_arg[10] = Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)
eq_189 : laptop_adapter.V_arg[11]@M z.v[11].im@ z.v[11].re@ // laptop_adapter.V_arg[11] = Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)
eq_190 : laptop_adapter.V_arg[12]@M z.v[12].im@ z.v[12].re@ // laptop_adapter.V_arg[12] = Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)
eq_191 : laptop_adapter.V_arg[13]@M z.v[13].im@ z.v[13].re@ // laptop_adapter.V_arg[13] = Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)
eq_192 : laptop_adapter.magScale@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.magScale = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_193 : laptop_adapter.argAdj[1]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[1] = 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]
eq_194 : laptop_adapter.argAdj[2]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[2] = 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]
eq_195 : laptop_adapter.argAdj[3]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[3] = -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]
eq_196 : laptop_adapter.argAdj[4]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[4] = 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]
eq_197 : laptop_adapter.argAdj[5]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[5] = 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]
eq_198 : laptop_adapter.argAdj[6]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[6] = 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]
eq_199 : laptop_adapter.argAdj[7]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[7] = 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]
eq_200 : laptop_adapter.argAdj[8]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[8] = -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]
eq_201 : laptop_adapter.argAdj[9]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[9] = 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]
eq_202 : laptop_adapter.argAdj[10]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[10] = 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]
eq_203 : laptop_adapter.argAdj[11]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[11] = -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]
eq_204 : laptop_adapter.argAdj[12]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[12] = 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]
eq_205 : laptop_adapter.a[1].re@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].re = cos(laptop_adapter.argAdj[1])
eq_206 : laptop_adapter.a[1].im@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].im = sin(laptop_adapter.argAdj[1])
eq_207 : laptop_adapter.a[2].re@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].re = cos(laptop_adapter.argAdj[2])
eq_208 : laptop_adapter.a[2].im@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].im = sin(laptop_adapter.argAdj[2])
eq_209 : laptop_adapter.a[3].re@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].re = cos(laptop_adapter.argAdj[3])
eq_210 : laptop_adapter.a[3].im@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].im = sin(laptop_adapter.argAdj[3])
eq_211 : laptop_adapter.a[4].re@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].re = cos(laptop_adapter.argAdj[4])
eq_212 : laptop_adapter.a[4].im@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].im = sin(laptop_adapter.argAdj[4])
eq_213 : laptop_adapter.a[5].re@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].re = cos(laptop_adapter.argAdj[5])
eq_214 : laptop_adapter.a[5].im@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].im = sin(laptop_adapter.argAdj[5])
eq_215 : laptop_adapter.a[6].re@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].re = cos(laptop_adapter.argAdj[6])
eq_216 : laptop_adapter.a[6].im@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].im = sin(laptop_adapter.argAdj[6])
eq_217 : laptop_adapter.a[7].re@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].re = cos(laptop_adapter.argAdj[7])
eq_218 : laptop_adapter.a[7].im@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].im = sin(laptop_adapter.argAdj[7])
eq_219 : laptop_adapter.a[8].re@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].re = cos(laptop_adapter.argAdj[8])
eq_220 : laptop_adapter.a[8].im@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].im = sin(laptop_adapter.argAdj[8])
eq_221 : laptop_adapter.a[9].re@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].re = cos(laptop_adapter.argAdj[9])
eq_222 : laptop_adapter.a[9].im@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].im = sin(laptop_adapter.argAdj[9])
eq_223 : laptop_adapter.a[10].re@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].re = cos(laptop_adapter.argAdj[10])
eq_224 : laptop_adapter.a[10].im@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].im = sin(laptop_adapter.argAdj[10])
eq_225 : laptop_adapter.a[11].re@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].re = cos(laptop_adapter.argAdj[11])
eq_226 : laptop_adapter.a[11].im@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].im = sin(laptop_adapter.argAdj[11])
eq_227 : laptop_adapter.a[12].re@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].re = cos(laptop_adapter.argAdj[12])
eq_228 : laptop_adapter.a[12].im@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].im = sin(laptop_adapter.argAdj[12])
eq_229 : laptop_adapter.c[1]@M laptop_adapter.magScale@ // laptop_adapter.c[1] = laptop_adapter.magScale * 0.9421865565594479
eq_230 : laptop_adapter.c[2]@M laptop_adapter.magScale@ // laptop_adapter.c[2] = laptop_adapter.magScale * 0.846418595204449
eq_231 : laptop_adapter.c[3]@M laptop_adapter.magScale@ // laptop_adapter.c[3] = laptop_adapter.magScale * 0.7174634219299512
eq_232 : laptop_adapter.c[4]@M laptop_adapter.magScale@ // laptop_adapter.c[4] = laptop_adapter.magScale * 0.568269396387493
eq_233 : laptop_adapter.c[5]@M laptop_adapter.magScale@ // laptop_adapter.c[5] = laptop_adapter.magScale * 0.4142504288040016
eq_234 : laptop_adapter.c[6]@M laptop_adapter.magScale@ // laptop_adapter.c[6] = laptop_adapter.magScale * 0.2722289795439818
eq_235 : laptop_adapter.c[7]@M laptop_adapter.magScale@ // laptop_adapter.c[7] = laptop_adapter.magScale * 0.1499700094183941
eq_236 : laptop_adapter.c[8]@M laptop_adapter.magScale@ // laptop_adapter.c[8] = laptop_adapter.magScale * 0.060532358446546
eq_237 : laptop_adapter.c[9]@M laptop_adapter.magScale@ // laptop_adapter.c[9] = laptop_adapter.magScale * 0.0286742846032879
eq_238 : laptop_adapter.c[10]@M laptop_adapter.magScale@ // laptop_adapter.c[10] = laptop_adapter.magScale * 0.0500554183998412
eq_239 : laptop_adapter.c[11]@M laptop_adapter.magScale@ // laptop_adapter.c[11] = laptop_adapter.magScale * 0.0574038038345626
eq_240 : laptop_adapter.c[12]@M laptop_adapter.magScale@ // laptop_adapter.c[12] = laptop_adapter.magScale * 0.0490634253296239
eq_241 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_242 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_243 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_244 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_245 : z1.vFundAbs@M z1.v[1].re@ z.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_246 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_247 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
eq_248 : currentSensor.iArg[1]@M currentSensor.i[1].im@ currentSensor.i[1].re@ // currentSensor.iArg[1] = Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)
eq_249 : currentSensor.iArg[2]@M currentSensor.i[2].im@ currentSensor.i[2].re@ // currentSensor.iArg[2] = Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)
eq_250 : currentSensor.iArg[3]@M currentSensor.i[3].im@ currentSensor.i[3].re@ // currentSensor.iArg[3] = Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)
eq_251 : currentSensor.iArg[4]@M currentSensor.i[4].im@ currentSensor.i[4].re@ // currentSensor.iArg[4] = Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)
eq_252 : currentSensor.iArg[5]@M currentSensor.i[5].im@ currentSensor.i[5].re@ // currentSensor.iArg[5] = Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)
eq_253 : currentSensor.iArg[6]@M currentSensor.i[6].im@ currentSensor.i[6].re@ // currentSensor.iArg[6] = Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)
eq_254 : currentSensor.iArg[7]@M currentSensor.i[7].im@ currentSensor.i[7].re@ // currentSensor.iArg[7] = Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)
eq_255 : currentSensor.iArg[8]@M currentSensor.i[8].im@ currentSensor.i[8].re@ // currentSensor.iArg[8] = Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)
eq_256 : currentSensor.iArg[9]@M currentSensor.i[9].im@ currentSensor.i[9].re@ // currentSensor.iArg[9] = Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)
eq_257 : currentSensor.iArg[10]@M currentSensor.i[10].im@ currentSensor.i[10].re@ // currentSensor.iArg[10] = Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)
eq_258 : currentSensor.iArg[11]@M currentSensor.i[11].im@ currentSensor.i[11].re@ // currentSensor.iArg[11] = Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)
eq_259 : currentSensor.iArg[12]@M currentSensor.i[12].im@ currentSensor.i[12].re@ // currentSensor.iArg[12] = Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)
eq_260 : currentSensor.iArg[13]@M currentSensor.i[13].im@ currentSensor.i[13].re@ // currentSensor.iArg[13] = Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)
eq_261 : laptop_adapter.V_arg[1]@M z.v[1].im@ z1.v[1].re@ // laptop_adapter.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)

DAE BiPGraph matching
----------------------------------------
BiPGraph matching:
eq_2 : der(v.theta)
eq_3 : v.omega
eq_4 : currentSensor.i[1].re
eq_5 : currentSensor.i[1].im
eq_6 : currentSensor.i[2].re
eq_7 : currentSensor.i[2].im
eq_8 : currentSensor.i[3].re
eq_9 : currentSensor.i[3].im
eq_10 : currentSensor.i[4].re
eq_11 : currentSensor.i[4].im
eq_12 : currentSensor.i[5].re
eq_13 : currentSensor.i[5].im
eq_14 : currentSensor.i[6].re
eq_15 : currentSensor.i[6].im
eq_16 : currentSensor.i[7].re
eq_17 : currentSensor.i[7].im
eq_18 : currentSensor.i[8].re
eq_19 : currentSensor.i[8].im
eq_20 : currentSensor.i[9].re
eq_21 : currentSensor.i[9].im
eq_22 : currentSensor.i[10].re
eq_23 : currentSensor.i[10].im
eq_24 : currentSensor.i[11].re
eq_25 : currentSensor.i[11].im
eq_26 : currentSensor.i[12].re
eq_27 : currentSensor.i[12].im
eq_28 : currentSensor.i[13].re
eq_29 : currentSensor.i[13].im
eq_31 : laptop_adapter.loadBase.omega
eq_32 : z.v[1].re
eq_33 : z.v[2].re
eq_34 : z.v[3].re
eq_35 : z.v[4].re
eq_36 : z.v[5].re
eq_37 : z.v[6].re
eq_38 : z.v[7].re
eq_39 : z.v[8].re
eq_40 : z.v[9].re
eq_41 : z.v[10].re
eq_42 : z.v[11].re
eq_43 : z.v[12].re
eq_44 : z.v[13].re
eq_45 : z.v[1].im
eq_46 : z.v[2].im
eq_47 : z.v[3].im
eq_48 : z.v[4].im
eq_49 : z.v[5].im
eq_50 : z.v[6].im
eq_51 : z.v[7].im
eq_52 : z.v[8].im
eq_53 : z.v[9].im
eq_54 : z.v[10].im
eq_55 : z.v[11].im
eq_56 : z.v[12].im
eq_57 : z.v[13].im
eq_58 : z.omega
eq_59 : z1.v[1].re
eq_60 : currentSensor.iMag[1]
eq_61 : currentSensor.iMag[2]
eq_62 : currentSensor.iMag[3]
eq_63 : currentSensor.iMag[4]
eq_64 : currentSensor.iMag[5]
eq_65 : currentSensor.iMag[6]
eq_66 : currentSensor.iMag[7]
eq_67 : currentSensor.iMag[8]
eq_68 : currentSensor.iMag[9]
eq_69 : currentSensor.iMag[10]
eq_70 : currentSensor.iMag[11]
eq_71 : currentSensor.iMag[12]
eq_72 : currentSensor.iMag[13]
eq_73 : currentSensor.omega
eq_74 : z1.i[1].re
eq_75 : z1.i[2].re
eq_76 : z1.i[3].re
eq_77 : z1.i[4].re
eq_78 : z1.i[5].re
eq_79 : z1.i[6].re
eq_80 : z1.i[7].re
eq_81 : z1.i[8].re
eq_82 : z1.i[9].re
eq_83 : z1.i[10].re
eq_84 : z1.i[11].re
eq_85 : z1.i[12].re
eq_86 : z1.i[13].re
eq_87 : z1.i[1].im
eq_88 : z1.i[2].im
eq_89 : z1.i[3].im
eq_90 : z1.i[4].im
eq_91 : z1.i[5].im
eq_92 : z1.i[6].im
eq_93 : z1.i[7].im
eq_94 : z1.i[8].im
eq_95 : z1.i[9].im
eq_96 : z1.i[10].im
eq_97 : z1.i[11].im
eq_98 : z1.i[12].im
eq_99 : z1.i[13].im
eq_100 : z1.omega
eq_101 : v.i[1].im
eq_102 : v.i[2].im
eq_103 : v.i[3].im
eq_104 : v.i[4].im
eq_105 : v.i[5].im
eq_106 : v.i[6].im
eq_107 : v.i[7].im
eq_108 : v.i[8].im
eq_109 : v.i[9].im
eq_110 : v.i[10].im
eq_111 : v.i[11].im
eq_112 : v.i[12].im
eq_113 : v.i[13].im
eq_114 : v.i[1].re
eq_115 : v.i[2].re
eq_116 : v.i[3].re
eq_117 : v.i[4].re
eq_118 : v.i[5].re
eq_119 : v.i[6].re
eq_120 : v.i[7].re
eq_121 : v.i[8].re
eq_122 : v.i[9].re
eq_123 : v.i[10].re
eq_124 : v.i[11].re
eq_125 : v.i[12].re
eq_126 : v.i[13].re
eq_127 : v.P1
eq_128 : v.iMag[1]
eq_129 : v.iMag[2]
eq_130 : v.iMag[3]
eq_131 : v.iMag[4]
eq_132 : v.iMag[5]
eq_133 : v.iMag[6]
eq_134 : v.iMag[7]
eq_135 : v.iMag[8]
eq_136 : v.iMag[9]
eq_137 : v.iMag[10]
eq_138 : v.iMag[11]
eq_139 : v.iMag[12]
eq_140 : v.iMag[13]
eq_141 : v.iArg[1]
eq_142 : v.iArg[2]
eq_143 : v.iArg[3]
eq_144 : v.iArg[4]
eq_145 : v.iArg[5]
eq_146 : v.iArg[6]
eq_147 : v.iArg[7]
eq_148 : v.iArg[8]
eq_149 : v.iArg[9]
eq_150 : v.iArg[10]
eq_151 : v.iArg[11]
eq_152 : v.iArg[12]
eq_153 : v.iArg[13]
eq_154 : laptop_adapter.I_mag[1]
eq_155 : laptop_adapter.I_mag[2]
eq_156 : laptop_adapter.I_mag[3]
eq_157 : laptop_adapter.I_mag[4]
eq_158 : laptop_adapter.I_mag[5]
eq_159 : laptop_adapter.I_mag[6]
eq_160 : laptop_adapter.I_mag[7]
eq_161 : laptop_adapter.I_mag[8]
eq_162 : laptop_adapter.I_mag[9]
eq_163 : laptop_adapter.I_mag[10]
eq_164 : laptop_adapter.I_mag[11]
eq_165 : laptop_adapter.I_mag[12]
eq_166 : laptop_adapter.I_mag[13]
eq_167 : laptop_adapter.V_mag[1]
eq_168 : laptop_adapter.V_mag[2]
eq_169 : laptop_adapter.V_mag[3]
eq_170 : laptop_adapter.V_mag[4]
eq_171 : laptop_adapter.V_mag[5]
eq_172 : laptop_adapter.V_mag[6]
eq_173 : laptop_adapter.V_mag[7]
eq_174 : laptop_adapter.V_mag[8]
eq_175 : laptop_adapter.V_mag[9]
eq_176 : laptop_adapter.V_mag[10]
eq_177 : laptop_adapter.V_mag[11]
eq_178 : laptop_adapter.V_mag[12]
eq_179 : laptop_adapter.V_mag[13]
eq_180 : laptop_adapter.V_arg[2]
eq_181 : laptop_adapter.V_arg[3]
eq_182 : laptop_adapter.V_arg[4]
eq_183 : laptop_adapter.V_arg[5]
eq_184 : laptop_adapter.V_arg[6]
eq_185 : laptop_adapter.V_arg[7]
eq_186 : laptop_adapter.V_arg[8]
eq_187 : laptop_adapter.V_arg[9]
eq_188 : laptop_adapter.V_arg[10]
eq_189 : laptop_adapter.V_arg[11]
eq_190 : laptop_adapter.V_arg[12]
eq_191 : laptop_adapter.V_arg[13]
eq_192 : laptop_adapter.magScale
eq_193 : laptop_adapter.argAdj[1]
eq_194 : laptop_adapter.argAdj[2]
eq_195 : laptop_adapter.argAdj[3]
eq_196 : laptop_adapter.argAdj[4]
eq_197 : laptop_adapter.argAdj[5]
eq_198 : laptop_adapter.argAdj[6]
eq_199 : laptop_adapter.argAdj[7]
eq_200 : laptop_adapter.argAdj[8]
eq_201 : laptop_adapter.argAdj[9]
eq_202 : laptop_adapter.argAdj[10]
eq_203 : laptop_adapter.argAdj[11]
eq_204 : laptop_adapter.argAdj[12]
eq_205 : laptop_adapter.a[1].re
eq_206 : laptop_adapter.a[1].im
eq_207 : laptop_adapter.a[2].re
eq_208 : laptop_adapter.a[2].im
eq_209 : laptop_adapter.a[3].re
eq_210 : laptop_adapter.a[3].im
eq_211 : laptop_adapter.a[4].re
eq_212 : laptop_adapter.a[4].im
eq_213 : laptop_adapter.a[5].re
eq_214 : laptop_adapter.a[5].im
eq_215 : laptop_adapter.a[6].re
eq_216 : laptop_adapter.a[6].im
eq_217 : laptop_adapter.a[7].re
eq_218 : laptop_adapter.a[7].im
eq_219 : laptop_adapter.a[8].re
eq_220 : laptop_adapter.a[8].im
eq_221 : laptop_adapter.a[9].re
eq_222 : laptop_adapter.a[9].im
eq_223 : laptop_adapter.a[10].re
eq_224 : laptop_adapter.a[10].im
eq_225 : laptop_adapter.a[11].re
eq_226 : laptop_adapter.a[11].im
eq_227 : laptop_adapter.a[12].re
eq_228 : laptop_adapter.a[12].im
eq_229 : laptop_adapter.c[1]
eq_230 : laptop_adapter.c[2]
eq_231 : laptop_adapter.c[3]
eq_232 : laptop_adapter.c[4]
eq_233 : laptop_adapter.c[5]
eq_234 : laptop_adapter.c[6]
eq_235 : laptop_adapter.c[7]
eq_236 : laptop_adapter.c[8]
eq_237 : laptop_adapter.c[9]
eq_238 : laptop_adapter.c[10]
eq_239 : laptop_adapter.c[11]
eq_240 : laptop_adapter.c[12]
eq_241 : z.vFundAbs
eq_242 : z.vFundArg
eq_243 : z.iFundAbs
eq_244 : z.iFundArg
eq_245 : z1.vFundAbs
eq_246 : z1.iFundAbs
eq_247 : z1.iFundArg
eq_248 : currentSensor.iArg[1]
eq_249 : currentSensor.iArg[2]
eq_250 : currentSensor.iArg[3]
eq_251 : currentSensor.iArg[4]
eq_252 : currentSensor.iArg[5]
eq_253 : currentSensor.iArg[6]
eq_254 : currentSensor.iArg[7]
eq_255 : currentSensor.iArg[8]
eq_256 : currentSensor.iArg[9]
eq_257 : currentSensor.iArg[10]
eq_258 : currentSensor.iArg[11]
eq_259 : currentSensor.iArg[12]
eq_260 : currentSensor.iArg[13]
eq_261 : laptop_adapter.V_arg[1]
Unmatched equations: {}
Unmatched variables: {}
----------------------------------------

BiPGraph (261 equations, 259 variables)
Variables: {der(v.theta) v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iMag[9] v.iMag[10] v.iMag[11] v.iMag[12] v.iMag[13] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.iArg[9] v.iArg[10] v.iArg[11] v.iArg[12] v.iArg[13] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.i[9].re v.i[9].im v.i[10].re v.i[10].im v.i[11].re v.i[11].im v.i[12].re v.i[12].im v.i[13].re v.i[13].im v.omega laptop_adapter.loadBase.omega laptop_adapter.I_mag[1] laptop_adapter.I_mag[2] laptop_adapter.I_mag[3] laptop_adapter.I_mag[4] laptop_adapter.I_mag[5] laptop_adapter.I_mag[6] laptop_adapter.I_mag[7] laptop_adapter.I_mag[8] laptop_adapter.I_mag[9] laptop_adapter.I_mag[10] laptop_adapter.I_mag[11] laptop_adapter.I_mag[12] laptop_adapter.I_mag[13] laptop_adapter.V_mag[1] laptop_adapter.V_mag[2] laptop_adapter.V_mag[3] laptop_adapter.V_mag[4] laptop_adapter.V_mag[5] laptop_adapter.V_mag[6] laptop_adapter.V_mag[7] laptop_adapter.V_mag[8] laptop_adapter.V_mag[9] laptop_adapter.V_mag[10] laptop_adapter.V_mag[11] laptop_adapter.V_mag[12] laptop_adapter.V_mag[13] laptop_adapter.V_arg[1] laptop_adapter.V_arg[2] laptop_adapter.V_arg[3] laptop_adapter.V_arg[4] laptop_adapter.V_arg[5] laptop_adapter.V_arg[6] laptop_adapter.V_arg[7] laptop_adapter.V_arg[8] laptop_adapter.V_arg[9] laptop_adapter.V_arg[10] laptop_adapter.V_arg[11] laptop_adapter.V_arg[12] laptop_adapter.V_arg[13] laptop_adapter.magScale laptop_adapter.argAdj[1] laptop_adapter.argAdj[2] laptop_adapter.argAdj[3] laptop_adapter.argAdj[4] laptop_adapter.argAdj[5] laptop_adapter.argAdj[6] laptop_adapter.argAdj[7] laptop_adapter.argAdj[8] laptop_adapter.argAdj[9] laptop_adapter.argAdj[10] laptop_adapter.argAdj[11] laptop_adapter.argAdj[12] laptop_adapter.a[1].re laptop_adapter.a[1].im laptop_adapter.a[2].re laptop_adapter.a[2].im laptop_adapter.a[3].re laptop_adapter.a[3].im laptop_adapter.a[4].re laptop_adapter.a[4].im laptop_adapter.a[5].re laptop_adapter.a[5].im laptop_adapter.a[6].re laptop_adapter.a[6].im laptop_adapter.a[7].re laptop_adapter.a[7].im laptop_adapter.a[8].re laptop_adapter.a[8].im laptop_adapter.a[9].re laptop_adapter.a[9].im laptop_adapter.a[10].re laptop_adapter.a[10].im laptop_adapter.a[11].re laptop_adapter.a[11].im laptop_adapter.a[12].re laptop_adapter.a[12].im laptop_adapter.c[1] laptop_adapter.c[2] laptop_adapter.c[3] laptop_adapter.c[4] laptop_adapter.c[5] laptop_adapter.c[6] laptop_adapter.c[7] laptop_adapter.c[8] laptop_adapter.c[9] laptop_adapter.c[10] laptop_adapter.c[11] laptop_adapter.c[12] z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.v[9].re z.v[9].im z.v[10].re z.v[10].im z.v[11].re z.v[11].im z.v[12].re z.v[12].im z.v[13].re z.v[13].im z.omega currentSensor.iMag[1] currentSensor.iMag[2] currentSensor.iMag[3] currentSensor.iMag[4] currentSensor.iMag[5] currentSensor.iMag[6] currentSensor.iMag[7] currentSensor.iMag[8] currentSensor.iMag[9] currentSensor.iMag[10] currentSensor.iMag[11] currentSensor.iMag[12] currentSensor.iMag[13] currentSensor.iArg[1] currentSensor.iArg[2] currentSensor.iArg[3] currentSensor.iArg[4] currentSensor.iArg[5] currentSensor.iArg[6] currentSensor.iArg[7] currentSensor.iArg[8] currentSensor.iArg[9] currentSensor.iArg[10] currentSensor.iArg[11] currentSensor.iArg[12] currentSensor.iArg[13] currentSensor.i[1].re currentSensor.i[1].im currentSensor.i[2].re currentSensor.i[2].im currentSensor.i[3].re currentSensor.i[3].im currentSensor.i[4].re currentSensor.i[4].im currentSensor.i[5].re currentSensor.i[5].im currentSensor.i[6].re currentSensor.i[6].im currentSensor.i[7].re currentSensor.i[7].im currentSensor.i[8].re currentSensor.i[8].im currentSensor.i[9].re currentSensor.i[9].im currentSensor.i[10].re currentSensor.i[10].im currentSensor.i[11].re currentSensor.i[11].im currentSensor.i[12].re currentSensor.i[12].im currentSensor.i[13].re currentSensor.i[13].im currentSensor.omega z1.vFundAbs z1.iFundAbs z1.iFundArg z1.v[1].re z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.i[4].re z1.i[4].im z1.i[5].re z1.i[5].im z1.i[6].re z1.i[6].im z1.i[7].re z1.i[7].im z1.i[8].re z1.i[8].im z1.i[9].re z1.i[9].im z1.i[10].re z1.i[10].im z1.i[11].re z1.i[11].im z1.i[12].re z1.i[12].im z1.i[13].re z1.i[13].im z1.omega }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : currentSensor.i[1].re@M z1.v[1].re@ z.v[1].im@ // currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_5 : currentSensor.i[1].im@M z.v[1].im@ z1.v[1].re@ // currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_6 : currentSensor.i[2].re@M laptop_adapter.c[1]@ laptop_adapter.a[1].re@ // currentSensor.i[2].re = laptop_adapter.c[1] * laptop_adapter.a[1].re
eq_7 : currentSensor.i[2].im@M laptop_adapter.c[1]@ laptop_adapter.a[1].im@ // currentSensor.i[2].im = laptop_adapter.c[1] * laptop_adapter.a[1].im
eq_8 : currentSensor.i[3].re@M laptop_adapter.c[2]@ laptop_adapter.a[2].re@ // currentSensor.i[3].re = laptop_adapter.c[2] * laptop_adapter.a[2].re
eq_9 : currentSensor.i[3].im@M laptop_adapter.c[2]@ laptop_adapter.a[2].im@ // currentSensor.i[3].im = laptop_adapter.c[2] * laptop_adapter.a[2].im
eq_10 : currentSensor.i[4].re@M laptop_adapter.c[3]@ laptop_adapter.a[3].re@ // currentSensor.i[4].re = laptop_adapter.c[3] * laptop_adapter.a[3].re
eq_11 : currentSensor.i[4].im@M laptop_adapter.c[3]@ laptop_adapter.a[3].im@ // currentSensor.i[4].im = laptop_adapter.c[3] * laptop_adapter.a[3].im
eq_12 : currentSensor.i[5].re@M laptop_adapter.c[4]@ laptop_adapter.a[4].re@ // currentSensor.i[5].re = laptop_adapter.c[4] * laptop_adapter.a[4].re
eq_13 : currentSensor.i[5].im@M laptop_adapter.c[4]@ laptop_adapter.a[4].im@ // currentSensor.i[5].im = laptop_adapter.c[4] * laptop_adapter.a[4].im
eq_14 : currentSensor.i[6].re@M laptop_adapter.c[5]@ laptop_adapter.a[5].re@ // currentSensor.i[6].re = laptop_adapter.c[5] * laptop_adapter.a[5].re
eq_15 : currentSensor.i[6].im@M laptop_adapter.c[5]@ laptop_adapter.a[5].im@ // currentSensor.i[6].im = laptop_adapter.c[5] * laptop_adapter.a[5].im
eq_16 : currentSensor.i[7].re@M laptop_adapter.c[6]@ laptop_adapter.a[6].re@ // currentSensor.i[7].re = laptop_adapter.c[6] * laptop_adapter.a[6].re
eq_17 : currentSensor.i[7].im@M laptop_adapter.c[6]@ laptop_adapter.a[6].im@ // currentSensor.i[7].im = laptop_adapter.c[6] * laptop_adapter.a[6].im
eq_18 : currentSensor.i[8].re@M laptop_adapter.c[7]@ laptop_adapter.a[7].re@ // currentSensor.i[8].re = laptop_adapter.c[7] * laptop_adapter.a[7].re
eq_19 : currentSensor.i[8].im@M laptop_adapter.c[7]@ laptop_adapter.a[7].im@ // currentSensor.i[8].im = laptop_adapter.c[7] * laptop_adapter.a[7].im
eq_20 : currentSensor.i[9].re@M laptop_adapter.c[8]@ laptop_adapter.a[8].re@ // currentSensor.i[9].re = laptop_adapter.c[8] * laptop_adapter.a[8].re
eq_21 : currentSensor.i[9].im@M laptop_adapter.c[8]@ laptop_adapter.a[8].im@ // currentSensor.i[9].im = laptop_adapter.c[8] * laptop_adapter.a[8].im
eq_22 : currentSensor.i[10].re@M laptop_adapter.c[9]@ laptop_adapter.a[9].re@ // currentSensor.i[10].re = laptop_adapter.c[9] * laptop_adapter.a[9].re
eq_23 : currentSensor.i[10].im@M laptop_adapter.c[9]@ laptop_adapter.a[9].im@ // currentSensor.i[10].im = laptop_adapter.c[9] * laptop_adapter.a[9].im
eq_24 : currentSensor.i[11].re@M laptop_adapter.c[10]@ laptop_adapter.a[10].re@ // currentSensor.i[11].re = laptop_adapter.c[10] * laptop_adapter.a[10].re
eq_25 : currentSensor.i[11].im@M laptop_adapter.c[10]@ laptop_adapter.a[10].im@ // currentSensor.i[11].im = laptop_adapter.c[10] * laptop_adapter.a[10].im
eq_26 : currentSensor.i[12].re@M laptop_adapter.c[11]@ laptop_adapter.a[11].re@ // currentSensor.i[12].re = laptop_adapter.c[11] * laptop_adapter.a[11].re
eq_27 : currentSensor.i[12].im@M laptop_adapter.c[11]@ laptop_adapter.a[11].im@ // currentSensor.i[12].im = laptop_adapter.c[11] * laptop_adapter.a[11].im
eq_28 : currentSensor.i[13].re@M laptop_adapter.c[12]@ laptop_adapter.a[12].re@ // currentSensor.i[13].re = laptop_adapter.c[12] * laptop_adapter.a[12].re
eq_29 : currentSensor.i[13].im@M laptop_adapter.c[12]@ laptop_adapter.a[12].im@ // currentSensor.i[13].im = laptop_adapter.c[12] * laptop_adapter.a[12].im
eq_30 : // algorithm

eq_31 : laptop_adapter.loadBase.omega@M der(v.theta)@ // laptop_adapter.loadBase.omega = der(v.theta)
eq_32 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_33 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_34 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_35 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_36 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_37 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_38 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_39 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_40 : z.v[9].re@M v.i[9].re@ v.i[9].im@ // z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im)
eq_41 : z.v[10].re@M v.i[10].re@ v.i[10].im@ // z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im)
eq_42 : z.v[11].re@M v.i[11].re@ v.i[11].im@ // z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im)
eq_43 : z.v[12].re@M v.i[12].re@ v.i[12].im@ // z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im)
eq_44 : z.v[13].re@M v.i[13].re@ v.i[13].im@ // z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im)
eq_45 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_46 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_47 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_48 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_49 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_50 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_51 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_52 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_53 : z.v[9].im@M v.i[9].im@ v.i[9].re@ // z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
eq_54 : z.v[10].im@M v.i[10].im@ v.i[10].re@ // z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
eq_55 : z.v[11].im@M v.i[11].im@ v.i[11].re@ // z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
eq_56 : z.v[12].im@M v.i[12].im@ v.i[12].re@ // z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
eq_57 : z.v[13].im@M v.i[13].im@ v.i[13].re@ // z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
eq_58 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_59 : z.v[1].re@ z1.v[1].re@M // z.v[1].re = 120.0 - z1.v[1].re
eq_60 : currentSensor.iMag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // currentSensor.iMag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_61 : currentSensor.iMag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // currentSensor.iMag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_62 : currentSensor.iMag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // currentSensor.iMag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_63 : currentSensor.iMag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // currentSensor.iMag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_64 : currentSensor.iMag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // currentSensor.iMag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_65 : currentSensor.iMag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // currentSensor.iMag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_66 : currentSensor.iMag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // currentSensor.iMag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_67 : currentSensor.iMag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // currentSensor.iMag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_68 : currentSensor.iMag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // currentSensor.iMag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_69 : currentSensor.iMag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // currentSensor.iMag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_70 : currentSensor.iMag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // currentSensor.iMag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_71 : currentSensor.iMag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // currentSensor.iMag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_72 : currentSensor.iMag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // currentSensor.iMag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_73 : currentSensor.omega@M der(v.theta)@ // currentSensor.omega = der(v.theta)
eq_74 : z1.v[1].re@ z1.i[1].re@M z1.i[1].im@ // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_75 : z.v[2].re@ z1.i[2].re@M z1.i[2].im@ // - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_76 : z.v[3].re@ z1.i[3].re@M z1.i[3].im@ // - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_77 : z.v[4].re@ z1.i[4].re@M z1.i[4].im@ // - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
eq_78 : z.v[5].re@ z1.i[5].re@M z1.i[5].im@ // - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
eq_79 : z.v[6].re@ z1.i[6].re@M z1.i[6].im@ // - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
eq_80 : z.v[7].re@ z1.i[7].re@M z1.i[7].im@ // - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
eq_81 : z.v[8].re@ z1.i[8].re@M z1.i[8].im@ // - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
eq_82 : z.v[9].re@ z1.i[9].re@M z1.i[9].im@ // - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
eq_83 : z.v[10].re@ z1.i[10].re@M z1.i[10].im@ // - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
eq_84 : z.v[11].re@ z1.i[11].re@M z1.i[11].im@ // - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
eq_85 : z.v[12].re@ z1.i[12].re@M z1.i[12].im@ // - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
eq_86 : z.v[13].re@ z1.i[13].re@M z1.i[13].im@ // - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
eq_87 : z.v[1].im@ z1.i[1].im@M z1.i[1].re@ // - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_88 : z.v[2].im@ z1.i[2].im@M z1.i[2].re@ // - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_89 : z.v[3].im@ z1.i[3].im@M z1.i[3].re@ // - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_90 : z.v[4].im@ z1.i[4].im@M z1.i[4].re@ // - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
eq_91 : z.v[5].im@ z1.i[5].im@M z1.i[5].re@ // - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
eq_92 : z.v[6].im@ z1.i[6].im@M z1.i[6].re@ // - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
eq_93 : z.v[7].im@ z1.i[7].im@M z1.i[7].re@ // - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
eq_94 : z.v[8].im@ z1.i[8].im@M z1.i[8].re@ // - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
eq_95 : z.v[9].im@ z1.i[9].im@M z1.i[9].re@ // - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
eq_96 : z.v[10].im@ z1.i[10].im@M z1.i[10].re@ // - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
eq_97 : z.v[11].im@ z1.i[11].im@M z1.i[11].re@ // - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
eq_98 : z.v[12].im@ z1.i[12].im@M z1.i[12].re@ // - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
eq_99 : z.v[13].im@ z1.i[13].im@M z1.i[13].re@ // - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
eq_100 : z1.omega@M der(v.theta)@ // z1.omega = der(v.theta)
eq_101 : currentSensor.i[1].im@ v.i[1].im@M z1.i[1].im@ // currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0
eq_102 : currentSensor.i[2].im@ v.i[2].im@M z1.i[2].im@ // currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0
eq_103 : currentSensor.i[3].im@ v.i[3].im@M z1.i[3].im@ // currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0
eq_104 : currentSensor.i[4].im@ v.i[4].im@M z1.i[4].im@ // currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0
eq_105 : currentSensor.i[5].im@ v.i[5].im@M z1.i[5].im@ // currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0
eq_106 : currentSensor.i[6].im@ v.i[6].im@M z1.i[6].im@ // currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0
eq_107 : currentSensor.i[7].im@ v.i[7].im@M z1.i[7].im@ // currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0
eq_108 : currentSensor.i[8].im@ v.i[8].im@M z1.i[8].im@ // currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0
eq_109 : currentSensor.i[9].im@ v.i[9].im@M z1.i[9].im@ // currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0
eq_110 : currentSensor.i[10].im@ v.i[10].im@M z1.i[10].im@ // currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0
eq_111 : currentSensor.i[11].im@ v.i[11].im@M z1.i[11].im@ // currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0
eq_112 : currentSensor.i[12].im@ v.i[12].im@M z1.i[12].im@ // currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0
eq_113 : currentSensor.i[13].im@ v.i[13].im@M z1.i[13].im@ // currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0
eq_114 : currentSensor.i[1].re@ v.i[1].re@M z1.i[1].re@ // currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0
eq_115 : currentSensor.i[2].re@ v.i[2].re@M z1.i[2].re@ // currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0
eq_116 : currentSensor.i[3].re@ v.i[3].re@M z1.i[3].re@ // currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0
eq_117 : currentSensor.i[4].re@ v.i[4].re@M z1.i[4].re@ // currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0
eq_118 : currentSensor.i[5].re@ v.i[5].re@M z1.i[5].re@ // currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0
eq_119 : currentSensor.i[6].re@ v.i[6].re@M z1.i[6].re@ // currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0
eq_120 : currentSensor.i[7].re@ v.i[7].re@M z1.i[7].re@ // currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0
eq_121 : currentSensor.i[8].re@ v.i[8].re@M z1.i[8].re@ // currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0
eq_122 : currentSensor.i[9].re@ v.i[9].re@M z1.i[9].re@ // currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0
eq_123 : currentSensor.i[10].re@ v.i[10].re@M z1.i[10].re@ // currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0
eq_124 : currentSensor.i[11].re@ v.i[11].re@M z1.i[11].re@ // currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0
eq_125 : currentSensor.i[12].re@ v.i[12].re@M z1.i[12].re@ // currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0
eq_126 : currentSensor.i[13].re@ v.i[13].re@M z1.i[13].re@ // currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0
eq_127 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_128 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_129 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_130 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_131 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_132 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_133 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_134 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_135 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_136 : v.iMag[9]@M v.i[9].re@ v.i[9].im@ // v.iMag[9] = (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5
eq_137 : v.iMag[10]@M v.i[10].re@ v.i[10].im@ // v.iMag[10] = (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5
eq_138 : v.iMag[11]@M v.i[11].re@ v.i[11].im@ // v.iMag[11] = (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5
eq_139 : v.iMag[12]@M v.i[12].re@ v.i[12].im@ // v.iMag[12] = (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5
eq_140 : v.iMag[13]@M v.i[13].re@ v.i[13].im@ // v.iMag[13] = (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5
eq_141 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_142 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_143 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_144 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_145 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_146 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_147 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_148 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_149 : v.iArg[9]@M v.i[9].im@ v.i[9].re@ // v.iArg[9] = Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)
eq_150 : v.iArg[10]@M v.i[10].im@ v.i[10].re@ // v.iArg[10] = Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)
eq_151 : v.iArg[11]@M v.i[11].im@ v.i[11].re@ // v.iArg[11] = Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)
eq_152 : v.iArg[12]@M v.i[12].im@ v.i[12].re@ // v.iArg[12] = Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)
eq_153 : v.iArg[13]@M v.i[13].im@ v.i[13].re@ // v.iArg[13] = Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)
eq_154 : laptop_adapter.I_mag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.I_mag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_155 : laptop_adapter.I_mag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // laptop_adapter.I_mag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_156 : laptop_adapter.I_mag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // laptop_adapter.I_mag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_157 : laptop_adapter.I_mag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // laptop_adapter.I_mag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_158 : laptop_adapter.I_mag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // laptop_adapter.I_mag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_159 : laptop_adapter.I_mag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // laptop_adapter.I_mag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_160 : laptop_adapter.I_mag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // laptop_adapter.I_mag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_161 : laptop_adapter.I_mag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // laptop_adapter.I_mag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_162 : laptop_adapter.I_mag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // laptop_adapter.I_mag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_163 : laptop_adapter.I_mag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // laptop_adapter.I_mag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_164 : laptop_adapter.I_mag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // laptop_adapter.I_mag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_165 : laptop_adapter.I_mag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // laptop_adapter.I_mag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_166 : laptop_adapter.I_mag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // laptop_adapter.I_mag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_167 : laptop_adapter.V_mag[1]@M z1.v[1].re@ z.v[1].im@ // laptop_adapter.V_mag[1] = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_168 : laptop_adapter.V_mag[2]@M z.v[2].re@ z.v[2].im@ // laptop_adapter.V_mag[2] = ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_169 : laptop_adapter.V_mag[3]@M z.v[3].re@ z.v[3].im@ // laptop_adapter.V_mag[3] = ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_170 : laptop_adapter.V_mag[4]@M z.v[4].re@ z.v[4].im@ // laptop_adapter.V_mag[4] = ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_171 : laptop_adapter.V_mag[5]@M z.v[5].re@ z.v[5].im@ // laptop_adapter.V_mag[5] = ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_172 : laptop_adapter.V_mag[6]@M z.v[6].re@ z.v[6].im@ // laptop_adapter.V_mag[6] = ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_173 : laptop_adapter.V_mag[7]@M z.v[7].re@ z.v[7].im@ // laptop_adapter.V_mag[7] = ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_174 : laptop_adapter.V_mag[8]@M z.v[8].re@ z.v[8].im@ // laptop_adapter.V_mag[8] = ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_175 : laptop_adapter.V_mag[9]@M z.v[9].re@ z.v[9].im@ // laptop_adapter.V_mag[9] = ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5
eq_176 : laptop_adapter.V_mag[10]@M z.v[10].re@ z.v[10].im@ // laptop_adapter.V_mag[10] = ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5
eq_177 : laptop_adapter.V_mag[11]@M z.v[11].re@ z.v[11].im@ // laptop_adapter.V_mag[11] = ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5
eq_178 : laptop_adapter.V_mag[12]@M z.v[12].re@ z.v[12].im@ // laptop_adapter.V_mag[12] = ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5
eq_179 : laptop_adapter.V_mag[13]@M z.v[13].re@ z.v[13].im@ // laptop_adapter.V_mag[13] = ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5
eq_180 : laptop_adapter.V_arg[2]@M z.v[2].im@ z.v[2].re@ // laptop_adapter.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)
eq_181 : laptop_adapter.V_arg[3]@M z.v[3].im@ z.v[3].re@ // laptop_adapter.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)
eq_182 : laptop_adapter.V_arg[4]@M z.v[4].im@ z.v[4].re@ // laptop_adapter.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)
eq_183 : laptop_adapter.V_arg[5]@M z.v[5].im@ z.v[5].re@ // laptop_adapter.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)
eq_184 : laptop_adapter.V_arg[6]@M z.v[6].im@ z.v[6].re@ // laptop_adapter.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)
eq_185 : laptop_adapter.V_arg[7]@M z.v[7].im@ z.v[7].re@ // laptop_adapter.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)
eq_186 : laptop_adapter.V_arg[8]@M z.v[8].im@ z.v[8].re@ // laptop_adapter.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)
eq_187 : laptop_adapter.V_arg[9]@M z.v[9].im@ z.v[9].re@ // laptop_adapter.V_arg[9] = Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)
eq_188 : laptop_adapter.V_arg[10]@M z.v[10].im@ z.v[10].re@ // laptop_adapter.V_arg[10] = Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)
eq_189 : laptop_adapter.V_arg[11]@M z.v[11].im@ z.v[11].re@ // laptop_adapter.V_arg[11] = Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)
eq_190 : laptop_adapter.V_arg[12]@M z.v[12].im@ z.v[12].re@ // laptop_adapter.V_arg[12] = Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)
eq_191 : laptop_adapter.V_arg[13]@M z.v[13].im@ z.v[13].re@ // laptop_adapter.V_arg[13] = Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)
eq_192 : laptop_adapter.magScale@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.magScale = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_193 : laptop_adapter.argAdj[1]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[1] = 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]
eq_194 : laptop_adapter.argAdj[2]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[2] = 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]
eq_195 : laptop_adapter.argAdj[3]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[3] = -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]
eq_196 : laptop_adapter.argAdj[4]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[4] = 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]
eq_197 : laptop_adapter.argAdj[5]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[5] = 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]
eq_198 : laptop_adapter.argAdj[6]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[6] = 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]
eq_199 : laptop_adapter.argAdj[7]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[7] = 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]
eq_200 : laptop_adapter.argAdj[8]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[8] = -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]
eq_201 : laptop_adapter.argAdj[9]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[9] = 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]
eq_202 : laptop_adapter.argAdj[10]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[10] = 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]
eq_203 : laptop_adapter.argAdj[11]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[11] = -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]
eq_204 : laptop_adapter.argAdj[12]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[12] = 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]
eq_205 : laptop_adapter.a[1].re@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].re = cos(laptop_adapter.argAdj[1])
eq_206 : laptop_adapter.a[1].im@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].im = sin(laptop_adapter.argAdj[1])
eq_207 : laptop_adapter.a[2].re@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].re = cos(laptop_adapter.argAdj[2])
eq_208 : laptop_adapter.a[2].im@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].im = sin(laptop_adapter.argAdj[2])
eq_209 : laptop_adapter.a[3].re@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].re = cos(laptop_adapter.argAdj[3])
eq_210 : laptop_adapter.a[3].im@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].im = sin(laptop_adapter.argAdj[3])
eq_211 : laptop_adapter.a[4].re@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].re = cos(laptop_adapter.argAdj[4])
eq_212 : laptop_adapter.a[4].im@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].im = sin(laptop_adapter.argAdj[4])
eq_213 : laptop_adapter.a[5].re@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].re = cos(laptop_adapter.argAdj[5])
eq_214 : laptop_adapter.a[5].im@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].im = sin(laptop_adapter.argAdj[5])
eq_215 : laptop_adapter.a[6].re@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].re = cos(laptop_adapter.argAdj[6])
eq_216 : laptop_adapter.a[6].im@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].im = sin(laptop_adapter.argAdj[6])
eq_217 : laptop_adapter.a[7].re@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].re = cos(laptop_adapter.argAdj[7])
eq_218 : laptop_adapter.a[7].im@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].im = sin(laptop_adapter.argAdj[7])
eq_219 : laptop_adapter.a[8].re@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].re = cos(laptop_adapter.argAdj[8])
eq_220 : laptop_adapter.a[8].im@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].im = sin(laptop_adapter.argAdj[8])
eq_221 : laptop_adapter.a[9].re@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].re = cos(laptop_adapter.argAdj[9])
eq_222 : laptop_adapter.a[9].im@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].im = sin(laptop_adapter.argAdj[9])
eq_223 : laptop_adapter.a[10].re@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].re = cos(laptop_adapter.argAdj[10])
eq_224 : laptop_adapter.a[10].im@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].im = sin(laptop_adapter.argAdj[10])
eq_225 : laptop_adapter.a[11].re@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].re = cos(laptop_adapter.argAdj[11])
eq_226 : laptop_adapter.a[11].im@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].im = sin(laptop_adapter.argAdj[11])
eq_227 : laptop_adapter.a[12].re@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].re = cos(laptop_adapter.argAdj[12])
eq_228 : laptop_adapter.a[12].im@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].im = sin(laptop_adapter.argAdj[12])
eq_229 : laptop_adapter.c[1]@M laptop_adapter.magScale@ // laptop_adapter.c[1] = laptop_adapter.magScale * 0.9421865565594479
eq_230 : laptop_adapter.c[2]@M laptop_adapter.magScale@ // laptop_adapter.c[2] = laptop_adapter.magScale * 0.846418595204449
eq_231 : laptop_adapter.c[3]@M laptop_adapter.magScale@ // laptop_adapter.c[3] = laptop_adapter.magScale * 0.7174634219299512
eq_232 : laptop_adapter.c[4]@M laptop_adapter.magScale@ // laptop_adapter.c[4] = laptop_adapter.magScale * 0.568269396387493
eq_233 : laptop_adapter.c[5]@M laptop_adapter.magScale@ // laptop_adapter.c[5] = laptop_adapter.magScale * 0.4142504288040016
eq_234 : laptop_adapter.c[6]@M laptop_adapter.magScale@ // laptop_adapter.c[6] = laptop_adapter.magScale * 0.2722289795439818
eq_235 : laptop_adapter.c[7]@M laptop_adapter.magScale@ // laptop_adapter.c[7] = laptop_adapter.magScale * 0.1499700094183941
eq_236 : laptop_adapter.c[8]@M laptop_adapter.magScale@ // laptop_adapter.c[8] = laptop_adapter.magScale * 0.060532358446546
eq_237 : laptop_adapter.c[9]@M laptop_adapter.magScale@ // laptop_adapter.c[9] = laptop_adapter.magScale * 0.0286742846032879
eq_238 : laptop_adapter.c[10]@M laptop_adapter.magScale@ // laptop_adapter.c[10] = laptop_adapter.magScale * 0.0500554183998412
eq_239 : laptop_adapter.c[11]@M laptop_adapter.magScale@ // laptop_adapter.c[11] = laptop_adapter.magScale * 0.0574038038345626
eq_240 : laptop_adapter.c[12]@M laptop_adapter.magScale@ // laptop_adapter.c[12] = laptop_adapter.magScale * 0.0490634253296239
eq_241 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_242 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_243 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_244 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_245 : z1.vFundAbs@M z1.v[1].re@ z.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_246 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_247 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
eq_248 : currentSensor.iArg[1]@M currentSensor.i[1].im@ currentSensor.i[1].re@ // currentSensor.iArg[1] = Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)
eq_249 : currentSensor.iArg[2]@M currentSensor.i[2].im@ currentSensor.i[2].re@ // currentSensor.iArg[2] = Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)
eq_250 : currentSensor.iArg[3]@M currentSensor.i[3].im@ currentSensor.i[3].re@ // currentSensor.iArg[3] = Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)
eq_251 : currentSensor.iArg[4]@M currentSensor.i[4].im@ currentSensor.i[4].re@ // currentSensor.iArg[4] = Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)
eq_252 : currentSensor.iArg[5]@M currentSensor.i[5].im@ currentSensor.i[5].re@ // currentSensor.iArg[5] = Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)
eq_253 : currentSensor.iArg[6]@M currentSensor.i[6].im@ currentSensor.i[6].re@ // currentSensor.iArg[6] = Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)
eq_254 : currentSensor.iArg[7]@M currentSensor.i[7].im@ currentSensor.i[7].re@ // currentSensor.iArg[7] = Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)
eq_255 : currentSensor.iArg[8]@M currentSensor.i[8].im@ currentSensor.i[8].re@ // currentSensor.iArg[8] = Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)
eq_256 : currentSensor.iArg[9]@M currentSensor.i[9].im@ currentSensor.i[9].re@ // currentSensor.iArg[9] = Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)
eq_257 : currentSensor.iArg[10]@M currentSensor.i[10].im@ currentSensor.i[10].re@ // currentSensor.iArg[10] = Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)
eq_258 : currentSensor.iArg[11]@M currentSensor.i[11].im@ currentSensor.i[11].re@ // currentSensor.iArg[11] = Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)
eq_259 : currentSensor.iArg[12]@M currentSensor.i[12].im@ currentSensor.i[12].re@ // currentSensor.iArg[12] = Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)
eq_260 : currentSensor.iArg[13]@M currentSensor.i[13].im@ currentSensor.i[13].re@ // currentSensor.iArg[13] = Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)
eq_261 : laptop_adapter.V_arg[1]@M z.v[1].im@ z1.v[1].re@ // laptop_adapter.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)

Starting automatic tearing
BiPGraph (9 equations, 9 variables)
Variables: {currentSensor.i[1].im v.i[1].im z.v[1].im z1.i[1].im z1.i[1].re v.i[1].re z.v[1].re z1.v[1].re currentSensor.i[1].re }
eq_5 : currentSensor.i[1].im@M z.v[1].im# z1.v[1].re# // currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_101 : currentSensor.i[1].im@ v.i[1].im@M z1.i[1].im@ // currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0
eq_45 : z.v[1].im@M v.i[1].im# v.i[1].re# // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_87 : z.v[1].im@ z1.i[1].im# z1.i[1].re# // - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_74 : z1.v[1].re@ z1.i[1].re# z1.i[1].im# // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_114 : currentSensor.i[1].re@ v.i[1].re@M z1.i[1].re@ // currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0
eq_32 : z.v[1].re@M v.i[1].re# v.i[1].im# // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_59 : z.v[1].re@ z1.v[1].re@M // z.v[1].re = 120.0 - z1.v[1].re
eq_4 : currentSensor.i[1].re@M z1.v[1].re# z.v[1].im# // currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)

Initial matching
----------------------------------------
BiPGraph matching:
eq_5 : currentSensor.i[1].im
eq_101 : v.i[1].im
eq_45 : z.v[1].im
eq_114 : v.i[1].re
eq_32 : z.v[1].re
eq_59 : z1.v[1].re
eq_4 : currentSensor.i[1].re
Unmatched equations: {eq_87 eq_74 }
Unmatched variables: {z1.i[1].im z1.i[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_5 : currentSensor.i[1].im
eq_101 : v.i[1].im
eq_45 : z.v[1].im
eq_114 : v.i[1].re
eq_32 : z.v[1].re
eq_59 : z1.v[1].re
eq_4 : currentSensor.i[1].re
Unmatched equations: {eq_87 eq_74 }
Unmatched variables: {z1.i[1].im z1.i[1].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re, tearing with variable: v.i[1].re
Automatic tearing pair, equation: z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im, tearing with variable: v.i[1].im
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[2].im z.v[2].im z1.i[2].im z1.i[2].re v.i[2].re z.v[2].re }
eq_102 : v.i[2].im@M z1.i[2].im@ // currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0
eq_46 : z.v[2].im@M v.i[2].im# v.i[2].re# // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_88 : z.v[2].im@ z1.i[2].im# z1.i[2].re# // - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_75 : z.v[2].re@ z1.i[2].re# z1.i[2].im# // - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_115 : v.i[2].re@M z1.i[2].re@ // currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0
eq_33 : z.v[2].re@M v.i[2].re# v.i[2].im# // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_102 : v.i[2].im
eq_46 : z.v[2].im
eq_115 : v.i[2].re
eq_33 : z.v[2].re
Unmatched equations: {eq_88 eq_75 }
Unmatched variables: {z1.i[2].im z1.i[2].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_102 : v.i[2].im
eq_46 : z.v[2].im
eq_115 : v.i[2].re
eq_33 : z.v[2].re
Unmatched equations: {eq_88 eq_75 }
Unmatched variables: {z1.i[2].im z1.i[2].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re, tearing with variable: z1.i[2].im
Automatic tearing pair, equation: - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im, tearing with variable: z1.i[2].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[3].im z.v[3].im z1.i[3].im z1.i[3].re v.i[3].re z.v[3].re }
eq_103 : v.i[3].im@M z1.i[3].im@ // currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0
eq_47 : z.v[3].im@M v.i[3].im# v.i[3].re# // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_89 : z.v[3].im@ z1.i[3].im# z1.i[3].re# // - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_76 : z.v[3].re@ z1.i[3].re# z1.i[3].im# // - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_116 : v.i[3].re@M z1.i[3].re@ // currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0
eq_34 : z.v[3].re@M v.i[3].re# v.i[3].im# // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_103 : v.i[3].im
eq_47 : z.v[3].im
eq_116 : v.i[3].re
eq_34 : z.v[3].re
Unmatched equations: {eq_89 eq_76 }
Unmatched variables: {z1.i[3].im z1.i[3].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_103 : v.i[3].im
eq_47 : z.v[3].im
eq_116 : v.i[3].re
eq_34 : z.v[3].re
Unmatched equations: {eq_89 eq_76 }
Unmatched variables: {z1.i[3].im z1.i[3].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re, tearing with variable: z1.i[3].im
Automatic tearing pair, equation: - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im, tearing with variable: z1.i[3].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[4].im z.v[4].im z1.i[4].im z1.i[4].re v.i[4].re z.v[4].re }
eq_104 : v.i[4].im@M z1.i[4].im@ // currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0
eq_48 : z.v[4].im@M v.i[4].im# v.i[4].re# // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_90 : z.v[4].im@ z1.i[4].im# z1.i[4].re# // - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
eq_77 : z.v[4].re@ z1.i[4].re# z1.i[4].im# // - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
eq_117 : v.i[4].re@M z1.i[4].re@ // currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0
eq_35 : z.v[4].re@M v.i[4].re# v.i[4].im# // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_104 : v.i[4].im
eq_48 : z.v[4].im
eq_117 : v.i[4].re
eq_35 : z.v[4].re
Unmatched equations: {eq_90 eq_77 }
Unmatched variables: {z1.i[4].im z1.i[4].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_104 : v.i[4].im
eq_48 : z.v[4].im
eq_117 : v.i[4].re
eq_35 : z.v[4].re
Unmatched equations: {eq_90 eq_77 }
Unmatched variables: {z1.i[4].im z1.i[4].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re, tearing with variable: z1.i[4].im
Automatic tearing pair, equation: - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im, tearing with variable: z1.i[4].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[5].im z.v[5].im z1.i[5].im z1.i[5].re v.i[5].re z.v[5].re }
eq_105 : v.i[5].im@M z1.i[5].im@ // currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0
eq_49 : z.v[5].im@M v.i[5].im# v.i[5].re# // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_91 : z.v[5].im@ z1.i[5].im# z1.i[5].re# // - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
eq_78 : z.v[5].re@ z1.i[5].re# z1.i[5].im# // - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
eq_118 : v.i[5].re@M z1.i[5].re@ // currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0
eq_36 : z.v[5].re@M v.i[5].re# v.i[5].im# // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_105 : v.i[5].im
eq_49 : z.v[5].im
eq_118 : v.i[5].re
eq_36 : z.v[5].re
Unmatched equations: {eq_91 eq_78 }
Unmatched variables: {z1.i[5].im z1.i[5].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_105 : v.i[5].im
eq_49 : z.v[5].im
eq_118 : v.i[5].re
eq_36 : z.v[5].re
Unmatched equations: {eq_91 eq_78 }
Unmatched variables: {z1.i[5].im z1.i[5].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re, tearing with variable: z1.i[5].im
Automatic tearing pair, equation: - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im, tearing with variable: z1.i[5].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[6].im z.v[6].im z1.i[6].im z1.i[6].re v.i[6].re z.v[6].re }
eq_106 : v.i[6].im@M z1.i[6].im@ // currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0
eq_50 : z.v[6].im@M v.i[6].im# v.i[6].re# // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_92 : z.v[6].im@ z1.i[6].im# z1.i[6].re# // - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
eq_79 : z.v[6].re@ z1.i[6].re# z1.i[6].im# // - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
eq_119 : v.i[6].re@M z1.i[6].re@ // currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0
eq_37 : z.v[6].re@M v.i[6].re# v.i[6].im# // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_106 : v.i[6].im
eq_50 : z.v[6].im
eq_119 : v.i[6].re
eq_37 : z.v[6].re
Unmatched equations: {eq_92 eq_79 }
Unmatched variables: {z1.i[6].im z1.i[6].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_106 : v.i[6].im
eq_50 : z.v[6].im
eq_119 : v.i[6].re
eq_37 : z.v[6].re
Unmatched equations: {eq_92 eq_79 }
Unmatched variables: {z1.i[6].im z1.i[6].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re, tearing with variable: z1.i[6].im
Automatic tearing pair, equation: - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im, tearing with variable: z1.i[6].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[7].im z.v[7].im z1.i[7].im z1.i[7].re v.i[7].re z.v[7].re }
eq_107 : v.i[7].im@M z1.i[7].im@ // currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0
eq_51 : z.v[7].im@M v.i[7].im# v.i[7].re# // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_93 : z.v[7].im@ z1.i[7].im# z1.i[7].re# // - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
eq_80 : z.v[7].re@ z1.i[7].re# z1.i[7].im# // - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
eq_120 : v.i[7].re@M z1.i[7].re@ // currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0
eq_38 : z.v[7].re@M v.i[7].re# v.i[7].im# // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_107 : v.i[7].im
eq_51 : z.v[7].im
eq_120 : v.i[7].re
eq_38 : z.v[7].re
Unmatched equations: {eq_93 eq_80 }
Unmatched variables: {z1.i[7].im z1.i[7].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_107 : v.i[7].im
eq_51 : z.v[7].im
eq_120 : v.i[7].re
eq_38 : z.v[7].re
Unmatched equations: {eq_93 eq_80 }
Unmatched variables: {z1.i[7].im z1.i[7].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re, tearing with variable: z1.i[7].im
Automatic tearing pair, equation: - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im, tearing with variable: z1.i[7].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[8].im z.v[8].im z1.i[8].im z1.i[8].re v.i[8].re z.v[8].re }
eq_108 : v.i[8].im@M z1.i[8].im@ // currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0
eq_52 : z.v[8].im@M v.i[8].im# v.i[8].re# // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_94 : z.v[8].im@ z1.i[8].im# z1.i[8].re# // - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
eq_81 : z.v[8].re@ z1.i[8].re# z1.i[8].im# // - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
eq_121 : v.i[8].re@M z1.i[8].re@ // currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0
eq_39 : z.v[8].re@M v.i[8].re# v.i[8].im# // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_108 : v.i[8].im
eq_52 : z.v[8].im
eq_121 : v.i[8].re
eq_39 : z.v[8].re
Unmatched equations: {eq_94 eq_81 }
Unmatched variables: {z1.i[8].im z1.i[8].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_108 : v.i[8].im
eq_52 : z.v[8].im
eq_121 : v.i[8].re
eq_39 : z.v[8].re
Unmatched equations: {eq_94 eq_81 }
Unmatched variables: {z1.i[8].im z1.i[8].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re, tearing with variable: z1.i[8].im
Automatic tearing pair, equation: - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im, tearing with variable: z1.i[8].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[9].im z.v[9].im z1.i[9].im z1.i[9].re v.i[9].re z.v[9].re }
eq_109 : v.i[9].im@M z1.i[9].im@ // currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0
eq_53 : z.v[9].im@M v.i[9].im# v.i[9].re# // z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
eq_95 : z.v[9].im@ z1.i[9].im# z1.i[9].re# // - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
eq_82 : z.v[9].re@ z1.i[9].re# z1.i[9].im# // - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
eq_122 : v.i[9].re@M z1.i[9].re@ // currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0
eq_40 : z.v[9].re@M v.i[9].re# v.i[9].im# // z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_109 : v.i[9].im
eq_53 : z.v[9].im
eq_122 : v.i[9].re
eq_40 : z.v[9].re
Unmatched equations: {eq_95 eq_82 }
Unmatched variables: {z1.i[9].im z1.i[9].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_109 : v.i[9].im
eq_53 : z.v[9].im
eq_122 : v.i[9].re
eq_40 : z.v[9].re
Unmatched equations: {eq_95 eq_82 }
Unmatched variables: {z1.i[9].im z1.i[9].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re, tearing with variable: z1.i[9].im
Automatic tearing pair, equation: - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im, tearing with variable: z1.i[9].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[10].im z.v[10].im z1.i[10].im z1.i[10].re v.i[10].re z.v[10].re }
eq_110 : v.i[10].im@M z1.i[10].im@ // currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0
eq_54 : z.v[10].im@M v.i[10].im# v.i[10].re# // z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
eq_96 : z.v[10].im@ z1.i[10].im# z1.i[10].re# // - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
eq_83 : z.v[10].re@ z1.i[10].re# z1.i[10].im# // - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
eq_123 : v.i[10].re@M z1.i[10].re@ // currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0
eq_41 : z.v[10].re@M v.i[10].re# v.i[10].im# // z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_110 : v.i[10].im
eq_54 : z.v[10].im
eq_123 : v.i[10].re
eq_41 : z.v[10].re
Unmatched equations: {eq_96 eq_83 }
Unmatched variables: {z1.i[10].im z1.i[10].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_110 : v.i[10].im
eq_54 : z.v[10].im
eq_123 : v.i[10].re
eq_41 : z.v[10].re
Unmatched equations: {eq_96 eq_83 }
Unmatched variables: {z1.i[10].im z1.i[10].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re, tearing with variable: z1.i[10].im
Automatic tearing pair, equation: - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im, tearing with variable: z1.i[10].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[11].im z.v[11].im z1.i[11].im z1.i[11].re v.i[11].re z.v[11].re }
eq_111 : v.i[11].im@M z1.i[11].im@ // currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0
eq_55 : z.v[11].im@M v.i[11].im# v.i[11].re# // z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
eq_97 : z.v[11].im@ z1.i[11].im# z1.i[11].re# // - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
eq_84 : z.v[11].re@ z1.i[11].re# z1.i[11].im# // - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
eq_124 : v.i[11].re@M z1.i[11].re@ // currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0
eq_42 : z.v[11].re@M v.i[11].re# v.i[11].im# // z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_111 : v.i[11].im
eq_55 : z.v[11].im
eq_124 : v.i[11].re
eq_42 : z.v[11].re
Unmatched equations: {eq_97 eq_84 }
Unmatched variables: {z1.i[11].im z1.i[11].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_111 : v.i[11].im
eq_55 : z.v[11].im
eq_124 : v.i[11].re
eq_42 : z.v[11].re
Unmatched equations: {eq_97 eq_84 }
Unmatched variables: {z1.i[11].im z1.i[11].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re, tearing with variable: z1.i[11].im
Automatic tearing pair, equation: - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im, tearing with variable: z1.i[11].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[12].im z.v[12].im z1.i[12].im z1.i[12].re v.i[12].re z.v[12].re }
eq_112 : v.i[12].im@M z1.i[12].im@ // currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0
eq_56 : z.v[12].im@M v.i[12].im# v.i[12].re# // z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
eq_98 : z.v[12].im@ z1.i[12].im# z1.i[12].re# // - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
eq_85 : z.v[12].re@ z1.i[12].re# z1.i[12].im# // - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
eq_125 : v.i[12].re@M z1.i[12].re@ // currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0
eq_43 : z.v[12].re@M v.i[12].re# v.i[12].im# // z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_112 : v.i[12].im
eq_56 : z.v[12].im
eq_125 : v.i[12].re
eq_43 : z.v[12].re
Unmatched equations: {eq_98 eq_85 }
Unmatched variables: {z1.i[12].im z1.i[12].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_112 : v.i[12].im
eq_56 : z.v[12].im
eq_125 : v.i[12].re
eq_43 : z.v[12].re
Unmatched equations: {eq_98 eq_85 }
Unmatched variables: {z1.i[12].im z1.i[12].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re, tearing with variable: z1.i[12].im
Automatic tearing pair, equation: - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im, tearing with variable: z1.i[12].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[13].im z.v[13].im z1.i[13].im z1.i[13].re v.i[13].re z.v[13].re }
eq_113 : v.i[13].im@M z1.i[13].im@ // currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0
eq_57 : z.v[13].im@M v.i[13].im# v.i[13].re# // z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
eq_99 : z.v[13].im@ z1.i[13].im# z1.i[13].re# // - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
eq_86 : z.v[13].re@ z1.i[13].re# z1.i[13].im# // - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
eq_126 : v.i[13].re@M z1.i[13].re@ // currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0
eq_44 : z.v[13].re@M v.i[13].re# v.i[13].im# // z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_113 : v.i[13].im
eq_57 : z.v[13].im
eq_126 : v.i[13].re
eq_44 : z.v[13].re
Unmatched equations: {eq_99 eq_86 }
Unmatched variables: {z1.i[13].im z1.i[13].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_113 : v.i[13].im
eq_57 : z.v[13].im
eq_126 : v.i[13].re
eq_44 : z.v[13].re
Unmatched equations: {eq_99 eq_86 }
Unmatched variables: {z1.i[13].im z1.i[13].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re, tearing with variable: z1.i[13].im
Automatic tearing pair, equation: - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im, tearing with variable: z1.i[13].re
***********************************
*********** ODE section ***********
***********************************

--- Solved equation ---
der(v.theta) := 6.283185307179586 * systemDef.fFund

***********************************
*********** Real outputs **********
***********************************

***********************************
*** Integer and boolean outputs ***
***********************************

***********************************
********* Other variables *********
***********************************

--- Torn system (Block 1) of 2 iteration variables and 7 solved variables ---
Torn variables:
  z.v[1].re
  z1.v[1].re
  z.v[1].im
  currentSensor.i[1].re
  z1.i[1].re
  currentSensor.i[1].im
  z1.i[1].im

Iteration variables:
  v.i[1].re (start=1)
  v.i[1].im (start=-1)

Torn equations:
  z.v[1].re := z.z.re .* (- v.i[1].re) + (- z.z.im .* systemDef.hrms[1] .* (- v.i[1].im))
  z1.v[1].re := - z.v[1].re + 120.0
  z.v[1].im := z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
  currentSensor.i[1].re := (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
  z1.i[1].re := - currentSensor.i[1].re + (- v.i[1].re)
  currentSensor.i[1].im := (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
  z1.i[1].im := - currentSensor.i[1].im + (- v.i[1].im)

Residual equations:
  - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
    Iteration variables: v.i[1].re
  z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
    Iteration variables: v.i[1].im

--- Solved equation ---
v.P1 := 120.0 * v.i[1].re

--- Solved equation ---
v.iMag[1] := (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.magScale := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[1] := laptop_adapter.magScale * 0.9421865565594479

--- Solved equation ---
laptop_adapter.V_arg[1] := Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)

--- Solved equation ---
laptop_adapter.argAdj[1] := 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]

--- Solved equation ---
laptop_adapter.a[1].im := sin(laptop_adapter.argAdj[1])

--- Solved equation ---
currentSensor.i[2].im := laptop_adapter.c[1] * laptop_adapter.a[1].im

--- Solved equation ---
laptop_adapter.a[1].re := cos(laptop_adapter.argAdj[1])

--- Solved equation ---
currentSensor.i[2].re := laptop_adapter.c[1] * laptop_adapter.a[1].re

--- Torn linear system (Block 2) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[2].im
  v.i[2].re
  z.v[2].im
  z.v[2].re

Iteration variables:
  z1.i[2].im
  z1.i[2].re

Torn equations:
  v.i[2].im := - currentSensor.i[2].im + (- z1.i[2].im)
  v.i[2].re := - currentSensor.i[2].re + (- z1.i[2].re)
  z.v[2].im := z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
  z.v[2].re := z.z.re .* (- v.i[2].re) + (- z.z.im .* systemDef.hrms[2] .* (- v.i[2].im))

Residual equations:
  - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
    Iteration variables: z1.i[2].im
  - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
    Iteration variables: z1.i[2].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[2], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[2], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[2]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[2], - z1.z.re|

--- Solved equation ---
v.iMag[2] := (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[2] := laptop_adapter.magScale * 0.846418595204449

--- Solved equation ---
laptop_adapter.argAdj[2] := 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]

--- Solved equation ---
laptop_adapter.a[2].im := sin(laptop_adapter.argAdj[2])

--- Solved equation ---
currentSensor.i[3].im := laptop_adapter.c[2] * laptop_adapter.a[2].im

--- Solved equation ---
laptop_adapter.a[2].re := cos(laptop_adapter.argAdj[2])

--- Solved equation ---
currentSensor.i[3].re := laptop_adapter.c[2] * laptop_adapter.a[2].re

--- Torn linear system (Block 3) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[3].im
  v.i[3].re
  z.v[3].im
  z.v[3].re

Iteration variables:
  z1.i[3].im
  z1.i[3].re

Torn equations:
  v.i[3].im := - currentSensor.i[3].im + (- z1.i[3].im)
  v.i[3].re := - currentSensor.i[3].re + (- z1.i[3].re)
  z.v[3].im := z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
  z.v[3].re := z.z.re .* (- v.i[3].re) + (- z.z.im .* systemDef.hrms[3] .* (- v.i[3].im))

Residual equations:
  - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
    Iteration variables: z1.i[3].im
  - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
    Iteration variables: z1.i[3].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[3], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[3], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[3]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[3], - z1.z.re|

--- Solved equation ---
v.iMag[3] := (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[3] := laptop_adapter.magScale * 0.7174634219299512

--- Solved equation ---
laptop_adapter.argAdj[3] := -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]

--- Solved equation ---
laptop_adapter.a[3].im := sin(laptop_adapter.argAdj[3])

--- Solved equation ---
currentSensor.i[4].im := laptop_adapter.c[3] * laptop_adapter.a[3].im

--- Solved equation ---
laptop_adapter.a[3].re := cos(laptop_adapter.argAdj[3])

--- Solved equation ---
currentSensor.i[4].re := laptop_adapter.c[3] * laptop_adapter.a[3].re

--- Torn linear system (Block 4) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[4].im
  v.i[4].re
  z.v[4].im
  z.v[4].re

Iteration variables:
  z1.i[4].im
  z1.i[4].re

Torn equations:
  v.i[4].im := - currentSensor.i[4].im + (- z1.i[4].im)
  v.i[4].re := - currentSensor.i[4].re + (- z1.i[4].re)
  z.v[4].im := z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
  z.v[4].re := z.z.re .* (- v.i[4].re) + (- z.z.im .* systemDef.hrms[4] .* (- v.i[4].im))

Residual equations:
  - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
    Iteration variables: z1.i[4].im
  - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
    Iteration variables: z1.i[4].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[4], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[4], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[4]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[4], - z1.z.re|

--- Solved equation ---
v.iMag[4] := (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[4] := laptop_adapter.magScale * 0.568269396387493

--- Solved equation ---
laptop_adapter.argAdj[4] := 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]

--- Solved equation ---
laptop_adapter.a[4].im := sin(laptop_adapter.argAdj[4])

--- Solved equation ---
currentSensor.i[5].im := laptop_adapter.c[4] * laptop_adapter.a[4].im

--- Solved equation ---
laptop_adapter.a[4].re := cos(laptop_adapter.argAdj[4])

--- Solved equation ---
currentSensor.i[5].re := laptop_adapter.c[4] * laptop_adapter.a[4].re

--- Torn linear system (Block 5) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[5].im
  v.i[5].re
  z.v[5].im
  z.v[5].re

Iteration variables:
  z1.i[5].im
  z1.i[5].re

Torn equations:
  v.i[5].im := - currentSensor.i[5].im + (- z1.i[5].im)
  v.i[5].re := - currentSensor.i[5].re + (- z1.i[5].re)
  z.v[5].im := z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
  z.v[5].re := z.z.re .* (- v.i[5].re) + (- z.z.im .* systemDef.hrms[5] .* (- v.i[5].im))

Residual equations:
  - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
    Iteration variables: z1.i[5].im
  - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
    Iteration variables: z1.i[5].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[5], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[5], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[5]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[5], - z1.z.re|

--- Solved equation ---
v.iMag[5] := (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[5] := laptop_adapter.magScale * 0.4142504288040016

--- Solved equation ---
laptop_adapter.argAdj[5] := 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]

--- Solved equation ---
laptop_adapter.a[5].im := sin(laptop_adapter.argAdj[5])

--- Solved equation ---
currentSensor.i[6].im := laptop_adapter.c[5] * laptop_adapter.a[5].im

--- Solved equation ---
laptop_adapter.a[5].re := cos(laptop_adapter.argAdj[5])

--- Solved equation ---
currentSensor.i[6].re := laptop_adapter.c[5] * laptop_adapter.a[5].re

--- Torn linear system (Block 6) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[6].im
  v.i[6].re
  z.v[6].im
  z.v[6].re

Iteration variables:
  z1.i[6].im
  z1.i[6].re

Torn equations:
  v.i[6].im := - currentSensor.i[6].im + (- z1.i[6].im)
  v.i[6].re := - currentSensor.i[6].re + (- z1.i[6].re)
  z.v[6].im := z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
  z.v[6].re := z.z.re .* (- v.i[6].re) + (- z.z.im .* systemDef.hrms[6] .* (- v.i[6].im))

Residual equations:
  - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
    Iteration variables: z1.i[6].im
  - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
    Iteration variables: z1.i[6].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[6], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[6], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[6]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[6], - z1.z.re|

--- Solved equation ---
v.iMag[6] := (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[6] := laptop_adapter.magScale * 0.2722289795439818

--- Solved equation ---
laptop_adapter.argAdj[6] := 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]

--- Solved equation ---
laptop_adapter.a[6].im := sin(laptop_adapter.argAdj[6])

--- Solved equation ---
currentSensor.i[7].im := laptop_adapter.c[6] * laptop_adapter.a[6].im

--- Solved equation ---
laptop_adapter.a[6].re := cos(laptop_adapter.argAdj[6])

--- Solved equation ---
currentSensor.i[7].re := laptop_adapter.c[6] * laptop_adapter.a[6].re

--- Torn linear system (Block 7) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[7].im
  v.i[7].re
  z.v[7].im
  z.v[7].re

Iteration variables:
  z1.i[7].im
  z1.i[7].re

Torn equations:
  v.i[7].im := - currentSensor.i[7].im + (- z1.i[7].im)
  v.i[7].re := - currentSensor.i[7].re + (- z1.i[7].re)
  z.v[7].im := z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
  z.v[7].re := z.z.re .* (- v.i[7].re) + (- z.z.im .* systemDef.hrms[7] .* (- v.i[7].im))

Residual equations:
  - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
    Iteration variables: z1.i[7].im
  - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
    Iteration variables: z1.i[7].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[7], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[7], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[7]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[7], - z1.z.re|

--- Solved equation ---
v.iMag[7] := (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[7] := laptop_adapter.magScale * 0.1499700094183941

--- Solved equation ---
laptop_adapter.argAdj[7] := 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]

--- Solved equation ---
laptop_adapter.a[7].im := sin(laptop_adapter.argAdj[7])

--- Solved equation ---
currentSensor.i[8].im := laptop_adapter.c[7] * laptop_adapter.a[7].im

--- Solved equation ---
laptop_adapter.a[7].re := cos(laptop_adapter.argAdj[7])

--- Solved equation ---
currentSensor.i[8].re := laptop_adapter.c[7] * laptop_adapter.a[7].re

--- Torn linear system (Block 8) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[8].im
  v.i[8].re
  z.v[8].im
  z.v[8].re

Iteration variables:
  z1.i[8].im
  z1.i[8].re

Torn equations:
  v.i[8].im := - currentSensor.i[8].im + (- z1.i[8].im)
  v.i[8].re := - currentSensor.i[8].re + (- z1.i[8].re)
  z.v[8].im := z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
  z.v[8].re := z.z.re .* (- v.i[8].re) + (- z.z.im .* systemDef.hrms[8] .* (- v.i[8].im))

Residual equations:
  - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
    Iteration variables: z1.i[8].im
  - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
    Iteration variables: z1.i[8].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[8], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[8], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[8]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[8], - z1.z.re|

--- Solved equation ---
v.iMag[8] := (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[8] := laptop_adapter.magScale * 0.060532358446546

--- Solved equation ---
laptop_adapter.argAdj[8] := -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]

--- Solved equation ---
laptop_adapter.a[8].im := sin(laptop_adapter.argAdj[8])

--- Solved equation ---
currentSensor.i[9].im := laptop_adapter.c[8] * laptop_adapter.a[8].im

--- Solved equation ---
laptop_adapter.a[8].re := cos(laptop_adapter.argAdj[8])

--- Solved equation ---
currentSensor.i[9].re := laptop_adapter.c[8] * laptop_adapter.a[8].re

--- Torn linear system (Block 9) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[9].im
  v.i[9].re
  z.v[9].im
  z.v[9].re

Iteration variables:
  z1.i[9].im
  z1.i[9].re

Torn equations:
  v.i[9].im := - currentSensor.i[9].im + (- z1.i[9].im)
  v.i[9].re := - currentSensor.i[9].re + (- z1.i[9].re)
  z.v[9].im := z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
  z.v[9].re := z.z.re .* (- v.i[9].re) + (- z.z.im .* systemDef.hrms[9] .* (- v.i[9].im))

Residual equations:
  - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
    Iteration variables: z1.i[9].im
  - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
    Iteration variables: z1.i[9].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[9], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[9], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[9]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[9], - z1.z.re|

--- Solved equation ---
v.iMag[9] := (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[9] := laptop_adapter.magScale * 0.0286742846032879

--- Solved equation ---
laptop_adapter.argAdj[9] := 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]

--- Solved equation ---
laptop_adapter.a[9].im := sin(laptop_adapter.argAdj[9])

--- Solved equation ---
currentSensor.i[10].im := laptop_adapter.c[9] * laptop_adapter.a[9].im

--- Solved equation ---
laptop_adapter.a[9].re := cos(laptop_adapter.argAdj[9])

--- Solved equation ---
currentSensor.i[10].re := laptop_adapter.c[9] * laptop_adapter.a[9].re

--- Torn linear system (Block 10) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[10].im
  v.i[10].re
  z.v[10].im
  z.v[10].re

Iteration variables:
  z1.i[10].im
  z1.i[10].re

Torn equations:
  v.i[10].im := - currentSensor.i[10].im + (- z1.i[10].im)
  v.i[10].re := - currentSensor.i[10].re + (- z1.i[10].re)
  z.v[10].im := z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
  z.v[10].re := z.z.re .* (- v.i[10].re) + (- z.z.im .* systemDef.hrms[10] .* (- v.i[10].im))

Residual equations:
  - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
    Iteration variables: z1.i[10].im
  - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
    Iteration variables: z1.i[10].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[10], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[10], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[10]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[10], - z1.z.re|

--- Solved equation ---
v.iMag[10] := (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[10] := laptop_adapter.magScale * 0.0500554183998412

--- Solved equation ---
laptop_adapter.argAdj[10] := 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]

--- Solved equation ---
laptop_adapter.a[10].im := sin(laptop_adapter.argAdj[10])

--- Solved equation ---
currentSensor.i[11].im := laptop_adapter.c[10] * laptop_adapter.a[10].im

--- Solved equation ---
laptop_adapter.a[10].re := cos(laptop_adapter.argAdj[10])

--- Solved equation ---
currentSensor.i[11].re := laptop_adapter.c[10] * laptop_adapter.a[10].re

--- Torn linear system (Block 11) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[11].im
  v.i[11].re
  z.v[11].im
  z.v[11].re

Iteration variables:
  z1.i[11].im
  z1.i[11].re

Torn equations:
  v.i[11].im := - currentSensor.i[11].im + (- z1.i[11].im)
  v.i[11].re := - currentSensor.i[11].re + (- z1.i[11].re)
  z.v[11].im := z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
  z.v[11].re := z.z.re .* (- v.i[11].re) + (- z.z.im .* systemDef.hrms[11] .* (- v.i[11].im))

Residual equations:
  - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
    Iteration variables: z1.i[11].im
  - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
    Iteration variables: z1.i[11].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[11], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[11], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[11]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[11], - z1.z.re|

--- Solved equation ---
v.iMag[11] := (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[11] := laptop_adapter.magScale * 0.0574038038345626

--- Solved equation ---
laptop_adapter.argAdj[11] := -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]

--- Solved equation ---
laptop_adapter.a[11].im := sin(laptop_adapter.argAdj[11])

--- Solved equation ---
currentSensor.i[12].im := laptop_adapter.c[11] * laptop_adapter.a[11].im

--- Solved equation ---
laptop_adapter.a[11].re := cos(laptop_adapter.argAdj[11])

--- Solved equation ---
currentSensor.i[12].re := laptop_adapter.c[11] * laptop_adapter.a[11].re

--- Torn linear system (Block 12) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[12].im
  v.i[12].re
  z.v[12].im
  z.v[12].re

Iteration variables:
  z1.i[12].im
  z1.i[12].re

Torn equations:
  v.i[12].im := - currentSensor.i[12].im + (- z1.i[12].im)
  v.i[12].re := - currentSensor.i[12].re + (- z1.i[12].re)
  z.v[12].im := z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
  z.v[12].re := z.z.re .* (- v.i[12].re) + (- z.z.im .* systemDef.hrms[12] .* (- v.i[12].im))

Residual equations:
  - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
    Iteration variables: z1.i[12].im
  - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
    Iteration variables: z1.i[12].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[12], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[12], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[12]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[12], - z1.z.re|

--- Solved equation ---
v.iMag[12] := (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[12] := laptop_adapter.magScale * 0.0490634253296239

--- Solved equation ---
laptop_adapter.argAdj[12] := 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]

--- Solved equation ---
laptop_adapter.a[12].im := sin(laptop_adapter.argAdj[12])

--- Solved equation ---
currentSensor.i[13].im := laptop_adapter.c[12] * laptop_adapter.a[12].im

--- Solved equation ---
laptop_adapter.a[12].re := cos(laptop_adapter.argAdj[12])

--- Solved equation ---
currentSensor.i[13].re := laptop_adapter.c[12] * laptop_adapter.a[12].re

--- Torn linear system (Block 13) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[13].im
  v.i[13].re
  z.v[13].im
  z.v[13].re

Iteration variables:
  z1.i[13].im
  z1.i[13].re

Torn equations:
  v.i[13].im := - currentSensor.i[13].im + (- z1.i[13].im)
  v.i[13].re := - currentSensor.i[13].re + (- z1.i[13].re)
  z.v[13].im := z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
  z.v[13].re := z.z.re .* (- v.i[13].re) + (- z.z.im .* systemDef.hrms[13] .* (- v.i[13].im))

Residual equations:
  - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
    Iteration variables: z1.i[13].im
  - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
    Iteration variables: z1.i[13].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[13], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[13], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[13]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[13], - z1.z.re|

--- Solved equation ---
v.iMag[13] := (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
v.iArg[1] := Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)

--- Solved equation ---
v.iArg[2] := Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)

--- Solved equation ---
v.iArg[3] := Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)

--- Solved equation ---
v.iArg[4] := Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)

--- Solved equation ---
v.iArg[5] := Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)

--- Solved equation ---
v.iArg[6] := Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)

--- Solved equation ---
v.iArg[7] := Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)

--- Solved equation ---
v.iArg[8] := Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)

--- Solved equation ---
v.iArg[9] := Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)

--- Solved equation ---
v.iArg[10] := Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)

--- Solved equation ---
v.iArg[11] := Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)

--- Solved equation ---
v.iArg[12] := Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)

--- Solved equation ---
v.iArg[13] := Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)

--- Solved equation ---
v.omega := der(v.theta)

--- Solved equation ---
laptop_adapter.loadBase.omega := der(v.theta)

--- Solved equation ---
laptop_adapter.I_mag[1] := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[2] := (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[3] := (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[4] := (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[5] := (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[6] := (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[7] := (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[8] := (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[9] := (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[10] := (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[11] := (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[12] := (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[13] := (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[1] := (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[2] := ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[3] := ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[4] := ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[5] := ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[6] := ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[7] := ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[8] := ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[9] := ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[10] := ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[11] := ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[12] := ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[13] := ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_arg[2] := Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[3] := Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[4] := Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[5] := Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[6] := Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[7] := Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[8] := Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[9] := Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[10] := Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[11] := Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[12] := Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[13] := Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)

--- Solved equation ---
z.omega := der(v.theta)

--- Solved equation ---
currentSensor.iMag[1] := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[2] := (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[3] := (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[4] := (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[5] := (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[6] := (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[7] := (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[8] := (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[9] := (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[10] := (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[11] := (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[12] := (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[13] := (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iArg[1] := Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)

--- Solved equation ---
currentSensor.iArg[2] := Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)

--- Solved equation ---
currentSensor.iArg[3] := Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)

--- Solved equation ---
currentSensor.iArg[4] := Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)

--- Solved equation ---
currentSensor.iArg[5] := Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)

--- Solved equation ---
currentSensor.iArg[6] := Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)

--- Solved equation ---
currentSensor.iArg[7] := Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)

--- Solved equation ---
currentSensor.iArg[8] := Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)

--- Solved equation ---
currentSensor.iArg[9] := Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)

--- Solved equation ---
currentSensor.iArg[10] := Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)

--- Solved equation ---
currentSensor.iArg[11] := Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)

--- Solved equation ---
currentSensor.iArg[12] := Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)

--- Solved equation ---
currentSensor.iArg[13] := Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)

--- Solved equation ---
currentSensor.omega := der(v.theta)

--- Solved equation ---
z1.vFundAbs := (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundAbs := (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundArg := Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

--- Solved equation ---
z1.omega := der(v.theta)

--- Meta equation block ---
algorithm


--- Meta equation block ---
algorithm


***********************************

--- Meta equation block ---
algorithm


--- Solved equation ---
der(v.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
v.omega := der(v.theta)

--- Torn system (Block 1) of 2 iteration variables and 7 solved variables ---
Torn variables:
  z.v[1].re
  z1.v[1].re
  z.v[1].im
  currentSensor.i[1].re
  z1.i[1].re
  currentSensor.i[1].im
  z1.i[1].im

Iteration variables:
  v.i[1].re (start=1)
  v.i[1].im (start=-1)

Torn equations:
  z.v[1].re := z.z.re .* (- v.i[1].re) + (- z.z.im .* systemDef.hrms[1] .* (- v.i[1].im))
  z1.v[1].re := - z.v[1].re + 120.0
  z.v[1].im := z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
  currentSensor.i[1].re := (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
  z1.i[1].re := - currentSensor.i[1].re + (- v.i[1].re)
  currentSensor.i[1].im := (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
  z1.i[1].im := - currentSensor.i[1].im + (- v.i[1].im)

Residual equations:
  - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
    Iteration variables: v.i[1].re
  z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
    Iteration variables: v.i[1].im

--- Solved equation ---
laptop_adapter.magScale := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[1] := laptop_adapter.magScale * 0.9421865565594479

--- Solved equation ---
laptop_adapter.V_arg[1] := Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)

--- Solved equation ---
laptop_adapter.argAdj[1] := 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]

--- Solved equation ---
laptop_adapter.a[1].re := cos(laptop_adapter.argAdj[1])

--- Solved equation ---
currentSensor.i[2].re := laptop_adapter.c[1] * laptop_adapter.a[1].re

--- Solved equation ---
laptop_adapter.a[1].im := sin(laptop_adapter.argAdj[1])

--- Solved equation ---
currentSensor.i[2].im := laptop_adapter.c[1] * laptop_adapter.a[1].im

--- Solved equation ---
laptop_adapter.c[2] := laptop_adapter.magScale * 0.846418595204449

--- Solved equation ---
laptop_adapter.argAdj[2] := 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]

--- Solved equation ---
laptop_adapter.a[2].re := cos(laptop_adapter.argAdj[2])

--- Solved equation ---
currentSensor.i[3].re := laptop_adapter.c[2] * laptop_adapter.a[2].re

--- Solved equation ---
laptop_adapter.a[2].im := sin(laptop_adapter.argAdj[2])

--- Solved equation ---
currentSensor.i[3].im := laptop_adapter.c[2] * laptop_adapter.a[2].im

--- Solved equation ---
laptop_adapter.c[3] := laptop_adapter.magScale * 0.7174634219299512

--- Solved equation ---
laptop_adapter.argAdj[3] := -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]

--- Solved equation ---
laptop_adapter.a[3].re := cos(laptop_adapter.argAdj[3])

--- Solved equation ---
currentSensor.i[4].re := laptop_adapter.c[3] * laptop_adapter.a[3].re

--- Solved equation ---
laptop_adapter.a[3].im := sin(laptop_adapter.argAdj[3])

--- Solved equation ---
currentSensor.i[4].im := laptop_adapter.c[3] * laptop_adapter.a[3].im

--- Solved equation ---
laptop_adapter.c[4] := laptop_adapter.magScale * 0.568269396387493

--- Solved equation ---
laptop_adapter.argAdj[4] := 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]

--- Solved equation ---
laptop_adapter.a[4].re := cos(laptop_adapter.argAdj[4])

--- Solved equation ---
currentSensor.i[5].re := laptop_adapter.c[4] * laptop_adapter.a[4].re

--- Solved equation ---
laptop_adapter.a[4].im := sin(laptop_adapter.argAdj[4])

--- Solved equation ---
currentSensor.i[5].im := laptop_adapter.c[4] * laptop_adapter.a[4].im

--- Solved equation ---
laptop_adapter.c[5] := laptop_adapter.magScale * 0.4142504288040016

--- Solved equation ---
laptop_adapter.argAdj[5] := 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]

--- Solved equation ---
laptop_adapter.a[5].re := cos(laptop_adapter.argAdj[5])

--- Solved equation ---
currentSensor.i[6].re := laptop_adapter.c[5] * laptop_adapter.a[5].re

--- Solved equation ---
laptop_adapter.a[5].im := sin(laptop_adapter.argAdj[5])

--- Solved equation ---
currentSensor.i[6].im := laptop_adapter.c[5] * laptop_adapter.a[5].im

--- Solved equation ---
laptop_adapter.c[6] := laptop_adapter.magScale * 0.2722289795439818

--- Solved equation ---
laptop_adapter.argAdj[6] := 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]

--- Solved equation ---
laptop_adapter.a[6].re := cos(laptop_adapter.argAdj[6])

--- Solved equation ---
currentSensor.i[7].re := laptop_adapter.c[6] * laptop_adapter.a[6].re

--- Solved equation ---
laptop_adapter.a[6].im := sin(laptop_adapter.argAdj[6])

--- Solved equation ---
currentSensor.i[7].im := laptop_adapter.c[6] * laptop_adapter.a[6].im

--- Solved equation ---
laptop_adapter.c[7] := laptop_adapter.magScale * 0.1499700094183941

--- Solved equation ---
laptop_adapter.argAdj[7] := 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]

--- Solved equation ---
laptop_adapter.a[7].re := cos(laptop_adapter.argAdj[7])

--- Solved equation ---
currentSensor.i[8].re := laptop_adapter.c[7] * laptop_adapter.a[7].re

--- Solved equation ---
laptop_adapter.a[7].im := sin(laptop_adapter.argAdj[7])

--- Solved equation ---
currentSensor.i[8].im := laptop_adapter.c[7] * laptop_adapter.a[7].im

--- Solved equation ---
laptop_adapter.c[8] := laptop_adapter.magScale * 0.060532358446546

--- Solved equation ---
laptop_adapter.argAdj[8] := -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]

--- Solved equation ---
laptop_adapter.a[8].re := cos(laptop_adapter.argAdj[8])

--- Solved equation ---
currentSensor.i[9].re := laptop_adapter.c[8] * laptop_adapter.a[8].re

--- Solved equation ---
laptop_adapter.a[8].im := sin(laptop_adapter.argAdj[8])

--- Solved equation ---
currentSensor.i[9].im := laptop_adapter.c[8] * laptop_adapter.a[8].im

--- Solved equation ---
laptop_adapter.c[9] := laptop_adapter.magScale * 0.0286742846032879

--- Solved equation ---
laptop_adapter.argAdj[9] := 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]

--- Solved equation ---
laptop_adapter.a[9].re := cos(laptop_adapter.argAdj[9])

--- Solved equation ---
currentSensor.i[10].re := laptop_adapter.c[9] * laptop_adapter.a[9].re

--- Solved equation ---
laptop_adapter.a[9].im := sin(laptop_adapter.argAdj[9])

--- Solved equation ---
currentSensor.i[10].im := laptop_adapter.c[9] * laptop_adapter.a[9].im

--- Solved equation ---
laptop_adapter.c[10] := laptop_adapter.magScale * 0.0500554183998412

--- Solved equation ---
laptop_adapter.argAdj[10] := 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]

--- Solved equation ---
laptop_adapter.a[10].re := cos(laptop_adapter.argAdj[10])

--- Solved equation ---
currentSensor.i[11].re := laptop_adapter.c[10] * laptop_adapter.a[10].re

--- Solved equation ---
laptop_adapter.a[10].im := sin(laptop_adapter.argAdj[10])

--- Solved equation ---
currentSensor.i[11].im := laptop_adapter.c[10] * laptop_adapter.a[10].im

--- Solved equation ---
laptop_adapter.c[11] := laptop_adapter.magScale * 0.0574038038345626

--- Solved equation ---
laptop_adapter.argAdj[11] := -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]

--- Solved equation ---
laptop_adapter.a[11].re := cos(laptop_adapter.argAdj[11])

--- Solved equation ---
currentSensor.i[12].re := laptop_adapter.c[11] * laptop_adapter.a[11].re

--- Solved equation ---
laptop_adapter.a[11].im := sin(laptop_adapter.argAdj[11])

--- Solved equation ---
currentSensor.i[12].im := laptop_adapter.c[11] * laptop_adapter.a[11].im

--- Solved equation ---
laptop_adapter.c[12] := laptop_adapter.magScale * 0.0490634253296239

--- Solved equation ---
laptop_adapter.argAdj[12] := 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]

--- Solved equation ---
laptop_adapter.a[12].re := cos(laptop_adapter.argAdj[12])

--- Solved equation ---
currentSensor.i[13].re := laptop_adapter.c[12] * laptop_adapter.a[12].re

--- Solved equation ---
laptop_adapter.a[12].im := sin(laptop_adapter.argAdj[12])

--- Solved equation ---
currentSensor.i[13].im := laptop_adapter.c[12] * laptop_adapter.a[12].im

--- Meta equation block ---
algorithm


--- Solved equation ---
laptop_adapter.loadBase.omega := der(v.theta)

--- Torn linear system (Block 2) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[2].im
  v.i[2].re
  z.v[2].im
  z.v[2].re

Iteration variables:
  z1.i[2].im
  z1.i[2].re

Torn equations:
  v.i[2].im := - currentSensor.i[2].im + (- z1.i[2].im)
  v.i[2].re := - currentSensor.i[2].re + (- z1.i[2].re)
  z.v[2].im := z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
  z.v[2].re := z.z.re .* (- v.i[2].re) + (- z.z.im .* systemDef.hrms[2] .* (- v.i[2].im))

Residual equations:
  - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
    Iteration variables: z1.i[2].im
  - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
    Iteration variables: z1.i[2].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[2], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[2], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[2]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[2], - z1.z.re|

--- Torn linear system (Block 3) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[3].im
  v.i[3].re
  z.v[3].im
  z.v[3].re

Iteration variables:
  z1.i[3].im
  z1.i[3].re

Torn equations:
  v.i[3].im := - currentSensor.i[3].im + (- z1.i[3].im)
  v.i[3].re := - currentSensor.i[3].re + (- z1.i[3].re)
  z.v[3].im := z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
  z.v[3].re := z.z.re .* (- v.i[3].re) + (- z.z.im .* systemDef.hrms[3] .* (- v.i[3].im))

Residual equations:
  - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
    Iteration variables: z1.i[3].im
  - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
    Iteration variables: z1.i[3].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[3], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[3], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[3]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[3], - z1.z.re|

--- Torn linear system (Block 4) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[4].im
  v.i[4].re
  z.v[4].im
  z.v[4].re

Iteration variables:
  z1.i[4].im
  z1.i[4].re

Torn equations:
  v.i[4].im := - currentSensor.i[4].im + (- z1.i[4].im)
  v.i[4].re := - currentSensor.i[4].re + (- z1.i[4].re)
  z.v[4].im := z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
  z.v[4].re := z.z.re .* (- v.i[4].re) + (- z.z.im .* systemDef.hrms[4] .* (- v.i[4].im))

Residual equations:
  - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
    Iteration variables: z1.i[4].im
  - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
    Iteration variables: z1.i[4].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[4], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[4], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[4]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[4], - z1.z.re|

--- Torn linear system (Block 5) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[5].im
  v.i[5].re
  z.v[5].im
  z.v[5].re

Iteration variables:
  z1.i[5].im
  z1.i[5].re

Torn equations:
  v.i[5].im := - currentSensor.i[5].im + (- z1.i[5].im)
  v.i[5].re := - currentSensor.i[5].re + (- z1.i[5].re)
  z.v[5].im := z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
  z.v[5].re := z.z.re .* (- v.i[5].re) + (- z.z.im .* systemDef.hrms[5] .* (- v.i[5].im))

Residual equations:
  - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
    Iteration variables: z1.i[5].im
  - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
    Iteration variables: z1.i[5].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[5], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[5], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[5]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[5], - z1.z.re|

--- Torn linear system (Block 6) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[6].im
  v.i[6].re
  z.v[6].im
  z.v[6].re

Iteration variables:
  z1.i[6].im
  z1.i[6].re

Torn equations:
  v.i[6].im := - currentSensor.i[6].im + (- z1.i[6].im)
  v.i[6].re := - currentSensor.i[6].re + (- z1.i[6].re)
  z.v[6].im := z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
  z.v[6].re := z.z.re .* (- v.i[6].re) + (- z.z.im .* systemDef.hrms[6] .* (- v.i[6].im))

Residual equations:
  - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
    Iteration variables: z1.i[6].im
  - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
    Iteration variables: z1.i[6].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[6], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[6], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[6]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[6], - z1.z.re|

--- Torn linear system (Block 7) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[7].im
  v.i[7].re
  z.v[7].im
  z.v[7].re

Iteration variables:
  z1.i[7].im
  z1.i[7].re

Torn equations:
  v.i[7].im := - currentSensor.i[7].im + (- z1.i[7].im)
  v.i[7].re := - currentSensor.i[7].re + (- z1.i[7].re)
  z.v[7].im := z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
  z.v[7].re := z.z.re .* (- v.i[7].re) + (- z.z.im .* systemDef.hrms[7] .* (- v.i[7].im))

Residual equations:
  - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
    Iteration variables: z1.i[7].im
  - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
    Iteration variables: z1.i[7].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[7], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[7], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[7]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[7], - z1.z.re|

--- Torn linear system (Block 8) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[8].im
  v.i[8].re
  z.v[8].im
  z.v[8].re

Iteration variables:
  z1.i[8].im
  z1.i[8].re

Torn equations:
  v.i[8].im := - currentSensor.i[8].im + (- z1.i[8].im)
  v.i[8].re := - currentSensor.i[8].re + (- z1.i[8].re)
  z.v[8].im := z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
  z.v[8].re := z.z.re .* (- v.i[8].re) + (- z.z.im .* systemDef.hrms[8] .* (- v.i[8].im))

Residual equations:
  - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
    Iteration variables: z1.i[8].im
  - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
    Iteration variables: z1.i[8].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[8], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[8], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[8]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[8], - z1.z.re|

--- Torn linear system (Block 9) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[9].im
  v.i[9].re
  z.v[9].im
  z.v[9].re

Iteration variables:
  z1.i[9].im
  z1.i[9].re

Torn equations:
  v.i[9].im := - currentSensor.i[9].im + (- z1.i[9].im)
  v.i[9].re := - currentSensor.i[9].re + (- z1.i[9].re)
  z.v[9].im := z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
  z.v[9].re := z.z.re .* (- v.i[9].re) + (- z.z.im .* systemDef.hrms[9] .* (- v.i[9].im))

Residual equations:
  - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
    Iteration variables: z1.i[9].im
  - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
    Iteration variables: z1.i[9].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[9], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[9], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[9]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[9], - z1.z.re|

--- Torn linear system (Block 10) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[10].im
  v.i[10].re
  z.v[10].im
  z.v[10].re

Iteration variables:
  z1.i[10].im
  z1.i[10].re

Torn equations:
  v.i[10].im := - currentSensor.i[10].im + (- z1.i[10].im)
  v.i[10].re := - currentSensor.i[10].re + (- z1.i[10].re)
  z.v[10].im := z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
  z.v[10].re := z.z.re .* (- v.i[10].re) + (- z.z.im .* systemDef.hrms[10] .* (- v.i[10].im))

Residual equations:
  - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
    Iteration variables: z1.i[10].im
  - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
    Iteration variables: z1.i[10].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[10], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[10], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[10]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[10], - z1.z.re|

--- Torn linear system (Block 11) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[11].im
  v.i[11].re
  z.v[11].im
  z.v[11].re

Iteration variables:
  z1.i[11].im
  z1.i[11].re

Torn equations:
  v.i[11].im := - currentSensor.i[11].im + (- z1.i[11].im)
  v.i[11].re := - currentSensor.i[11].re + (- z1.i[11].re)
  z.v[11].im := z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
  z.v[11].re := z.z.re .* (- v.i[11].re) + (- z.z.im .* systemDef.hrms[11] .* (- v.i[11].im))

Residual equations:
  - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
    Iteration variables: z1.i[11].im
  - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
    Iteration variables: z1.i[11].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[11], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[11], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[11]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[11], - z1.z.re|

--- Torn linear system (Block 12) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[12].im
  v.i[12].re
  z.v[12].im
  z.v[12].re

Iteration variables:
  z1.i[12].im
  z1.i[12].re

Torn equations:
  v.i[12].im := - currentSensor.i[12].im + (- z1.i[12].im)
  v.i[12].re := - currentSensor.i[12].re + (- z1.i[12].re)
  z.v[12].im := z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
  z.v[12].re := z.z.re .* (- v.i[12].re) + (- z.z.im .* systemDef.hrms[12] .* (- v.i[12].im))

Residual equations:
  - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
    Iteration variables: z1.i[12].im
  - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
    Iteration variables: z1.i[12].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[12], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[12], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[12]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[12], - z1.z.re|

--- Torn linear system (Block 13) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[13].im
  v.i[13].re
  z.v[13].im
  z.v[13].re

Iteration variables:
  z1.i[13].im
  z1.i[13].re

Torn equations:
  v.i[13].im := - currentSensor.i[13].im + (- z1.i[13].im)
  v.i[13].re := - currentSensor.i[13].re + (- z1.i[13].re)
  z.v[13].im := z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
  z.v[13].re := z.z.re .* (- v.i[13].re) + (- z.z.im .* systemDef.hrms[13] .* (- v.i[13].im))

Residual equations:
  - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
    Iteration variables: z1.i[13].im
  - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
    Iteration variables: z1.i[13].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[13], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[13], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[13]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[13], - z1.z.re|

--- Solved equation ---
z.omega := der(v.theta)

--- Solved equation ---
currentSensor.iMag[1] := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[2] := (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[3] := (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[4] := (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[5] := (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[6] := (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[7] := (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[8] := (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[9] := (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[10] := (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[11] := (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[12] := (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[13] := (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.omega := der(v.theta)

--- Solved equation ---
z1.omega := der(v.theta)

--- Solved equation ---
v.P1 := 120.0 * v.i[1].re

--- Solved equation ---
v.iMag[1] := (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[2] := (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[3] := (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[4] := (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[5] := (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[6] := (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[7] := (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[8] := (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[9] := (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[10] := (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[11] := (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[12] := (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[13] := (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
v.iArg[1] := Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)

--- Solved equation ---
v.iArg[2] := Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)

--- Solved equation ---
v.iArg[3] := Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)

--- Solved equation ---
v.iArg[4] := Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)

--- Solved equation ---
v.iArg[5] := Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)

--- Solved equation ---
v.iArg[6] := Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)

--- Solved equation ---
v.iArg[7] := Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)

--- Solved equation ---
v.iArg[8] := Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)

--- Solved equation ---
v.iArg[9] := Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)

--- Solved equation ---
v.iArg[10] := Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)

--- Solved equation ---
v.iArg[11] := Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)

--- Solved equation ---
v.iArg[12] := Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)

--- Solved equation ---
v.iArg[13] := Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)

--- Solved equation ---
laptop_adapter.I_mag[1] := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[2] := (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[3] := (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[4] := (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[5] := (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[6] := (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[7] := (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[8] := (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[9] := (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[10] := (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[11] := (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[12] := (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[13] := (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[1] := (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[2] := ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[3] := ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[4] := ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[5] := ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[6] := ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[7] := ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[8] := ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[9] := ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[10] := ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[11] := ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[12] := ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[13] := ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_arg[2] := Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[3] := Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[4] := Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[5] := Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[6] := Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[7] := Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[8] := Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[9] := Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[10] := Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[11] := Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[12] := Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[13] := Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)

--- Solved equation ---
z1.vFundAbs := (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundAbs := (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundArg := Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

--- Solved equation ---
currentSensor.iArg[1] := Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)

--- Solved equation ---
currentSensor.iArg[2] := Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)

--- Solved equation ---
currentSensor.iArg[3] := Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)

--- Solved equation ---
currentSensor.iArg[4] := Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)

--- Solved equation ---
currentSensor.iArg[5] := Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)

--- Solved equation ---
currentSensor.iArg[6] := Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)

--- Solved equation ---
currentSensor.iArg[7] := Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)

--- Solved equation ---
currentSensor.iArg[8] := Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)

--- Solved equation ---
currentSensor.iArg[9] := Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)

--- Solved equation ---
currentSensor.iArg[10] := Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)

--- Solved equation ---
currentSensor.iArg[11] := Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)

--- Solved equation ---
currentSensor.iArg[12] := Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)

--- Solved equation ---
currentSensor.iArg[13] := Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)
-------------------------------

BiPGraph (261 equations, 260 variables)
Variables: {der(v.theta) v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iMag[9] v.iMag[10] v.iMag[11] v.iMag[12] v.iMag[13] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.iArg[9] v.iArg[10] v.iArg[11] v.iArg[12] v.iArg[13] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.i[9].re v.i[9].im v.i[10].re v.i[10].im v.i[11].re v.i[11].im v.i[12].re v.i[12].im v.i[13].re v.i[13].im v.omega laptop_adapter.loadBase.omega laptop_adapter.I_mag[1] laptop_adapter.I_mag[2] laptop_adapter.I_mag[3] laptop_adapter.I_mag[4] laptop_adapter.I_mag[5] laptop_adapter.I_mag[6] laptop_adapter.I_mag[7] laptop_adapter.I_mag[8] laptop_adapter.I_mag[9] laptop_adapter.I_mag[10] laptop_adapter.I_mag[11] laptop_adapter.I_mag[12] laptop_adapter.I_mag[13] laptop_adapter.V_mag[1] laptop_adapter.V_mag[2] laptop_adapter.V_mag[3] laptop_adapter.V_mag[4] laptop_adapter.V_mag[5] laptop_adapter.V_mag[6] laptop_adapter.V_mag[7] laptop_adapter.V_mag[8] laptop_adapter.V_mag[9] laptop_adapter.V_mag[10] laptop_adapter.V_mag[11] laptop_adapter.V_mag[12] laptop_adapter.V_mag[13] laptop_adapter.V_arg[1] laptop_adapter.V_arg[2] laptop_adapter.V_arg[3] laptop_adapter.V_arg[4] laptop_adapter.V_arg[5] laptop_adapter.V_arg[6] laptop_adapter.V_arg[7] laptop_adapter.V_arg[8] laptop_adapter.V_arg[9] laptop_adapter.V_arg[10] laptop_adapter.V_arg[11] laptop_adapter.V_arg[12] laptop_adapter.V_arg[13] laptop_adapter.magScale laptop_adapter.argAdj[1] laptop_adapter.argAdj[2] laptop_adapter.argAdj[3] laptop_adapter.argAdj[4] laptop_adapter.argAdj[5] laptop_adapter.argAdj[6] laptop_adapter.argAdj[7] laptop_adapter.argAdj[8] laptop_adapter.argAdj[9] laptop_adapter.argAdj[10] laptop_adapter.argAdj[11] laptop_adapter.argAdj[12] laptop_adapter.a[1].re laptop_adapter.a[1].im laptop_adapter.a[2].re laptop_adapter.a[2].im laptop_adapter.a[3].re laptop_adapter.a[3].im laptop_adapter.a[4].re laptop_adapter.a[4].im laptop_adapter.a[5].re laptop_adapter.a[5].im laptop_adapter.a[6].re laptop_adapter.a[6].im laptop_adapter.a[7].re laptop_adapter.a[7].im laptop_adapter.a[8].re laptop_adapter.a[8].im laptop_adapter.a[9].re laptop_adapter.a[9].im laptop_adapter.a[10].re laptop_adapter.a[10].im laptop_adapter.a[11].re laptop_adapter.a[11].im laptop_adapter.a[12].re laptop_adapter.a[12].im laptop_adapter.c[1] laptop_adapter.c[2] laptop_adapter.c[3] laptop_adapter.c[4] laptop_adapter.c[5] laptop_adapter.c[6] laptop_adapter.c[7] laptop_adapter.c[8] laptop_adapter.c[9] laptop_adapter.c[10] laptop_adapter.c[11] laptop_adapter.c[12] z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.v[9].re z.v[9].im z.v[10].re z.v[10].im z.v[11].re z.v[11].im z.v[12].re z.v[12].im z.v[13].re z.v[13].im z.omega currentSensor.iMag[1] currentSensor.iMag[2] currentSensor.iMag[3] currentSensor.iMag[4] currentSensor.iMag[5] currentSensor.iMag[6] currentSensor.iMag[7] currentSensor.iMag[8] currentSensor.iMag[9] currentSensor.iMag[10] currentSensor.iMag[11] currentSensor.iMag[12] currentSensor.iMag[13] currentSensor.iArg[1] currentSensor.iArg[2] currentSensor.iArg[3] currentSensor.iArg[4] currentSensor.iArg[5] currentSensor.iArg[6] currentSensor.iArg[7] currentSensor.iArg[8] currentSensor.iArg[9] currentSensor.iArg[10] currentSensor.iArg[11] currentSensor.iArg[12] currentSensor.iArg[13] currentSensor.i[1].re currentSensor.i[1].im currentSensor.i[2].re currentSensor.i[2].im currentSensor.i[3].re currentSensor.i[3].im currentSensor.i[4].re currentSensor.i[4].im currentSensor.i[5].re currentSensor.i[5].im currentSensor.i[6].re currentSensor.i[6].im currentSensor.i[7].re currentSensor.i[7].im currentSensor.i[8].re currentSensor.i[8].im currentSensor.i[9].re currentSensor.i[9].im currentSensor.i[10].re currentSensor.i[10].im currentSensor.i[11].re currentSensor.i[11].im currentSensor.i[12].re currentSensor.i[12].im currentSensor.i[13].re currentSensor.i[13].im currentSensor.omega z1.vFundAbs z1.iFundAbs z1.iFundArg z1.v[1].re z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.i[4].re z1.i[4].im z1.i[5].re z1.i[5].im z1.i[6].re z1.i[6].im z1.i[7].re z1.i[7].im z1.i[8].re z1.i[8].im z1.i[9].re z1.i[9].im z1.i[10].re z1.i[10].im z1.i[11].re z1.i[11].im z1.i[12].re z1.i[12].im z1.i[13].re z1.i[13].im z1.omega v.theta }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : currentSensor.i[1].re@M z1.v[1].re@ z.v[1].im@ // currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_5 : currentSensor.i[1].im@M z.v[1].im@ z1.v[1].re@ // currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_6 : currentSensor.i[2].re@M laptop_adapter.c[1]@ laptop_adapter.a[1].re@ // currentSensor.i[2].re = laptop_adapter.c[1] * laptop_adapter.a[1].re
eq_7 : currentSensor.i[2].im@M laptop_adapter.c[1]@ laptop_adapter.a[1].im@ // currentSensor.i[2].im = laptop_adapter.c[1] * laptop_adapter.a[1].im
eq_8 : currentSensor.i[3].re@M laptop_adapter.c[2]@ laptop_adapter.a[2].re@ // currentSensor.i[3].re = laptop_adapter.c[2] * laptop_adapter.a[2].re
eq_9 : currentSensor.i[3].im@M laptop_adapter.c[2]@ laptop_adapter.a[2].im@ // currentSensor.i[3].im = laptop_adapter.c[2] * laptop_adapter.a[2].im
eq_10 : currentSensor.i[4].re@M laptop_adapter.c[3]@ laptop_adapter.a[3].re@ // currentSensor.i[4].re = laptop_adapter.c[3] * laptop_adapter.a[3].re
eq_11 : currentSensor.i[4].im@M laptop_adapter.c[3]@ laptop_adapter.a[3].im@ // currentSensor.i[4].im = laptop_adapter.c[3] * laptop_adapter.a[3].im
eq_12 : currentSensor.i[5].re@M laptop_adapter.c[4]@ laptop_adapter.a[4].re@ // currentSensor.i[5].re = laptop_adapter.c[4] * laptop_adapter.a[4].re
eq_13 : currentSensor.i[5].im@M laptop_adapter.c[4]@ laptop_adapter.a[4].im@ // currentSensor.i[5].im = laptop_adapter.c[4] * laptop_adapter.a[4].im
eq_14 : currentSensor.i[6].re@M laptop_adapter.c[5]@ laptop_adapter.a[5].re@ // currentSensor.i[6].re = laptop_adapter.c[5] * laptop_adapter.a[5].re
eq_15 : currentSensor.i[6].im@M laptop_adapter.c[5]@ laptop_adapter.a[5].im@ // currentSensor.i[6].im = laptop_adapter.c[5] * laptop_adapter.a[5].im
eq_16 : currentSensor.i[7].re@M laptop_adapter.c[6]@ laptop_adapter.a[6].re@ // currentSensor.i[7].re = laptop_adapter.c[6] * laptop_adapter.a[6].re
eq_17 : currentSensor.i[7].im@M laptop_adapter.c[6]@ laptop_adapter.a[6].im@ // currentSensor.i[7].im = laptop_adapter.c[6] * laptop_adapter.a[6].im
eq_18 : currentSensor.i[8].re@M laptop_adapter.c[7]@ laptop_adapter.a[7].re@ // currentSensor.i[8].re = laptop_adapter.c[7] * laptop_adapter.a[7].re
eq_19 : currentSensor.i[8].im@M laptop_adapter.c[7]@ laptop_adapter.a[7].im@ // currentSensor.i[8].im = laptop_adapter.c[7] * laptop_adapter.a[7].im
eq_20 : currentSensor.i[9].re@M laptop_adapter.c[8]@ laptop_adapter.a[8].re@ // currentSensor.i[9].re = laptop_adapter.c[8] * laptop_adapter.a[8].re
eq_21 : currentSensor.i[9].im@M laptop_adapter.c[8]@ laptop_adapter.a[8].im@ // currentSensor.i[9].im = laptop_adapter.c[8] * laptop_adapter.a[8].im
eq_22 : currentSensor.i[10].re@M laptop_adapter.c[9]@ laptop_adapter.a[9].re@ // currentSensor.i[10].re = laptop_adapter.c[9] * laptop_adapter.a[9].re
eq_23 : currentSensor.i[10].im@M laptop_adapter.c[9]@ laptop_adapter.a[9].im@ // currentSensor.i[10].im = laptop_adapter.c[9] * laptop_adapter.a[9].im
eq_24 : currentSensor.i[11].re@M laptop_adapter.c[10]@ laptop_adapter.a[10].re@ // currentSensor.i[11].re = laptop_adapter.c[10] * laptop_adapter.a[10].re
eq_25 : currentSensor.i[11].im@M laptop_adapter.c[10]@ laptop_adapter.a[10].im@ // currentSensor.i[11].im = laptop_adapter.c[10] * laptop_adapter.a[10].im
eq_26 : currentSensor.i[12].re@M laptop_adapter.c[11]@ laptop_adapter.a[11].re@ // currentSensor.i[12].re = laptop_adapter.c[11] * laptop_adapter.a[11].re
eq_27 : currentSensor.i[12].im@M laptop_adapter.c[11]@ laptop_adapter.a[11].im@ // currentSensor.i[12].im = laptop_adapter.c[11] * laptop_adapter.a[11].im
eq_28 : currentSensor.i[13].re@M laptop_adapter.c[12]@ laptop_adapter.a[12].re@ // currentSensor.i[13].re = laptop_adapter.c[12] * laptop_adapter.a[12].re
eq_29 : currentSensor.i[13].im@M laptop_adapter.c[12]@ laptop_adapter.a[12].im@ // currentSensor.i[13].im = laptop_adapter.c[12] * laptop_adapter.a[12].im
eq_30 : // algorithm

eq_31 : laptop_adapter.loadBase.omega@M der(v.theta)@ // laptop_adapter.loadBase.omega = der(v.theta)
eq_32 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_33 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_34 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_35 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_36 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_37 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_38 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_39 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_40 : z.v[9].re@M v.i[9].re@ v.i[9].im@ // z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im)
eq_41 : z.v[10].re@M v.i[10].re@ v.i[10].im@ // z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im)
eq_42 : z.v[11].re@M v.i[11].re@ v.i[11].im@ // z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im)
eq_43 : z.v[12].re@M v.i[12].re@ v.i[12].im@ // z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im)
eq_44 : z.v[13].re@M v.i[13].re@ v.i[13].im@ // z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im)
eq_45 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_46 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_47 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_48 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_49 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_50 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_51 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_52 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_53 : z.v[9].im@M v.i[9].im@ v.i[9].re@ // z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
eq_54 : z.v[10].im@M v.i[10].im@ v.i[10].re@ // z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
eq_55 : z.v[11].im@M v.i[11].im@ v.i[11].re@ // z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
eq_56 : z.v[12].im@M v.i[12].im@ v.i[12].re@ // z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
eq_57 : z.v[13].im@M v.i[13].im@ v.i[13].re@ // z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
eq_58 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_59 : z.v[1].re@ z1.v[1].re@M // z.v[1].re = 120.0 - z1.v[1].re
eq_60 : currentSensor.iMag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // currentSensor.iMag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_61 : currentSensor.iMag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // currentSensor.iMag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_62 : currentSensor.iMag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // currentSensor.iMag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_63 : currentSensor.iMag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // currentSensor.iMag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_64 : currentSensor.iMag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // currentSensor.iMag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_65 : currentSensor.iMag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // currentSensor.iMag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_66 : currentSensor.iMag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // currentSensor.iMag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_67 : currentSensor.iMag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // currentSensor.iMag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_68 : currentSensor.iMag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // currentSensor.iMag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_69 : currentSensor.iMag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // currentSensor.iMag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_70 : currentSensor.iMag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // currentSensor.iMag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_71 : currentSensor.iMag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // currentSensor.iMag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_72 : currentSensor.iMag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // currentSensor.iMag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_73 : currentSensor.omega@M der(v.theta)@ // currentSensor.omega = der(v.theta)
eq_74 : z1.v[1].re@ z1.i[1].re@M z1.i[1].im@ // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_75 : z.v[2].re@ z1.i[2].re@M z1.i[2].im@ // - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_76 : z.v[3].re@ z1.i[3].re@M z1.i[3].im@ // - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_77 : z.v[4].re@ z1.i[4].re@M z1.i[4].im@ // - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
eq_78 : z.v[5].re@ z1.i[5].re@M z1.i[5].im@ // - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
eq_79 : z.v[6].re@ z1.i[6].re@M z1.i[6].im@ // - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
eq_80 : z.v[7].re@ z1.i[7].re@M z1.i[7].im@ // - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
eq_81 : z.v[8].re@ z1.i[8].re@M z1.i[8].im@ // - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
eq_82 : z.v[9].re@ z1.i[9].re@M z1.i[9].im@ // - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
eq_83 : z.v[10].re@ z1.i[10].re@M z1.i[10].im@ // - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
eq_84 : z.v[11].re@ z1.i[11].re@M z1.i[11].im@ // - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
eq_85 : z.v[12].re@ z1.i[12].re@M z1.i[12].im@ // - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
eq_86 : z.v[13].re@ z1.i[13].re@M z1.i[13].im@ // - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
eq_87 : z.v[1].im@ z1.i[1].im@M z1.i[1].re@ // - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_88 : z.v[2].im@ z1.i[2].im@M z1.i[2].re@ // - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_89 : z.v[3].im@ z1.i[3].im@M z1.i[3].re@ // - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_90 : z.v[4].im@ z1.i[4].im@M z1.i[4].re@ // - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
eq_91 : z.v[5].im@ z1.i[5].im@M z1.i[5].re@ // - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
eq_92 : z.v[6].im@ z1.i[6].im@M z1.i[6].re@ // - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
eq_93 : z.v[7].im@ z1.i[7].im@M z1.i[7].re@ // - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
eq_94 : z.v[8].im@ z1.i[8].im@M z1.i[8].re@ // - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
eq_95 : z.v[9].im@ z1.i[9].im@M z1.i[9].re@ // - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
eq_96 : z.v[10].im@ z1.i[10].im@M z1.i[10].re@ // - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
eq_97 : z.v[11].im@ z1.i[11].im@M z1.i[11].re@ // - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
eq_98 : z.v[12].im@ z1.i[12].im@M z1.i[12].re@ // - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
eq_99 : z.v[13].im@ z1.i[13].im@M z1.i[13].re@ // - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
eq_100 : z1.omega@M der(v.theta)@ // z1.omega = der(v.theta)
eq_101 : currentSensor.i[1].im@ v.i[1].im@M z1.i[1].im@ // currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0
eq_102 : currentSensor.i[2].im@ v.i[2].im@M z1.i[2].im@ // currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0
eq_103 : currentSensor.i[3].im@ v.i[3].im@M z1.i[3].im@ // currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0
eq_104 : currentSensor.i[4].im@ v.i[4].im@M z1.i[4].im@ // currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0
eq_105 : currentSensor.i[5].im@ v.i[5].im@M z1.i[5].im@ // currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0
eq_106 : currentSensor.i[6].im@ v.i[6].im@M z1.i[6].im@ // currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0
eq_107 : currentSensor.i[7].im@ v.i[7].im@M z1.i[7].im@ // currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0
eq_108 : currentSensor.i[8].im@ v.i[8].im@M z1.i[8].im@ // currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0
eq_109 : currentSensor.i[9].im@ v.i[9].im@M z1.i[9].im@ // currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0
eq_110 : currentSensor.i[10].im@ v.i[10].im@M z1.i[10].im@ // currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0
eq_111 : currentSensor.i[11].im@ v.i[11].im@M z1.i[11].im@ // currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0
eq_112 : currentSensor.i[12].im@ v.i[12].im@M z1.i[12].im@ // currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0
eq_113 : currentSensor.i[13].im@ v.i[13].im@M z1.i[13].im@ // currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0
eq_114 : currentSensor.i[1].re@ v.i[1].re@M z1.i[1].re@ // currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0
eq_115 : currentSensor.i[2].re@ v.i[2].re@M z1.i[2].re@ // currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0
eq_116 : currentSensor.i[3].re@ v.i[3].re@M z1.i[3].re@ // currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0
eq_117 : currentSensor.i[4].re@ v.i[4].re@M z1.i[4].re@ // currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0
eq_118 : currentSensor.i[5].re@ v.i[5].re@M z1.i[5].re@ // currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0
eq_119 : currentSensor.i[6].re@ v.i[6].re@M z1.i[6].re@ // currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0
eq_120 : currentSensor.i[7].re@ v.i[7].re@M z1.i[7].re@ // currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0
eq_121 : currentSensor.i[8].re@ v.i[8].re@M z1.i[8].re@ // currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0
eq_122 : currentSensor.i[9].re@ v.i[9].re@M z1.i[9].re@ // currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0
eq_123 : currentSensor.i[10].re@ v.i[10].re@M z1.i[10].re@ // currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0
eq_124 : currentSensor.i[11].re@ v.i[11].re@M z1.i[11].re@ // currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0
eq_125 : currentSensor.i[12].re@ v.i[12].re@M z1.i[12].re@ // currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0
eq_126 : currentSensor.i[13].re@ v.i[13].re@M z1.i[13].re@ // currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0
eq_127 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_128 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_129 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_130 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_131 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_132 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_133 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_134 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_135 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_136 : v.iMag[9]@M v.i[9].re@ v.i[9].im@ // v.iMag[9] = (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5
eq_137 : v.iMag[10]@M v.i[10].re@ v.i[10].im@ // v.iMag[10] = (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5
eq_138 : v.iMag[11]@M v.i[11].re@ v.i[11].im@ // v.iMag[11] = (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5
eq_139 : v.iMag[12]@M v.i[12].re@ v.i[12].im@ // v.iMag[12] = (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5
eq_140 : v.iMag[13]@M v.i[13].re@ v.i[13].im@ // v.iMag[13] = (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5
eq_141 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_142 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_143 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_144 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_145 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_146 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_147 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_148 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_149 : v.iArg[9]@M v.i[9].im@ v.i[9].re@ // v.iArg[9] = Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)
eq_150 : v.iArg[10]@M v.i[10].im@ v.i[10].re@ // v.iArg[10] = Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)
eq_151 : v.iArg[11]@M v.i[11].im@ v.i[11].re@ // v.iArg[11] = Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)
eq_152 : v.iArg[12]@M v.i[12].im@ v.i[12].re@ // v.iArg[12] = Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)
eq_153 : v.iArg[13]@M v.i[13].im@ v.i[13].re@ // v.iArg[13] = Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)
eq_154 : laptop_adapter.I_mag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.I_mag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_155 : laptop_adapter.I_mag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // laptop_adapter.I_mag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_156 : laptop_adapter.I_mag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // laptop_adapter.I_mag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_157 : laptop_adapter.I_mag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // laptop_adapter.I_mag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_158 : laptop_adapter.I_mag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // laptop_adapter.I_mag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_159 : laptop_adapter.I_mag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // laptop_adapter.I_mag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_160 : laptop_adapter.I_mag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // laptop_adapter.I_mag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_161 : laptop_adapter.I_mag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // laptop_adapter.I_mag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_162 : laptop_adapter.I_mag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // laptop_adapter.I_mag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_163 : laptop_adapter.I_mag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // laptop_adapter.I_mag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_164 : laptop_adapter.I_mag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // laptop_adapter.I_mag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_165 : laptop_adapter.I_mag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // laptop_adapter.I_mag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_166 : laptop_adapter.I_mag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // laptop_adapter.I_mag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_167 : laptop_adapter.V_mag[1]@M z1.v[1].re@ z.v[1].im@ // laptop_adapter.V_mag[1] = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_168 : laptop_adapter.V_mag[2]@M z.v[2].re@ z.v[2].im@ // laptop_adapter.V_mag[2] = ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_169 : laptop_adapter.V_mag[3]@M z.v[3].re@ z.v[3].im@ // laptop_adapter.V_mag[3] = ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_170 : laptop_adapter.V_mag[4]@M z.v[4].re@ z.v[4].im@ // laptop_adapter.V_mag[4] = ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_171 : laptop_adapter.V_mag[5]@M z.v[5].re@ z.v[5].im@ // laptop_adapter.V_mag[5] = ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_172 : laptop_adapter.V_mag[6]@M z.v[6].re@ z.v[6].im@ // laptop_adapter.V_mag[6] = ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_173 : laptop_adapter.V_mag[7]@M z.v[7].re@ z.v[7].im@ // laptop_adapter.V_mag[7] = ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_174 : laptop_adapter.V_mag[8]@M z.v[8].re@ z.v[8].im@ // laptop_adapter.V_mag[8] = ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_175 : laptop_adapter.V_mag[9]@M z.v[9].re@ z.v[9].im@ // laptop_adapter.V_mag[9] = ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5
eq_176 : laptop_adapter.V_mag[10]@M z.v[10].re@ z.v[10].im@ // laptop_adapter.V_mag[10] = ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5
eq_177 : laptop_adapter.V_mag[11]@M z.v[11].re@ z.v[11].im@ // laptop_adapter.V_mag[11] = ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5
eq_178 : laptop_adapter.V_mag[12]@M z.v[12].re@ z.v[12].im@ // laptop_adapter.V_mag[12] = ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5
eq_179 : laptop_adapter.V_mag[13]@M z.v[13].re@ z.v[13].im@ // laptop_adapter.V_mag[13] = ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5
eq_180 : laptop_adapter.V_arg[2]@M z.v[2].im@ z.v[2].re@ // laptop_adapter.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)
eq_181 : laptop_adapter.V_arg[3]@M z.v[3].im@ z.v[3].re@ // laptop_adapter.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)
eq_182 : laptop_adapter.V_arg[4]@M z.v[4].im@ z.v[4].re@ // laptop_adapter.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)
eq_183 : laptop_adapter.V_arg[5]@M z.v[5].im@ z.v[5].re@ // laptop_adapter.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)
eq_184 : laptop_adapter.V_arg[6]@M z.v[6].im@ z.v[6].re@ // laptop_adapter.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)
eq_185 : laptop_adapter.V_arg[7]@M z.v[7].im@ z.v[7].re@ // laptop_adapter.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)
eq_186 : laptop_adapter.V_arg[8]@M z.v[8].im@ z.v[8].re@ // laptop_adapter.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)
eq_187 : laptop_adapter.V_arg[9]@M z.v[9].im@ z.v[9].re@ // laptop_adapter.V_arg[9] = Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)
eq_188 : laptop_adapter.V_arg[10]@M z.v[10].im@ z.v[10].re@ // laptop_adapter.V_arg[10] = Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)
eq_189 : laptop_adapter.V_arg[11]@M z.v[11].im@ z.v[11].re@ // laptop_adapter.V_arg[11] = Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)
eq_190 : laptop_adapter.V_arg[12]@M z.v[12].im@ z.v[12].re@ // laptop_adapter.V_arg[12] = Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)
eq_191 : laptop_adapter.V_arg[13]@M z.v[13].im@ z.v[13].re@ // laptop_adapter.V_arg[13] = Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)
eq_192 : laptop_adapter.magScale@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.magScale = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_193 : laptop_adapter.argAdj[1]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[1] = 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]
eq_194 : laptop_adapter.argAdj[2]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[2] = 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]
eq_195 : laptop_adapter.argAdj[3]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[3] = -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]
eq_196 : laptop_adapter.argAdj[4]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[4] = 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]
eq_197 : laptop_adapter.argAdj[5]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[5] = 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]
eq_198 : laptop_adapter.argAdj[6]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[6] = 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]
eq_199 : laptop_adapter.argAdj[7]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[7] = 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]
eq_200 : laptop_adapter.argAdj[8]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[8] = -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]
eq_201 : laptop_adapter.argAdj[9]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[9] = 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]
eq_202 : laptop_adapter.argAdj[10]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[10] = 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]
eq_203 : laptop_adapter.argAdj[11]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[11] = -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]
eq_204 : laptop_adapter.argAdj[12]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[12] = 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]
eq_205 : laptop_adapter.a[1].re@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].re = cos(laptop_adapter.argAdj[1])
eq_206 : laptop_adapter.a[1].im@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].im = sin(laptop_adapter.argAdj[1])
eq_207 : laptop_adapter.a[2].re@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].re = cos(laptop_adapter.argAdj[2])
eq_208 : laptop_adapter.a[2].im@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].im = sin(laptop_adapter.argAdj[2])
eq_209 : laptop_adapter.a[3].re@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].re = cos(laptop_adapter.argAdj[3])
eq_210 : laptop_adapter.a[3].im@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].im = sin(laptop_adapter.argAdj[3])
eq_211 : laptop_adapter.a[4].re@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].re = cos(laptop_adapter.argAdj[4])
eq_212 : laptop_adapter.a[4].im@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].im = sin(laptop_adapter.argAdj[4])
eq_213 : laptop_adapter.a[5].re@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].re = cos(laptop_adapter.argAdj[5])
eq_214 : laptop_adapter.a[5].im@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].im = sin(laptop_adapter.argAdj[5])
eq_215 : laptop_adapter.a[6].re@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].re = cos(laptop_adapter.argAdj[6])
eq_216 : laptop_adapter.a[6].im@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].im = sin(laptop_adapter.argAdj[6])
eq_217 : laptop_adapter.a[7].re@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].re = cos(laptop_adapter.argAdj[7])
eq_218 : laptop_adapter.a[7].im@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].im = sin(laptop_adapter.argAdj[7])
eq_219 : laptop_adapter.a[8].re@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].re = cos(laptop_adapter.argAdj[8])
eq_220 : laptop_adapter.a[8].im@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].im = sin(laptop_adapter.argAdj[8])
eq_221 : laptop_adapter.a[9].re@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].re = cos(laptop_adapter.argAdj[9])
eq_222 : laptop_adapter.a[9].im@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].im = sin(laptop_adapter.argAdj[9])
eq_223 : laptop_adapter.a[10].re@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].re = cos(laptop_adapter.argAdj[10])
eq_224 : laptop_adapter.a[10].im@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].im = sin(laptop_adapter.argAdj[10])
eq_225 : laptop_adapter.a[11].re@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].re = cos(laptop_adapter.argAdj[11])
eq_226 : laptop_adapter.a[11].im@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].im = sin(laptop_adapter.argAdj[11])
eq_227 : laptop_adapter.a[12].re@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].re = cos(laptop_adapter.argAdj[12])
eq_228 : laptop_adapter.a[12].im@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].im = sin(laptop_adapter.argAdj[12])
eq_229 : laptop_adapter.c[1]@M laptop_adapter.magScale@ // laptop_adapter.c[1] = laptop_adapter.magScale * 0.9421865565594479
eq_230 : laptop_adapter.c[2]@M laptop_adapter.magScale@ // laptop_adapter.c[2] = laptop_adapter.magScale * 0.846418595204449
eq_231 : laptop_adapter.c[3]@M laptop_adapter.magScale@ // laptop_adapter.c[3] = laptop_adapter.magScale * 0.7174634219299512
eq_232 : laptop_adapter.c[4]@M laptop_adapter.magScale@ // laptop_adapter.c[4] = laptop_adapter.magScale * 0.568269396387493
eq_233 : laptop_adapter.c[5]@M laptop_adapter.magScale@ // laptop_adapter.c[5] = laptop_adapter.magScale * 0.4142504288040016
eq_234 : laptop_adapter.c[6]@M laptop_adapter.magScale@ // laptop_adapter.c[6] = laptop_adapter.magScale * 0.2722289795439818
eq_235 : laptop_adapter.c[7]@M laptop_adapter.magScale@ // laptop_adapter.c[7] = laptop_adapter.magScale * 0.1499700094183941
eq_236 : laptop_adapter.c[8]@M laptop_adapter.magScale@ // laptop_adapter.c[8] = laptop_adapter.magScale * 0.060532358446546
eq_237 : laptop_adapter.c[9]@M laptop_adapter.magScale@ // laptop_adapter.c[9] = laptop_adapter.magScale * 0.0286742846032879
eq_238 : laptop_adapter.c[10]@M laptop_adapter.magScale@ // laptop_adapter.c[10] = laptop_adapter.magScale * 0.0500554183998412
eq_239 : laptop_adapter.c[11]@M laptop_adapter.magScale@ // laptop_adapter.c[11] = laptop_adapter.magScale * 0.0574038038345626
eq_240 : laptop_adapter.c[12]@M laptop_adapter.magScale@ // laptop_adapter.c[12] = laptop_adapter.magScale * 0.0490634253296239
eq_241 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_242 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_243 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_244 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_245 : z1.vFundAbs@M z1.v[1].re@ z.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_246 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_247 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
eq_248 : currentSensor.iArg[1]@M currentSensor.i[1].im@ currentSensor.i[1].re@ // currentSensor.iArg[1] = Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)
eq_249 : currentSensor.iArg[2]@M currentSensor.i[2].im@ currentSensor.i[2].re@ // currentSensor.iArg[2] = Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)
eq_250 : currentSensor.iArg[3]@M currentSensor.i[3].im@ currentSensor.i[3].re@ // currentSensor.iArg[3] = Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)
eq_251 : currentSensor.iArg[4]@M currentSensor.i[4].im@ currentSensor.i[4].re@ // currentSensor.iArg[4] = Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)
eq_252 : currentSensor.iArg[5]@M currentSensor.i[5].im@ currentSensor.i[5].re@ // currentSensor.iArg[5] = Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)
eq_253 : currentSensor.iArg[6]@M currentSensor.i[6].im@ currentSensor.i[6].re@ // currentSensor.iArg[6] = Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)
eq_254 : currentSensor.iArg[7]@M currentSensor.i[7].im@ currentSensor.i[7].re@ // currentSensor.iArg[7] = Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)
eq_255 : currentSensor.iArg[8]@M currentSensor.i[8].im@ currentSensor.i[8].re@ // currentSensor.iArg[8] = Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)
eq_256 : currentSensor.iArg[9]@M currentSensor.i[9].im@ currentSensor.i[9].re@ // currentSensor.iArg[9] = Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)
eq_257 : currentSensor.iArg[10]@M currentSensor.i[10].im@ currentSensor.i[10].re@ // currentSensor.iArg[10] = Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)
eq_258 : currentSensor.iArg[11]@M currentSensor.i[11].im@ currentSensor.i[11].re@ // currentSensor.iArg[11] = Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)
eq_259 : currentSensor.iArg[12]@M currentSensor.i[12].im@ currentSensor.i[12].re@ // currentSensor.iArg[12] = Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)
eq_260 : currentSensor.iArg[13]@M currentSensor.i[13].im@ currentSensor.i[13].re@ // currentSensor.iArg[13] = Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)
eq_261 : laptop_adapter.V_arg[1]@M z.v[1].im@ z1.v[1].re@ // laptop_adapter.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)

Init DAE BiPGraph
BiPGraph (262 equations, 260 variables)
Variables: {der(v.theta) v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iMag[9] v.iMag[10] v.iMag[11] v.iMag[12] v.iMag[13] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.iArg[9] v.iArg[10] v.iArg[11] v.iArg[12] v.iArg[13] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.i[9].re v.i[9].im v.i[10].re v.i[10].im v.i[11].re v.i[11].im v.i[12].re v.i[12].im v.i[13].re v.i[13].im v.omega laptop_adapter.loadBase.omega laptop_adapter.I_mag[1] laptop_adapter.I_mag[2] laptop_adapter.I_mag[3] laptop_adapter.I_mag[4] laptop_adapter.I_mag[5] laptop_adapter.I_mag[6] laptop_adapter.I_mag[7] laptop_adapter.I_mag[8] laptop_adapter.I_mag[9] laptop_adapter.I_mag[10] laptop_adapter.I_mag[11] laptop_adapter.I_mag[12] laptop_adapter.I_mag[13] laptop_adapter.V_mag[1] laptop_adapter.V_mag[2] laptop_adapter.V_mag[3] laptop_adapter.V_mag[4] laptop_adapter.V_mag[5] laptop_adapter.V_mag[6] laptop_adapter.V_mag[7] laptop_adapter.V_mag[8] laptop_adapter.V_mag[9] laptop_adapter.V_mag[10] laptop_adapter.V_mag[11] laptop_adapter.V_mag[12] laptop_adapter.V_mag[13] laptop_adapter.V_arg[1] laptop_adapter.V_arg[2] laptop_adapter.V_arg[3] laptop_adapter.V_arg[4] laptop_adapter.V_arg[5] laptop_adapter.V_arg[6] laptop_adapter.V_arg[7] laptop_adapter.V_arg[8] laptop_adapter.V_arg[9] laptop_adapter.V_arg[10] laptop_adapter.V_arg[11] laptop_adapter.V_arg[12] laptop_adapter.V_arg[13] laptop_adapter.magScale laptop_adapter.argAdj[1] laptop_adapter.argAdj[2] laptop_adapter.argAdj[3] laptop_adapter.argAdj[4] laptop_adapter.argAdj[5] laptop_adapter.argAdj[6] laptop_adapter.argAdj[7] laptop_adapter.argAdj[8] laptop_adapter.argAdj[9] laptop_adapter.argAdj[10] laptop_adapter.argAdj[11] laptop_adapter.argAdj[12] laptop_adapter.a[1].re laptop_adapter.a[1].im laptop_adapter.a[2].re laptop_adapter.a[2].im laptop_adapter.a[3].re laptop_adapter.a[3].im laptop_adapter.a[4].re laptop_adapter.a[4].im laptop_adapter.a[5].re laptop_adapter.a[5].im laptop_adapter.a[6].re laptop_adapter.a[6].im laptop_adapter.a[7].re laptop_adapter.a[7].im laptop_adapter.a[8].re laptop_adapter.a[8].im laptop_adapter.a[9].re laptop_adapter.a[9].im laptop_adapter.a[10].re laptop_adapter.a[10].im laptop_adapter.a[11].re laptop_adapter.a[11].im laptop_adapter.a[12].re laptop_adapter.a[12].im laptop_adapter.c[1] laptop_adapter.c[2] laptop_adapter.c[3] laptop_adapter.c[4] laptop_adapter.c[5] laptop_adapter.c[6] laptop_adapter.c[7] laptop_adapter.c[8] laptop_adapter.c[9] laptop_adapter.c[10] laptop_adapter.c[11] laptop_adapter.c[12] z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.v[9].re z.v[9].im z.v[10].re z.v[10].im z.v[11].re z.v[11].im z.v[12].re z.v[12].im z.v[13].re z.v[13].im z.omega currentSensor.iMag[1] currentSensor.iMag[2] currentSensor.iMag[3] currentSensor.iMag[4] currentSensor.iMag[5] currentSensor.iMag[6] currentSensor.iMag[7] currentSensor.iMag[8] currentSensor.iMag[9] currentSensor.iMag[10] currentSensor.iMag[11] currentSensor.iMag[12] currentSensor.iMag[13] currentSensor.iArg[1] currentSensor.iArg[2] currentSensor.iArg[3] currentSensor.iArg[4] currentSensor.iArg[5] currentSensor.iArg[6] currentSensor.iArg[7] currentSensor.iArg[8] currentSensor.iArg[9] currentSensor.iArg[10] currentSensor.iArg[11] currentSensor.iArg[12] currentSensor.iArg[13] currentSensor.i[1].re currentSensor.i[1].im currentSensor.i[2].re currentSensor.i[2].im currentSensor.i[3].re currentSensor.i[3].im currentSensor.i[4].re currentSensor.i[4].im currentSensor.i[5].re currentSensor.i[5].im currentSensor.i[6].re currentSensor.i[6].im currentSensor.i[7].re currentSensor.i[7].im currentSensor.i[8].re currentSensor.i[8].im currentSensor.i[9].re currentSensor.i[9].im currentSensor.i[10].re currentSensor.i[10].im currentSensor.i[11].re currentSensor.i[11].im currentSensor.i[12].re currentSensor.i[12].im currentSensor.i[13].re currentSensor.i[13].im currentSensor.omega z1.vFundAbs z1.iFundAbs z1.iFundArg z1.v[1].re z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.i[4].re z1.i[4].im z1.i[5].re z1.i[5].im z1.i[6].re z1.i[6].im z1.i[7].re z1.i[7].im z1.i[8].re z1.i[8].im z1.i[9].re z1.i[9].im z1.i[10].re z1.i[10].im z1.i[11].re z1.i[11].im z1.i[12].re z1.i[12].im z1.i[13].re z1.i[13].im z1.omega v.theta }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : currentSensor.i[1].re@M z1.v[1].re@ z.v[1].im@ // currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_5 : currentSensor.i[1].im@M z.v[1].im@ z1.v[1].re@ // currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_6 : currentSensor.i[2].re@M laptop_adapter.c[1]@ laptop_adapter.a[1].re@ // currentSensor.i[2].re = laptop_adapter.c[1] * laptop_adapter.a[1].re
eq_7 : currentSensor.i[2].im@M laptop_adapter.c[1]@ laptop_adapter.a[1].im@ // currentSensor.i[2].im = laptop_adapter.c[1] * laptop_adapter.a[1].im
eq_8 : currentSensor.i[3].re@M laptop_adapter.c[2]@ laptop_adapter.a[2].re@ // currentSensor.i[3].re = laptop_adapter.c[2] * laptop_adapter.a[2].re
eq_9 : currentSensor.i[3].im@M laptop_adapter.c[2]@ laptop_adapter.a[2].im@ // currentSensor.i[3].im = laptop_adapter.c[2] * laptop_adapter.a[2].im
eq_10 : currentSensor.i[4].re@M laptop_adapter.c[3]@ laptop_adapter.a[3].re@ // currentSensor.i[4].re = laptop_adapter.c[3] * laptop_adapter.a[3].re
eq_11 : currentSensor.i[4].im@M laptop_adapter.c[3]@ laptop_adapter.a[3].im@ // currentSensor.i[4].im = laptop_adapter.c[3] * laptop_adapter.a[3].im
eq_12 : currentSensor.i[5].re@M laptop_adapter.c[4]@ laptop_adapter.a[4].re@ // currentSensor.i[5].re = laptop_adapter.c[4] * laptop_adapter.a[4].re
eq_13 : currentSensor.i[5].im@M laptop_adapter.c[4]@ laptop_adapter.a[4].im@ // currentSensor.i[5].im = laptop_adapter.c[4] * laptop_adapter.a[4].im
eq_14 : currentSensor.i[6].re@M laptop_adapter.c[5]@ laptop_adapter.a[5].re@ // currentSensor.i[6].re = laptop_adapter.c[5] * laptop_adapter.a[5].re
eq_15 : currentSensor.i[6].im@M laptop_adapter.c[5]@ laptop_adapter.a[5].im@ // currentSensor.i[6].im = laptop_adapter.c[5] * laptop_adapter.a[5].im
eq_16 : currentSensor.i[7].re@M laptop_adapter.c[6]@ laptop_adapter.a[6].re@ // currentSensor.i[7].re = laptop_adapter.c[6] * laptop_adapter.a[6].re
eq_17 : currentSensor.i[7].im@M laptop_adapter.c[6]@ laptop_adapter.a[6].im@ // currentSensor.i[7].im = laptop_adapter.c[6] * laptop_adapter.a[6].im
eq_18 : currentSensor.i[8].re@M laptop_adapter.c[7]@ laptop_adapter.a[7].re@ // currentSensor.i[8].re = laptop_adapter.c[7] * laptop_adapter.a[7].re
eq_19 : currentSensor.i[8].im@M laptop_adapter.c[7]@ laptop_adapter.a[7].im@ // currentSensor.i[8].im = laptop_adapter.c[7] * laptop_adapter.a[7].im
eq_20 : currentSensor.i[9].re@M laptop_adapter.c[8]@ laptop_adapter.a[8].re@ // currentSensor.i[9].re = laptop_adapter.c[8] * laptop_adapter.a[8].re
eq_21 : currentSensor.i[9].im@M laptop_adapter.c[8]@ laptop_adapter.a[8].im@ // currentSensor.i[9].im = laptop_adapter.c[8] * laptop_adapter.a[8].im
eq_22 : currentSensor.i[10].re@M laptop_adapter.c[9]@ laptop_adapter.a[9].re@ // currentSensor.i[10].re = laptop_adapter.c[9] * laptop_adapter.a[9].re
eq_23 : currentSensor.i[10].im@M laptop_adapter.c[9]@ laptop_adapter.a[9].im@ // currentSensor.i[10].im = laptop_adapter.c[9] * laptop_adapter.a[9].im
eq_24 : currentSensor.i[11].re@M laptop_adapter.c[10]@ laptop_adapter.a[10].re@ // currentSensor.i[11].re = laptop_adapter.c[10] * laptop_adapter.a[10].re
eq_25 : currentSensor.i[11].im@M laptop_adapter.c[10]@ laptop_adapter.a[10].im@ // currentSensor.i[11].im = laptop_adapter.c[10] * laptop_adapter.a[10].im
eq_26 : currentSensor.i[12].re@M laptop_adapter.c[11]@ laptop_adapter.a[11].re@ // currentSensor.i[12].re = laptop_adapter.c[11] * laptop_adapter.a[11].re
eq_27 : currentSensor.i[12].im@M laptop_adapter.c[11]@ laptop_adapter.a[11].im@ // currentSensor.i[12].im = laptop_adapter.c[11] * laptop_adapter.a[11].im
eq_28 : currentSensor.i[13].re@M laptop_adapter.c[12]@ laptop_adapter.a[12].re@ // currentSensor.i[13].re = laptop_adapter.c[12] * laptop_adapter.a[12].re
eq_29 : currentSensor.i[13].im@M laptop_adapter.c[12]@ laptop_adapter.a[12].im@ // currentSensor.i[13].im = laptop_adapter.c[12] * laptop_adapter.a[12].im
eq_30 : // algorithm

eq_31 : laptop_adapter.loadBase.omega@M der(v.theta)@ // laptop_adapter.loadBase.omega = der(v.theta)
eq_32 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_33 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_34 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_35 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_36 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_37 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_38 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_39 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_40 : z.v[9].re@M v.i[9].re@ v.i[9].im@ // z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im)
eq_41 : z.v[10].re@M v.i[10].re@ v.i[10].im@ // z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im)
eq_42 : z.v[11].re@M v.i[11].re@ v.i[11].im@ // z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im)
eq_43 : z.v[12].re@M v.i[12].re@ v.i[12].im@ // z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im)
eq_44 : z.v[13].re@M v.i[13].re@ v.i[13].im@ // z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im)
eq_45 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_46 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_47 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_48 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_49 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_50 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_51 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_52 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_53 : z.v[9].im@M v.i[9].im@ v.i[9].re@ // z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
eq_54 : z.v[10].im@M v.i[10].im@ v.i[10].re@ // z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
eq_55 : z.v[11].im@M v.i[11].im@ v.i[11].re@ // z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
eq_56 : z.v[12].im@M v.i[12].im@ v.i[12].re@ // z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
eq_57 : z.v[13].im@M v.i[13].im@ v.i[13].re@ // z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
eq_58 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_59 : z.v[1].re@ z1.v[1].re@M // z.v[1].re = 120.0 - z1.v[1].re
eq_60 : currentSensor.iMag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // currentSensor.iMag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_61 : currentSensor.iMag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // currentSensor.iMag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_62 : currentSensor.iMag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // currentSensor.iMag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_63 : currentSensor.iMag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // currentSensor.iMag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_64 : currentSensor.iMag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // currentSensor.iMag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_65 : currentSensor.iMag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // currentSensor.iMag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_66 : currentSensor.iMag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // currentSensor.iMag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_67 : currentSensor.iMag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // currentSensor.iMag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_68 : currentSensor.iMag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // currentSensor.iMag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_69 : currentSensor.iMag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // currentSensor.iMag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_70 : currentSensor.iMag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // currentSensor.iMag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_71 : currentSensor.iMag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // currentSensor.iMag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_72 : currentSensor.iMag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // currentSensor.iMag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_73 : currentSensor.omega@M der(v.theta)@ // currentSensor.omega = der(v.theta)
eq_74 : z1.v[1].re@ z1.i[1].re@M z1.i[1].im@ // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_75 : z.v[2].re@ z1.i[2].re@M z1.i[2].im@ // - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_76 : z.v[3].re@ z1.i[3].re@M z1.i[3].im@ // - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_77 : z.v[4].re@ z1.i[4].re@M z1.i[4].im@ // - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
eq_78 : z.v[5].re@ z1.i[5].re@M z1.i[5].im@ // - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
eq_79 : z.v[6].re@ z1.i[6].re@M z1.i[6].im@ // - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
eq_80 : z.v[7].re@ z1.i[7].re@M z1.i[7].im@ // - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
eq_81 : z.v[8].re@ z1.i[8].re@M z1.i[8].im@ // - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
eq_82 : z.v[9].re@ z1.i[9].re@M z1.i[9].im@ // - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
eq_83 : z.v[10].re@ z1.i[10].re@M z1.i[10].im@ // - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
eq_84 : z.v[11].re@ z1.i[11].re@M z1.i[11].im@ // - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
eq_85 : z.v[12].re@ z1.i[12].re@M z1.i[12].im@ // - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
eq_86 : z.v[13].re@ z1.i[13].re@M z1.i[13].im@ // - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
eq_87 : z.v[1].im@ z1.i[1].im@M z1.i[1].re@ // - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_88 : z.v[2].im@ z1.i[2].im@M z1.i[2].re@ // - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_89 : z.v[3].im@ z1.i[3].im@M z1.i[3].re@ // - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_90 : z.v[4].im@ z1.i[4].im@M z1.i[4].re@ // - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
eq_91 : z.v[5].im@ z1.i[5].im@M z1.i[5].re@ // - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
eq_92 : z.v[6].im@ z1.i[6].im@M z1.i[6].re@ // - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
eq_93 : z.v[7].im@ z1.i[7].im@M z1.i[7].re@ // - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
eq_94 : z.v[8].im@ z1.i[8].im@M z1.i[8].re@ // - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
eq_95 : z.v[9].im@ z1.i[9].im@M z1.i[9].re@ // - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
eq_96 : z.v[10].im@ z1.i[10].im@M z1.i[10].re@ // - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
eq_97 : z.v[11].im@ z1.i[11].im@M z1.i[11].re@ // - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
eq_98 : z.v[12].im@ z1.i[12].im@M z1.i[12].re@ // - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
eq_99 : z.v[13].im@ z1.i[13].im@M z1.i[13].re@ // - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
eq_100 : z1.omega@M der(v.theta)@ // z1.omega = der(v.theta)
eq_101 : currentSensor.i[1].im@ v.i[1].im@M z1.i[1].im@ // currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0
eq_102 : currentSensor.i[2].im@ v.i[2].im@M z1.i[2].im@ // currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0
eq_103 : currentSensor.i[3].im@ v.i[3].im@M z1.i[3].im@ // currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0
eq_104 : currentSensor.i[4].im@ v.i[4].im@M z1.i[4].im@ // currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0
eq_105 : currentSensor.i[5].im@ v.i[5].im@M z1.i[5].im@ // currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0
eq_106 : currentSensor.i[6].im@ v.i[6].im@M z1.i[6].im@ // currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0
eq_107 : currentSensor.i[7].im@ v.i[7].im@M z1.i[7].im@ // currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0
eq_108 : currentSensor.i[8].im@ v.i[8].im@M z1.i[8].im@ // currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0
eq_109 : currentSensor.i[9].im@ v.i[9].im@M z1.i[9].im@ // currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0
eq_110 : currentSensor.i[10].im@ v.i[10].im@M z1.i[10].im@ // currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0
eq_111 : currentSensor.i[11].im@ v.i[11].im@M z1.i[11].im@ // currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0
eq_112 : currentSensor.i[12].im@ v.i[12].im@M z1.i[12].im@ // currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0
eq_113 : currentSensor.i[13].im@ v.i[13].im@M z1.i[13].im@ // currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0
eq_114 : currentSensor.i[1].re@ v.i[1].re@M z1.i[1].re@ // currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0
eq_115 : currentSensor.i[2].re@ v.i[2].re@M z1.i[2].re@ // currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0
eq_116 : currentSensor.i[3].re@ v.i[3].re@M z1.i[3].re@ // currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0
eq_117 : currentSensor.i[4].re@ v.i[4].re@M z1.i[4].re@ // currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0
eq_118 : currentSensor.i[5].re@ v.i[5].re@M z1.i[5].re@ // currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0
eq_119 : currentSensor.i[6].re@ v.i[6].re@M z1.i[6].re@ // currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0
eq_120 : currentSensor.i[7].re@ v.i[7].re@M z1.i[7].re@ // currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0
eq_121 : currentSensor.i[8].re@ v.i[8].re@M z1.i[8].re@ // currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0
eq_122 : currentSensor.i[9].re@ v.i[9].re@M z1.i[9].re@ // currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0
eq_123 : currentSensor.i[10].re@ v.i[10].re@M z1.i[10].re@ // currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0
eq_124 : currentSensor.i[11].re@ v.i[11].re@M z1.i[11].re@ // currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0
eq_125 : currentSensor.i[12].re@ v.i[12].re@M z1.i[12].re@ // currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0
eq_126 : currentSensor.i[13].re@ v.i[13].re@M z1.i[13].re@ // currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0
eq_127 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_128 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_129 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_130 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_131 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_132 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_133 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_134 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_135 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_136 : v.iMag[9]@M v.i[9].re@ v.i[9].im@ // v.iMag[9] = (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5
eq_137 : v.iMag[10]@M v.i[10].re@ v.i[10].im@ // v.iMag[10] = (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5
eq_138 : v.iMag[11]@M v.i[11].re@ v.i[11].im@ // v.iMag[11] = (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5
eq_139 : v.iMag[12]@M v.i[12].re@ v.i[12].im@ // v.iMag[12] = (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5
eq_140 : v.iMag[13]@M v.i[13].re@ v.i[13].im@ // v.iMag[13] = (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5
eq_141 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_142 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_143 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_144 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_145 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_146 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_147 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_148 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_149 : v.iArg[9]@M v.i[9].im@ v.i[9].re@ // v.iArg[9] = Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)
eq_150 : v.iArg[10]@M v.i[10].im@ v.i[10].re@ // v.iArg[10] = Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)
eq_151 : v.iArg[11]@M v.i[11].im@ v.i[11].re@ // v.iArg[11] = Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)
eq_152 : v.iArg[12]@M v.i[12].im@ v.i[12].re@ // v.iArg[12] = Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)
eq_153 : v.iArg[13]@M v.i[13].im@ v.i[13].re@ // v.iArg[13] = Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)
eq_154 : laptop_adapter.I_mag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.I_mag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_155 : laptop_adapter.I_mag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // laptop_adapter.I_mag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_156 : laptop_adapter.I_mag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // laptop_adapter.I_mag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_157 : laptop_adapter.I_mag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // laptop_adapter.I_mag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_158 : laptop_adapter.I_mag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // laptop_adapter.I_mag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_159 : laptop_adapter.I_mag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // laptop_adapter.I_mag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_160 : laptop_adapter.I_mag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // laptop_adapter.I_mag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_161 : laptop_adapter.I_mag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // laptop_adapter.I_mag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_162 : laptop_adapter.I_mag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // laptop_adapter.I_mag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_163 : laptop_adapter.I_mag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // laptop_adapter.I_mag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_164 : laptop_adapter.I_mag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // laptop_adapter.I_mag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_165 : laptop_adapter.I_mag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // laptop_adapter.I_mag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_166 : laptop_adapter.I_mag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // laptop_adapter.I_mag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_167 : laptop_adapter.V_mag[1]@M z1.v[1].re@ z.v[1].im@ // laptop_adapter.V_mag[1] = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_168 : laptop_adapter.V_mag[2]@M z.v[2].re@ z.v[2].im@ // laptop_adapter.V_mag[2] = ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_169 : laptop_adapter.V_mag[3]@M z.v[3].re@ z.v[3].im@ // laptop_adapter.V_mag[3] = ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_170 : laptop_adapter.V_mag[4]@M z.v[4].re@ z.v[4].im@ // laptop_adapter.V_mag[4] = ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_171 : laptop_adapter.V_mag[5]@M z.v[5].re@ z.v[5].im@ // laptop_adapter.V_mag[5] = ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_172 : laptop_adapter.V_mag[6]@M z.v[6].re@ z.v[6].im@ // laptop_adapter.V_mag[6] = ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_173 : laptop_adapter.V_mag[7]@M z.v[7].re@ z.v[7].im@ // laptop_adapter.V_mag[7] = ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_174 : laptop_adapter.V_mag[8]@M z.v[8].re@ z.v[8].im@ // laptop_adapter.V_mag[8] = ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_175 : laptop_adapter.V_mag[9]@M z.v[9].re@ z.v[9].im@ // laptop_adapter.V_mag[9] = ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5
eq_176 : laptop_adapter.V_mag[10]@M z.v[10].re@ z.v[10].im@ // laptop_adapter.V_mag[10] = ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5
eq_177 : laptop_adapter.V_mag[11]@M z.v[11].re@ z.v[11].im@ // laptop_adapter.V_mag[11] = ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5
eq_178 : laptop_adapter.V_mag[12]@M z.v[12].re@ z.v[12].im@ // laptop_adapter.V_mag[12] = ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5
eq_179 : laptop_adapter.V_mag[13]@M z.v[13].re@ z.v[13].im@ // laptop_adapter.V_mag[13] = ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5
eq_180 : laptop_adapter.V_arg[2]@M z.v[2].im@ z.v[2].re@ // laptop_adapter.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)
eq_181 : laptop_adapter.V_arg[3]@M z.v[3].im@ z.v[3].re@ // laptop_adapter.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)
eq_182 : laptop_adapter.V_arg[4]@M z.v[4].im@ z.v[4].re@ // laptop_adapter.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)
eq_183 : laptop_adapter.V_arg[5]@M z.v[5].im@ z.v[5].re@ // laptop_adapter.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)
eq_184 : laptop_adapter.V_arg[6]@M z.v[6].im@ z.v[6].re@ // laptop_adapter.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)
eq_185 : laptop_adapter.V_arg[7]@M z.v[7].im@ z.v[7].re@ // laptop_adapter.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)
eq_186 : laptop_adapter.V_arg[8]@M z.v[8].im@ z.v[8].re@ // laptop_adapter.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)
eq_187 : laptop_adapter.V_arg[9]@M z.v[9].im@ z.v[9].re@ // laptop_adapter.V_arg[9] = Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)
eq_188 : laptop_adapter.V_arg[10]@M z.v[10].im@ z.v[10].re@ // laptop_adapter.V_arg[10] = Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)
eq_189 : laptop_adapter.V_arg[11]@M z.v[11].im@ z.v[11].re@ // laptop_adapter.V_arg[11] = Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)
eq_190 : laptop_adapter.V_arg[12]@M z.v[12].im@ z.v[12].re@ // laptop_adapter.V_arg[12] = Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)
eq_191 : laptop_adapter.V_arg[13]@M z.v[13].im@ z.v[13].re@ // laptop_adapter.V_arg[13] = Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)
eq_192 : laptop_adapter.magScale@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.magScale = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_193 : laptop_adapter.argAdj[1]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[1] = 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]
eq_194 : laptop_adapter.argAdj[2]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[2] = 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]
eq_195 : laptop_adapter.argAdj[3]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[3] = -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]
eq_196 : laptop_adapter.argAdj[4]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[4] = 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]
eq_197 : laptop_adapter.argAdj[5]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[5] = 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]
eq_198 : laptop_adapter.argAdj[6]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[6] = 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]
eq_199 : laptop_adapter.argAdj[7]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[7] = 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]
eq_200 : laptop_adapter.argAdj[8]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[8] = -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]
eq_201 : laptop_adapter.argAdj[9]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[9] = 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]
eq_202 : laptop_adapter.argAdj[10]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[10] = 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]
eq_203 : laptop_adapter.argAdj[11]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[11] = -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]
eq_204 : laptop_adapter.argAdj[12]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[12] = 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]
eq_205 : laptop_adapter.a[1].re@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].re = cos(laptop_adapter.argAdj[1])
eq_206 : laptop_adapter.a[1].im@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].im = sin(laptop_adapter.argAdj[1])
eq_207 : laptop_adapter.a[2].re@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].re = cos(laptop_adapter.argAdj[2])
eq_208 : laptop_adapter.a[2].im@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].im = sin(laptop_adapter.argAdj[2])
eq_209 : laptop_adapter.a[3].re@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].re = cos(laptop_adapter.argAdj[3])
eq_210 : laptop_adapter.a[3].im@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].im = sin(laptop_adapter.argAdj[3])
eq_211 : laptop_adapter.a[4].re@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].re = cos(laptop_adapter.argAdj[4])
eq_212 : laptop_adapter.a[4].im@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].im = sin(laptop_adapter.argAdj[4])
eq_213 : laptop_adapter.a[5].re@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].re = cos(laptop_adapter.argAdj[5])
eq_214 : laptop_adapter.a[5].im@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].im = sin(laptop_adapter.argAdj[5])
eq_215 : laptop_adapter.a[6].re@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].re = cos(laptop_adapter.argAdj[6])
eq_216 : laptop_adapter.a[6].im@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].im = sin(laptop_adapter.argAdj[6])
eq_217 : laptop_adapter.a[7].re@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].re = cos(laptop_adapter.argAdj[7])
eq_218 : laptop_adapter.a[7].im@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].im = sin(laptop_adapter.argAdj[7])
eq_219 : laptop_adapter.a[8].re@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].re = cos(laptop_adapter.argAdj[8])
eq_220 : laptop_adapter.a[8].im@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].im = sin(laptop_adapter.argAdj[8])
eq_221 : laptop_adapter.a[9].re@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].re = cos(laptop_adapter.argAdj[9])
eq_222 : laptop_adapter.a[9].im@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].im = sin(laptop_adapter.argAdj[9])
eq_223 : laptop_adapter.a[10].re@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].re = cos(laptop_adapter.argAdj[10])
eq_224 : laptop_adapter.a[10].im@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].im = sin(laptop_adapter.argAdj[10])
eq_225 : laptop_adapter.a[11].re@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].re = cos(laptop_adapter.argAdj[11])
eq_226 : laptop_adapter.a[11].im@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].im = sin(laptop_adapter.argAdj[11])
eq_227 : laptop_adapter.a[12].re@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].re = cos(laptop_adapter.argAdj[12])
eq_228 : laptop_adapter.a[12].im@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].im = sin(laptop_adapter.argAdj[12])
eq_229 : laptop_adapter.c[1]@M laptop_adapter.magScale@ // laptop_adapter.c[1] = laptop_adapter.magScale * 0.9421865565594479
eq_230 : laptop_adapter.c[2]@M laptop_adapter.magScale@ // laptop_adapter.c[2] = laptop_adapter.magScale * 0.846418595204449
eq_231 : laptop_adapter.c[3]@M laptop_adapter.magScale@ // laptop_adapter.c[3] = laptop_adapter.magScale * 0.7174634219299512
eq_232 : laptop_adapter.c[4]@M laptop_adapter.magScale@ // laptop_adapter.c[4] = laptop_adapter.magScale * 0.568269396387493
eq_233 : laptop_adapter.c[5]@M laptop_adapter.magScale@ // laptop_adapter.c[5] = laptop_adapter.magScale * 0.4142504288040016
eq_234 : laptop_adapter.c[6]@M laptop_adapter.magScale@ // laptop_adapter.c[6] = laptop_adapter.magScale * 0.2722289795439818
eq_235 : laptop_adapter.c[7]@M laptop_adapter.magScale@ // laptop_adapter.c[7] = laptop_adapter.magScale * 0.1499700094183941
eq_236 : laptop_adapter.c[8]@M laptop_adapter.magScale@ // laptop_adapter.c[8] = laptop_adapter.magScale * 0.060532358446546
eq_237 : laptop_adapter.c[9]@M laptop_adapter.magScale@ // laptop_adapter.c[9] = laptop_adapter.magScale * 0.0286742846032879
eq_238 : laptop_adapter.c[10]@M laptop_adapter.magScale@ // laptop_adapter.c[10] = laptop_adapter.magScale * 0.0500554183998412
eq_239 : laptop_adapter.c[11]@M laptop_adapter.magScale@ // laptop_adapter.c[11] = laptop_adapter.magScale * 0.0574038038345626
eq_240 : laptop_adapter.c[12]@M laptop_adapter.magScale@ // laptop_adapter.c[12] = laptop_adapter.magScale * 0.0490634253296239
eq_241 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_242 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_243 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_244 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_245 : z1.vFundAbs@M z1.v[1].re@ z.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_246 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_247 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
eq_248 : currentSensor.iArg[1]@M currentSensor.i[1].im@ currentSensor.i[1].re@ // currentSensor.iArg[1] = Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)
eq_249 : currentSensor.iArg[2]@M currentSensor.i[2].im@ currentSensor.i[2].re@ // currentSensor.iArg[2] = Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)
eq_250 : currentSensor.iArg[3]@M currentSensor.i[3].im@ currentSensor.i[3].re@ // currentSensor.iArg[3] = Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)
eq_251 : currentSensor.iArg[4]@M currentSensor.i[4].im@ currentSensor.i[4].re@ // currentSensor.iArg[4] = Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)
eq_252 : currentSensor.iArg[5]@M currentSensor.i[5].im@ currentSensor.i[5].re@ // currentSensor.iArg[5] = Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)
eq_253 : currentSensor.iArg[6]@M currentSensor.i[6].im@ currentSensor.i[6].re@ // currentSensor.iArg[6] = Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)
eq_254 : currentSensor.iArg[7]@M currentSensor.i[7].im@ currentSensor.i[7].re@ // currentSensor.iArg[7] = Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)
eq_255 : currentSensor.iArg[8]@M currentSensor.i[8].im@ currentSensor.i[8].re@ // currentSensor.iArg[8] = Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)
eq_256 : currentSensor.iArg[9]@M currentSensor.i[9].im@ currentSensor.i[9].re@ // currentSensor.iArg[9] = Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)
eq_257 : currentSensor.iArg[10]@M currentSensor.i[10].im@ currentSensor.i[10].re@ // currentSensor.iArg[10] = Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)
eq_258 : currentSensor.iArg[11]@M currentSensor.i[11].im@ currentSensor.i[11].re@ // currentSensor.iArg[11] = Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)
eq_259 : currentSensor.iArg[12]@M currentSensor.i[12].im@ currentSensor.i[12].re@ // currentSensor.iArg[12] = Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)
eq_260 : currentSensor.iArg[13]@M currentSensor.i[13].im@ currentSensor.i[13].re@ // currentSensor.iArg[13] = Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)
eq_261 : laptop_adapter.V_arg[1]@M z.v[1].im@ z1.v[1].re@ // laptop_adapter.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)
eq_262 : // algorithm


Init BiPGraph matching
----------------------------------------
BiPGraph matching:
eq_2 : der(v.theta)
eq_3 : v.omega
eq_4 : currentSensor.i[1].re
eq_5 : currentSensor.i[1].im
eq_6 : currentSensor.i[2].re
eq_7 : currentSensor.i[2].im
eq_8 : currentSensor.i[3].re
eq_9 : currentSensor.i[3].im
eq_10 : currentSensor.i[4].re
eq_11 : currentSensor.i[4].im
eq_12 : currentSensor.i[5].re
eq_13 : currentSensor.i[5].im
eq_14 : currentSensor.i[6].re
eq_15 : currentSensor.i[6].im
eq_16 : currentSensor.i[7].re
eq_17 : currentSensor.i[7].im
eq_18 : currentSensor.i[8].re
eq_19 : currentSensor.i[8].im
eq_20 : currentSensor.i[9].re
eq_21 : currentSensor.i[9].im
eq_22 : currentSensor.i[10].re
eq_23 : currentSensor.i[10].im
eq_24 : currentSensor.i[11].re
eq_25 : currentSensor.i[11].im
eq_26 : currentSensor.i[12].re
eq_27 : currentSensor.i[12].im
eq_28 : currentSensor.i[13].re
eq_29 : currentSensor.i[13].im
eq_31 : laptop_adapter.loadBase.omega
eq_32 : z.v[1].re
eq_33 : z.v[2].re
eq_34 : z.v[3].re
eq_35 : z.v[4].re
eq_36 : z.v[5].re
eq_37 : z.v[6].re
eq_38 : z.v[7].re
eq_39 : z.v[8].re
eq_40 : z.v[9].re
eq_41 : z.v[10].re
eq_42 : z.v[11].re
eq_43 : z.v[12].re
eq_44 : z.v[13].re
eq_45 : z.v[1].im
eq_46 : z.v[2].im
eq_47 : z.v[3].im
eq_48 : z.v[4].im
eq_49 : z.v[5].im
eq_50 : z.v[6].im
eq_51 : z.v[7].im
eq_52 : z.v[8].im
eq_53 : z.v[9].im
eq_54 : z.v[10].im
eq_55 : z.v[11].im
eq_56 : z.v[12].im
eq_57 : z.v[13].im
eq_58 : z.omega
eq_59 : z1.v[1].re
eq_60 : currentSensor.iMag[1]
eq_61 : currentSensor.iMag[2]
eq_62 : currentSensor.iMag[3]
eq_63 : currentSensor.iMag[4]
eq_64 : currentSensor.iMag[5]
eq_65 : currentSensor.iMag[6]
eq_66 : currentSensor.iMag[7]
eq_67 : currentSensor.iMag[8]
eq_68 : currentSensor.iMag[9]
eq_69 : currentSensor.iMag[10]
eq_70 : currentSensor.iMag[11]
eq_71 : currentSensor.iMag[12]
eq_72 : currentSensor.iMag[13]
eq_73 : currentSensor.omega
eq_74 : z1.i[1].re
eq_75 : z1.i[2].re
eq_76 : z1.i[3].re
eq_77 : z1.i[4].re
eq_78 : z1.i[5].re
eq_79 : z1.i[6].re
eq_80 : z1.i[7].re
eq_81 : z1.i[8].re
eq_82 : z1.i[9].re
eq_83 : z1.i[10].re
eq_84 : z1.i[11].re
eq_85 : z1.i[12].re
eq_86 : z1.i[13].re
eq_87 : z1.i[1].im
eq_88 : z1.i[2].im
eq_89 : z1.i[3].im
eq_90 : z1.i[4].im
eq_91 : z1.i[5].im
eq_92 : z1.i[6].im
eq_93 : z1.i[7].im
eq_94 : z1.i[8].im
eq_95 : z1.i[9].im
eq_96 : z1.i[10].im
eq_97 : z1.i[11].im
eq_98 : z1.i[12].im
eq_99 : z1.i[13].im
eq_100 : z1.omega
eq_101 : v.i[1].im
eq_102 : v.i[2].im
eq_103 : v.i[3].im
eq_104 : v.i[4].im
eq_105 : v.i[5].im
eq_106 : v.i[6].im
eq_107 : v.i[7].im
eq_108 : v.i[8].im
eq_109 : v.i[9].im
eq_110 : v.i[10].im
eq_111 : v.i[11].im
eq_112 : v.i[12].im
eq_113 : v.i[13].im
eq_114 : v.i[1].re
eq_115 : v.i[2].re
eq_116 : v.i[3].re
eq_117 : v.i[4].re
eq_118 : v.i[5].re
eq_119 : v.i[6].re
eq_120 : v.i[7].re
eq_121 : v.i[8].re
eq_122 : v.i[9].re
eq_123 : v.i[10].re
eq_124 : v.i[11].re
eq_125 : v.i[12].re
eq_126 : v.i[13].re
eq_127 : v.P1
eq_128 : v.iMag[1]
eq_129 : v.iMag[2]
eq_130 : v.iMag[3]
eq_131 : v.iMag[4]
eq_132 : v.iMag[5]
eq_133 : v.iMag[6]
eq_134 : v.iMag[7]
eq_135 : v.iMag[8]
eq_136 : v.iMag[9]
eq_137 : v.iMag[10]
eq_138 : v.iMag[11]
eq_139 : v.iMag[12]
eq_140 : v.iMag[13]
eq_141 : v.iArg[1]
eq_142 : v.iArg[2]
eq_143 : v.iArg[3]
eq_144 : v.iArg[4]
eq_145 : v.iArg[5]
eq_146 : v.iArg[6]
eq_147 : v.iArg[7]
eq_148 : v.iArg[8]
eq_149 : v.iArg[9]
eq_150 : v.iArg[10]
eq_151 : v.iArg[11]
eq_152 : v.iArg[12]
eq_153 : v.iArg[13]
eq_154 : laptop_adapter.I_mag[1]
eq_155 : laptop_adapter.I_mag[2]
eq_156 : laptop_adapter.I_mag[3]
eq_157 : laptop_adapter.I_mag[4]
eq_158 : laptop_adapter.I_mag[5]
eq_159 : laptop_adapter.I_mag[6]
eq_160 : laptop_adapter.I_mag[7]
eq_161 : laptop_adapter.I_mag[8]
eq_162 : laptop_adapter.I_mag[9]
eq_163 : laptop_adapter.I_mag[10]
eq_164 : laptop_adapter.I_mag[11]
eq_165 : laptop_adapter.I_mag[12]
eq_166 : laptop_adapter.I_mag[13]
eq_167 : laptop_adapter.V_mag[1]
eq_168 : laptop_adapter.V_mag[2]
eq_169 : laptop_adapter.V_mag[3]
eq_170 : laptop_adapter.V_mag[4]
eq_171 : laptop_adapter.V_mag[5]
eq_172 : laptop_adapter.V_mag[6]
eq_173 : laptop_adapter.V_mag[7]
eq_174 : laptop_adapter.V_mag[8]
eq_175 : laptop_adapter.V_mag[9]
eq_176 : laptop_adapter.V_mag[10]
eq_177 : laptop_adapter.V_mag[11]
eq_178 : laptop_adapter.V_mag[12]
eq_179 : laptop_adapter.V_mag[13]
eq_180 : laptop_adapter.V_arg[2]
eq_181 : laptop_adapter.V_arg[3]
eq_182 : laptop_adapter.V_arg[4]
eq_183 : laptop_adapter.V_arg[5]
eq_184 : laptop_adapter.V_arg[6]
eq_185 : laptop_adapter.V_arg[7]
eq_186 : laptop_adapter.V_arg[8]
eq_187 : laptop_adapter.V_arg[9]
eq_188 : laptop_adapter.V_arg[10]
eq_189 : laptop_adapter.V_arg[11]
eq_190 : laptop_adapter.V_arg[12]
eq_191 : laptop_adapter.V_arg[13]
eq_192 : laptop_adapter.magScale
eq_193 : laptop_adapter.argAdj[1]
eq_194 : laptop_adapter.argAdj[2]
eq_195 : laptop_adapter.argAdj[3]
eq_196 : laptop_adapter.argAdj[4]
eq_197 : laptop_adapter.argAdj[5]
eq_198 : laptop_adapter.argAdj[6]
eq_199 : laptop_adapter.argAdj[7]
eq_200 : laptop_adapter.argAdj[8]
eq_201 : laptop_adapter.argAdj[9]
eq_202 : laptop_adapter.argAdj[10]
eq_203 : laptop_adapter.argAdj[11]
eq_204 : laptop_adapter.argAdj[12]
eq_205 : laptop_adapter.a[1].re
eq_206 : laptop_adapter.a[1].im
eq_207 : laptop_adapter.a[2].re
eq_208 : laptop_adapter.a[2].im
eq_209 : laptop_adapter.a[3].re
eq_210 : laptop_adapter.a[3].im
eq_211 : laptop_adapter.a[4].re
eq_212 : laptop_adapter.a[4].im
eq_213 : laptop_adapter.a[5].re
eq_214 : laptop_adapter.a[5].im
eq_215 : laptop_adapter.a[6].re
eq_216 : laptop_adapter.a[6].im
eq_217 : laptop_adapter.a[7].re
eq_218 : laptop_adapter.a[7].im
eq_219 : laptop_adapter.a[8].re
eq_220 : laptop_adapter.a[8].im
eq_221 : laptop_adapter.a[9].re
eq_222 : laptop_adapter.a[9].im
eq_223 : laptop_adapter.a[10].re
eq_224 : laptop_adapter.a[10].im
eq_225 : laptop_adapter.a[11].re
eq_226 : laptop_adapter.a[11].im
eq_227 : laptop_adapter.a[12].re
eq_228 : laptop_adapter.a[12].im
eq_229 : laptop_adapter.c[1]
eq_230 : laptop_adapter.c[2]
eq_231 : laptop_adapter.c[3]
eq_232 : laptop_adapter.c[4]
eq_233 : laptop_adapter.c[5]
eq_234 : laptop_adapter.c[6]
eq_235 : laptop_adapter.c[7]
eq_236 : laptop_adapter.c[8]
eq_237 : laptop_adapter.c[9]
eq_238 : laptop_adapter.c[10]
eq_239 : laptop_adapter.c[11]
eq_240 : laptop_adapter.c[12]
eq_241 : z.vFundAbs
eq_242 : z.vFundArg
eq_243 : z.iFundAbs
eq_244 : z.iFundArg
eq_245 : z1.vFundAbs
eq_246 : z1.iFundAbs
eq_247 : z1.iFundArg
eq_248 : currentSensor.iArg[1]
eq_249 : currentSensor.iArg[2]
eq_250 : currentSensor.iArg[3]
eq_251 : currentSensor.iArg[4]
eq_252 : currentSensor.iArg[5]
eq_253 : currentSensor.iArg[6]
eq_254 : currentSensor.iArg[7]
eq_255 : currentSensor.iArg[8]
eq_256 : currentSensor.iArg[9]
eq_257 : currentSensor.iArg[10]
eq_258 : currentSensor.iArg[11]
eq_259 : currentSensor.iArg[12]
eq_260 : currentSensor.iArg[13]
eq_261 : laptop_adapter.V_arg[1]
Unmatched equations: {}
Unmatched variables: {v.theta }
----------------------------------------

Analysing initial system for redundant equations to remove.
All seems to be ok!
Init DAE BiPGraph after addition of initial equations
BiPGraph (263 equations, 260 variables)
Variables: {der(v.theta) v.P1 v.iMag[1] v.iMag[2] v.iMag[3] v.iMag[4] v.iMag[5] v.iMag[6] v.iMag[7] v.iMag[8] v.iMag[9] v.iMag[10] v.iMag[11] v.iMag[12] v.iMag[13] v.iArg[1] v.iArg[2] v.iArg[3] v.iArg[4] v.iArg[5] v.iArg[6] v.iArg[7] v.iArg[8] v.iArg[9] v.iArg[10] v.iArg[11] v.iArg[12] v.iArg[13] v.i[1].re v.i[1].im v.i[2].re v.i[2].im v.i[3].re v.i[3].im v.i[4].re v.i[4].im v.i[5].re v.i[5].im v.i[6].re v.i[6].im v.i[7].re v.i[7].im v.i[8].re v.i[8].im v.i[9].re v.i[9].im v.i[10].re v.i[10].im v.i[11].re v.i[11].im v.i[12].re v.i[12].im v.i[13].re v.i[13].im v.omega laptop_adapter.loadBase.omega laptop_adapter.I_mag[1] laptop_adapter.I_mag[2] laptop_adapter.I_mag[3] laptop_adapter.I_mag[4] laptop_adapter.I_mag[5] laptop_adapter.I_mag[6] laptop_adapter.I_mag[7] laptop_adapter.I_mag[8] laptop_adapter.I_mag[9] laptop_adapter.I_mag[10] laptop_adapter.I_mag[11] laptop_adapter.I_mag[12] laptop_adapter.I_mag[13] laptop_adapter.V_mag[1] laptop_adapter.V_mag[2] laptop_adapter.V_mag[3] laptop_adapter.V_mag[4] laptop_adapter.V_mag[5] laptop_adapter.V_mag[6] laptop_adapter.V_mag[7] laptop_adapter.V_mag[8] laptop_adapter.V_mag[9] laptop_adapter.V_mag[10] laptop_adapter.V_mag[11] laptop_adapter.V_mag[12] laptop_adapter.V_mag[13] laptop_adapter.V_arg[1] laptop_adapter.V_arg[2] laptop_adapter.V_arg[3] laptop_adapter.V_arg[4] laptop_adapter.V_arg[5] laptop_adapter.V_arg[6] laptop_adapter.V_arg[7] laptop_adapter.V_arg[8] laptop_adapter.V_arg[9] laptop_adapter.V_arg[10] laptop_adapter.V_arg[11] laptop_adapter.V_arg[12] laptop_adapter.V_arg[13] laptop_adapter.magScale laptop_adapter.argAdj[1] laptop_adapter.argAdj[2] laptop_adapter.argAdj[3] laptop_adapter.argAdj[4] laptop_adapter.argAdj[5] laptop_adapter.argAdj[6] laptop_adapter.argAdj[7] laptop_adapter.argAdj[8] laptop_adapter.argAdj[9] laptop_adapter.argAdj[10] laptop_adapter.argAdj[11] laptop_adapter.argAdj[12] laptop_adapter.a[1].re laptop_adapter.a[1].im laptop_adapter.a[2].re laptop_adapter.a[2].im laptop_adapter.a[3].re laptop_adapter.a[3].im laptop_adapter.a[4].re laptop_adapter.a[4].im laptop_adapter.a[5].re laptop_adapter.a[5].im laptop_adapter.a[6].re laptop_adapter.a[6].im laptop_adapter.a[7].re laptop_adapter.a[7].im laptop_adapter.a[8].re laptop_adapter.a[8].im laptop_adapter.a[9].re laptop_adapter.a[9].im laptop_adapter.a[10].re laptop_adapter.a[10].im laptop_adapter.a[11].re laptop_adapter.a[11].im laptop_adapter.a[12].re laptop_adapter.a[12].im laptop_adapter.c[1] laptop_adapter.c[2] laptop_adapter.c[3] laptop_adapter.c[4] laptop_adapter.c[5] laptop_adapter.c[6] laptop_adapter.c[7] laptop_adapter.c[8] laptop_adapter.c[9] laptop_adapter.c[10] laptop_adapter.c[11] laptop_adapter.c[12] z.vFundAbs z.vFundArg z.iFundAbs z.iFundArg z.v[1].re z.v[1].im z.v[2].re z.v[2].im z.v[3].re z.v[3].im z.v[4].re z.v[4].im z.v[5].re z.v[5].im z.v[6].re z.v[6].im z.v[7].re z.v[7].im z.v[8].re z.v[8].im z.v[9].re z.v[9].im z.v[10].re z.v[10].im z.v[11].re z.v[11].im z.v[12].re z.v[12].im z.v[13].re z.v[13].im z.omega currentSensor.iMag[1] currentSensor.iMag[2] currentSensor.iMag[3] currentSensor.iMag[4] currentSensor.iMag[5] currentSensor.iMag[6] currentSensor.iMag[7] currentSensor.iMag[8] currentSensor.iMag[9] currentSensor.iMag[10] currentSensor.iMag[11] currentSensor.iMag[12] currentSensor.iMag[13] currentSensor.iArg[1] currentSensor.iArg[2] currentSensor.iArg[3] currentSensor.iArg[4] currentSensor.iArg[5] currentSensor.iArg[6] currentSensor.iArg[7] currentSensor.iArg[8] currentSensor.iArg[9] currentSensor.iArg[10] currentSensor.iArg[11] currentSensor.iArg[12] currentSensor.iArg[13] currentSensor.i[1].re currentSensor.i[1].im currentSensor.i[2].re currentSensor.i[2].im currentSensor.i[3].re currentSensor.i[3].im currentSensor.i[4].re currentSensor.i[4].im currentSensor.i[5].re currentSensor.i[5].im currentSensor.i[6].re currentSensor.i[6].im currentSensor.i[7].re currentSensor.i[7].im currentSensor.i[8].re currentSensor.i[8].im currentSensor.i[9].re currentSensor.i[9].im currentSensor.i[10].re currentSensor.i[10].im currentSensor.i[11].re currentSensor.i[11].im currentSensor.i[12].re currentSensor.i[12].im currentSensor.i[13].re currentSensor.i[13].im currentSensor.omega z1.vFundAbs z1.iFundAbs z1.iFundArg z1.v[1].re z1.i[1].re z1.i[1].im z1.i[2].re z1.i[2].im z1.i[3].re z1.i[3].im z1.i[4].re z1.i[4].im z1.i[5].re z1.i[5].im z1.i[6].re z1.i[6].im z1.i[7].re z1.i[7].im z1.i[8].re z1.i[8].im z1.i[9].re z1.i[9].im z1.i[10].re z1.i[10].im z1.i[11].re z1.i[11].im z1.i[12].re z1.i[12].im z1.i[13].re z1.i[13].im z1.omega v.theta }
eq_1 : // algorithm

eq_2 : der(v.theta)@M // der(v.theta) = 6.283185307179586 * systemDef.fFund
eq_3 : v.omega@M der(v.theta)@ // v.omega = der(v.theta)
eq_4 : currentSensor.i[1].re@M z1.v[1].re@ z.v[1].im@ // currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_5 : currentSensor.i[1].im@M z.v[1].im@ z1.v[1].re@ // currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_6 : currentSensor.i[2].re@M laptop_adapter.c[1]@ laptop_adapter.a[1].re@ // currentSensor.i[2].re = laptop_adapter.c[1] * laptop_adapter.a[1].re
eq_7 : currentSensor.i[2].im@M laptop_adapter.c[1]@ laptop_adapter.a[1].im@ // currentSensor.i[2].im = laptop_adapter.c[1] * laptop_adapter.a[1].im
eq_8 : currentSensor.i[3].re@M laptop_adapter.c[2]@ laptop_adapter.a[2].re@ // currentSensor.i[3].re = laptop_adapter.c[2] * laptop_adapter.a[2].re
eq_9 : currentSensor.i[3].im@M laptop_adapter.c[2]@ laptop_adapter.a[2].im@ // currentSensor.i[3].im = laptop_adapter.c[2] * laptop_adapter.a[2].im
eq_10 : currentSensor.i[4].re@M laptop_adapter.c[3]@ laptop_adapter.a[3].re@ // currentSensor.i[4].re = laptop_adapter.c[3] * laptop_adapter.a[3].re
eq_11 : currentSensor.i[4].im@M laptop_adapter.c[3]@ laptop_adapter.a[3].im@ // currentSensor.i[4].im = laptop_adapter.c[3] * laptop_adapter.a[3].im
eq_12 : currentSensor.i[5].re@M laptop_adapter.c[4]@ laptop_adapter.a[4].re@ // currentSensor.i[5].re = laptop_adapter.c[4] * laptop_adapter.a[4].re
eq_13 : currentSensor.i[5].im@M laptop_adapter.c[4]@ laptop_adapter.a[4].im@ // currentSensor.i[5].im = laptop_adapter.c[4] * laptop_adapter.a[4].im
eq_14 : currentSensor.i[6].re@M laptop_adapter.c[5]@ laptop_adapter.a[5].re@ // currentSensor.i[6].re = laptop_adapter.c[5] * laptop_adapter.a[5].re
eq_15 : currentSensor.i[6].im@M laptop_adapter.c[5]@ laptop_adapter.a[5].im@ // currentSensor.i[6].im = laptop_adapter.c[5] * laptop_adapter.a[5].im
eq_16 : currentSensor.i[7].re@M laptop_adapter.c[6]@ laptop_adapter.a[6].re@ // currentSensor.i[7].re = laptop_adapter.c[6] * laptop_adapter.a[6].re
eq_17 : currentSensor.i[7].im@M laptop_adapter.c[6]@ laptop_adapter.a[6].im@ // currentSensor.i[7].im = laptop_adapter.c[6] * laptop_adapter.a[6].im
eq_18 : currentSensor.i[8].re@M laptop_adapter.c[7]@ laptop_adapter.a[7].re@ // currentSensor.i[8].re = laptop_adapter.c[7] * laptop_adapter.a[7].re
eq_19 : currentSensor.i[8].im@M laptop_adapter.c[7]@ laptop_adapter.a[7].im@ // currentSensor.i[8].im = laptop_adapter.c[7] * laptop_adapter.a[7].im
eq_20 : currentSensor.i[9].re@M laptop_adapter.c[8]@ laptop_adapter.a[8].re@ // currentSensor.i[9].re = laptop_adapter.c[8] * laptop_adapter.a[8].re
eq_21 : currentSensor.i[9].im@M laptop_adapter.c[8]@ laptop_adapter.a[8].im@ // currentSensor.i[9].im = laptop_adapter.c[8] * laptop_adapter.a[8].im
eq_22 : currentSensor.i[10].re@M laptop_adapter.c[9]@ laptop_adapter.a[9].re@ // currentSensor.i[10].re = laptop_adapter.c[9] * laptop_adapter.a[9].re
eq_23 : currentSensor.i[10].im@M laptop_adapter.c[9]@ laptop_adapter.a[9].im@ // currentSensor.i[10].im = laptop_adapter.c[9] * laptop_adapter.a[9].im
eq_24 : currentSensor.i[11].re@M laptop_adapter.c[10]@ laptop_adapter.a[10].re@ // currentSensor.i[11].re = laptop_adapter.c[10] * laptop_adapter.a[10].re
eq_25 : currentSensor.i[11].im@M laptop_adapter.c[10]@ laptop_adapter.a[10].im@ // currentSensor.i[11].im = laptop_adapter.c[10] * laptop_adapter.a[10].im
eq_26 : currentSensor.i[12].re@M laptop_adapter.c[11]@ laptop_adapter.a[11].re@ // currentSensor.i[12].re = laptop_adapter.c[11] * laptop_adapter.a[11].re
eq_27 : currentSensor.i[12].im@M laptop_adapter.c[11]@ laptop_adapter.a[11].im@ // currentSensor.i[12].im = laptop_adapter.c[11] * laptop_adapter.a[11].im
eq_28 : currentSensor.i[13].re@M laptop_adapter.c[12]@ laptop_adapter.a[12].re@ // currentSensor.i[13].re = laptop_adapter.c[12] * laptop_adapter.a[12].re
eq_29 : currentSensor.i[13].im@M laptop_adapter.c[12]@ laptop_adapter.a[12].im@ // currentSensor.i[13].im = laptop_adapter.c[12] * laptop_adapter.a[12].im
eq_30 : // algorithm

eq_31 : laptop_adapter.loadBase.omega@M der(v.theta)@ // laptop_adapter.loadBase.omega = der(v.theta)
eq_32 : z.v[1].re@M v.i[1].re@ v.i[1].im@ // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_33 : z.v[2].re@M v.i[2].re@ v.i[2].im@ // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)
eq_34 : z.v[3].re@M v.i[3].re@ v.i[3].im@ // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)
eq_35 : z.v[4].re@M v.i[4].re@ v.i[4].im@ // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)
eq_36 : z.v[5].re@M v.i[5].re@ v.i[5].im@ // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)
eq_37 : z.v[6].re@M v.i[6].re@ v.i[6].im@ // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)
eq_38 : z.v[7].re@M v.i[7].re@ v.i[7].im@ // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)
eq_39 : z.v[8].re@M v.i[8].re@ v.i[8].im@ // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)
eq_40 : z.v[9].re@M v.i[9].re@ v.i[9].im@ // z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im)
eq_41 : z.v[10].re@M v.i[10].re@ v.i[10].im@ // z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im)
eq_42 : z.v[11].re@M v.i[11].re@ v.i[11].im@ // z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im)
eq_43 : z.v[12].re@M v.i[12].re@ v.i[12].im@ // z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im)
eq_44 : z.v[13].re@M v.i[13].re@ v.i[13].im@ // z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im)
eq_45 : z.v[1].im@M v.i[1].im@ v.i[1].re@ // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_46 : z.v[2].im@M v.i[2].im@ v.i[2].re@ // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_47 : z.v[3].im@M v.i[3].im@ v.i[3].re@ // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_48 : z.v[4].im@M v.i[4].im@ v.i[4].re@ // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_49 : z.v[5].im@M v.i[5].im@ v.i[5].re@ // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_50 : z.v[6].im@M v.i[6].im@ v.i[6].re@ // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_51 : z.v[7].im@M v.i[7].im@ v.i[7].re@ // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_52 : z.v[8].im@M v.i[8].im@ v.i[8].re@ // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_53 : z.v[9].im@M v.i[9].im@ v.i[9].re@ // z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
eq_54 : z.v[10].im@M v.i[10].im@ v.i[10].re@ // z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
eq_55 : z.v[11].im@M v.i[11].im@ v.i[11].re@ // z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
eq_56 : z.v[12].im@M v.i[12].im@ v.i[12].re@ // z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
eq_57 : z.v[13].im@M v.i[13].im@ v.i[13].re@ // z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
eq_58 : z.omega@M der(v.theta)@ // z.omega = der(v.theta)
eq_59 : z.v[1].re@ z1.v[1].re@M // z.v[1].re = 120.0 - z1.v[1].re
eq_60 : currentSensor.iMag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // currentSensor.iMag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_61 : currentSensor.iMag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // currentSensor.iMag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_62 : currentSensor.iMag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // currentSensor.iMag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_63 : currentSensor.iMag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // currentSensor.iMag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_64 : currentSensor.iMag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // currentSensor.iMag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_65 : currentSensor.iMag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // currentSensor.iMag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_66 : currentSensor.iMag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // currentSensor.iMag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_67 : currentSensor.iMag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // currentSensor.iMag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_68 : currentSensor.iMag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // currentSensor.iMag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_69 : currentSensor.iMag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // currentSensor.iMag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_70 : currentSensor.iMag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // currentSensor.iMag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_71 : currentSensor.iMag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // currentSensor.iMag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_72 : currentSensor.iMag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // currentSensor.iMag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_73 : currentSensor.omega@M der(v.theta)@ // currentSensor.omega = der(v.theta)
eq_74 : z1.v[1].re@ z1.i[1].re@M z1.i[1].im@ // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_75 : z.v[2].re@ z1.i[2].re@M z1.i[2].im@ // - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_76 : z.v[3].re@ z1.i[3].re@M z1.i[3].im@ // - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_77 : z.v[4].re@ z1.i[4].re@M z1.i[4].im@ // - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
eq_78 : z.v[5].re@ z1.i[5].re@M z1.i[5].im@ // - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
eq_79 : z.v[6].re@ z1.i[6].re@M z1.i[6].im@ // - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
eq_80 : z.v[7].re@ z1.i[7].re@M z1.i[7].im@ // - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
eq_81 : z.v[8].re@ z1.i[8].re@M z1.i[8].im@ // - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
eq_82 : z.v[9].re@ z1.i[9].re@M z1.i[9].im@ // - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
eq_83 : z.v[10].re@ z1.i[10].re@M z1.i[10].im@ // - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
eq_84 : z.v[11].re@ z1.i[11].re@M z1.i[11].im@ // - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
eq_85 : z.v[12].re@ z1.i[12].re@M z1.i[12].im@ // - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
eq_86 : z.v[13].re@ z1.i[13].re@M z1.i[13].im@ // - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
eq_87 : z.v[1].im@ z1.i[1].im@M z1.i[1].re@ // - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_88 : z.v[2].im@ z1.i[2].im@M z1.i[2].re@ // - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_89 : z.v[3].im@ z1.i[3].im@M z1.i[3].re@ // - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_90 : z.v[4].im@ z1.i[4].im@M z1.i[4].re@ // - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
eq_91 : z.v[5].im@ z1.i[5].im@M z1.i[5].re@ // - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
eq_92 : z.v[6].im@ z1.i[6].im@M z1.i[6].re@ // - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
eq_93 : z.v[7].im@ z1.i[7].im@M z1.i[7].re@ // - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
eq_94 : z.v[8].im@ z1.i[8].im@M z1.i[8].re@ // - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
eq_95 : z.v[9].im@ z1.i[9].im@M z1.i[9].re@ // - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
eq_96 : z.v[10].im@ z1.i[10].im@M z1.i[10].re@ // - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
eq_97 : z.v[11].im@ z1.i[11].im@M z1.i[11].re@ // - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
eq_98 : z.v[12].im@ z1.i[12].im@M z1.i[12].re@ // - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
eq_99 : z.v[13].im@ z1.i[13].im@M z1.i[13].re@ // - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
eq_100 : z1.omega@M der(v.theta)@ // z1.omega = der(v.theta)
eq_101 : currentSensor.i[1].im@ v.i[1].im@M z1.i[1].im@ // currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0
eq_102 : currentSensor.i[2].im@ v.i[2].im@M z1.i[2].im@ // currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0
eq_103 : currentSensor.i[3].im@ v.i[3].im@M z1.i[3].im@ // currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0
eq_104 : currentSensor.i[4].im@ v.i[4].im@M z1.i[4].im@ // currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0
eq_105 : currentSensor.i[5].im@ v.i[5].im@M z1.i[5].im@ // currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0
eq_106 : currentSensor.i[6].im@ v.i[6].im@M z1.i[6].im@ // currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0
eq_107 : currentSensor.i[7].im@ v.i[7].im@M z1.i[7].im@ // currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0
eq_108 : currentSensor.i[8].im@ v.i[8].im@M z1.i[8].im@ // currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0
eq_109 : currentSensor.i[9].im@ v.i[9].im@M z1.i[9].im@ // currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0
eq_110 : currentSensor.i[10].im@ v.i[10].im@M z1.i[10].im@ // currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0
eq_111 : currentSensor.i[11].im@ v.i[11].im@M z1.i[11].im@ // currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0
eq_112 : currentSensor.i[12].im@ v.i[12].im@M z1.i[12].im@ // currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0
eq_113 : currentSensor.i[13].im@ v.i[13].im@M z1.i[13].im@ // currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0
eq_114 : currentSensor.i[1].re@ v.i[1].re@M z1.i[1].re@ // currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0
eq_115 : currentSensor.i[2].re@ v.i[2].re@M z1.i[2].re@ // currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0
eq_116 : currentSensor.i[3].re@ v.i[3].re@M z1.i[3].re@ // currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0
eq_117 : currentSensor.i[4].re@ v.i[4].re@M z1.i[4].re@ // currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0
eq_118 : currentSensor.i[5].re@ v.i[5].re@M z1.i[5].re@ // currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0
eq_119 : currentSensor.i[6].re@ v.i[6].re@M z1.i[6].re@ // currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0
eq_120 : currentSensor.i[7].re@ v.i[7].re@M z1.i[7].re@ // currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0
eq_121 : currentSensor.i[8].re@ v.i[8].re@M z1.i[8].re@ // currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0
eq_122 : currentSensor.i[9].re@ v.i[9].re@M z1.i[9].re@ // currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0
eq_123 : currentSensor.i[10].re@ v.i[10].re@M z1.i[10].re@ // currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0
eq_124 : currentSensor.i[11].re@ v.i[11].re@M z1.i[11].re@ // currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0
eq_125 : currentSensor.i[12].re@ v.i[12].re@M z1.i[12].re@ // currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0
eq_126 : currentSensor.i[13].re@ v.i[13].re@M z1.i[13].re@ // currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0
eq_127 : v.P1@M v.i[1].re@ // v.P1 = 120.0 * v.i[1].re
eq_128 : v.iMag[1]@M v.i[1].re@ v.i[1].im@ // v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5
eq_129 : v.iMag[2]@M v.i[2].re@ v.i[2].im@ // v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5
eq_130 : v.iMag[3]@M v.i[3].re@ v.i[3].im@ // v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5
eq_131 : v.iMag[4]@M v.i[4].re@ v.i[4].im@ // v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5
eq_132 : v.iMag[5]@M v.i[5].re@ v.i[5].im@ // v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5
eq_133 : v.iMag[6]@M v.i[6].re@ v.i[6].im@ // v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5
eq_134 : v.iMag[7]@M v.i[7].re@ v.i[7].im@ // v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5
eq_135 : v.iMag[8]@M v.i[8].re@ v.i[8].im@ // v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5
eq_136 : v.iMag[9]@M v.i[9].re@ v.i[9].im@ // v.iMag[9] = (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5
eq_137 : v.iMag[10]@M v.i[10].re@ v.i[10].im@ // v.iMag[10] = (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5
eq_138 : v.iMag[11]@M v.i[11].re@ v.i[11].im@ // v.iMag[11] = (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5
eq_139 : v.iMag[12]@M v.i[12].re@ v.i[12].im@ // v.iMag[12] = (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5
eq_140 : v.iMag[13]@M v.i[13].re@ v.i[13].im@ // v.iMag[13] = (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5
eq_141 : v.iArg[1]@M v.i[1].im@ v.i[1].re@ // v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)
eq_142 : v.iArg[2]@M v.i[2].im@ v.i[2].re@ // v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)
eq_143 : v.iArg[3]@M v.i[3].im@ v.i[3].re@ // v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)
eq_144 : v.iArg[4]@M v.i[4].im@ v.i[4].re@ // v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)
eq_145 : v.iArg[5]@M v.i[5].im@ v.i[5].re@ // v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)
eq_146 : v.iArg[6]@M v.i[6].im@ v.i[6].re@ // v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)
eq_147 : v.iArg[7]@M v.i[7].im@ v.i[7].re@ // v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)
eq_148 : v.iArg[8]@M v.i[8].im@ v.i[8].re@ // v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)
eq_149 : v.iArg[9]@M v.i[9].im@ v.i[9].re@ // v.iArg[9] = Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)
eq_150 : v.iArg[10]@M v.i[10].im@ v.i[10].re@ // v.iArg[10] = Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)
eq_151 : v.iArg[11]@M v.i[11].im@ v.i[11].re@ // v.iArg[11] = Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)
eq_152 : v.iArg[12]@M v.i[12].im@ v.i[12].re@ // v.iArg[12] = Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)
eq_153 : v.iArg[13]@M v.i[13].im@ v.i[13].re@ // v.iArg[13] = Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)
eq_154 : laptop_adapter.I_mag[1]@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.I_mag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_155 : laptop_adapter.I_mag[2]@M currentSensor.i[2].re@ currentSensor.i[2].im@ // laptop_adapter.I_mag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5
eq_156 : laptop_adapter.I_mag[3]@M currentSensor.i[3].re@ currentSensor.i[3].im@ // laptop_adapter.I_mag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5
eq_157 : laptop_adapter.I_mag[4]@M currentSensor.i[4].re@ currentSensor.i[4].im@ // laptop_adapter.I_mag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5
eq_158 : laptop_adapter.I_mag[5]@M currentSensor.i[5].re@ currentSensor.i[5].im@ // laptop_adapter.I_mag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5
eq_159 : laptop_adapter.I_mag[6]@M currentSensor.i[6].re@ currentSensor.i[6].im@ // laptop_adapter.I_mag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5
eq_160 : laptop_adapter.I_mag[7]@M currentSensor.i[7].re@ currentSensor.i[7].im@ // laptop_adapter.I_mag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5
eq_161 : laptop_adapter.I_mag[8]@M currentSensor.i[8].re@ currentSensor.i[8].im@ // laptop_adapter.I_mag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5
eq_162 : laptop_adapter.I_mag[9]@M currentSensor.i[9].re@ currentSensor.i[9].im@ // laptop_adapter.I_mag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5
eq_163 : laptop_adapter.I_mag[10]@M currentSensor.i[10].re@ currentSensor.i[10].im@ // laptop_adapter.I_mag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5
eq_164 : laptop_adapter.I_mag[11]@M currentSensor.i[11].re@ currentSensor.i[11].im@ // laptop_adapter.I_mag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5
eq_165 : laptop_adapter.I_mag[12]@M currentSensor.i[12].re@ currentSensor.i[12].im@ // laptop_adapter.I_mag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5
eq_166 : laptop_adapter.I_mag[13]@M currentSensor.i[13].re@ currentSensor.i[13].im@ // laptop_adapter.I_mag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5
eq_167 : laptop_adapter.V_mag[1]@M z1.v[1].re@ z.v[1].im@ // laptop_adapter.V_mag[1] = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_168 : laptop_adapter.V_mag[2]@M z.v[2].re@ z.v[2].im@ // laptop_adapter.V_mag[2] = ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5
eq_169 : laptop_adapter.V_mag[3]@M z.v[3].re@ z.v[3].im@ // laptop_adapter.V_mag[3] = ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5
eq_170 : laptop_adapter.V_mag[4]@M z.v[4].re@ z.v[4].im@ // laptop_adapter.V_mag[4] = ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5
eq_171 : laptop_adapter.V_mag[5]@M z.v[5].re@ z.v[5].im@ // laptop_adapter.V_mag[5] = ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5
eq_172 : laptop_adapter.V_mag[6]@M z.v[6].re@ z.v[6].im@ // laptop_adapter.V_mag[6] = ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5
eq_173 : laptop_adapter.V_mag[7]@M z.v[7].re@ z.v[7].im@ // laptop_adapter.V_mag[7] = ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5
eq_174 : laptop_adapter.V_mag[8]@M z.v[8].re@ z.v[8].im@ // laptop_adapter.V_mag[8] = ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5
eq_175 : laptop_adapter.V_mag[9]@M z.v[9].re@ z.v[9].im@ // laptop_adapter.V_mag[9] = ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5
eq_176 : laptop_adapter.V_mag[10]@M z.v[10].re@ z.v[10].im@ // laptop_adapter.V_mag[10] = ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5
eq_177 : laptop_adapter.V_mag[11]@M z.v[11].re@ z.v[11].im@ // laptop_adapter.V_mag[11] = ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5
eq_178 : laptop_adapter.V_mag[12]@M z.v[12].re@ z.v[12].im@ // laptop_adapter.V_mag[12] = ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5
eq_179 : laptop_adapter.V_mag[13]@M z.v[13].re@ z.v[13].im@ // laptop_adapter.V_mag[13] = ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5
eq_180 : laptop_adapter.V_arg[2]@M z.v[2].im@ z.v[2].re@ // laptop_adapter.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)
eq_181 : laptop_adapter.V_arg[3]@M z.v[3].im@ z.v[3].re@ // laptop_adapter.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)
eq_182 : laptop_adapter.V_arg[4]@M z.v[4].im@ z.v[4].re@ // laptop_adapter.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)
eq_183 : laptop_adapter.V_arg[5]@M z.v[5].im@ z.v[5].re@ // laptop_adapter.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)
eq_184 : laptop_adapter.V_arg[6]@M z.v[6].im@ z.v[6].re@ // laptop_adapter.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)
eq_185 : laptop_adapter.V_arg[7]@M z.v[7].im@ z.v[7].re@ // laptop_adapter.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)
eq_186 : laptop_adapter.V_arg[8]@M z.v[8].im@ z.v[8].re@ // laptop_adapter.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)
eq_187 : laptop_adapter.V_arg[9]@M z.v[9].im@ z.v[9].re@ // laptop_adapter.V_arg[9] = Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)
eq_188 : laptop_adapter.V_arg[10]@M z.v[10].im@ z.v[10].re@ // laptop_adapter.V_arg[10] = Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)
eq_189 : laptop_adapter.V_arg[11]@M z.v[11].im@ z.v[11].re@ // laptop_adapter.V_arg[11] = Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)
eq_190 : laptop_adapter.V_arg[12]@M z.v[12].im@ z.v[12].re@ // laptop_adapter.V_arg[12] = Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)
eq_191 : laptop_adapter.V_arg[13]@M z.v[13].im@ z.v[13].re@ // laptop_adapter.V_arg[13] = Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)
eq_192 : laptop_adapter.magScale@M currentSensor.i[1].re@ currentSensor.i[1].im@ // laptop_adapter.magScale = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5
eq_193 : laptop_adapter.argAdj[1]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[1] = 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]
eq_194 : laptop_adapter.argAdj[2]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[2] = 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]
eq_195 : laptop_adapter.argAdj[3]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[3] = -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]
eq_196 : laptop_adapter.argAdj[4]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[4] = 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]
eq_197 : laptop_adapter.argAdj[5]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[5] = 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]
eq_198 : laptop_adapter.argAdj[6]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[6] = 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]
eq_199 : laptop_adapter.argAdj[7]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[7] = 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]
eq_200 : laptop_adapter.argAdj[8]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[8] = -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]
eq_201 : laptop_adapter.argAdj[9]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[9] = 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]
eq_202 : laptop_adapter.argAdj[10]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[10] = 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]
eq_203 : laptop_adapter.argAdj[11]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[11] = -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]
eq_204 : laptop_adapter.argAdj[12]@M laptop_adapter.V_arg[1]@ // laptop_adapter.argAdj[12] = 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]
eq_205 : laptop_adapter.a[1].re@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].re = cos(laptop_adapter.argAdj[1])
eq_206 : laptop_adapter.a[1].im@M laptop_adapter.argAdj[1]@ // laptop_adapter.a[1].im = sin(laptop_adapter.argAdj[1])
eq_207 : laptop_adapter.a[2].re@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].re = cos(laptop_adapter.argAdj[2])
eq_208 : laptop_adapter.a[2].im@M laptop_adapter.argAdj[2]@ // laptop_adapter.a[2].im = sin(laptop_adapter.argAdj[2])
eq_209 : laptop_adapter.a[3].re@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].re = cos(laptop_adapter.argAdj[3])
eq_210 : laptop_adapter.a[3].im@M laptop_adapter.argAdj[3]@ // laptop_adapter.a[3].im = sin(laptop_adapter.argAdj[3])
eq_211 : laptop_adapter.a[4].re@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].re = cos(laptop_adapter.argAdj[4])
eq_212 : laptop_adapter.a[4].im@M laptop_adapter.argAdj[4]@ // laptop_adapter.a[4].im = sin(laptop_adapter.argAdj[4])
eq_213 : laptop_adapter.a[5].re@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].re = cos(laptop_adapter.argAdj[5])
eq_214 : laptop_adapter.a[5].im@M laptop_adapter.argAdj[5]@ // laptop_adapter.a[5].im = sin(laptop_adapter.argAdj[5])
eq_215 : laptop_adapter.a[6].re@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].re = cos(laptop_adapter.argAdj[6])
eq_216 : laptop_adapter.a[6].im@M laptop_adapter.argAdj[6]@ // laptop_adapter.a[6].im = sin(laptop_adapter.argAdj[6])
eq_217 : laptop_adapter.a[7].re@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].re = cos(laptop_adapter.argAdj[7])
eq_218 : laptop_adapter.a[7].im@M laptop_adapter.argAdj[7]@ // laptop_adapter.a[7].im = sin(laptop_adapter.argAdj[7])
eq_219 : laptop_adapter.a[8].re@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].re = cos(laptop_adapter.argAdj[8])
eq_220 : laptop_adapter.a[8].im@M laptop_adapter.argAdj[8]@ // laptop_adapter.a[8].im = sin(laptop_adapter.argAdj[8])
eq_221 : laptop_adapter.a[9].re@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].re = cos(laptop_adapter.argAdj[9])
eq_222 : laptop_adapter.a[9].im@M laptop_adapter.argAdj[9]@ // laptop_adapter.a[9].im = sin(laptop_adapter.argAdj[9])
eq_223 : laptop_adapter.a[10].re@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].re = cos(laptop_adapter.argAdj[10])
eq_224 : laptop_adapter.a[10].im@M laptop_adapter.argAdj[10]@ // laptop_adapter.a[10].im = sin(laptop_adapter.argAdj[10])
eq_225 : laptop_adapter.a[11].re@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].re = cos(laptop_adapter.argAdj[11])
eq_226 : laptop_adapter.a[11].im@M laptop_adapter.argAdj[11]@ // laptop_adapter.a[11].im = sin(laptop_adapter.argAdj[11])
eq_227 : laptop_adapter.a[12].re@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].re = cos(laptop_adapter.argAdj[12])
eq_228 : laptop_adapter.a[12].im@M laptop_adapter.argAdj[12]@ // laptop_adapter.a[12].im = sin(laptop_adapter.argAdj[12])
eq_229 : laptop_adapter.c[1]@M laptop_adapter.magScale@ // laptop_adapter.c[1] = laptop_adapter.magScale * 0.9421865565594479
eq_230 : laptop_adapter.c[2]@M laptop_adapter.magScale@ // laptop_adapter.c[2] = laptop_adapter.magScale * 0.846418595204449
eq_231 : laptop_adapter.c[3]@M laptop_adapter.magScale@ // laptop_adapter.c[3] = laptop_adapter.magScale * 0.7174634219299512
eq_232 : laptop_adapter.c[4]@M laptop_adapter.magScale@ // laptop_adapter.c[4] = laptop_adapter.magScale * 0.568269396387493
eq_233 : laptop_adapter.c[5]@M laptop_adapter.magScale@ // laptop_adapter.c[5] = laptop_adapter.magScale * 0.4142504288040016
eq_234 : laptop_adapter.c[6]@M laptop_adapter.magScale@ // laptop_adapter.c[6] = laptop_adapter.magScale * 0.2722289795439818
eq_235 : laptop_adapter.c[7]@M laptop_adapter.magScale@ // laptop_adapter.c[7] = laptop_adapter.magScale * 0.1499700094183941
eq_236 : laptop_adapter.c[8]@M laptop_adapter.magScale@ // laptop_adapter.c[8] = laptop_adapter.magScale * 0.060532358446546
eq_237 : laptop_adapter.c[9]@M laptop_adapter.magScale@ // laptop_adapter.c[9] = laptop_adapter.magScale * 0.0286742846032879
eq_238 : laptop_adapter.c[10]@M laptop_adapter.magScale@ // laptop_adapter.c[10] = laptop_adapter.magScale * 0.0500554183998412
eq_239 : laptop_adapter.c[11]@M laptop_adapter.magScale@ // laptop_adapter.c[11] = laptop_adapter.magScale * 0.0574038038345626
eq_240 : laptop_adapter.c[12]@M laptop_adapter.magScale@ // laptop_adapter.c[12] = laptop_adapter.magScale * 0.0490634253296239
eq_241 : z.vFundAbs@M z.v[1].re@ z.v[1].im@ // z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5
eq_242 : z.vFundArg@M z.v[1].im@ z.v[1].re@ // z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)
eq_243 : z.iFundAbs@M v.i[1].re@ v.i[1].im@ // z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5
eq_244 : z.iFundArg@M v.i[1].im@ v.i[1].re@ // z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)
eq_245 : z1.vFundAbs@M z1.v[1].re@ z.v[1].im@ // z1.vFundAbs = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5
eq_246 : z1.iFundAbs@M z1.i[1].re@ z1.i[1].im@ // z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5
eq_247 : z1.iFundArg@M z1.i[1].im@ z1.i[1].re@ // z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)
eq_248 : currentSensor.iArg[1]@M currentSensor.i[1].im@ currentSensor.i[1].re@ // currentSensor.iArg[1] = Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)
eq_249 : currentSensor.iArg[2]@M currentSensor.i[2].im@ currentSensor.i[2].re@ // currentSensor.iArg[2] = Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)
eq_250 : currentSensor.iArg[3]@M currentSensor.i[3].im@ currentSensor.i[3].re@ // currentSensor.iArg[3] = Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)
eq_251 : currentSensor.iArg[4]@M currentSensor.i[4].im@ currentSensor.i[4].re@ // currentSensor.iArg[4] = Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)
eq_252 : currentSensor.iArg[5]@M currentSensor.i[5].im@ currentSensor.i[5].re@ // currentSensor.iArg[5] = Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)
eq_253 : currentSensor.iArg[6]@M currentSensor.i[6].im@ currentSensor.i[6].re@ // currentSensor.iArg[6] = Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)
eq_254 : currentSensor.iArg[7]@M currentSensor.i[7].im@ currentSensor.i[7].re@ // currentSensor.iArg[7] = Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)
eq_255 : currentSensor.iArg[8]@M currentSensor.i[8].im@ currentSensor.i[8].re@ // currentSensor.iArg[8] = Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)
eq_256 : currentSensor.iArg[9]@M currentSensor.i[9].im@ currentSensor.i[9].re@ // currentSensor.iArg[9] = Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)
eq_257 : currentSensor.iArg[10]@M currentSensor.i[10].im@ currentSensor.i[10].re@ // currentSensor.iArg[10] = Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)
eq_258 : currentSensor.iArg[11]@M currentSensor.i[11].im@ currentSensor.i[11].re@ // currentSensor.iArg[11] = Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)
eq_259 : currentSensor.iArg[12]@M currentSensor.i[12].im@ currentSensor.i[12].re@ // currentSensor.iArg[12] = Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)
eq_260 : currentSensor.iArg[13]@M currentSensor.i[13].im@ currentSensor.i[13].re@ // currentSensor.iArg[13] = Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)
eq_261 : laptop_adapter.V_arg[1]@M z.v[1].im@ z1.v[1].re@ // laptop_adapter.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)
eq_262 : // algorithm

eq_263 : v.theta@M // v.theta = 0

Init BiPGraph matching after addition of initial equations
----------------------------------------
BiPGraph matching:
eq_2 : der(v.theta)
eq_3 : v.omega
eq_4 : currentSensor.i[1].re
eq_5 : currentSensor.i[1].im
eq_6 : currentSensor.i[2].re
eq_7 : currentSensor.i[2].im
eq_8 : currentSensor.i[3].re
eq_9 : currentSensor.i[3].im
eq_10 : currentSensor.i[4].re
eq_11 : currentSensor.i[4].im
eq_12 : currentSensor.i[5].re
eq_13 : currentSensor.i[5].im
eq_14 : currentSensor.i[6].re
eq_15 : currentSensor.i[6].im
eq_16 : currentSensor.i[7].re
eq_17 : currentSensor.i[7].im
eq_18 : currentSensor.i[8].re
eq_19 : currentSensor.i[8].im
eq_20 : currentSensor.i[9].re
eq_21 : currentSensor.i[9].im
eq_22 : currentSensor.i[10].re
eq_23 : currentSensor.i[10].im
eq_24 : currentSensor.i[11].re
eq_25 : currentSensor.i[11].im
eq_26 : currentSensor.i[12].re
eq_27 : currentSensor.i[12].im
eq_28 : currentSensor.i[13].re
eq_29 : currentSensor.i[13].im
eq_31 : laptop_adapter.loadBase.omega
eq_32 : z.v[1].re
eq_33 : z.v[2].re
eq_34 : z.v[3].re
eq_35 : z.v[4].re
eq_36 : z.v[5].re
eq_37 : z.v[6].re
eq_38 : z.v[7].re
eq_39 : z.v[8].re
eq_40 : z.v[9].re
eq_41 : z.v[10].re
eq_42 : z.v[11].re
eq_43 : z.v[12].re
eq_44 : z.v[13].re
eq_45 : z.v[1].im
eq_46 : z.v[2].im
eq_47 : z.v[3].im
eq_48 : z.v[4].im
eq_49 : z.v[5].im
eq_50 : z.v[6].im
eq_51 : z.v[7].im
eq_52 : z.v[8].im
eq_53 : z.v[9].im
eq_54 : z.v[10].im
eq_55 : z.v[11].im
eq_56 : z.v[12].im
eq_57 : z.v[13].im
eq_58 : z.omega
eq_59 : z1.v[1].re
eq_60 : currentSensor.iMag[1]
eq_61 : currentSensor.iMag[2]
eq_62 : currentSensor.iMag[3]
eq_63 : currentSensor.iMag[4]
eq_64 : currentSensor.iMag[5]
eq_65 : currentSensor.iMag[6]
eq_66 : currentSensor.iMag[7]
eq_67 : currentSensor.iMag[8]
eq_68 : currentSensor.iMag[9]
eq_69 : currentSensor.iMag[10]
eq_70 : currentSensor.iMag[11]
eq_71 : currentSensor.iMag[12]
eq_72 : currentSensor.iMag[13]
eq_73 : currentSensor.omega
eq_74 : z1.i[1].re
eq_75 : z1.i[2].re
eq_76 : z1.i[3].re
eq_77 : z1.i[4].re
eq_78 : z1.i[5].re
eq_79 : z1.i[6].re
eq_80 : z1.i[7].re
eq_81 : z1.i[8].re
eq_82 : z1.i[9].re
eq_83 : z1.i[10].re
eq_84 : z1.i[11].re
eq_85 : z1.i[12].re
eq_86 : z1.i[13].re
eq_87 : z1.i[1].im
eq_88 : z1.i[2].im
eq_89 : z1.i[3].im
eq_90 : z1.i[4].im
eq_91 : z1.i[5].im
eq_92 : z1.i[6].im
eq_93 : z1.i[7].im
eq_94 : z1.i[8].im
eq_95 : z1.i[9].im
eq_96 : z1.i[10].im
eq_97 : z1.i[11].im
eq_98 : z1.i[12].im
eq_99 : z1.i[13].im
eq_100 : z1.omega
eq_101 : v.i[1].im
eq_102 : v.i[2].im
eq_103 : v.i[3].im
eq_104 : v.i[4].im
eq_105 : v.i[5].im
eq_106 : v.i[6].im
eq_107 : v.i[7].im
eq_108 : v.i[8].im
eq_109 : v.i[9].im
eq_110 : v.i[10].im
eq_111 : v.i[11].im
eq_112 : v.i[12].im
eq_113 : v.i[13].im
eq_114 : v.i[1].re
eq_115 : v.i[2].re
eq_116 : v.i[3].re
eq_117 : v.i[4].re
eq_118 : v.i[5].re
eq_119 : v.i[6].re
eq_120 : v.i[7].re
eq_121 : v.i[8].re
eq_122 : v.i[9].re
eq_123 : v.i[10].re
eq_124 : v.i[11].re
eq_125 : v.i[12].re
eq_126 : v.i[13].re
eq_127 : v.P1
eq_128 : v.iMag[1]
eq_129 : v.iMag[2]
eq_130 : v.iMag[3]
eq_131 : v.iMag[4]
eq_132 : v.iMag[5]
eq_133 : v.iMag[6]
eq_134 : v.iMag[7]
eq_135 : v.iMag[8]
eq_136 : v.iMag[9]
eq_137 : v.iMag[10]
eq_138 : v.iMag[11]
eq_139 : v.iMag[12]
eq_140 : v.iMag[13]
eq_141 : v.iArg[1]
eq_142 : v.iArg[2]
eq_143 : v.iArg[3]
eq_144 : v.iArg[4]
eq_145 : v.iArg[5]
eq_146 : v.iArg[6]
eq_147 : v.iArg[7]
eq_148 : v.iArg[8]
eq_149 : v.iArg[9]
eq_150 : v.iArg[10]
eq_151 : v.iArg[11]
eq_152 : v.iArg[12]
eq_153 : v.iArg[13]
eq_154 : laptop_adapter.I_mag[1]
eq_155 : laptop_adapter.I_mag[2]
eq_156 : laptop_adapter.I_mag[3]
eq_157 : laptop_adapter.I_mag[4]
eq_158 : laptop_adapter.I_mag[5]
eq_159 : laptop_adapter.I_mag[6]
eq_160 : laptop_adapter.I_mag[7]
eq_161 : laptop_adapter.I_mag[8]
eq_162 : laptop_adapter.I_mag[9]
eq_163 : laptop_adapter.I_mag[10]
eq_164 : laptop_adapter.I_mag[11]
eq_165 : laptop_adapter.I_mag[12]
eq_166 : laptop_adapter.I_mag[13]
eq_167 : laptop_adapter.V_mag[1]
eq_168 : laptop_adapter.V_mag[2]
eq_169 : laptop_adapter.V_mag[3]
eq_170 : laptop_adapter.V_mag[4]
eq_171 : laptop_adapter.V_mag[5]
eq_172 : laptop_adapter.V_mag[6]
eq_173 : laptop_adapter.V_mag[7]
eq_174 : laptop_adapter.V_mag[8]
eq_175 : laptop_adapter.V_mag[9]
eq_176 : laptop_adapter.V_mag[10]
eq_177 : laptop_adapter.V_mag[11]
eq_178 : laptop_adapter.V_mag[12]
eq_179 : laptop_adapter.V_mag[13]
eq_180 : laptop_adapter.V_arg[2]
eq_181 : laptop_adapter.V_arg[3]
eq_182 : laptop_adapter.V_arg[4]
eq_183 : laptop_adapter.V_arg[5]
eq_184 : laptop_adapter.V_arg[6]
eq_185 : laptop_adapter.V_arg[7]
eq_186 : laptop_adapter.V_arg[8]
eq_187 : laptop_adapter.V_arg[9]
eq_188 : laptop_adapter.V_arg[10]
eq_189 : laptop_adapter.V_arg[11]
eq_190 : laptop_adapter.V_arg[12]
eq_191 : laptop_adapter.V_arg[13]
eq_192 : laptop_adapter.magScale
eq_193 : laptop_adapter.argAdj[1]
eq_194 : laptop_adapter.argAdj[2]
eq_195 : laptop_adapter.argAdj[3]
eq_196 : laptop_adapter.argAdj[4]
eq_197 : laptop_adapter.argAdj[5]
eq_198 : laptop_adapter.argAdj[6]
eq_199 : laptop_adapter.argAdj[7]
eq_200 : laptop_adapter.argAdj[8]
eq_201 : laptop_adapter.argAdj[9]
eq_202 : laptop_adapter.argAdj[10]
eq_203 : laptop_adapter.argAdj[11]
eq_204 : laptop_adapter.argAdj[12]
eq_205 : laptop_adapter.a[1].re
eq_206 : laptop_adapter.a[1].im
eq_207 : laptop_adapter.a[2].re
eq_208 : laptop_adapter.a[2].im
eq_209 : laptop_adapter.a[3].re
eq_210 : laptop_adapter.a[3].im
eq_211 : laptop_adapter.a[4].re
eq_212 : laptop_adapter.a[4].im
eq_213 : laptop_adapter.a[5].re
eq_214 : laptop_adapter.a[5].im
eq_215 : laptop_adapter.a[6].re
eq_216 : laptop_adapter.a[6].im
eq_217 : laptop_adapter.a[7].re
eq_218 : laptop_adapter.a[7].im
eq_219 : laptop_adapter.a[8].re
eq_220 : laptop_adapter.a[8].im
eq_221 : laptop_adapter.a[9].re
eq_222 : laptop_adapter.a[9].im
eq_223 : laptop_adapter.a[10].re
eq_224 : laptop_adapter.a[10].im
eq_225 : laptop_adapter.a[11].re
eq_226 : laptop_adapter.a[11].im
eq_227 : laptop_adapter.a[12].re
eq_228 : laptop_adapter.a[12].im
eq_229 : laptop_adapter.c[1]
eq_230 : laptop_adapter.c[2]
eq_231 : laptop_adapter.c[3]
eq_232 : laptop_adapter.c[4]
eq_233 : laptop_adapter.c[5]
eq_234 : laptop_adapter.c[6]
eq_235 : laptop_adapter.c[7]
eq_236 : laptop_adapter.c[8]
eq_237 : laptop_adapter.c[9]
eq_238 : laptop_adapter.c[10]
eq_239 : laptop_adapter.c[11]
eq_240 : laptop_adapter.c[12]
eq_241 : z.vFundAbs
eq_242 : z.vFundArg
eq_243 : z.iFundAbs
eq_244 : z.iFundArg
eq_245 : z1.vFundAbs
eq_246 : z1.iFundAbs
eq_247 : z1.iFundArg
eq_248 : currentSensor.iArg[1]
eq_249 : currentSensor.iArg[2]
eq_250 : currentSensor.iArg[3]
eq_251 : currentSensor.iArg[4]
eq_252 : currentSensor.iArg[5]
eq_253 : currentSensor.iArg[6]
eq_254 : currentSensor.iArg[7]
eq_255 : currentSensor.iArg[8]
eq_256 : currentSensor.iArg[9]
eq_257 : currentSensor.iArg[10]
eq_258 : currentSensor.iArg[11]
eq_259 : currentSensor.iArg[12]
eq_260 : currentSensor.iArg[13]
eq_261 : laptop_adapter.V_arg[1]
eq_263 : v.theta
Unmatched equations: {}
Unmatched variables: {}
----------------------------------------

Initial system contains homotopy, computing homotopy block components...
... block components computed: []
Starting automatic tearing
BiPGraph (9 equations, 9 variables)
Variables: {currentSensor.i[1].im v.i[1].im z.v[1].im z1.i[1].im z1.i[1].re v.i[1].re z.v[1].re z1.v[1].re currentSensor.i[1].re }
eq_5 : currentSensor.i[1].im@M z.v[1].im# z1.v[1].re# // currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
eq_101 : currentSensor.i[1].im@ v.i[1].im@M z1.i[1].im@ // currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0
eq_45 : z.v[1].im@M v.i[1].im# v.i[1].re# // z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
eq_87 : z.v[1].im@ z1.i[1].im# z1.i[1].re# // - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
eq_74 : z1.v[1].re@ z1.i[1].re# z1.i[1].im# // z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
eq_114 : currentSensor.i[1].re@ v.i[1].re@M z1.i[1].re@ // currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0
eq_32 : z.v[1].re@M v.i[1].re# v.i[1].im# // z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im)
eq_59 : z.v[1].re@ z1.v[1].re@M // z.v[1].re = 120.0 - z1.v[1].re
eq_4 : currentSensor.i[1].re@M z1.v[1].re# z.v[1].im# // currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)

Initial matching
----------------------------------------
BiPGraph matching:
eq_5 : currentSensor.i[1].im
eq_101 : v.i[1].im
eq_45 : z.v[1].im
eq_114 : v.i[1].re
eq_32 : z.v[1].re
eq_59 : z1.v[1].re
eq_4 : currentSensor.i[1].re
Unmatched equations: {eq_87 eq_74 }
Unmatched variables: {z1.i[1].im z1.i[1].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_5 : currentSensor.i[1].im
eq_101 : v.i[1].im
eq_45 : z.v[1].im
eq_114 : v.i[1].re
eq_32 : z.v[1].re
eq_59 : z1.v[1].re
eq_4 : currentSensor.i[1].re
Unmatched equations: {eq_87 eq_74 }
Unmatched variables: {z1.i[1].im z1.i[1].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re, tearing with variable: v.i[1].re
Automatic tearing pair, equation: z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im, tearing with variable: v.i[1].im
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[2].im z.v[2].im z1.i[2].im z1.i[2].re v.i[2].re z.v[2].re }
eq_102 : v.i[2].im@M z1.i[2].im@ // currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0
eq_46 : z.v[2].im@M v.i[2].im# v.i[2].re# // z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
eq_88 : z.v[2].im@ z1.i[2].im# z1.i[2].re# // - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
eq_75 : z.v[2].re@ z1.i[2].re# z1.i[2].im# // - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
eq_115 : v.i[2].re@M z1.i[2].re@ // currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0
eq_33 : z.v[2].re@M v.i[2].re# v.i[2].im# // z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_102 : v.i[2].im
eq_46 : z.v[2].im
eq_115 : v.i[2].re
eq_33 : z.v[2].re
Unmatched equations: {eq_88 eq_75 }
Unmatched variables: {z1.i[2].im z1.i[2].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_102 : v.i[2].im
eq_46 : z.v[2].im
eq_115 : v.i[2].re
eq_33 : z.v[2].re
Unmatched equations: {eq_88 eq_75 }
Unmatched variables: {z1.i[2].im z1.i[2].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re, tearing with variable: z1.i[2].im
Automatic tearing pair, equation: - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im, tearing with variable: z1.i[2].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[3].im z.v[3].im z1.i[3].im z1.i[3].re v.i[3].re z.v[3].re }
eq_103 : v.i[3].im@M z1.i[3].im@ // currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0
eq_47 : z.v[3].im@M v.i[3].im# v.i[3].re# // z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
eq_89 : z.v[3].im@ z1.i[3].im# z1.i[3].re# // - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
eq_76 : z.v[3].re@ z1.i[3].re# z1.i[3].im# // - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
eq_116 : v.i[3].re@M z1.i[3].re@ // currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0
eq_34 : z.v[3].re@M v.i[3].re# v.i[3].im# // z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_103 : v.i[3].im
eq_47 : z.v[3].im
eq_116 : v.i[3].re
eq_34 : z.v[3].re
Unmatched equations: {eq_89 eq_76 }
Unmatched variables: {z1.i[3].im z1.i[3].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_103 : v.i[3].im
eq_47 : z.v[3].im
eq_116 : v.i[3].re
eq_34 : z.v[3].re
Unmatched equations: {eq_89 eq_76 }
Unmatched variables: {z1.i[3].im z1.i[3].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re, tearing with variable: z1.i[3].im
Automatic tearing pair, equation: - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im, tearing with variable: z1.i[3].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[4].im z.v[4].im z1.i[4].im z1.i[4].re v.i[4].re z.v[4].re }
eq_104 : v.i[4].im@M z1.i[4].im@ // currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0
eq_48 : z.v[4].im@M v.i[4].im# v.i[4].re# // z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
eq_90 : z.v[4].im@ z1.i[4].im# z1.i[4].re# // - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
eq_77 : z.v[4].re@ z1.i[4].re# z1.i[4].im# // - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
eq_117 : v.i[4].re@M z1.i[4].re@ // currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0
eq_35 : z.v[4].re@M v.i[4].re# v.i[4].im# // z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_104 : v.i[4].im
eq_48 : z.v[4].im
eq_117 : v.i[4].re
eq_35 : z.v[4].re
Unmatched equations: {eq_90 eq_77 }
Unmatched variables: {z1.i[4].im z1.i[4].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_104 : v.i[4].im
eq_48 : z.v[4].im
eq_117 : v.i[4].re
eq_35 : z.v[4].re
Unmatched equations: {eq_90 eq_77 }
Unmatched variables: {z1.i[4].im z1.i[4].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re, tearing with variable: z1.i[4].im
Automatic tearing pair, equation: - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im, tearing with variable: z1.i[4].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[5].im z.v[5].im z1.i[5].im z1.i[5].re v.i[5].re z.v[5].re }
eq_105 : v.i[5].im@M z1.i[5].im@ // currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0
eq_49 : z.v[5].im@M v.i[5].im# v.i[5].re# // z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
eq_91 : z.v[5].im@ z1.i[5].im# z1.i[5].re# // - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
eq_78 : z.v[5].re@ z1.i[5].re# z1.i[5].im# // - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
eq_118 : v.i[5].re@M z1.i[5].re@ // currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0
eq_36 : z.v[5].re@M v.i[5].re# v.i[5].im# // z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_105 : v.i[5].im
eq_49 : z.v[5].im
eq_118 : v.i[5].re
eq_36 : z.v[5].re
Unmatched equations: {eq_91 eq_78 }
Unmatched variables: {z1.i[5].im z1.i[5].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_105 : v.i[5].im
eq_49 : z.v[5].im
eq_118 : v.i[5].re
eq_36 : z.v[5].re
Unmatched equations: {eq_91 eq_78 }
Unmatched variables: {z1.i[5].im z1.i[5].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re, tearing with variable: z1.i[5].im
Automatic tearing pair, equation: - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im, tearing with variable: z1.i[5].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[6].im z.v[6].im z1.i[6].im z1.i[6].re v.i[6].re z.v[6].re }
eq_106 : v.i[6].im@M z1.i[6].im@ // currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0
eq_50 : z.v[6].im@M v.i[6].im# v.i[6].re# // z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
eq_92 : z.v[6].im@ z1.i[6].im# z1.i[6].re# // - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
eq_79 : z.v[6].re@ z1.i[6].re# z1.i[6].im# // - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
eq_119 : v.i[6].re@M z1.i[6].re@ // currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0
eq_37 : z.v[6].re@M v.i[6].re# v.i[6].im# // z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_106 : v.i[6].im
eq_50 : z.v[6].im
eq_119 : v.i[6].re
eq_37 : z.v[6].re
Unmatched equations: {eq_92 eq_79 }
Unmatched variables: {z1.i[6].im z1.i[6].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_106 : v.i[6].im
eq_50 : z.v[6].im
eq_119 : v.i[6].re
eq_37 : z.v[6].re
Unmatched equations: {eq_92 eq_79 }
Unmatched variables: {z1.i[6].im z1.i[6].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re, tearing with variable: z1.i[6].im
Automatic tearing pair, equation: - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im, tearing with variable: z1.i[6].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[7].im z.v[7].im z1.i[7].im z1.i[7].re v.i[7].re z.v[7].re }
eq_107 : v.i[7].im@M z1.i[7].im@ // currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0
eq_51 : z.v[7].im@M v.i[7].im# v.i[7].re# // z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
eq_93 : z.v[7].im@ z1.i[7].im# z1.i[7].re# // - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
eq_80 : z.v[7].re@ z1.i[7].re# z1.i[7].im# // - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
eq_120 : v.i[7].re@M z1.i[7].re@ // currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0
eq_38 : z.v[7].re@M v.i[7].re# v.i[7].im# // z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_107 : v.i[7].im
eq_51 : z.v[7].im
eq_120 : v.i[7].re
eq_38 : z.v[7].re
Unmatched equations: {eq_93 eq_80 }
Unmatched variables: {z1.i[7].im z1.i[7].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_107 : v.i[7].im
eq_51 : z.v[7].im
eq_120 : v.i[7].re
eq_38 : z.v[7].re
Unmatched equations: {eq_93 eq_80 }
Unmatched variables: {z1.i[7].im z1.i[7].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re, tearing with variable: z1.i[7].im
Automatic tearing pair, equation: - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im, tearing with variable: z1.i[7].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[8].im z.v[8].im z1.i[8].im z1.i[8].re v.i[8].re z.v[8].re }
eq_108 : v.i[8].im@M z1.i[8].im@ // currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0
eq_52 : z.v[8].im@M v.i[8].im# v.i[8].re# // z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
eq_94 : z.v[8].im@ z1.i[8].im# z1.i[8].re# // - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
eq_81 : z.v[8].re@ z1.i[8].re# z1.i[8].im# // - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
eq_121 : v.i[8].re@M z1.i[8].re@ // currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0
eq_39 : z.v[8].re@M v.i[8].re# v.i[8].im# // z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_108 : v.i[8].im
eq_52 : z.v[8].im
eq_121 : v.i[8].re
eq_39 : z.v[8].re
Unmatched equations: {eq_94 eq_81 }
Unmatched variables: {z1.i[8].im z1.i[8].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_108 : v.i[8].im
eq_52 : z.v[8].im
eq_121 : v.i[8].re
eq_39 : z.v[8].re
Unmatched equations: {eq_94 eq_81 }
Unmatched variables: {z1.i[8].im z1.i[8].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re, tearing with variable: z1.i[8].im
Automatic tearing pair, equation: - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im, tearing with variable: z1.i[8].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[9].im z.v[9].im z1.i[9].im z1.i[9].re v.i[9].re z.v[9].re }
eq_109 : v.i[9].im@M z1.i[9].im@ // currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0
eq_53 : z.v[9].im@M v.i[9].im# v.i[9].re# // z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
eq_95 : z.v[9].im@ z1.i[9].im# z1.i[9].re# // - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
eq_82 : z.v[9].re@ z1.i[9].re# z1.i[9].im# // - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
eq_122 : v.i[9].re@M z1.i[9].re@ // currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0
eq_40 : z.v[9].re@M v.i[9].re# v.i[9].im# // z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_109 : v.i[9].im
eq_53 : z.v[9].im
eq_122 : v.i[9].re
eq_40 : z.v[9].re
Unmatched equations: {eq_95 eq_82 }
Unmatched variables: {z1.i[9].im z1.i[9].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_109 : v.i[9].im
eq_53 : z.v[9].im
eq_122 : v.i[9].re
eq_40 : z.v[9].re
Unmatched equations: {eq_95 eq_82 }
Unmatched variables: {z1.i[9].im z1.i[9].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re, tearing with variable: z1.i[9].im
Automatic tearing pair, equation: - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im, tearing with variable: z1.i[9].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[10].im z.v[10].im z1.i[10].im z1.i[10].re v.i[10].re z.v[10].re }
eq_110 : v.i[10].im@M z1.i[10].im@ // currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0
eq_54 : z.v[10].im@M v.i[10].im# v.i[10].re# // z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
eq_96 : z.v[10].im@ z1.i[10].im# z1.i[10].re# // - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
eq_83 : z.v[10].re@ z1.i[10].re# z1.i[10].im# // - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
eq_123 : v.i[10].re@M z1.i[10].re@ // currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0
eq_41 : z.v[10].re@M v.i[10].re# v.i[10].im# // z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_110 : v.i[10].im
eq_54 : z.v[10].im
eq_123 : v.i[10].re
eq_41 : z.v[10].re
Unmatched equations: {eq_96 eq_83 }
Unmatched variables: {z1.i[10].im z1.i[10].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_110 : v.i[10].im
eq_54 : z.v[10].im
eq_123 : v.i[10].re
eq_41 : z.v[10].re
Unmatched equations: {eq_96 eq_83 }
Unmatched variables: {z1.i[10].im z1.i[10].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re, tearing with variable: z1.i[10].im
Automatic tearing pair, equation: - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im, tearing with variable: z1.i[10].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[11].im z.v[11].im z1.i[11].im z1.i[11].re v.i[11].re z.v[11].re }
eq_111 : v.i[11].im@M z1.i[11].im@ // currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0
eq_55 : z.v[11].im@M v.i[11].im# v.i[11].re# // z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
eq_97 : z.v[11].im@ z1.i[11].im# z1.i[11].re# // - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
eq_84 : z.v[11].re@ z1.i[11].re# z1.i[11].im# // - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
eq_124 : v.i[11].re@M z1.i[11].re@ // currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0
eq_42 : z.v[11].re@M v.i[11].re# v.i[11].im# // z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_111 : v.i[11].im
eq_55 : z.v[11].im
eq_124 : v.i[11].re
eq_42 : z.v[11].re
Unmatched equations: {eq_97 eq_84 }
Unmatched variables: {z1.i[11].im z1.i[11].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_111 : v.i[11].im
eq_55 : z.v[11].im
eq_124 : v.i[11].re
eq_42 : z.v[11].re
Unmatched equations: {eq_97 eq_84 }
Unmatched variables: {z1.i[11].im z1.i[11].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re, tearing with variable: z1.i[11].im
Automatic tearing pair, equation: - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im, tearing with variable: z1.i[11].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[12].im z.v[12].im z1.i[12].im z1.i[12].re v.i[12].re z.v[12].re }
eq_112 : v.i[12].im@M z1.i[12].im@ // currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0
eq_56 : z.v[12].im@M v.i[12].im# v.i[12].re# // z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
eq_98 : z.v[12].im@ z1.i[12].im# z1.i[12].re# // - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
eq_85 : z.v[12].re@ z1.i[12].re# z1.i[12].im# // - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
eq_125 : v.i[12].re@M z1.i[12].re@ // currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0
eq_43 : z.v[12].re@M v.i[12].re# v.i[12].im# // z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_112 : v.i[12].im
eq_56 : z.v[12].im
eq_125 : v.i[12].re
eq_43 : z.v[12].re
Unmatched equations: {eq_98 eq_85 }
Unmatched variables: {z1.i[12].im z1.i[12].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_112 : v.i[12].im
eq_56 : z.v[12].im
eq_125 : v.i[12].re
eq_43 : z.v[12].re
Unmatched equations: {eq_98 eq_85 }
Unmatched variables: {z1.i[12].im z1.i[12].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re, tearing with variable: z1.i[12].im
Automatic tearing pair, equation: - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im, tearing with variable: z1.i[12].re
Starting automatic tearing
BiPGraph (6 equations, 6 variables)
Variables: {v.i[13].im z.v[13].im z1.i[13].im z1.i[13].re v.i[13].re z.v[13].re }
eq_113 : v.i[13].im@M z1.i[13].im@ // currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0
eq_57 : z.v[13].im@M v.i[13].im# v.i[13].re# // z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
eq_99 : z.v[13].im@ z1.i[13].im# z1.i[13].re# // - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
eq_86 : z.v[13].re@ z1.i[13].re# z1.i[13].im# // - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
eq_126 : v.i[13].re@M z1.i[13].re@ // currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0
eq_44 : z.v[13].re@M v.i[13].re# v.i[13].im# // z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im)

Initial matching
----------------------------------------
BiPGraph matching:
eq_113 : v.i[13].im
eq_57 : z.v[13].im
eq_126 : v.i[13].re
eq_44 : z.v[13].re
Unmatched equations: {eq_99 eq_86 }
Unmatched variables: {z1.i[13].im z1.i[13].re }
----------------------------------------

Matching after initial manipulation
----------------------------------------
BiPGraph matching:
eq_113 : v.i[13].im
eq_57 : z.v[13].im
eq_126 : v.i[13].re
eq_44 : z.v[13].re
Unmatched equations: {eq_99 eq_86 }
Unmatched variables: {z1.i[13].im z1.i[13].re }
----------------------------------------

Automatic tearing pair, equation: - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re, tearing with variable: z1.i[13].im
Automatic tearing pair, equation: - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im, tearing with variable: z1.i[13].re
--- Meta equation block ---
algorithm


--- Solved equation ---
der(v.theta) := 6.283185307179586 * systemDef.fFund

--- Solved equation ---
v.omega := der(v.theta)

--- Torn system (Block 1) of 2 iteration variables and 7 solved variables ---
Torn variables:
  z.v[1].re
  z1.v[1].re
  z.v[1].im
  currentSensor.i[1].re
  z1.i[1].re
  currentSensor.i[1].im
  z1.i[1].im

Iteration variables:
  v.i[1].re (start=1)
  v.i[1].im (start=-1)

Torn equations:
  z.v[1].re := z.z.re .* (- v.i[1].re) + (- z.z.im .* systemDef.hrms[1] .* (- v.i[1].im))
  z1.v[1].re := - z.v[1].re + 120.0
  z.v[1].im := z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re)
  currentSensor.i[1].re := (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
  z1.i[1].re := - currentSensor.i[1].re + (- v.i[1].re)
  currentSensor.i[1].im := (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2)
  z1.i[1].im := - currentSensor.i[1].im + (- v.i[1].im)

Residual equations:
  - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re
    Iteration variables: v.i[1].re
  z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im
    Iteration variables: v.i[1].im

--- Solved equation ---
laptop_adapter.magScale := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.c[1] := laptop_adapter.magScale * 0.9421865565594479

--- Solved equation ---
laptop_adapter.V_arg[1] := Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0)

--- Solved equation ---
laptop_adapter.argAdj[1] := 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2]

--- Solved equation ---
laptop_adapter.a[1].re := cos(laptop_adapter.argAdj[1])

--- Solved equation ---
currentSensor.i[2].re := laptop_adapter.c[1] * laptop_adapter.a[1].re

--- Solved equation ---
laptop_adapter.a[1].im := sin(laptop_adapter.argAdj[1])

--- Solved equation ---
currentSensor.i[2].im := laptop_adapter.c[1] * laptop_adapter.a[1].im

--- Solved equation ---
laptop_adapter.c[2] := laptop_adapter.magScale * 0.846418595204449

--- Solved equation ---
laptop_adapter.argAdj[2] := 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3]

--- Solved equation ---
laptop_adapter.a[2].re := cos(laptop_adapter.argAdj[2])

--- Solved equation ---
currentSensor.i[3].re := laptop_adapter.c[2] * laptop_adapter.a[2].re

--- Solved equation ---
laptop_adapter.a[2].im := sin(laptop_adapter.argAdj[2])

--- Solved equation ---
currentSensor.i[3].im := laptop_adapter.c[2] * laptop_adapter.a[2].im

--- Solved equation ---
laptop_adapter.c[3] := laptop_adapter.magScale * 0.7174634219299512

--- Solved equation ---
laptop_adapter.argAdj[3] := -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4]

--- Solved equation ---
laptop_adapter.a[3].re := cos(laptop_adapter.argAdj[3])

--- Solved equation ---
currentSensor.i[4].re := laptop_adapter.c[3] * laptop_adapter.a[3].re

--- Solved equation ---
laptop_adapter.a[3].im := sin(laptop_adapter.argAdj[3])

--- Solved equation ---
currentSensor.i[4].im := laptop_adapter.c[3] * laptop_adapter.a[3].im

--- Solved equation ---
laptop_adapter.c[4] := laptop_adapter.magScale * 0.568269396387493

--- Solved equation ---
laptop_adapter.argAdj[4] := 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5]

--- Solved equation ---
laptop_adapter.a[4].re := cos(laptop_adapter.argAdj[4])

--- Solved equation ---
currentSensor.i[5].re := laptop_adapter.c[4] * laptop_adapter.a[4].re

--- Solved equation ---
laptop_adapter.a[4].im := sin(laptop_adapter.argAdj[4])

--- Solved equation ---
currentSensor.i[5].im := laptop_adapter.c[4] * laptop_adapter.a[4].im

--- Solved equation ---
laptop_adapter.c[5] := laptop_adapter.magScale * 0.4142504288040016

--- Solved equation ---
laptop_adapter.argAdj[5] := 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6]

--- Solved equation ---
laptop_adapter.a[5].re := cos(laptop_adapter.argAdj[5])

--- Solved equation ---
currentSensor.i[6].re := laptop_adapter.c[5] * laptop_adapter.a[5].re

--- Solved equation ---
laptop_adapter.a[5].im := sin(laptop_adapter.argAdj[5])

--- Solved equation ---
currentSensor.i[6].im := laptop_adapter.c[5] * laptop_adapter.a[5].im

--- Solved equation ---
laptop_adapter.c[6] := laptop_adapter.magScale * 0.2722289795439818

--- Solved equation ---
laptop_adapter.argAdj[6] := 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7]

--- Solved equation ---
laptop_adapter.a[6].re := cos(laptop_adapter.argAdj[6])

--- Solved equation ---
currentSensor.i[7].re := laptop_adapter.c[6] * laptop_adapter.a[6].re

--- Solved equation ---
laptop_adapter.a[6].im := sin(laptop_adapter.argAdj[6])

--- Solved equation ---
currentSensor.i[7].im := laptop_adapter.c[6] * laptop_adapter.a[6].im

--- Solved equation ---
laptop_adapter.c[7] := laptop_adapter.magScale * 0.1499700094183941

--- Solved equation ---
laptop_adapter.argAdj[7] := 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8]

--- Solved equation ---
laptop_adapter.a[7].re := cos(laptop_adapter.argAdj[7])

--- Solved equation ---
currentSensor.i[8].re := laptop_adapter.c[7] * laptop_adapter.a[7].re

--- Solved equation ---
laptop_adapter.a[7].im := sin(laptop_adapter.argAdj[7])

--- Solved equation ---
currentSensor.i[8].im := laptop_adapter.c[7] * laptop_adapter.a[7].im

--- Solved equation ---
laptop_adapter.c[8] := laptop_adapter.magScale * 0.060532358446546

--- Solved equation ---
laptop_adapter.argAdj[8] := -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9]

--- Solved equation ---
laptop_adapter.a[8].re := cos(laptop_adapter.argAdj[8])

--- Solved equation ---
currentSensor.i[9].re := laptop_adapter.c[8] * laptop_adapter.a[8].re

--- Solved equation ---
laptop_adapter.a[8].im := sin(laptop_adapter.argAdj[8])

--- Solved equation ---
currentSensor.i[9].im := laptop_adapter.c[8] * laptop_adapter.a[8].im

--- Solved equation ---
laptop_adapter.c[9] := laptop_adapter.magScale * 0.0286742846032879

--- Solved equation ---
laptop_adapter.argAdj[9] := 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10]

--- Solved equation ---
laptop_adapter.a[9].re := cos(laptop_adapter.argAdj[9])

--- Solved equation ---
currentSensor.i[10].re := laptop_adapter.c[9] * laptop_adapter.a[9].re

--- Solved equation ---
laptop_adapter.a[9].im := sin(laptop_adapter.argAdj[9])

--- Solved equation ---
currentSensor.i[10].im := laptop_adapter.c[9] * laptop_adapter.a[9].im

--- Solved equation ---
laptop_adapter.c[10] := laptop_adapter.magScale * 0.0500554183998412

--- Solved equation ---
laptop_adapter.argAdj[10] := 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11]

--- Solved equation ---
laptop_adapter.a[10].re := cos(laptop_adapter.argAdj[10])

--- Solved equation ---
currentSensor.i[11].re := laptop_adapter.c[10] * laptop_adapter.a[10].re

--- Solved equation ---
laptop_adapter.a[10].im := sin(laptop_adapter.argAdj[10])

--- Solved equation ---
currentSensor.i[11].im := laptop_adapter.c[10] * laptop_adapter.a[10].im

--- Solved equation ---
laptop_adapter.c[11] := laptop_adapter.magScale * 0.0574038038345626

--- Solved equation ---
laptop_adapter.argAdj[11] := -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12]

--- Solved equation ---
laptop_adapter.a[11].re := cos(laptop_adapter.argAdj[11])

--- Solved equation ---
currentSensor.i[12].re := laptop_adapter.c[11] * laptop_adapter.a[11].re

--- Solved equation ---
laptop_adapter.a[11].im := sin(laptop_adapter.argAdj[11])

--- Solved equation ---
currentSensor.i[12].im := laptop_adapter.c[11] * laptop_adapter.a[11].im

--- Solved equation ---
laptop_adapter.c[12] := laptop_adapter.magScale * 0.0490634253296239

--- Solved equation ---
laptop_adapter.argAdj[12] := 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13]

--- Solved equation ---
laptop_adapter.a[12].re := cos(laptop_adapter.argAdj[12])

--- Solved equation ---
currentSensor.i[13].re := laptop_adapter.c[12] * laptop_adapter.a[12].re

--- Solved equation ---
laptop_adapter.a[12].im := sin(laptop_adapter.argAdj[12])

--- Solved equation ---
currentSensor.i[13].im := laptop_adapter.c[12] * laptop_adapter.a[12].im

--- Meta equation block ---
algorithm


--- Solved equation ---
laptop_adapter.loadBase.omega := der(v.theta)

--- Torn linear system (Block 2) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[2].im
  v.i[2].re
  z.v[2].im
  z.v[2].re

Iteration variables:
  z1.i[2].im
  z1.i[2].re

Torn equations:
  v.i[2].im := - currentSensor.i[2].im + (- z1.i[2].im)
  v.i[2].re := - currentSensor.i[2].re + (- z1.i[2].re)
  z.v[2].im := z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re)
  z.v[2].re := z.z.re .* (- v.i[2].re) + (- z.z.im .* systemDef.hrms[2] .* (- v.i[2].im))

Residual equations:
  - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re
    Iteration variables: z1.i[2].im
  - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im
    Iteration variables: z1.i[2].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[2], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[2], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[2]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[2], - z1.z.re|

--- Torn linear system (Block 3) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[3].im
  v.i[3].re
  z.v[3].im
  z.v[3].re

Iteration variables:
  z1.i[3].im
  z1.i[3].re

Torn equations:
  v.i[3].im := - currentSensor.i[3].im + (- z1.i[3].im)
  v.i[3].re := - currentSensor.i[3].re + (- z1.i[3].re)
  z.v[3].im := z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re)
  z.v[3].re := z.z.re .* (- v.i[3].re) + (- z.z.im .* systemDef.hrms[3] .* (- v.i[3].im))

Residual equations:
  - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re
    Iteration variables: z1.i[3].im
  - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im
    Iteration variables: z1.i[3].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[3], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[3], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[3]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[3], - z1.z.re|

--- Torn linear system (Block 4) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[4].im
  v.i[4].re
  z.v[4].im
  z.v[4].re

Iteration variables:
  z1.i[4].im
  z1.i[4].re

Torn equations:
  v.i[4].im := - currentSensor.i[4].im + (- z1.i[4].im)
  v.i[4].re := - currentSensor.i[4].re + (- z1.i[4].re)
  z.v[4].im := z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re)
  z.v[4].re := z.z.re .* (- v.i[4].re) + (- z.z.im .* systemDef.hrms[4] .* (- v.i[4].im))

Residual equations:
  - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re
    Iteration variables: z1.i[4].im
  - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im
    Iteration variables: z1.i[4].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[4], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[4], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[4]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[4], - z1.z.re|

--- Torn linear system (Block 5) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[5].im
  v.i[5].re
  z.v[5].im
  z.v[5].re

Iteration variables:
  z1.i[5].im
  z1.i[5].re

Torn equations:
  v.i[5].im := - currentSensor.i[5].im + (- z1.i[5].im)
  v.i[5].re := - currentSensor.i[5].re + (- z1.i[5].re)
  z.v[5].im := z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re)
  z.v[5].re := z.z.re .* (- v.i[5].re) + (- z.z.im .* systemDef.hrms[5] .* (- v.i[5].im))

Residual equations:
  - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re
    Iteration variables: z1.i[5].im
  - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im
    Iteration variables: z1.i[5].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[5], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[5], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[5]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[5], - z1.z.re|

--- Torn linear system (Block 6) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[6].im
  v.i[6].re
  z.v[6].im
  z.v[6].re

Iteration variables:
  z1.i[6].im
  z1.i[6].re

Torn equations:
  v.i[6].im := - currentSensor.i[6].im + (- z1.i[6].im)
  v.i[6].re := - currentSensor.i[6].re + (- z1.i[6].re)
  z.v[6].im := z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re)
  z.v[6].re := z.z.re .* (- v.i[6].re) + (- z.z.im .* systemDef.hrms[6] .* (- v.i[6].im))

Residual equations:
  - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re
    Iteration variables: z1.i[6].im
  - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im
    Iteration variables: z1.i[6].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[6], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[6], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[6]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[6], - z1.z.re|

--- Torn linear system (Block 7) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[7].im
  v.i[7].re
  z.v[7].im
  z.v[7].re

Iteration variables:
  z1.i[7].im
  z1.i[7].re

Torn equations:
  v.i[7].im := - currentSensor.i[7].im + (- z1.i[7].im)
  v.i[7].re := - currentSensor.i[7].re + (- z1.i[7].re)
  z.v[7].im := z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re)
  z.v[7].re := z.z.re .* (- v.i[7].re) + (- z.z.im .* systemDef.hrms[7] .* (- v.i[7].im))

Residual equations:
  - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re
    Iteration variables: z1.i[7].im
  - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im
    Iteration variables: z1.i[7].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[7], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[7], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[7]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[7], - z1.z.re|

--- Torn linear system (Block 8) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[8].im
  v.i[8].re
  z.v[8].im
  z.v[8].re

Iteration variables:
  z1.i[8].im
  z1.i[8].re

Torn equations:
  v.i[8].im := - currentSensor.i[8].im + (- z1.i[8].im)
  v.i[8].re := - currentSensor.i[8].re + (- z1.i[8].re)
  z.v[8].im := z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re)
  z.v[8].re := z.z.re .* (- v.i[8].re) + (- z.z.im .* systemDef.hrms[8] .* (- v.i[8].im))

Residual equations:
  - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re
    Iteration variables: z1.i[8].im
  - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im
    Iteration variables: z1.i[8].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[8], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[8], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[8]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[8], - z1.z.re|

--- Torn linear system (Block 9) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[9].im
  v.i[9].re
  z.v[9].im
  z.v[9].re

Iteration variables:
  z1.i[9].im
  z1.i[9].re

Torn equations:
  v.i[9].im := - currentSensor.i[9].im + (- z1.i[9].im)
  v.i[9].re := - currentSensor.i[9].re + (- z1.i[9].re)
  z.v[9].im := z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re)
  z.v[9].re := z.z.re .* (- v.i[9].re) + (- z.z.im .* systemDef.hrms[9] .* (- v.i[9].im))

Residual equations:
  - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re
    Iteration variables: z1.i[9].im
  - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im
    Iteration variables: z1.i[9].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[9], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[9], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[9]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[9], - z1.z.re|

--- Torn linear system (Block 10) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[10].im
  v.i[10].re
  z.v[10].im
  z.v[10].re

Iteration variables:
  z1.i[10].im
  z1.i[10].re

Torn equations:
  v.i[10].im := - currentSensor.i[10].im + (- z1.i[10].im)
  v.i[10].re := - currentSensor.i[10].re + (- z1.i[10].re)
  z.v[10].im := z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re)
  z.v[10].re := z.z.re .* (- v.i[10].re) + (- z.z.im .* systemDef.hrms[10] .* (- v.i[10].im))

Residual equations:
  - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re
    Iteration variables: z1.i[10].im
  - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im
    Iteration variables: z1.i[10].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[10], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[10], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[10]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[10], - z1.z.re|

--- Torn linear system (Block 11) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[11].im
  v.i[11].re
  z.v[11].im
  z.v[11].re

Iteration variables:
  z1.i[11].im
  z1.i[11].re

Torn equations:
  v.i[11].im := - currentSensor.i[11].im + (- z1.i[11].im)
  v.i[11].re := - currentSensor.i[11].re + (- z1.i[11].re)
  z.v[11].im := z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re)
  z.v[11].re := z.z.re .* (- v.i[11].re) + (- z.z.im .* systemDef.hrms[11] .* (- v.i[11].im))

Residual equations:
  - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re
    Iteration variables: z1.i[11].im
  - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im
    Iteration variables: z1.i[11].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[11], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[11], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[11]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[11], - z1.z.re|

--- Torn linear system (Block 12) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[12].im
  v.i[12].re
  z.v[12].im
  z.v[12].re

Iteration variables:
  z1.i[12].im
  z1.i[12].re

Torn equations:
  v.i[12].im := - currentSensor.i[12].im + (- z1.i[12].im)
  v.i[12].re := - currentSensor.i[12].re + (- z1.i[12].re)
  z.v[12].im := z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re)
  z.v[12].re := z.z.re .* (- v.i[12].re) + (- z.z.im .* systemDef.hrms[12] .* (- v.i[12].im))

Residual equations:
  - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re
    Iteration variables: z1.i[12].im
  - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im
    Iteration variables: z1.i[12].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[12], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[12], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[12]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[12], - z1.z.re|

--- Torn linear system (Block 13) of 2 iteration variables and 4 solved variables ---
Coefficient variability: parameter
Torn variables:
  v.i[13].im
  v.i[13].re
  z.v[13].im
  z.v[13].re

Iteration variables:
  z1.i[13].im
  z1.i[13].re

Torn equations:
  v.i[13].im := - currentSensor.i[13].im + (- z1.i[13].im)
  v.i[13].re := - currentSensor.i[13].re + (- z1.i[13].re)
  z.v[13].im := z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re)
  z.v[13].re := z.z.re .* (- v.i[13].re) + (- z.z.im .* systemDef.hrms[13] .* (- v.i[13].im))

Residual equations:
  - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re
    Iteration variables: z1.i[13].im
  - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im
    Iteration variables: z1.i[13].re

Jacobian:
  |1.0, 0.0, 0.0, 0.0, 1.0, 0.0|
  |0.0, 1.0, 0.0, 0.0, 0.0, 1.0|
  |z.z.re, z.z.im .* systemDef.hrms[13], 1.0, 0.0, 0.0, 0.0|
  |- z.z.im .* systemDef.hrms[13], z.z.re, 0.0, 1.0, 0.0, 0.0|
  |0.0, 0.0, -1.0, 0.0, - z1.z.re, - z1.z.im .* systemDef.hrms[13]|
  |0.0, 0.0, 0.0, -1.0, z1.z.im .* systemDef.hrms[13], - z1.z.re|

--- Solved equation ---
z.omega := der(v.theta)

--- Solved equation ---
currentSensor.iMag[1] := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[2] := (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[3] := (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[4] := (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[5] := (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[6] := (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[7] := (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[8] := (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[9] := (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[10] := (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[11] := (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[12] := (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.iMag[13] := (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
currentSensor.omega := der(v.theta)

--- Solved equation ---
z1.omega := der(v.theta)

--- Solved equation ---
v.P1 := 120.0 * v.i[1].re

--- Solved equation ---
v.iMag[1] := (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[2] := (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[3] := (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[4] := (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[5] := (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[6] := (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[7] := (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[8] := (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[9] := (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[10] := (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[11] := (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[12] := (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
v.iMag[13] := (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
v.iArg[1] := Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0)

--- Solved equation ---
v.iArg[2] := Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0)

--- Solved equation ---
v.iArg[3] := Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0)

--- Solved equation ---
v.iArg[4] := Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0)

--- Solved equation ---
v.iArg[5] := Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0)

--- Solved equation ---
v.iArg[6] := Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0)

--- Solved equation ---
v.iArg[7] := Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0)

--- Solved equation ---
v.iArg[8] := Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0)

--- Solved equation ---
v.iArg[9] := Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0)

--- Solved equation ---
v.iArg[10] := Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0)

--- Solved equation ---
v.iArg[11] := Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0)

--- Solved equation ---
v.iArg[12] := Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0)

--- Solved equation ---
v.iArg[13] := Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0)

--- Solved equation ---
laptop_adapter.I_mag[1] := (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[2] := (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[3] := (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[4] := (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[5] := (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[6] := (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[7] := (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[8] := (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[9] := (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[10] := (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[11] := (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[12] := (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.I_mag[13] := (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[1] := (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[2] := ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[3] := ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[4] := ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[5] := ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[6] := ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[7] := ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[8] := ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[9] := ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[10] := ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[11] := ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[12] := ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_mag[13] := ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5

--- Solved equation ---
laptop_adapter.V_arg[2] := Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[3] := Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[4] := Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[5] := Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[6] := Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[7] := Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[8] := Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[9] := Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[10] := Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[11] := Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[12] := Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0)

--- Solved equation ---
laptop_adapter.V_arg[13] := Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0)

--- Solved equation ---
z.vFundAbs := (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5

--- Solved equation ---
z.vFundArg := Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0)

--- Solved equation ---
z.iFundAbs := ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5

--- Solved equation ---
z.iFundArg := Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0)

--- Solved equation ---
z1.vFundAbs := (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundAbs := (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5

--- Solved equation ---
z1.iFundArg := Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0)

--- Solved equation ---
currentSensor.iArg[1] := Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0)

--- Solved equation ---
currentSensor.iArg[2] := Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0)

--- Solved equation ---
currentSensor.iArg[3] := Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0)

--- Solved equation ---
currentSensor.iArg[4] := Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0)

--- Solved equation ---
currentSensor.iArg[5] := Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0)

--- Solved equation ---
currentSensor.iArg[6] := Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0)

--- Solved equation ---
currentSensor.iArg[7] := Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0)

--- Solved equation ---
currentSensor.iArg[8] := Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0)

--- Solved equation ---
currentSensor.iArg[9] := Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0)

--- Solved equation ---
currentSensor.iArg[10] := Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0)

--- Solved equation ---
currentSensor.iArg[11] := Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0)

--- Solved equation ---
currentSensor.iArg[12] := Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0)

--- Solved equation ---
currentSensor.iArg[13] := Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0)

--- Meta equation block ---
algorithm


--- Solved equation ---
v.theta := 0
-------------------------------

Diagnostics for transformed flattened model:
Diagnostics for flattened class HPF.Test.Test_Rectifier
Number of independent constants:                   9(    9 scalars)
  Number of Real independent constants:            4(    4 scalars)
  Number of Real independent constants:            4(    4 scalars)
  Number of Integer independent constants:         0(    0 scalars)
  Number of Enum independent constants:            0(    0 scalars)
  Number of Boolean independent constants:         0(    0 scalars)
  Number of String independent constants:          5(    5 scalars)
Number of dependent constants:                     0(    0 scalars)
  Number of Real dependent constants:              0(    0 scalars)
  Number of Integer dependent constants:           0(    0 scalars)
  Number of Enum dependent constants:              0(    0 scalars)
  Number of Boolean dependent constants:           0(    0 scalars)
  Number of String dependent constants:            0(    0 scalars)
Number of independent parameters:                195(  195 scalars)
  Number of Real independent parameters:         151(  151 scalars)
  Number of Integer independent parameters:       29(   29 scalars)
  Number of Enum independent parameters:           0(    0 scalars)
  Number of Boolean independent parameters:       13(   13 scalars)
  Number of String independent parameters:         2(    2 scalars)
Number of dependent parameters:                  142(  142 scalars)
  Number of Real dependent parameters:           139(  139 scalars)
  Number of Integer dependent parameters:          3(    3 scalars)
  Number of Enum dependent parameters:             0(    0 scalars)
  Number of Boolean dependent parameters:          0(    0 scalars)
  Number of String dependent parameters:           0(    0 scalars)
Number of initial parameters:                      0(    0 scalars)
  Number of Real dependent parameters:             0(    0 scalars)
  Number of Integer dependent parameters:          0(    0 scalars)
  Number of Enum dependent parameters:             0(    0 scalars)
  Number of Boolean dependent parameters:          0(    0 scalars)
  Number of String dependent parameters:           0(    0 scalars)
Number of variables:                             260(  260 scalars)
  Number of Real variables:                      260(  260 scalars)
  Number of Integer variables:                     0(    0 scalars)
  Number of Enum variables:                        0(    0 scalars)
  Number of Boolean variables:                     0(    0 scalars)
  Number of String variables:                      0(    0 scalars)
Number of Real differentiated variables:           1(    1 scalars)
Number of Real derivative variables:               1(    1 scalars)
Number of Real continous algebraic variables:    258(  258 scalars)
Number of inputs:                                  0(    0 scalars)
  Number of Real inputs:                           0(    0 scalars)
  Number of Integer inputs:                        0(    0 scalars)
  Number of Enum inputs:                           0(    0 scalars)
  Number of Boolean inputs:                        0(    0 scalars)
  Number of String inputs:                         0(    0 scalars)
Number of discrete variables:                      0(    0 scalars)
  Number of Real discrete variables:               0(    0 scalars)
  Number of Integer discrete variables:            0(    0 scalars)
  Number of Enum discrete variables:               0(    0 scalars)
  Number of Boolean discrete variables:            0(    0 scalars)
  Number of String discrete variables:             0(    0 scalars)
Number of equations:                             261(  259 scalars)
Number of variables with binding expression:       0(    0 scalars)
  Number of Real variables with binding exp:       0(    0 scalars)
  Number of Integer variables binding exp:         0(    0 scalars)
  Number of Enum variables binding exp:            0(    0 scalars)
  Number of Boolean variables binding exp:         0(    0 scalars)
  Number of String variables binding exp:          0(    0 scalars)
Total number of equations:                       261(  259 scalars)
Number of initial equations:                       2(    1 scalars)
Number of event indicators in equations:           0
Number of event indicators in init equations:      0

Independent constants: 
 v.v[1].re: number of uses: 0, isLinear: true
 v.v[1].im: number of uses: 0, isLinear: true
 v.v[2].re: number of uses: 0, isLinear: true
 laptop_adapter.argS: number of uses: 0, isLinear: true
 v.properties.ComponentType: number of uses: 0, isLinear: true
 ground1.properties.ComponentType: number of uses: 0, isLinear: true
 laptop_adapter.properties.ComponentType: number of uses: 0, isLinear: true
 laptop.properties.ComponentType: number of uses: 0, isLinear: true
 z.properties.ComponentType: number of uses: 0, isLinear: true

Dependent constants: 

Independent parameters: 
 systemDef.fFund: number of uses: 2, isLinear: true, evaluated binding exp: 60
 systemDef.fs: number of uses: 1, isLinear: true, evaluated binding exp: 10000.0
 laptop_adapter.V_Rect: number of uses: 1, isLinear: true, evaluated binding exp: 24
 laptop.pwr: number of uses: 1, isLinear: true, evaluated binding exp: 10
 z.z.re: number of uses: 26, isLinear: true, evaluated binding exp: 0.1
 z.z.im: number of uses: 26, isLinear: true, evaluated binding exp: 5.0
 z1.z.re: number of uses: 26, isLinear: true, evaluated binding exp: 20.0
 z1.z.im: number of uses: 26, isLinear: true, evaluated binding exp: 60.0
 _block_jacobian_check_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-6
 _cs_rel_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-6
 _cs_step_size: number of uses: 0, isLinear: true, evaluated binding exp: 0.001
 _events_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _events_tol_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-4
 _nle_jacobian_finite_difference_delta: number of uses: 0, isLinear: true, evaluated binding exp: 1.490116119384766E-8
 _nle_solver_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _nle_solver_max_residual_scaling_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E10
 _nle_solver_min_residual_scaling_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-10
 _nle_solver_min_tol: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-12
 _nle_solver_regularization_tolerance: number of uses: 0, isLinear: true, evaluated binding exp: -1.0
 _nle_solver_step_limit_factor: number of uses: 0, isLinear: true, evaluated binding exp: 10.0
 _nle_solver_tol_factor: number of uses: 0, isLinear: true, evaluated binding exp: 1.0E-4
 _time_events_default_tol: number of uses: 0, isLinear: true, evaluated binding exp: 2.220446049250313E-14
 v.vMag[1]: number of uses: 0, isLinear: true, evaluated binding exp: 120
 laptop_adapter.magDataMat[1,1]: number of uses: 0, isLinear: true, evaluated binding exp: 1.0
 laptop_adapter.magDataMat[2,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.9421865565594479
 laptop_adapter.magDataMat[3,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.846418595204449
 laptop_adapter.magDataMat[4,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.7174634219299512
 laptop_adapter.magDataMat[5,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.568269396387493
 laptop_adapter.magDataMat[6,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.4142504288040016
 laptop_adapter.magDataMat[7,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.2722289795439818
 laptop_adapter.magDataMat[8,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.1499700094183941
 laptop_adapter.magDataMat[9,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.060532358446546
 laptop_adapter.magDataMat[10,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0286742846032879
 laptop_adapter.magDataMat[11,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0500554183998412
 laptop_adapter.magDataMat[12,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0574038038345626
 laptop_adapter.magDataMat[13,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0490634253296239
 laptop_adapter.magDataMat[14,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0324675024798272
 laptop_adapter.magDataMat[15,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0146979293649181
 laptop_adapter.magDataMat[16,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0073091525847841
 laptop_adapter.magDataMat[17,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0133897682494032
 laptop_adapter.magDataMat[18,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0149525422599743
 laptop_adapter.magDataMat[19,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0124074456883277
 laptop_adapter.magDataMat[20,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0064342667493201
 laptop_adapter.magDataMat[21,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0042631791151444
 laptop_adapter.magDataMat[22,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0071677605312837
 laptop_adapter.magDataMat[23,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0091300920177219
 laptop_adapter.magDataMat[24,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0082848764712874
 laptop_adapter.magDataMat[25,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0048054384993071
 laptop_adapter.magDataMat[26,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0012086520647777
 laptop_adapter.magDataMat[27,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0027696713010395
 laptop_adapter.magDataMat[28,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0055623203060336
 laptop_adapter.magDataMat[29,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0055763163700916
 laptop_adapter.magDataMat[30,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0037301558865152
 laptop_adapter.magDataMat[31,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0024556766113934
 laptop_adapter.magDataMat[32,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0012570089195559
 laptop_adapter.magDataMat[33,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.003770235713609
 laptop_adapter.magDataMat[34,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0039951909704598
 laptop_adapter.magDataMat[35,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.003979236913258
 laptop_adapter.magDataMat[36,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0028266732141967
 laptop_adapter.magDataMat[37,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.001264556073809
 laptop_adapter.magDataMat[38,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0014301712599034
 laptop_adapter.magDataMat[39,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0026235911913337
 laptop_adapter.magDataMat[40,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0030745379143357
 laptop_adapter.magDataMat[41,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0026371048002209
 laptop_adapter.magDataMat[42,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0018785812678715
 laptop_adapter.magDataMat[43,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.001366164653877
 laptop_adapter.magDataMat[44,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0017315154435983
 laptop_adapter.magDataMat[45,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0021186936112594
 laptop_adapter.magDataMat[46,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0020698341543364
 laptop_adapter.magDataMat[47,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0015827909180839
 laptop_adapter.magDataMat[48,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0014207653497698
 laptop_adapter.magDataMat[49,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0011044947826996
 laptop_adapter.magDataMat[50,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0016983251721508
 laptop_adapter.magDataMat[51,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.001561470455193
 laptop_adapter.magDataMat[52,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0015551892377107
 laptop_adapter.magDataMat[53,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0010806576917404
 laptop_adapter.magDataMat[54,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0010324284223161
 laptop_adapter.magDataMat[55,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0010316250408048
 laptop_adapter.magDataMat[56,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0013704444558566
 laptop_adapter.magDataMat[57,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0012887373861165
 laptop_adapter.magDataMat[58,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.001046804766309
 laptop_adapter.magDataMat[59,1]: number of uses: 0, isLinear: true, evaluated binding exp: 8.397154504633E-4
 laptop_adapter.magDataMat[60,1]: number of uses: 0, isLinear: true, evaluated binding exp: 8.443247596072E-4
 laptop_adapter.magDataMat[61,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0010482447031368
 laptop_adapter.magDataMat[62,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0010834317712761
 laptop_adapter.magDataMat[63,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0010717313423612
 laptop_adapter.magDataMat[64,1]: number of uses: 0, isLinear: true, evaluated binding exp: 7.336011041168E-4
 laptop_adapter.argDataMat[1,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.3127770854783603
 laptop_adapter.argDataMat[2,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.011174689529625
 laptop_adapter.argDataMat[3,1]: number of uses: 0, isLinear: true, evaluated binding exp: 1.450168565960499
 laptop_adapter.argDataMat[4,1]: number of uses: 0, isLinear: true, evaluated binding exp: -1.1075502226650735
 laptop_adapter.argDataMat[5,1]: number of uses: 0, isLinear: true, evaluated binding exp: 2.6203684023114735
 laptop_adapter.argDataMat[6,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0753120963493918
 laptop_adapter.argDataMat[7,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.827672644040883
 laptop_adapter.argDataMat[8,1]: number of uses: 0, isLinear: true, evaluated binding exp: 1.3488113399227557
 laptop_adapter.argDataMat[9,1]: number of uses: 0, isLinear: true, evaluated binding exp: -0.9361140777472652
 laptop_adapter.argDataMat[10,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.21514766462882
 laptop_adapter.argDataMat[11,1]: number of uses: 0, isLinear: true, evaluated binding exp: 2.355077880795469
 laptop_adapter.argDataMat[12,1]: number of uses: 0, isLinear: true, evaluated binding exp: -0.0788148364525277
 laptop_adapter.argDataMat[13,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.630875802098702
 laptop_adapter.argDataMat[14,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.9927328953061971
 laptop_adapter.argDataMat[15,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.441522037499742
 laptop_adapter.argDataMat[16,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.3468512749946424
 laptop_adapter.argDataMat[17,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.309703112235414
 laptop_adapter.argDataMat[18,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.507820696333874
 laptop_adapter.argDataMat[19,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.07225325999216
 laptop_adapter.argDataMat[20,1]: number of uses: 0, isLinear: true, evaluated binding exp: 1.125957866606311
 laptop_adapter.argDataMat[21,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.387549006743685
 laptop_adapter.argDataMat[22,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.0888214916736243
 laptop_adapter.argDataMat[23,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.5804813791252355
 laptop_adapter.argDataMat[24,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.8850851115756876
 laptop_adapter.argDataMat[25,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.508705061667298
 laptop_adapter.argDataMat[26,1]: number of uses: 0, isLinear: true, evaluated binding exp: 1.333205530719895
 laptop_adapter.argDataMat[27,1]: number of uses: 0, isLinear: true, evaluated binding exp: 2.838653112336029
 laptop_adapter.argDataMat[28,1]: number of uses: 0, isLinear: true, evaluated binding exp: -0.0432835109945579
 laptop_adapter.argDataMat[29,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.5796675079179767
 laptop_adapter.argDataMat[30,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.8886624228751261
 laptop_adapter.argDataMat[31,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.322397183880533
 laptop_adapter.argDataMat[32,1]: number of uses: 0, isLinear: true, evaluated binding exp: -0.1413429189228533
 laptop_adapter.argDataMat[33,1]: number of uses: 0, isLinear: true, evaluated binding exp: 2.9447237027794717
 laptop_adapter.argDataMat[34,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.1859626520117329
 laptop_adapter.argDataMat[35,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.7067555487786406
 laptop_adapter.argDataMat[36,1]: number of uses: 0, isLinear: true, evaluated binding exp: 1.0115866895784416
 laptop_adapter.argDataMat[37,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.0692014348202035
 laptop_adapter.argDataMat[38,1]: number of uses: 0, isLinear: true, evaluated binding exp: -0.0024077524125743
 laptop_adapter.argDataMat[39,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.0652063567780674
 laptop_adapter.argDataMat[40,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.2653273947161821
 laptop_adapter.argDataMat[41,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.7889601388042937
 laptop_adapter.argDataMat[42,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.8887383696249729
 laptop_adapter.argDataMat[43,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.773875593167732
 laptop_adapter.argDataMat[44,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.2280500334845815
 laptop_adapter.argDataMat[45,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.3217592983561017
 laptop_adapter.argDataMat[46,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.520752728593681
 laptop_adapter.argDataMat[47,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.9273528368650745
 laptop_adapter.argDataMat[48,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.8614853143189236
 laptop_adapter.argDataMat[49,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.5850098696099186
 laptop_adapter.argDataMat[50,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.2783322398316583
 laptop_adapter.argDataMat[51,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.4761184892641808
 laptop_adapter.argDataMat[52,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.5249082917156735
 laptop_adapter.argDataMat[53,1]: number of uses: 0, isLinear: true, evaluated binding exp: 4.1162792410645075
 laptop_adapter.argDataMat[54,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.5750851928849768
 laptop_adapter.argDataMat[55,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.6130535171919336
 laptop_adapter.argDataMat[56,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.2438187166602324
 laptop_adapter.argDataMat[57,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.591573823283689
 laptop_adapter.argDataMat[58,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.3884444678214555
 laptop_adapter.argDataMat[59,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.8049056626874496
 laptop_adapter.argDataMat[60,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.4536424332042123
 laptop_adapter.argDataMat[61,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.589644373975073
 laptop_adapter.argDataMat[62,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.2244991938468375
 laptop_adapter.argDataMat[63,1]: number of uses: 0, isLinear: true, evaluated binding exp: 3.37684736761545
 laptop_adapter.argDataMat[64,1]: number of uses: 0, isLinear: true, evaluated binding exp: 0.2594769189504608
 systemDef.hrms[1]: number of uses: 4, isLinear: true, evaluated binding exp: 1
 systemDef.hrms[2]: number of uses: 5, isLinear: true, evaluated binding exp: 3
 systemDef.hrms[3]: number of uses: 5, isLinear: true, evaluated binding exp: 5
 systemDef.hrms[4]: number of uses: 5, isLinear: true, evaluated binding exp: 7
 systemDef.hrms[5]: number of uses: 5, isLinear: true, evaluated binding exp: 9
 systemDef.hrms[6]: number of uses: 5, isLinear: true, evaluated binding exp: 11
 systemDef.hrms[7]: number of uses: 5, isLinear: true, evaluated binding exp: 13
 systemDef.hrms[8]: number of uses: 5, isLinear: true, evaluated binding exp: 15
 systemDef.hrms[9]: number of uses: 5, isLinear: true, evaluated binding exp: 17
 systemDef.hrms[10]: number of uses: 5, isLinear: true, evaluated binding exp: 19
 systemDef.hrms[11]: number of uses: 5, isLinear: true, evaluated binding exp: 21
 systemDef.hrms[12]: number of uses: 5, isLinear: true, evaluated binding exp: 23
 systemDef.hrms[13]: number of uses: 5, isLinear: true, evaluated binding exp: 25
 systemDef.numPh: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _block_solver_experimental_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _cs_experimental_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _cs_solver: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _iteration_variable_scaling: number of uses: 0, isLinear: true, evaluated binding exp: 1
 _log_level: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _nle_active_bounds_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _nle_jacobian_calculation_mode: number of uses: 0, isLinear: true, evaluated binding exp: 0
 _nle_jacobian_update_mode: number of uses: 0, isLinear: true, evaluated binding exp: 2
 _nle_solver_exit_criterion: number of uses: 0, isLinear: true, evaluated binding exp: 3
 _nle_solver_max_iter: number of uses: 0, isLinear: true, evaluated binding exp: 100
 _nle_solver_max_iter_no_jacobian: number of uses: 0, isLinear: true, evaluated binding exp: 10
 _residual_equation_scaling: number of uses: 0, isLinear: true, evaluated binding exp: 1
 systemDef.numHrm: number of uses: 0, isLinear: true, evaluated binding exp: 13
 laptop_adapter.matDim[1]: number of uses: 0, isLinear: true, evaluated binding exp: 64
 laptop_adapter.matDim[2]: number of uses: 0, isLinear: true, evaluated binding exp: 1
 _block_jacobian_check: number of uses: 0, isLinear: true, evaluated binding exp: false
 _block_solver_profiling: number of uses: 0, isLinear: true, evaluated binding exp: false
 _enforce_bounds: number of uses: 0, isLinear: true, evaluated binding exp: true
 _nle_brent_ignore_error: number of uses: 0, isLinear: true, evaluated binding exp: false
 _nle_solver_check_jac_cond: number of uses: 0, isLinear: true, evaluated binding exp: false
 _nle_solver_use_last_integrator_step: number of uses: 0, isLinear: true, evaluated binding exp: true
 _nle_solver_use_nominals_as_fallback: number of uses: 0, isLinear: true, evaluated binding exp: true
 _rescale_after_singular_jac: number of uses: 0, isLinear: true, evaluated binding exp: true
 _rescale_each_step: number of uses: 0, isLinear: true, evaluated binding exp: false
 _runtime_log_to_file: number of uses: 0, isLinear: true, evaluated binding exp: false
 _use_Brent_in_1d: number of uses: 0, isLinear: true, evaluated binding exp: true
 _use_jacobian_equilibration: number of uses: 0, isLinear: true, evaluated binding exp: false
 _use_newton_for_brent: number of uses: 0, isLinear: true, evaluated binding exp: true
 laptop_adapter.modelFileName: number of uses: 0, isLinear: true, evaluated binding exp: "HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat"
 laptop_adapter.resourceRetValue: number of uses: 0, isLinear: true, evaluated binding exp: "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat"

Dependent parameters: 
 temp_118[1,1]: number of uses: 2, isLinear: true
 temp_118[2,1]: number of uses: 2, isLinear: true
 temp_118[3,1]: number of uses: 2, isLinear: true
 temp_118[4,1]: number of uses: 2, isLinear: true
 temp_118[5,1]: number of uses: 2, isLinear: true
 temp_118[6,1]: number of uses: 2, isLinear: true
 temp_118[7,1]: number of uses: 2, isLinear: true
 temp_118[8,1]: number of uses: 2, isLinear: true
 temp_118[9,1]: number of uses: 2, isLinear: true
 temp_118[10,1]: number of uses: 2, isLinear: true
 temp_118[11,1]: number of uses: 2, isLinear: true
 temp_118[12,1]: number of uses: 2, isLinear: true
 temp_118[13,1]: number of uses: 2, isLinear: true
 temp_118[14,1]: number of uses: 2, isLinear: true
 temp_118[15,1]: number of uses: 2, isLinear: true
 temp_118[16,1]: number of uses: 2, isLinear: true
 temp_118[17,1]: number of uses: 2, isLinear: true
 temp_118[18,1]: number of uses: 2, isLinear: true
 temp_118[19,1]: number of uses: 2, isLinear: true
 temp_118[20,1]: number of uses: 2, isLinear: true
 temp_118[21,1]: number of uses: 2, isLinear: true
 temp_118[22,1]: number of uses: 2, isLinear: true
 temp_118[23,1]: number of uses: 2, isLinear: true
 temp_118[24,1]: number of uses: 2, isLinear: true
 temp_118[25,1]: number of uses: 2, isLinear: true
 temp_118[26,1]: number of uses: 2, isLinear: true
 temp_118[27,1]: number of uses: 2, isLinear: true
 temp_118[28,1]: number of uses: 2, isLinear: true
 temp_118[29,1]: number of uses: 2, isLinear: true
 temp_118[30,1]: number of uses: 2, isLinear: true
 temp_118[31,1]: number of uses: 2, isLinear: true
 temp_118[32,1]: number of uses: 2, isLinear: true
 temp_118[33,1]: number of uses: 2, isLinear: true
 temp_118[34,1]: number of uses: 2, isLinear: true
 temp_118[35,1]: number of uses: 2, isLinear: true
 temp_118[36,1]: number of uses: 2, isLinear: true
 temp_118[37,1]: number of uses: 2, isLinear: true
 temp_118[38,1]: number of uses: 2, isLinear: true
 temp_118[39,1]: number of uses: 2, isLinear: true
 temp_118[40,1]: number of uses: 2, isLinear: true
 temp_118[41,1]: number of uses: 2, isLinear: true
 temp_118[42,1]: number of uses: 2, isLinear: true
 temp_118[43,1]: number of uses: 2, isLinear: true
 temp_118[44,1]: number of uses: 2, isLinear: true
 temp_118[45,1]: number of uses: 2, isLinear: true
 temp_118[46,1]: number of uses: 2, isLinear: true
 temp_118[47,1]: number of uses: 2, isLinear: true
 temp_118[48,1]: number of uses: 2, isLinear: true
 temp_118[49,1]: number of uses: 2, isLinear: true
 temp_118[50,1]: number of uses: 2, isLinear: true
 temp_118[51,1]: number of uses: 2, isLinear: true
 temp_118[52,1]: number of uses: 2, isLinear: true
 temp_118[53,1]: number of uses: 2, isLinear: true
 temp_118[54,1]: number of uses: 2, isLinear: true
 temp_118[55,1]: number of uses: 2, isLinear: true
 temp_118[56,1]: number of uses: 2, isLinear: true
 temp_118[57,1]: number of uses: 2, isLinear: true
 temp_118[58,1]: number of uses: 2, isLinear: true
 temp_118[59,1]: number of uses: 2, isLinear: true
 temp_118[60,1]: number of uses: 2, isLinear: true
 temp_118[61,1]: number of uses: 2, isLinear: true
 temp_118[62,1]: number of uses: 2, isLinear: true
 temp_118[63,1]: number of uses: 2, isLinear: true
 temp_118[64,1]: number of uses: 2, isLinear: true
 temp_119[1,1]: number of uses: 2, isLinear: true
 temp_119[2,1]: number of uses: 2, isLinear: true
 temp_119[3,1]: number of uses: 2, isLinear: true
 temp_119[4,1]: number of uses: 2, isLinear: true
 temp_119[5,1]: number of uses: 2, isLinear: true
 temp_119[6,1]: number of uses: 2, isLinear: true
 temp_119[7,1]: number of uses: 2, isLinear: true
 temp_119[8,1]: number of uses: 2, isLinear: true
 temp_119[9,1]: number of uses: 2, isLinear: true
 temp_119[10,1]: number of uses: 2, isLinear: true
 temp_119[11,1]: number of uses: 2, isLinear: true
 temp_119[12,1]: number of uses: 2, isLinear: true
 temp_119[13,1]: number of uses: 2, isLinear: true
 temp_119[14,1]: number of uses: 2, isLinear: true
 temp_119[15,1]: number of uses: 2, isLinear: true
 temp_119[16,1]: number of uses: 2, isLinear: true
 temp_119[17,1]: number of uses: 2, isLinear: true
 temp_119[18,1]: number of uses: 2, isLinear: true
 temp_119[19,1]: number of uses: 2, isLinear: true
 temp_119[20,1]: number of uses: 2, isLinear: true
 temp_119[21,1]: number of uses: 2, isLinear: true
 temp_119[22,1]: number of uses: 2, isLinear: true
 temp_119[23,1]: number of uses: 2, isLinear: true
 temp_119[24,1]: number of uses: 2, isLinear: true
 temp_119[25,1]: number of uses: 2, isLinear: true
 temp_119[26,1]: number of uses: 2, isLinear: true
 temp_119[27,1]: number of uses: 2, isLinear: true
 temp_119[28,1]: number of uses: 2, isLinear: true
 temp_119[29,1]: number of uses: 2, isLinear: true
 temp_119[30,1]: number of uses: 2, isLinear: true
 temp_119[31,1]: number of uses: 2, isLinear: true
 temp_119[32,1]: number of uses: 2, isLinear: true
 temp_119[33,1]: number of uses: 2, isLinear: true
 temp_119[34,1]: number of uses: 2, isLinear: true
 temp_119[35,1]: number of uses: 2, isLinear: true
 temp_119[36,1]: number of uses: 2, isLinear: true
 temp_119[37,1]: number of uses: 2, isLinear: true
 temp_119[38,1]: number of uses: 2, isLinear: true
 temp_119[39,1]: number of uses: 2, isLinear: true
 temp_119[40,1]: number of uses: 2, isLinear: true
 temp_119[41,1]: number of uses: 2, isLinear: true
 temp_119[42,1]: number of uses: 2, isLinear: true
 temp_119[43,1]: number of uses: 2, isLinear: true
 temp_119[44,1]: number of uses: 2, isLinear: true
 temp_119[45,1]: number of uses: 2, isLinear: true
 temp_119[46,1]: number of uses: 2, isLinear: true
 temp_119[47,1]: number of uses: 2, isLinear: true
 temp_119[48,1]: number of uses: 2, isLinear: true
 temp_119[49,1]: number of uses: 2, isLinear: true
 temp_119[50,1]: number of uses: 2, isLinear: true
 temp_119[51,1]: number of uses: 2, isLinear: true
 temp_119[52,1]: number of uses: 2, isLinear: true
 temp_119[53,1]: number of uses: 2, isLinear: true
 temp_119[54,1]: number of uses: 2, isLinear: true
 temp_119[55,1]: number of uses: 2, isLinear: true
 temp_119[56,1]: number of uses: 2, isLinear: true
 temp_119[57,1]: number of uses: 2, isLinear: true
 temp_119[58,1]: number of uses: 2, isLinear: true
 temp_119[59,1]: number of uses: 2, isLinear: true
 temp_119[60,1]: number of uses: 2, isLinear: true
 temp_119[61,1]: number of uses: 2, isLinear: true
 temp_119[62,1]: number of uses: 2, isLinear: true
 temp_119[63,1]: number of uses: 2, isLinear: true
 temp_119[64,1]: number of uses: 2, isLinear: true
 laptop_adapter.vDC.V: number of uses: 3, isLinear: true
 laptop_adapter.alpha[1,1]: number of uses: 2, isLinear: true
 laptop_adapter.beta[1,1]: number of uses: 2, isLinear: true
 laptop_adapter.gamma[1,1]: number of uses: 2, isLinear: true
 laptop.i: number of uses: 4, isLinear: true
 ground2.p.i: number of uses: 1, isLinear: true
 laptop_adapter.P_DC: number of uses: 5, isLinear: true
 laptop_adapter.P: number of uses: 5, isLinear: true
 laptop_adapter.S: number of uses: 2, isLinear: true
 laptop_adapter.PLoss: number of uses: 1, isLinear: true
 laptop_adapter.Q: number of uses: 3, isLinear: true
 temp_117[1]: number of uses: 2, isLinear: true
 temp_117[2]: number of uses: 2, isLinear: true
 systemDef.N: number of uses: 1, isLinear: true

Differentiated variables: 
 v.theta: number of uses: 1, isLinear: true

Derivative variables: 
 der(v.theta): number of uses: 6, isLinear: true

Discrete variables: 

Algebraic real variables: 
 v.P1: number of uses: 1, isLinear: true, alias: no
 v.iMag[1]: number of uses: 1, isLinear: true, alias: no
 v.iMag[2]: number of uses: 1, isLinear: true, alias: no
 v.iMag[3]: number of uses: 1, isLinear: true, alias: no
 v.iMag[4]: number of uses: 1, isLinear: true, alias: no
 v.iMag[5]: number of uses: 1, isLinear: true, alias: no
 v.iMag[6]: number of uses: 1, isLinear: true, alias: no
 v.iMag[7]: number of uses: 1, isLinear: true, alias: no
 v.iMag[8]: number of uses: 1, isLinear: true, alias: no
 v.iMag[9]: number of uses: 1, isLinear: true, alias: no
 v.iMag[10]: number of uses: 1, isLinear: true, alias: no
 v.iMag[11]: number of uses: 1, isLinear: true, alias: no
 v.iMag[12]: number of uses: 1, isLinear: true, alias: no
 v.iMag[13]: number of uses: 1, isLinear: true, alias: no
 v.iArg[1]: number of uses: 1, isLinear: true, alias: no
 v.iArg[2]: number of uses: 1, isLinear: true, alias: no
 v.iArg[3]: number of uses: 1, isLinear: true, alias: no
 v.iArg[4]: number of uses: 1, isLinear: true, alias: no
 v.iArg[5]: number of uses: 1, isLinear: true, alias: no
 v.iArg[6]: number of uses: 1, isLinear: true, alias: no
 v.iArg[7]: number of uses: 1, isLinear: true, alias: no
 v.iArg[8]: number of uses: 1, isLinear: true, alias: no
 v.iArg[9]: number of uses: 1, isLinear: true, alias: no
 v.iArg[10]: number of uses: 1, isLinear: true, alias: no
 v.iArg[11]: number of uses: 1, isLinear: true, alias: no
 v.iArg[12]: number of uses: 1, isLinear: true, alias: no
 v.iArg[13]: number of uses: 1, isLinear: true, alias: no
 v.i[1].re: number of uses: 8, isLinear: false, alias: no
 v.i[1].im: number of uses: 7, isLinear: false, alias: no
 v.i[2].re: number of uses: 5, isLinear: false, alias: no
 v.i[2].im: number of uses: 5, isLinear: false, alias: no
 v.i[3].re: number of uses: 5, isLinear: false, alias: no
 v.i[3].im: number of uses: 5, isLinear: false, alias: no
 v.i[4].re: number of uses: 5, isLinear: false, alias: no
 v.i[4].im: number of uses: 5, isLinear: false, alias: no
 v.i[5].re: number of uses: 5, isLinear: false, alias: no
 v.i[5].im: number of uses: 5, isLinear: false, alias: no
 v.i[6].re: number of uses: 5, isLinear: false, alias: no
 v.i[6].im: number of uses: 5, isLinear: false, alias: no
 v.i[7].re: number of uses: 5, isLinear: false, alias: no
 v.i[7].im: number of uses: 5, isLinear: false, alias: no
 v.i[8].re: number of uses: 5, isLinear: false, alias: no
 v.i[8].im: number of uses: 5, isLinear: false, alias: no
 v.i[9].re: number of uses: 5, isLinear: false, alias: no
 v.i[9].im: number of uses: 5, isLinear: false, alias: no
 v.i[10].re: number of uses: 5, isLinear: false, alias: no
 v.i[10].im: number of uses: 5, isLinear: false, alias: no
 v.i[11].re: number of uses: 5, isLinear: false, alias: no
 v.i[11].im: number of uses: 5, isLinear: false, alias: no
 v.i[12].re: number of uses: 5, isLinear: false, alias: no
 v.i[12].im: number of uses: 5, isLinear: false, alias: no
 v.i[13].re: number of uses: 5, isLinear: false, alias: no
 v.i[13].im: number of uses: 5, isLinear: false, alias: no
 v.omega: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.loadBase.omega: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[1]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[2]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[3]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[4]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[5]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[6]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[7]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[8]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[9]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[10]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[11]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[12]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.I_mag[13]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[1]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[2]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[3]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[4]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[5]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[6]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[7]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[8]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[9]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[10]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[11]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[12]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_mag[13]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[1]: number of uses: 13, isLinear: true, alias: no
 laptop_adapter.V_arg[2]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[3]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[4]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[5]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[6]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[7]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[8]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[9]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[10]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[11]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[12]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.V_arg[13]: number of uses: 1, isLinear: true, alias: no
 laptop_adapter.magScale: number of uses: 13, isLinear: true, alias: no
 laptop_adapter.argAdj[1]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[2]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[3]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[4]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[5]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[6]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[7]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[8]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[9]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[10]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[11]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.argAdj[12]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.a[1].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[1].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[2].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[2].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[3].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[3].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[4].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[4].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[5].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[5].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[6].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[6].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[7].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[7].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[8].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[8].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[9].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[9].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[10].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[10].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[11].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[11].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[12].re: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.a[12].im: number of uses: 2, isLinear: false, alias: no
 laptop_adapter.c[1]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[2]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[3]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[4]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[5]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[6]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[7]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[8]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[9]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[10]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[11]: number of uses: 3, isLinear: false, alias: no
 laptop_adapter.c[12]: number of uses: 3, isLinear: false, alias: no
 z.vFundAbs: number of uses: 1, isLinear: true, alias: no
 z.vFundArg: number of uses: 1, isLinear: true, alias: no
 z.iFundAbs: number of uses: 1, isLinear: true, alias: no
 z.iFundArg: number of uses: 1, isLinear: true, alias: no
 z.v[1].re: number of uses: 4, isLinear: false, alias: no
 z.v[1].im: number of uses: 11, isLinear: false, alias: no
 z.v[2].re: number of uses: 4, isLinear: false, alias: no
 z.v[2].im: number of uses: 4, isLinear: false, alias: no
 z.v[3].re: number of uses: 4, isLinear: false, alias: no
 z.v[3].im: number of uses: 4, isLinear: false, alias: no
 z.v[4].re: number of uses: 4, isLinear: false, alias: no
 z.v[4].im: number of uses: 4, isLinear: false, alias: no
 z.v[5].re: number of uses: 4, isLinear: false, alias: no
 z.v[5].im: number of uses: 4, isLinear: false, alias: no
 z.v[6].re: number of uses: 4, isLinear: false, alias: no
 z.v[6].im: number of uses: 4, isLinear: false, alias: no
 z.v[7].re: number of uses: 4, isLinear: false, alias: no
 z.v[7].im: number of uses: 4, isLinear: false, alias: no
 z.v[8].re: number of uses: 4, isLinear: false, alias: no
 z.v[8].im: number of uses: 4, isLinear: false, alias: no
 z.v[9].re: number of uses: 4, isLinear: false, alias: no
 z.v[9].im: number of uses: 4, isLinear: false, alias: no
 z.v[10].re: number of uses: 4, isLinear: false, alias: no
 z.v[10].im: number of uses: 4, isLinear: false, alias: no
 z.v[11].re: number of uses: 4, isLinear: false, alias: no
 z.v[11].im: number of uses: 4, isLinear: false, alias: no
 z.v[12].re: number of uses: 4, isLinear: false, alias: no
 z.v[12].im: number of uses: 4, isLinear: false, alias: no
 z.v[13].re: number of uses: 4, isLinear: false, alias: no
 z.v[13].im: number of uses: 4, isLinear: false, alias: no
 z.omega: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[1]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[2]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[3]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[4]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[5]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[6]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[7]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[8]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[9]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[10]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[11]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[12]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iMag[13]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[1]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[2]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[3]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[4]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[5]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[6]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[7]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[8]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[9]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[10]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[11]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[12]: number of uses: 1, isLinear: true, alias: no
 currentSensor.iArg[13]: number of uses: 1, isLinear: true, alias: no
 currentSensor.i[1].re: number of uses: 6, isLinear: false, alias: no
 currentSensor.i[1].im: number of uses: 6, isLinear: false, alias: no
 currentSensor.i[2].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[2].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[3].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[3].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[4].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[4].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[5].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[5].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[6].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[6].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[7].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[7].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[8].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[8].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[9].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[9].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[10].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[10].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[11].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[11].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[12].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[12].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[13].re: number of uses: 5, isLinear: false, alias: no
 currentSensor.i[13].im: number of uses: 5, isLinear: false, alias: no
 currentSensor.omega: number of uses: 1, isLinear: true, alias: no
 z1.vFundAbs: number of uses: 1, isLinear: true, alias: no
 z1.iFundAbs: number of uses: 1, isLinear: true, alias: no
 z1.iFundArg: number of uses: 1, isLinear: true, alias: no
 z1.v[1].re: number of uses: 9, isLinear: false, alias: no
 z1.i[1].re: number of uses: 5, isLinear: false, alias: no
 z1.i[1].im: number of uses: 5, isLinear: false, alias: no
 z1.i[2].re: number of uses: 3, isLinear: true, alias: no
 z1.i[2].im: number of uses: 3, isLinear: true, alias: no
 z1.i[3].re: number of uses: 3, isLinear: true, alias: no
 z1.i[3].im: number of uses: 3, isLinear: true, alias: no
 z1.i[4].re: number of uses: 3, isLinear: true, alias: no
 z1.i[4].im: number of uses: 3, isLinear: true, alias: no
 z1.i[5].re: number of uses: 3, isLinear: true, alias: no
 z1.i[5].im: number of uses: 3, isLinear: true, alias: no
 z1.i[6].re: number of uses: 3, isLinear: true, alias: no
 z1.i[6].im: number of uses: 3, isLinear: true, alias: no
 z1.i[7].re: number of uses: 3, isLinear: true, alias: no
 z1.i[7].im: number of uses: 3, isLinear: true, alias: no
 z1.i[8].re: number of uses: 3, isLinear: true, alias: no
 z1.i[8].im: number of uses: 3, isLinear: true, alias: no
 z1.i[9].re: number of uses: 3, isLinear: true, alias: no
 z1.i[9].im: number of uses: 3, isLinear: true, alias: no
 z1.i[10].re: number of uses: 3, isLinear: true, alias: no
 z1.i[10].im: number of uses: 3, isLinear: true, alias: no
 z1.i[11].re: number of uses: 3, isLinear: true, alias: no
 z1.i[11].im: number of uses: 3, isLinear: true, alias: no
 z1.i[12].re: number of uses: 3, isLinear: true, alias: no
 z1.i[12].im: number of uses: 3, isLinear: true, alias: no
 z1.i[13].re: number of uses: 3, isLinear: true, alias: no
 z1.i[13].im: number of uses: 3, isLinear: true, alias: no
 z1.omega: number of uses: 1, isLinear: true, alias: no

Input variables: 

Alias sets:
{v.i[1].re(start=1), v.pin_p.iRe[1], -v.pin_n.iRe[1], ground1.pin.iRe[1], -z.i[1].re(start=-1), -z.pin_p.iRe[1], z.pin_n.iRe[1]}
{v.i[2].re(start=1), v.pin_p.iRe[2], -v.pin_n.iRe[2], ground1.pin.iRe[2], -z.i[2].re(start=-1), -z.pin_p.iRe[2], z.pin_n.iRe[2]}
{v.i[3].re(start=1), v.pin_p.iRe[3], -v.pin_n.iRe[3], ground1.pin.iRe[3], -z.i[3].re(start=-1), -z.pin_p.iRe[3], z.pin_n.iRe[3]}
{v.i[4].re(start=1), v.pin_p.iRe[4], -v.pin_n.iRe[4], ground1.pin.iRe[4], -z.i[4].re(start=-1), -z.pin_p.iRe[4], z.pin_n.iRe[4]}
{v.i[5].re(start=1), v.pin_p.iRe[5], -v.pin_n.iRe[5], ground1.pin.iRe[5], -z.i[5].re(start=-1), -z.pin_p.iRe[5], z.pin_n.iRe[5]}
{v.i[6].re(start=1), v.pin_p.iRe[6], -v.pin_n.iRe[6], ground1.pin.iRe[6], -z.i[6].re(start=-1), -z.pin_p.iRe[6], z.pin_n.iRe[6]}
{v.i[7].re(start=1), v.pin_p.iRe[7], -v.pin_n.iRe[7], ground1.pin.iRe[7], -z.i[7].re(start=-1), -z.pin_p.iRe[7], z.pin_n.iRe[7]}
{v.i[8].re(start=1), v.pin_p.iRe[8], -v.pin_n.iRe[8], ground1.pin.iRe[8], -z.i[8].re(start=-1), -z.pin_p.iRe[8], z.pin_n.iRe[8]}
{v.i[9].re(start=1), v.pin_p.iRe[9], -v.pin_n.iRe[9], ground1.pin.iRe[9], -z.i[9].re(start=-1), -z.pin_p.iRe[9], z.pin_n.iRe[9]}
{v.i[10].re(start=1), v.pin_p.iRe[10], -v.pin_n.iRe[10], ground1.pin.iRe[10], -z.i[10].re(start=-1), -z.pin_p.iRe[10], z.pin_n.iRe[10]}
{v.i[11].re(start=1), v.pin_p.iRe[11], -v.pin_n.iRe[11], ground1.pin.iRe[11], -z.i[11].re(start=-1), -z.pin_p.iRe[11], z.pin_n.iRe[11]}
{v.i[12].re(start=1), v.pin_p.iRe[12], -v.pin_n.iRe[12], ground1.pin.iRe[12], -z.i[12].re(start=-1), -z.pin_p.iRe[12], z.pin_n.iRe[12]}
{v.i[13].re(start=1), v.pin_p.iRe[13], -v.pin_n.iRe[13], ground1.pin.iRe[13], -z.i[13].re(start=-1), -z.pin_p.iRe[13], z.pin_n.iRe[13]}
{v.i[1].im(start=-1), v.pin_p.iIm[1], -v.pin_n.iIm[1], ground1.pin.iIm[1], -z.i[1].im(start=1), -z.pin_p.iIm[1], z.pin_n.iIm[1]}
{v.i[2].im(start=-1), v.pin_p.iIm[2], -v.pin_n.iIm[2], ground1.pin.iIm[2], -z.i[2].im(start=1), -z.pin_p.iIm[2], z.pin_n.iIm[2]}
{v.i[3].im(start=-1), v.pin_p.iIm[3], -v.pin_n.iIm[3], ground1.pin.iIm[3], -z.i[3].im(start=1), -z.pin_p.iIm[3], z.pin_n.iIm[3]}
{v.i[4].im(start=-1), v.pin_p.iIm[4], -v.pin_n.iIm[4], ground1.pin.iIm[4], -z.i[4].im(start=1), -z.pin_p.iIm[4], z.pin_n.iIm[4]}
{v.i[5].im(start=-1), v.pin_p.iIm[5], -v.pin_n.iIm[5], ground1.pin.iIm[5], -z.i[5].im(start=1), -z.pin_p.iIm[5], z.pin_n.iIm[5]}
{v.i[6].im(start=-1), v.pin_p.iIm[6], -v.pin_n.iIm[6], ground1.pin.iIm[6], -z.i[6].im(start=1), -z.pin_p.iIm[6], z.pin_n.iIm[6]}
{v.i[7].im(start=-1), v.pin_p.iIm[7], -v.pin_n.iIm[7], ground1.pin.iIm[7], -z.i[7].im(start=1), -z.pin_p.iIm[7], z.pin_n.iIm[7]}
{v.i[8].im(start=-1), v.pin_p.iIm[8], -v.pin_n.iIm[8], ground1.pin.iIm[8], -z.i[8].im(start=1), -z.pin_p.iIm[8], z.pin_n.iIm[8]}
{v.i[9].im(start=-1), v.pin_p.iIm[9], -v.pin_n.iIm[9], ground1.pin.iIm[9], -z.i[9].im(start=1), -z.pin_p.iIm[9], z.pin_n.iIm[9]}
{v.i[10].im(start=-1), v.pin_p.iIm[10], -v.pin_n.iIm[10], ground1.pin.iIm[10], -z.i[10].im(start=1), -z.pin_p.iIm[10], z.pin_n.iIm[10]}
{v.i[11].im(start=-1), v.pin_p.iIm[11], -v.pin_n.iIm[11], ground1.pin.iIm[11], -z.i[11].im(start=1), -z.pin_p.iIm[11], z.pin_n.iIm[11]}
{v.i[12].im(start=-1), v.pin_p.iIm[12], -v.pin_n.iIm[12], ground1.pin.iIm[12], -z.i[12].im(start=1), -z.pin_p.iIm[12], z.pin_n.iIm[12]}
{v.i[13].im(start=-1), v.pin_p.iIm[13], -v.pin_n.iIm[13], ground1.pin.iIm[13], -z.i[13].im(start=1), -z.pin_p.iIm[13], z.pin_n.iIm[13]}
{laptop.i, laptop.p.i, -laptop.n.i, -laptop_adapter.pin_p.i, -laptop_adapter.vDC.p.i, laptop_adapter.vDC.n.i, -laptop_adapter.vDC.i, laptop_adapter.pin_n.i}
{v.theta(start=0), currentSensor.pin_p.reference.theta(start=0), currentSensor.pin_n.reference.theta(start=0), v.pin_p.reference.theta(start=0), v.pin_n.reference.theta(start=0), z.pin_p.reference.theta(start=0), z.pin_n.reference.theta(start=0), z1.pin_p.reference.theta(start=0), z1.pin_n.reference.theta(start=0), ground1.pin.reference.theta(start=0), laptop_adapter.hPin_P.reference.theta(start=0), ground4.pin.reference.theta(start=0), laptop_adapter.loadBase.pin_p.reference.theta(start=0), laptop_adapter.loadBase.pin_n.reference.theta(start=0), laptop_adapter.hPin_N.reference.theta(start=0), ground.pin.reference.theta(start=0)}
{currentSensor.i[1].re(start=-1), currentSensor.pin_p.iRe[1], -currentSensor.pin_n.iRe[1], laptop_adapter.hPin_P.iRe[1], ground.pin.iRe[1], -laptop_adapter.hPin_N.iRe[1], laptop_adapter.loadBase.i[1].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[1], -laptop_adapter.loadBase.pin_n.iRe[1]}
{currentSensor.i[2].re(start=-1), currentSensor.pin_p.iRe[2], -currentSensor.pin_n.iRe[2], laptop_adapter.hPin_P.iRe[2], ground.pin.iRe[2], -laptop_adapter.hPin_N.iRe[2], laptop_adapter.loadBase.i[2].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[2], -laptop_adapter.loadBase.pin_n.iRe[2]}
{currentSensor.i[3].re(start=-1), currentSensor.pin_p.iRe[3], -currentSensor.pin_n.iRe[3], laptop_adapter.hPin_P.iRe[3], ground.pin.iRe[3], -laptop_adapter.hPin_N.iRe[3], laptop_adapter.loadBase.i[3].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[3], -laptop_adapter.loadBase.pin_n.iRe[3]}
{currentSensor.i[4].re(start=-1), currentSensor.pin_p.iRe[4], -currentSensor.pin_n.iRe[4], laptop_adapter.hPin_P.iRe[4], ground.pin.iRe[4], -laptop_adapter.hPin_N.iRe[4], laptop_adapter.loadBase.i[4].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[4], -laptop_adapter.loadBase.pin_n.iRe[4]}
{currentSensor.i[5].re(start=-1), currentSensor.pin_p.iRe[5], -currentSensor.pin_n.iRe[5], laptop_adapter.hPin_P.iRe[5], ground.pin.iRe[5], -laptop_adapter.hPin_N.iRe[5], laptop_adapter.loadBase.i[5].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[5], -laptop_adapter.loadBase.pin_n.iRe[5]}
{currentSensor.i[6].re(start=-1), currentSensor.pin_p.iRe[6], -currentSensor.pin_n.iRe[6], laptop_adapter.hPin_P.iRe[6], ground.pin.iRe[6], -laptop_adapter.hPin_N.iRe[6], laptop_adapter.loadBase.i[6].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[6], -laptop_adapter.loadBase.pin_n.iRe[6]}
{currentSensor.i[7].re(start=-1), currentSensor.pin_p.iRe[7], -currentSensor.pin_n.iRe[7], laptop_adapter.hPin_P.iRe[7], ground.pin.iRe[7], -laptop_adapter.hPin_N.iRe[7], laptop_adapter.loadBase.i[7].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[7], -laptop_adapter.loadBase.pin_n.iRe[7]}
{currentSensor.i[8].re(start=-1), currentSensor.pin_p.iRe[8], -currentSensor.pin_n.iRe[8], laptop_adapter.hPin_P.iRe[8], ground.pin.iRe[8], -laptop_adapter.hPin_N.iRe[8], laptop_adapter.loadBase.i[8].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[8], -laptop_adapter.loadBase.pin_n.iRe[8]}
{currentSensor.i[9].re(start=-1), currentSensor.pin_p.iRe[9], -currentSensor.pin_n.iRe[9], laptop_adapter.hPin_P.iRe[9], ground.pin.iRe[9], -laptop_adapter.hPin_N.iRe[9], laptop_adapter.loadBase.i[9].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[9], -laptop_adapter.loadBase.pin_n.iRe[9]}
{currentSensor.i[10].re(start=-1), currentSensor.pin_p.iRe[10], -currentSensor.pin_n.iRe[10], laptop_adapter.hPin_P.iRe[10], ground.pin.iRe[10], -laptop_adapter.hPin_N.iRe[10], laptop_adapter.loadBase.i[10].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[10], -laptop_adapter.loadBase.pin_n.iRe[10]}
{currentSensor.i[11].re(start=-1), currentSensor.pin_p.iRe[11], -currentSensor.pin_n.iRe[11], laptop_adapter.hPin_P.iRe[11], ground.pin.iRe[11], -laptop_adapter.hPin_N.iRe[11], laptop_adapter.loadBase.i[11].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[11], -laptop_adapter.loadBase.pin_n.iRe[11]}
{currentSensor.i[12].re(start=-1), currentSensor.pin_p.iRe[12], -currentSensor.pin_n.iRe[12], laptop_adapter.hPin_P.iRe[12], ground.pin.iRe[12], -laptop_adapter.hPin_N.iRe[12], laptop_adapter.loadBase.i[12].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[12], -laptop_adapter.loadBase.pin_n.iRe[12]}
{currentSensor.i[13].re(start=-1), currentSensor.pin_p.iRe[13], -currentSensor.pin_n.iRe[13], laptop_adapter.hPin_P.iRe[13], ground.pin.iRe[13], -laptop_adapter.hPin_N.iRe[13], laptop_adapter.loadBase.i[13].re(start=-1), laptop_adapter.loadBase.pin_p.iRe[13], -laptop_adapter.loadBase.pin_n.iRe[13]}
{currentSensor.i[1].im(start=1), currentSensor.pin_p.iIm[1], -currentSensor.pin_n.iIm[1], laptop_adapter.hPin_P.iIm[1], ground.pin.iIm[1], -laptop_adapter.hPin_N.iIm[1], laptop_adapter.loadBase.i[1].im(start=1), laptop_adapter.loadBase.pin_p.iIm[1], -laptop_adapter.loadBase.pin_n.iIm[1]}
{currentSensor.i[2].im(start=1), currentSensor.pin_p.iIm[2], -currentSensor.pin_n.iIm[2], laptop_adapter.hPin_P.iIm[2], ground.pin.iIm[2], -laptop_adapter.hPin_N.iIm[2], laptop_adapter.loadBase.i[2].im(start=1), laptop_adapter.loadBase.pin_p.iIm[2], -laptop_adapter.loadBase.pin_n.iIm[2]}
{currentSensor.i[3].im(start=1), currentSensor.pin_p.iIm[3], -currentSensor.pin_n.iIm[3], laptop_adapter.hPin_P.iIm[3], ground.pin.iIm[3], -laptop_adapter.hPin_N.iIm[3], laptop_adapter.loadBase.i[3].im(start=1), laptop_adapter.loadBase.pin_p.iIm[3], -laptop_adapter.loadBase.pin_n.iIm[3]}
{currentSensor.i[4].im(start=1), currentSensor.pin_p.iIm[4], -currentSensor.pin_n.iIm[4], laptop_adapter.hPin_P.iIm[4], ground.pin.iIm[4], -laptop_adapter.hPin_N.iIm[4], laptop_adapter.loadBase.i[4].im(start=1), laptop_adapter.loadBase.pin_p.iIm[4], -laptop_adapter.loadBase.pin_n.iIm[4]}
{currentSensor.i[5].im(start=1), currentSensor.pin_p.iIm[5], -currentSensor.pin_n.iIm[5], laptop_adapter.hPin_P.iIm[5], ground.pin.iIm[5], -laptop_adapter.hPin_N.iIm[5], laptop_adapter.loadBase.i[5].im(start=1), laptop_adapter.loadBase.pin_p.iIm[5], -laptop_adapter.loadBase.pin_n.iIm[5]}
{currentSensor.i[6].im(start=1), currentSensor.pin_p.iIm[6], -currentSensor.pin_n.iIm[6], laptop_adapter.hPin_P.iIm[6], ground.pin.iIm[6], -laptop_adapter.hPin_N.iIm[6], laptop_adapter.loadBase.i[6].im(start=1), laptop_adapter.loadBase.pin_p.iIm[6], -laptop_adapter.loadBase.pin_n.iIm[6]}
{currentSensor.i[7].im(start=1), currentSensor.pin_p.iIm[7], -currentSensor.pin_n.iIm[7], laptop_adapter.hPin_P.iIm[7], ground.pin.iIm[7], -laptop_adapter.hPin_N.iIm[7], laptop_adapter.loadBase.i[7].im(start=1), laptop_adapter.loadBase.pin_p.iIm[7], -laptop_adapter.loadBase.pin_n.iIm[7]}
{currentSensor.i[8].im(start=1), currentSensor.pin_p.iIm[8], -currentSensor.pin_n.iIm[8], laptop_adapter.hPin_P.iIm[8], ground.pin.iIm[8], -laptop_adapter.hPin_N.iIm[8], laptop_adapter.loadBase.i[8].im(start=1), laptop_adapter.loadBase.pin_p.iIm[8], -laptop_adapter.loadBase.pin_n.iIm[8]}
{currentSensor.i[9].im(start=1), currentSensor.pin_p.iIm[9], -currentSensor.pin_n.iIm[9], laptop_adapter.hPin_P.iIm[9], ground.pin.iIm[9], -laptop_adapter.hPin_N.iIm[9], laptop_adapter.loadBase.i[9].im(start=1), laptop_adapter.loadBase.pin_p.iIm[9], -laptop_adapter.loadBase.pin_n.iIm[9]}
{currentSensor.i[10].im(start=1), currentSensor.pin_p.iIm[10], -currentSensor.pin_n.iIm[10], laptop_adapter.hPin_P.iIm[10], ground.pin.iIm[10], -laptop_adapter.hPin_N.iIm[10], laptop_adapter.loadBase.i[10].im(start=1), laptop_adapter.loadBase.pin_p.iIm[10], -laptop_adapter.loadBase.pin_n.iIm[10]}
{currentSensor.i[11].im(start=1), currentSensor.pin_p.iIm[11], -currentSensor.pin_n.iIm[11], laptop_adapter.hPin_P.iIm[11], ground.pin.iIm[11], -laptop_adapter.hPin_N.iIm[11], laptop_adapter.loadBase.i[11].im(start=1), laptop_adapter.loadBase.pin_p.iIm[11], -laptop_adapter.loadBase.pin_n.iIm[11]}
{currentSensor.i[12].im(start=1), currentSensor.pin_p.iIm[12], -currentSensor.pin_n.iIm[12], laptop_adapter.hPin_P.iIm[12], ground.pin.iIm[12], -laptop_adapter.hPin_N.iIm[12], laptop_adapter.loadBase.i[12].im(start=1), laptop_adapter.loadBase.pin_p.iIm[12], -laptop_adapter.loadBase.pin_n.iIm[12]}
{currentSensor.i[13].im(start=1), currentSensor.pin_p.iIm[13], -currentSensor.pin_n.iIm[13], laptop_adapter.hPin_P.iIm[13], ground.pin.iIm[13], -laptop_adapter.hPin_N.iIm[13], laptop_adapter.loadBase.i[13].im(start=1), laptop_adapter.loadBase.pin_p.iIm[13], -laptop_adapter.loadBase.pin_n.iIm[13]}
{z1.i[1].re(start=-1), z1.pin_p.iRe[1], -z1.pin_n.iRe[1], ground4.pin.iRe[1]}
{z1.i[2].re(start=-1), z1.pin_p.iRe[2], -z1.pin_n.iRe[2], ground4.pin.iRe[2]}
{z1.i[3].re(start=-1), z1.pin_p.iRe[3], -z1.pin_n.iRe[3], ground4.pin.iRe[3]}
{z1.i[4].re(start=-1), z1.pin_p.iRe[4], -z1.pin_n.iRe[4], ground4.pin.iRe[4]}
{z1.i[5].re(start=-1), z1.pin_p.iRe[5], -z1.pin_n.iRe[5], ground4.pin.iRe[5]}
{z1.i[6].re(start=-1), z1.pin_p.iRe[6], -z1.pin_n.iRe[6], ground4.pin.iRe[6]}
{z1.i[7].re(start=-1), z1.pin_p.iRe[7], -z1.pin_n.iRe[7], ground4.pin.iRe[7]}
{z1.i[8].re(start=-1), z1.pin_p.iRe[8], -z1.pin_n.iRe[8], ground4.pin.iRe[8]}
{z1.i[9].re(start=-1), z1.pin_p.iRe[9], -z1.pin_n.iRe[9], ground4.pin.iRe[9]}
{z1.i[10].re(start=-1), z1.pin_p.iRe[10], -z1.pin_n.iRe[10], ground4.pin.iRe[10]}
{z1.i[11].re(start=-1), z1.pin_p.iRe[11], -z1.pin_n.iRe[11], ground4.pin.iRe[11]}
{z1.i[12].re(start=-1), z1.pin_p.iRe[12], -z1.pin_n.iRe[12], ground4.pin.iRe[12]}
{z1.i[13].re(start=-1), z1.pin_p.iRe[13], -z1.pin_n.iRe[13], ground4.pin.iRe[13]}
{z1.i[1].im(start=1), z1.pin_p.iIm[1], -z1.pin_n.iIm[1], ground4.pin.iIm[1]}
{z1.i[2].im(start=1), z1.pin_p.iIm[2], -z1.pin_n.iIm[2], ground4.pin.iIm[2]}
{z1.i[3].im(start=1), z1.pin_p.iIm[3], -z1.pin_n.iIm[3], ground4.pin.iIm[3]}
{z1.i[4].im(start=1), z1.pin_p.iIm[4], -z1.pin_n.iIm[4], ground4.pin.iIm[4]}
{z1.i[5].im(start=1), z1.pin_p.iIm[5], -z1.pin_n.iIm[5], ground4.pin.iIm[5]}
{z1.i[6].im(start=1), z1.pin_p.iIm[6], -z1.pin_n.iIm[6], ground4.pin.iIm[6]}
{z1.i[7].im(start=1), z1.pin_p.iIm[7], -z1.pin_n.iIm[7], ground4.pin.iIm[7]}
{z1.i[8].im(start=1), z1.pin_p.iIm[8], -z1.pin_n.iIm[8], ground4.pin.iIm[8]}
{z1.i[9].im(start=1), z1.pin_p.iIm[9], -z1.pin_n.iIm[9], ground4.pin.iIm[9]}
{z1.i[10].im(start=1), z1.pin_p.iIm[10], -z1.pin_n.iIm[10], ground4.pin.iIm[10]}
{z1.i[11].im(start=1), z1.pin_p.iIm[11], -z1.pin_n.iIm[11], ground4.pin.iIm[11]}
{z1.i[12].im(start=1), z1.pin_p.iIm[12], -z1.pin_n.iIm[12], ground4.pin.iIm[12]}
{z1.i[13].im(start=1), z1.pin_p.iIm[13], -z1.pin_n.iIm[13], ground4.pin.iIm[13]}
{laptop_adapter.vDC.V(start=1), laptop.p.v, laptop_adapter.pin_p.v, laptop_adapter.vDC.p.v, laptop_adapter.vDC.v, laptop.v}
{v.v[1].im(start=100), v.pin_p.v[1].im, z.pin_p.v[1].im, v.pin_p.v[2].re, z.pin_p.v[2].re, v.pin_p.v[2].im, z.pin_p.v[2].im, v.pin_p.v[3].re, z.pin_p.v[3].re, v.pin_p.v[3].im, z.pin_p.v[3].im, v.pin_p.v[4].re, z.pin_p.v[4].re, v.pin_p.v[4].im, z.pin_p.v[4].im, v.pin_p.v[5].re, z.pin_p.v[5].re, v.pin_p.v[5].im, z.pin_p.v[5].im, v.pin_p.v[6].re, z.pin_p.v[6].re, v.pin_p.v[6].im, z.pin_p.v[6].im, v.pin_p.v[7].re, z.pin_p.v[7].re, v.pin_p.v[7].im, z.pin_p.v[7].im, v.pin_p.v[8].re, z.pin_p.v[8].re, v.pin_p.v[8].im, z.pin_p.v[8].im, v.pin_p.v[9].re, z.pin_p.v[9].re, v.pin_p.v[9].im, z.pin_p.v[9].im, v.pin_p.v[10].re, z.pin_p.v[10].re, v.pin_p.v[10].im, z.pin_p.v[10].im, v.pin_p.v[11].re, z.pin_p.v[11].re, v.pin_p.v[11].im, z.pin_p.v[11].im, v.pin_p.v[12].re, z.pin_p.v[12].re, v.pin_p.v[12].im, z.pin_p.v[12].im, v.pin_p.v[13].re, z.pin_p.v[13].re, v.pin_p.v[13].im, z.pin_p.v[13].im, ground1.pin.v[1].re, v.pin_n.v[1].re, ground1.pin.v[2].re, v.pin_n.v[2].re, ground1.pin.v[3].re, v.pin_n.v[3].re, ground1.pin.v[4].re, v.pin_n.v[4].re, ground1.pin.v[5].re, v.pin_n.v[5].re, ground1.pin.v[6].re, v.pin_n.v[6].re, ground1.pin.v[7].re, v.pin_n.v[7].re, ground1.pin.v[8].re, v.pin_n.v[8].re, ground1.pin.v[9].re, v.pin_n.v[9].re, ground1.pin.v[10].re, v.pin_n.v[10].re, ground1.pin.v[11].re, v.pin_n.v[11].re, ground1.pin.v[12].re, v.pin_n.v[12].re, ground1.pin.v[13].re, v.pin_n.v[13].re, ground.pin.v[1].re, laptop_adapter.hPin_N.v[1].re, laptop_adapter.loadBase.pin_n.v[1].re, ground.pin.v[2].re, laptop_adapter.hPin_N.v[2].re, laptop_adapter.loadBase.pin_n.v[2].re, ground.pin.v[3].re, laptop_adapter.hPin_N.v[3].re, laptop_adapter.loadBase.pin_n.v[3].re, ground.pin.v[4].re, laptop_adapter.hPin_N.v[4].re, laptop_adapter.loadBase.pin_n.v[4].re, ground.pin.v[5].re, laptop_adapter.hPin_N.v[5].re, laptop_adapter.loadBase.pin_n.v[5].re, ground.pin.v[6].re, laptop_adapter.hPin_N.v[6].re, laptop_adapter.loadBase.pin_n.v[6].re, ground.pin.v[7].re, laptop_adapter.hPin_N.v[7].re, laptop_adapter.loadBase.pin_n.v[7].re, ground.pin.v[8].re, laptop_adapter.hPin_N.v[8].re, laptop_adapter.loadBase.pin_n.v[8].re, ground.pin.v[9].re, laptop_adapter.hPin_N.v[9].re, laptop_adapter.loadBase.pin_n.v[9].re, ground.pin.v[10].re, laptop_adapter.hPin_N.v[10].re, laptop_adapter.loadBase.pin_n.v[10].re, ground.pin.v[11].re, laptop_adapter.hPin_N.v[11].re, laptop_adapter.loadBase.pin_n.v[11].re, ground.pin.v[12].re, laptop_adapter.hPin_N.v[12].re, laptop_adapter.loadBase.pin_n.v[12].re, ground.pin.v[13].re, laptop_adapter.hPin_N.v[13].re, laptop_adapter.loadBase.pin_n.v[13].re, currentSensor.v[1].re(start=100), currentSensor.v[1].im(start=100), currentSensor.v[2].re(start=100), currentSensor.v[2].im(start=100), currentSensor.v[3].re(start=100), currentSensor.v[3].im(start=100), currentSensor.v[4].re(start=100), currentSensor.v[4].im(start=100), currentSensor.v[5].re(start=100), currentSensor.v[5].im(start=100), currentSensor.v[6].re(start=100), currentSensor.v[6].im(start=100), currentSensor.v[7].re(start=100), currentSensor.v[7].im(start=100), currentSensor.v[8].re(start=100), currentSensor.v[8].im(start=100), currentSensor.v[9].re(start=100), currentSensor.v[9].im(start=100), currentSensor.v[10].re(start=100), currentSensor.v[10].im(start=100), currentSensor.v[11].re(start=100), currentSensor.v[11].im(start=100), currentSensor.v[12].re(start=100), currentSensor.v[12].im(start=100), currentSensor.v[13].re(start=100), currentSensor.v[13].im(start=100), ground4.pin.v[1].re, z1.pin_n.v[1].re, ground4.pin.v[2].re, z1.pin_n.v[2].re, ground4.pin.v[3].re, z1.pin_n.v[3].re, ground4.pin.v[4].re, z1.pin_n.v[4].re, ground4.pin.v[5].re, z1.pin_n.v[5].re, ground4.pin.v[6].re, z1.pin_n.v[6].re, ground4.pin.v[7].re, z1.pin_n.v[7].re, ground4.pin.v[8].re, z1.pin_n.v[8].re, ground4.pin.v[9].re, z1.pin_n.v[9].re, ground4.pin.v[10].re, z1.pin_n.v[10].re, ground4.pin.v[11].re, z1.pin_n.v[11].re, ground4.pin.v[12].re, z1.pin_n.v[12].re, ground4.pin.v[13].re, z1.pin_n.v[13].re}
{v.v[1].re(start=100), v.pin_p.v[1].re, z.pin_p.v[1].re}
{-z.v[1].im(start=100), currentSensor.pin_p.v[1].im, z.pin_n.v[1].im, z1.pin_p.v[1].im, currentSensor.pin_n.v[1].im, laptop_adapter.hPin_P.v[1].im, laptop_adapter.loadBase.pin_p.v[1].im, laptop_adapter.loadBase.v[1].im(start=100), z1.v[1].im(start=100)}
{z1.v[1].re(start=100), currentSensor.pin_p.v[1].re, z.pin_n.v[1].re, z1.pin_p.v[1].re, currentSensor.pin_n.v[1].re, laptop_adapter.hPin_P.v[1].re, laptop_adapter.loadBase.pin_p.v[1].re, laptop_adapter.loadBase.v[1].re(start=100)}
{-z.v[2].im(start=100), currentSensor.pin_p.v[2].im, z.pin_n.v[2].im, z1.pin_p.v[2].im, currentSensor.pin_n.v[2].im, laptop_adapter.hPin_P.v[2].im, laptop_adapter.loadBase.pin_p.v[2].im, laptop_adapter.loadBase.v[2].im(start=100), z1.v[2].im(start=100)}
{-z.v[2].re(start=100), currentSensor.pin_p.v[2].re, z.pin_n.v[2].re, z1.pin_p.v[2].re, currentSensor.pin_n.v[2].re, laptop_adapter.hPin_P.v[2].re, laptop_adapter.loadBase.pin_p.v[2].re, laptop_adapter.loadBase.v[2].re(start=100), z1.v[2].re(start=100)}
{-z.v[3].im(start=100), currentSensor.pin_p.v[3].im, z.pin_n.v[3].im, z1.pin_p.v[3].im, currentSensor.pin_n.v[3].im, laptop_adapter.hPin_P.v[3].im, laptop_adapter.loadBase.pin_p.v[3].im, laptop_adapter.loadBase.v[3].im(start=100), z1.v[3].im(start=100)}
{-z.v[3].re(start=100), currentSensor.pin_p.v[3].re, z.pin_n.v[3].re, z1.pin_p.v[3].re, currentSensor.pin_n.v[3].re, laptop_adapter.hPin_P.v[3].re, laptop_adapter.loadBase.pin_p.v[3].re, laptop_adapter.loadBase.v[3].re(start=100), z1.v[3].re(start=100)}
{-z.v[4].im(start=100), currentSensor.pin_p.v[4].im, z.pin_n.v[4].im, z1.pin_p.v[4].im, currentSensor.pin_n.v[4].im, laptop_adapter.hPin_P.v[4].im, laptop_adapter.loadBase.pin_p.v[4].im, laptop_adapter.loadBase.v[4].im(start=100), z1.v[4].im(start=100)}
{-z.v[4].re(start=100), currentSensor.pin_p.v[4].re, z.pin_n.v[4].re, z1.pin_p.v[4].re, currentSensor.pin_n.v[4].re, laptop_adapter.hPin_P.v[4].re, laptop_adapter.loadBase.pin_p.v[4].re, laptop_adapter.loadBase.v[4].re(start=100), z1.v[4].re(start=100)}
{-z.v[5].im(start=100), currentSensor.pin_p.v[5].im, z.pin_n.v[5].im, z1.pin_p.v[5].im, currentSensor.pin_n.v[5].im, laptop_adapter.hPin_P.v[5].im, laptop_adapter.loadBase.pin_p.v[5].im, laptop_adapter.loadBase.v[5].im(start=100), z1.v[5].im(start=100)}
{-z.v[5].re(start=100), currentSensor.pin_p.v[5].re, z.pin_n.v[5].re, z1.pin_p.v[5].re, currentSensor.pin_n.v[5].re, laptop_adapter.hPin_P.v[5].re, laptop_adapter.loadBase.pin_p.v[5].re, laptop_adapter.loadBase.v[5].re(start=100), z1.v[5].re(start=100)}
{-z.v[6].im(start=100), currentSensor.pin_p.v[6].im, z.pin_n.v[6].im, z1.pin_p.v[6].im, currentSensor.pin_n.v[6].im, laptop_adapter.hPin_P.v[6].im, laptop_adapter.loadBase.pin_p.v[6].im, laptop_adapter.loadBase.v[6].im(start=100), z1.v[6].im(start=100)}
{-z.v[6].re(start=100), currentSensor.pin_p.v[6].re, z.pin_n.v[6].re, z1.pin_p.v[6].re, currentSensor.pin_n.v[6].re, laptop_adapter.hPin_P.v[6].re, laptop_adapter.loadBase.pin_p.v[6].re, laptop_adapter.loadBase.v[6].re(start=100), z1.v[6].re(start=100)}
{-z.v[7].im(start=100), currentSensor.pin_p.v[7].im, z.pin_n.v[7].im, z1.pin_p.v[7].im, currentSensor.pin_n.v[7].im, laptop_adapter.hPin_P.v[7].im, laptop_adapter.loadBase.pin_p.v[7].im, laptop_adapter.loadBase.v[7].im(start=100), z1.v[7].im(start=100)}
{-z.v[7].re(start=100), currentSensor.pin_p.v[7].re, z.pin_n.v[7].re, z1.pin_p.v[7].re, currentSensor.pin_n.v[7].re, laptop_adapter.hPin_P.v[7].re, laptop_adapter.loadBase.pin_p.v[7].re, laptop_adapter.loadBase.v[7].re(start=100), z1.v[7].re(start=100)}
{-z.v[8].im(start=100), currentSensor.pin_p.v[8].im, z.pin_n.v[8].im, z1.pin_p.v[8].im, currentSensor.pin_n.v[8].im, laptop_adapter.hPin_P.v[8].im, laptop_adapter.loadBase.pin_p.v[8].im, laptop_adapter.loadBase.v[8].im(start=100), z1.v[8].im(start=100)}
{-z.v[8].re(start=100), currentSensor.pin_p.v[8].re, z.pin_n.v[8].re, z1.pin_p.v[8].re, currentSensor.pin_n.v[8].re, laptop_adapter.hPin_P.v[8].re, laptop_adapter.loadBase.pin_p.v[8].re, laptop_adapter.loadBase.v[8].re(start=100), z1.v[8].re(start=100)}
{-z.v[9].im(start=100), currentSensor.pin_p.v[9].im, z.pin_n.v[9].im, z1.pin_p.v[9].im, currentSensor.pin_n.v[9].im, laptop_adapter.hPin_P.v[9].im, laptop_adapter.loadBase.pin_p.v[9].im, laptop_adapter.loadBase.v[9].im(start=100), z1.v[9].im(start=100)}
{-z.v[9].re(start=100), currentSensor.pin_p.v[9].re, z.pin_n.v[9].re, z1.pin_p.v[9].re, currentSensor.pin_n.v[9].re, laptop_adapter.hPin_P.v[9].re, laptop_adapter.loadBase.pin_p.v[9].re, laptop_adapter.loadBase.v[9].re(start=100), z1.v[9].re(start=100)}
{-z.v[10].im(start=100), currentSensor.pin_p.v[10].im, z.pin_n.v[10].im, z1.pin_p.v[10].im, currentSensor.pin_n.v[10].im, laptop_adapter.hPin_P.v[10].im, laptop_adapter.loadBase.pin_p.v[10].im, laptop_adapter.loadBase.v[10].im(start=100), z1.v[10].im(start=100)}
{-z.v[10].re(start=100), currentSensor.pin_p.v[10].re, z.pin_n.v[10].re, z1.pin_p.v[10].re, currentSensor.pin_n.v[10].re, laptop_adapter.hPin_P.v[10].re, laptop_adapter.loadBase.pin_p.v[10].re, laptop_adapter.loadBase.v[10].re(start=100), z1.v[10].re(start=100)}
{-z.v[11].im(start=100), currentSensor.pin_p.v[11].im, z.pin_n.v[11].im, z1.pin_p.v[11].im, currentSensor.pin_n.v[11].im, laptop_adapter.hPin_P.v[11].im, laptop_adapter.loadBase.pin_p.v[11].im, laptop_adapter.loadBase.v[11].im(start=100), z1.v[11].im(start=100)}
{-z.v[11].re(start=100), currentSensor.pin_p.v[11].re, z.pin_n.v[11].re, z1.pin_p.v[11].re, currentSensor.pin_n.v[11].re, laptop_adapter.hPin_P.v[11].re, laptop_adapter.loadBase.pin_p.v[11].re, laptop_adapter.loadBase.v[11].re(start=100), z1.v[11].re(start=100)}
{-z.v[12].im(start=100), currentSensor.pin_p.v[12].im, z.pin_n.v[12].im, z1.pin_p.v[12].im, currentSensor.pin_n.v[12].im, laptop_adapter.hPin_P.v[12].im, laptop_adapter.loadBase.pin_p.v[12].im, laptop_adapter.loadBase.v[12].im(start=100), z1.v[12].im(start=100)}
{-z.v[12].re(start=100), currentSensor.pin_p.v[12].re, z.pin_n.v[12].re, z1.pin_p.v[12].re, currentSensor.pin_n.v[12].re, laptop_adapter.hPin_P.v[12].re, laptop_adapter.loadBase.pin_p.v[12].re, laptop_adapter.loadBase.v[12].re(start=100), z1.v[12].re(start=100)}
{-z.v[13].im(start=100), currentSensor.pin_p.v[13].im, z.pin_n.v[13].im, z1.pin_p.v[13].im, currentSensor.pin_n.v[13].im, laptop_adapter.hPin_P.v[13].im, laptop_adapter.loadBase.pin_p.v[13].im, laptop_adapter.loadBase.v[13].im(start=100), z1.v[13].im(start=100)}
{-z.v[13].re(start=100), currentSensor.pin_p.v[13].re, z.pin_n.v[13].re, z1.pin_p.v[13].re, currentSensor.pin_n.v[13].re, laptop_adapter.hPin_P.v[13].re, laptop_adapter.loadBase.pin_p.v[13].re, laptop_adapter.loadBase.v[13].re(start=100), z1.v[13].re(start=100)}
{v.v[2].re(start=100), v.vMag[2], v.vMag[3], v.vMag[4], v.vMag[5], v.vMag[6], v.vMag[7], v.vMag[8], v.vMag[9], v.vMag[10], v.vMag[11], v.vMag[12], v.vMag[13], v.vArg[1], v.vArg[2], v.vArg[3], v.vArg[4], v.vArg[5], v.vArg[6], v.vArg[7], v.vArg[8], v.vArg[9], v.vArg[10], v.vArg[11], v.vArg[12], v.vArg[13], v.v[2].im(start=100), v.v[3].re(start=100), v.v[3].im(start=100), v.v[4].re(start=100), v.v[4].im(start=100), v.v[5].re(start=100), v.v[5].im(start=100), v.v[6].re(start=100), v.v[6].im(start=100), v.v[7].re(start=100), v.v[7].im(start=100), v.v[8].re(start=100), v.v[8].im(start=100), v.v[9].re(start=100), v.v[9].im(start=100), v.v[10].re(start=100), v.v[10].im(start=100), v.v[11].re(start=100), v.v[11].im(start=100), v.v[12].re(start=100), v.v[12].im(start=100), v.v[13].re(start=100), v.v[13].im(start=100), ground1.pin.v[1].im, v.pin_n.v[1].im, ground1.pin.v[2].im, v.pin_n.v[2].im, ground1.pin.v[3].im, v.pin_n.v[3].im, ground1.pin.v[4].im, v.pin_n.v[4].im, ground1.pin.v[5].im, v.pin_n.v[5].im, ground1.pin.v[6].im, v.pin_n.v[6].im, ground1.pin.v[7].im, v.pin_n.v[7].im, ground1.pin.v[8].im, v.pin_n.v[8].im, ground1.pin.v[9].im, v.pin_n.v[9].im, ground1.pin.v[10].im, v.pin_n.v[10].im, ground1.pin.v[11].im, v.pin_n.v[11].im, ground1.pin.v[12].im, v.pin_n.v[12].im, ground1.pin.v[13].im, v.pin_n.v[13].im, ground2.p.v, laptop.n.v, laptop_adapter.pin_n.v, laptop_adapter.vDC.n.v, ground.pin.v[1].im, laptop_adapter.hPin_N.v[1].im, laptop_adapter.loadBase.pin_n.v[1].im, ground.pin.v[2].im, laptop_adapter.hPin_N.v[2].im, laptop_adapter.loadBase.pin_n.v[2].im, ground.pin.v[3].im, laptop_adapter.hPin_N.v[3].im, laptop_adapter.loadBase.pin_n.v[3].im, ground.pin.v[4].im, laptop_adapter.hPin_N.v[4].im, laptop_adapter.loadBase.pin_n.v[4].im, ground.pin.v[5].im, laptop_adapter.hPin_N.v[5].im, laptop_adapter.loadBase.pin_n.v[5].im, ground.pin.v[6].im, laptop_adapter.hPin_N.v[6].im, laptop_adapter.loadBase.pin_n.v[6].im, ground.pin.v[7].im, laptop_adapter.hPin_N.v[7].im, laptop_adapter.loadBase.pin_n.v[7].im, ground.pin.v[8].im, laptop_adapter.hPin_N.v[8].im, laptop_adapter.loadBase.pin_n.v[8].im, ground.pin.v[9].im, laptop_adapter.hPin_N.v[9].im, laptop_adapter.loadBase.pin_n.v[9].im, ground.pin.v[10].im, laptop_adapter.hPin_N.v[10].im, laptop_adapter.loadBase.pin_n.v[10].im, ground.pin.v[11].im, laptop_adapter.hPin_N.v[11].im, laptop_adapter.loadBase.pin_n.v[11].im, ground.pin.v[12].im, laptop_adapter.hPin_N.v[12].im, laptop_adapter.loadBase.pin_n.v[12].im, ground.pin.v[13].im, laptop_adapter.hPin_N.v[13].im, laptop_adapter.loadBase.pin_n.v[13].im, ground4.pin.v[1].im, z1.pin_n.v[1].im, ground4.pin.v[2].im, z1.pin_n.v[2].im, ground4.pin.v[3].im, z1.pin_n.v[3].im, ground4.pin.v[4].im, z1.pin_n.v[4].im, ground4.pin.v[5].im, z1.pin_n.v[5].im, ground4.pin.v[6].im, z1.pin_n.v[6].im, ground4.pin.v[7].im, z1.pin_n.v[7].im, ground4.pin.v[8].im, z1.pin_n.v[8].im, ground4.pin.v[9].im, z1.pin_n.v[9].im, ground4.pin.v[10].im, z1.pin_n.v[10].im, ground4.pin.v[11].im, z1.pin_n.v[11].im, ground4.pin.v[12].im, z1.pin_n.v[12].im, ground4.pin.v[13].im, z1.pin_n.v[13].im, temp_319.im, temp_334.im, temp_349.im, temp_364.im, temp_379.im, temp_394.im, temp_409.im, temp_424.im, temp_439.im, temp_454.im, temp_469.im, temp_484.im}
{systemDef.numHrm, v.pin_p.h, v.pin_n.h, ground1.pin.h, laptop_adapter.hPin_P.h, laptop_adapter.hPin_N.h, laptop_adapter.loadBase.pin_p.h, laptop_adapter.loadBase.pin_n.h, z.pin_p.h, z.pin_n.h, ground.pin.h, currentSensor.pin_p.h, currentSensor.pin_n.h, z1.pin_p.h, z1.pin_n.h, ground4.pin.h}
{ground1.properties.ComponentType, ground.properties.ComponentType, ground4.properties.ComponentType}
{z.properties.ComponentType, z1.properties.ComponentType}
{v.P1, v.P}
{currentSensor.iArg[1], temp_1649, laptop_adapter.I_arg[1]}
{currentSensor.iArg[2], temp_1650, laptop_adapter.I_arg[2]}
{currentSensor.iArg[3], temp_1651, laptop_adapter.I_arg[3]}
{currentSensor.iArg[4], temp_1652, laptop_adapter.I_arg[4]}
{currentSensor.iArg[5], temp_1653, laptop_adapter.I_arg[5]}
{currentSensor.iArg[6], temp_1654, laptop_adapter.I_arg[6]}
{currentSensor.iArg[7], temp_1655, laptop_adapter.I_arg[7]}
{currentSensor.iArg[8], temp_1656, laptop_adapter.I_arg[8]}
{currentSensor.iArg[9], temp_1657, laptop_adapter.I_arg[9]}
{currentSensor.iArg[10], temp_1658, laptop_adapter.I_arg[10]}
{currentSensor.iArg[11], temp_1659, laptop_adapter.I_arg[11]}
{currentSensor.iArg[12], temp_1660, laptop_adapter.I_arg[12]}
{currentSensor.iArg[13], temp_1661, laptop_adapter.I_arg[13]}
{laptop_adapter.V_arg[1], temp_1662, z1.vFundArg}
1047 variables can be eliminated

Incidence:
 eq 0:
 eq 1: der(v.theta)
 eq 2: der(v.theta) v.omega
 eq 3: currentSensor.i[1].re z1.v[1].re z.v[1].im
 eq 4: currentSensor.i[1].im z.v[1].im z1.v[1].re
 eq 5: currentSensor.i[2].re laptop_adapter.c[1] laptop_adapter.a[1].re
 eq 6: currentSensor.i[2].im laptop_adapter.c[1] laptop_adapter.a[1].im
 eq 7: currentSensor.i[3].re laptop_adapter.c[2] laptop_adapter.a[2].re
 eq 8: currentSensor.i[3].im laptop_adapter.c[2] laptop_adapter.a[2].im
 eq 9: currentSensor.i[4].re laptop_adapter.c[3] laptop_adapter.a[3].re
 eq 10: currentSensor.i[4].im laptop_adapter.c[3] laptop_adapter.a[3].im
 eq 11: currentSensor.i[5].re laptop_adapter.c[4] laptop_adapter.a[4].re
 eq 12: currentSensor.i[5].im laptop_adapter.c[4] laptop_adapter.a[4].im
 eq 13: currentSensor.i[6].re laptop_adapter.c[5] laptop_adapter.a[5].re
 eq 14: currentSensor.i[6].im laptop_adapter.c[5] laptop_adapter.a[5].im
 eq 15: currentSensor.i[7].re laptop_adapter.c[6] laptop_adapter.a[6].re
 eq 16: currentSensor.i[7].im laptop_adapter.c[6] laptop_adapter.a[6].im
 eq 17: currentSensor.i[8].re laptop_adapter.c[7] laptop_adapter.a[7].re
 eq 18: currentSensor.i[8].im laptop_adapter.c[7] laptop_adapter.a[7].im
 eq 19: currentSensor.i[9].re laptop_adapter.c[8] laptop_adapter.a[8].re
 eq 20: currentSensor.i[9].im laptop_adapter.c[8] laptop_adapter.a[8].im
 eq 21: currentSensor.i[10].re laptop_adapter.c[9] laptop_adapter.a[9].re
 eq 22: currentSensor.i[10].im laptop_adapter.c[9] laptop_adapter.a[9].im
 eq 23: currentSensor.i[11].re laptop_adapter.c[10] laptop_adapter.a[10].re
 eq 24: currentSensor.i[11].im laptop_adapter.c[10] laptop_adapter.a[10].im
 eq 25: currentSensor.i[12].re laptop_adapter.c[11] laptop_adapter.a[11].re
 eq 26: currentSensor.i[12].im laptop_adapter.c[11] laptop_adapter.a[11].im
 eq 27: currentSensor.i[13].re laptop_adapter.c[12] laptop_adapter.a[12].re
 eq 28: currentSensor.i[13].im laptop_adapter.c[12] laptop_adapter.a[12].im
 eq 29:
 eq 30: der(v.theta) laptop_adapter.loadBase.omega
 eq 31: z.v[1].re v.i[1].re v.i[1].im
 eq 32: z.v[2].re v.i[2].re v.i[2].im
 eq 33: z.v[3].re v.i[3].re v.i[3].im
 eq 34: z.v[4].re v.i[4].re v.i[4].im
 eq 35: z.v[5].re v.i[5].re v.i[5].im
 eq 36: z.v[6].re v.i[6].re v.i[6].im
 eq 37: z.v[7].re v.i[7].re v.i[7].im
 eq 38: z.v[8].re v.i[8].re v.i[8].im
 eq 39: z.v[9].re v.i[9].re v.i[9].im
 eq 40: z.v[10].re v.i[10].re v.i[10].im
 eq 41: z.v[11].re v.i[11].re v.i[11].im
 eq 42: z.v[12].re v.i[12].re v.i[12].im
 eq 43: z.v[13].re v.i[13].re v.i[13].im
 eq 44: z.v[1].im v.i[1].im v.i[1].re
 eq 45: z.v[2].im v.i[2].im v.i[2].re
 eq 46: z.v[3].im v.i[3].im v.i[3].re
 eq 47: z.v[4].im v.i[4].im v.i[4].re
 eq 48: z.v[5].im v.i[5].im v.i[5].re
 eq 49: z.v[6].im v.i[6].im v.i[6].re
 eq 50: z.v[7].im v.i[7].im v.i[7].re
 eq 51: z.v[8].im v.i[8].im v.i[8].re
 eq 52: z.v[9].im v.i[9].im v.i[9].re
 eq 53: z.v[10].im v.i[10].im v.i[10].re
 eq 54: z.v[11].im v.i[11].im v.i[11].re
 eq 55: z.v[12].im v.i[12].im v.i[12].re
 eq 56: z.v[13].im v.i[13].im v.i[13].re
 eq 57: der(v.theta) z.omega
 eq 58: z.v[1].re z1.v[1].re
 eq 59: currentSensor.iMag[1] currentSensor.i[1].re currentSensor.i[1].im
 eq 60: currentSensor.iMag[2] currentSensor.i[2].re currentSensor.i[2].im
 eq 61: currentSensor.iMag[3] currentSensor.i[3].re currentSensor.i[3].im
 eq 62: currentSensor.iMag[4] currentSensor.i[4].re currentSensor.i[4].im
 eq 63: currentSensor.iMag[5] currentSensor.i[5].re currentSensor.i[5].im
 eq 64: currentSensor.iMag[6] currentSensor.i[6].re currentSensor.i[6].im
 eq 65: currentSensor.iMag[7] currentSensor.i[7].re currentSensor.i[7].im
 eq 66: currentSensor.iMag[8] currentSensor.i[8].re currentSensor.i[8].im
 eq 67: currentSensor.iMag[9] currentSensor.i[9].re currentSensor.i[9].im
 eq 68: currentSensor.iMag[10] currentSensor.i[10].re currentSensor.i[10].im
 eq 69: currentSensor.iMag[11] currentSensor.i[11].re currentSensor.i[11].im
 eq 70: currentSensor.iMag[12] currentSensor.i[12].re currentSensor.i[12].im
 eq 71: currentSensor.iMag[13] currentSensor.i[13].re currentSensor.i[13].im
 eq 72: der(v.theta) currentSensor.omega
 eq 73: z1.v[1].re z1.i[1].re z1.i[1].im
 eq 74: z.v[2].re z1.i[2].re z1.i[2].im
 eq 75: z.v[3].re z1.i[3].re z1.i[3].im
 eq 76: z.v[4].re z1.i[4].re z1.i[4].im
 eq 77: z.v[5].re z1.i[5].re z1.i[5].im
 eq 78: z.v[6].re z1.i[6].re z1.i[6].im
 eq 79: z.v[7].re z1.i[7].re z1.i[7].im
 eq 80: z.v[8].re z1.i[8].re z1.i[8].im
 eq 81: z.v[9].re z1.i[9].re z1.i[9].im
 eq 82: z.v[10].re z1.i[10].re z1.i[10].im
 eq 83: z.v[11].re z1.i[11].re z1.i[11].im
 eq 84: z.v[12].re z1.i[12].re z1.i[12].im
 eq 85: z.v[13].re z1.i[13].re z1.i[13].im
 eq 86: z.v[1].im z1.i[1].im z1.i[1].re
 eq 87: z.v[2].im z1.i[2].im z1.i[2].re
 eq 88: z.v[3].im z1.i[3].im z1.i[3].re
 eq 89: z.v[4].im z1.i[4].im z1.i[4].re
 eq 90: z.v[5].im z1.i[5].im z1.i[5].re
 eq 91: z.v[6].im z1.i[6].im z1.i[6].re
 eq 92: z.v[7].im z1.i[7].im z1.i[7].re
 eq 93: z.v[8].im z1.i[8].im z1.i[8].re
 eq 94: z.v[9].im z1.i[9].im z1.i[9].re
 eq 95: z.v[10].im z1.i[10].im z1.i[10].re
 eq 96: z.v[11].im z1.i[11].im z1.i[11].re
 eq 97: z.v[12].im z1.i[12].im z1.i[12].re
 eq 98: z.v[13].im z1.i[13].im z1.i[13].re
 eq 99: der(v.theta) z1.omega
 eq 100: currentSensor.i[1].im v.i[1].im z1.i[1].im
 eq 101: currentSensor.i[2].im v.i[2].im z1.i[2].im
 eq 102: currentSensor.i[3].im v.i[3].im z1.i[3].im
 eq 103: currentSensor.i[4].im v.i[4].im z1.i[4].im
 eq 104: currentSensor.i[5].im v.i[5].im z1.i[5].im
 eq 105: currentSensor.i[6].im v.i[6].im z1.i[6].im
 eq 106: currentSensor.i[7].im v.i[7].im z1.i[7].im
 eq 107: currentSensor.i[8].im v.i[8].im z1.i[8].im
 eq 108: currentSensor.i[9].im v.i[9].im z1.i[9].im
 eq 109: currentSensor.i[10].im v.i[10].im z1.i[10].im
 eq 110: currentSensor.i[11].im v.i[11].im z1.i[11].im
 eq 111: currentSensor.i[12].im v.i[12].im z1.i[12].im
 eq 112: currentSensor.i[13].im v.i[13].im z1.i[13].im
 eq 113: currentSensor.i[1].re v.i[1].re z1.i[1].re
 eq 114: currentSensor.i[2].re v.i[2].re z1.i[2].re
 eq 115: currentSensor.i[3].re v.i[3].re z1.i[3].re
 eq 116: currentSensor.i[4].re v.i[4].re z1.i[4].re
 eq 117: currentSensor.i[5].re v.i[5].re z1.i[5].re
 eq 118: currentSensor.i[6].re v.i[6].re z1.i[6].re
 eq 119: currentSensor.i[7].re v.i[7].re z1.i[7].re
 eq 120: currentSensor.i[8].re v.i[8].re z1.i[8].re
 eq 121: currentSensor.i[9].re v.i[9].re z1.i[9].re
 eq 122: currentSensor.i[10].re v.i[10].re z1.i[10].re
 eq 123: currentSensor.i[11].re v.i[11].re z1.i[11].re
 eq 124: currentSensor.i[12].re v.i[12].re z1.i[12].re
 eq 125: currentSensor.i[13].re v.i[13].re z1.i[13].re
 eq 126: v.P1 v.i[1].re
 eq 127: v.iMag[1] v.i[1].re v.i[1].im
 eq 128: v.iMag[2] v.i[2].re v.i[2].im
 eq 129: v.iMag[3] v.i[3].re v.i[3].im
 eq 130: v.iMag[4] v.i[4].re v.i[4].im
 eq 131: v.iMag[5] v.i[5].re v.i[5].im
 eq 132: v.iMag[6] v.i[6].re v.i[6].im
 eq 133: v.iMag[7] v.i[7].re v.i[7].im
 eq 134: v.iMag[8] v.i[8].re v.i[8].im
 eq 135: v.iMag[9] v.i[9].re v.i[9].im
 eq 136: v.iMag[10] v.i[10].re v.i[10].im
 eq 137: v.iMag[11] v.i[11].re v.i[11].im
 eq 138: v.iMag[12] v.i[12].re v.i[12].im
 eq 139: v.iMag[13] v.i[13].re v.i[13].im
 eq 140: v.iArg[1] v.i[1].im v.i[1].re
 eq 141: v.iArg[2] v.i[2].im v.i[2].re
 eq 142: v.iArg[3] v.i[3].im v.i[3].re
 eq 143: v.iArg[4] v.i[4].im v.i[4].re
 eq 144: v.iArg[5] v.i[5].im v.i[5].re
 eq 145: v.iArg[6] v.i[6].im v.i[6].re
 eq 146: v.iArg[7] v.i[7].im v.i[7].re
 eq 147: v.iArg[8] v.i[8].im v.i[8].re
 eq 148: v.iArg[9] v.i[9].im v.i[9].re
 eq 149: v.iArg[10] v.i[10].im v.i[10].re
 eq 150: v.iArg[11] v.i[11].im v.i[11].re
 eq 151: v.iArg[12] v.i[12].im v.i[12].re
 eq 152: v.iArg[13] v.i[13].im v.i[13].re
 eq 153: laptop_adapter.I_mag[1] currentSensor.i[1].re currentSensor.i[1].im
 eq 154: laptop_adapter.I_mag[2] currentSensor.i[2].re currentSensor.i[2].im
 eq 155: laptop_adapter.I_mag[3] currentSensor.i[3].re currentSensor.i[3].im
 eq 156: laptop_adapter.I_mag[4] currentSensor.i[4].re currentSensor.i[4].im
 eq 157: laptop_adapter.I_mag[5] currentSensor.i[5].re currentSensor.i[5].im
 eq 158: laptop_adapter.I_mag[6] currentSensor.i[6].re currentSensor.i[6].im
 eq 159: laptop_adapter.I_mag[7] currentSensor.i[7].re currentSensor.i[7].im
 eq 160: laptop_adapter.I_mag[8] currentSensor.i[8].re currentSensor.i[8].im
 eq 161: laptop_adapter.I_mag[9] currentSensor.i[9].re currentSensor.i[9].im
 eq 162: laptop_adapter.I_mag[10] currentSensor.i[10].re currentSensor.i[10].im
 eq 163: laptop_adapter.I_mag[11] currentSensor.i[11].re currentSensor.i[11].im
 eq 164: laptop_adapter.I_mag[12] currentSensor.i[12].re currentSensor.i[12].im
 eq 165: laptop_adapter.I_mag[13] currentSensor.i[13].re currentSensor.i[13].im
 eq 166: laptop_adapter.V_mag[1] z1.v[1].re z.v[1].im
 eq 167: laptop_adapter.V_mag[2] z.v[2].re z.v[2].im
 eq 168: laptop_adapter.V_mag[3] z.v[3].re z.v[3].im
 eq 169: laptop_adapter.V_mag[4] z.v[4].re z.v[4].im
 eq 170: laptop_adapter.V_mag[5] z.v[5].re z.v[5].im
 eq 171: laptop_adapter.V_mag[6] z.v[6].re z.v[6].im
 eq 172: laptop_adapter.V_mag[7] z.v[7].re z.v[7].im
 eq 173: laptop_adapter.V_mag[8] z.v[8].re z.v[8].im
 eq 174: laptop_adapter.V_mag[9] z.v[9].re z.v[9].im
 eq 175: laptop_adapter.V_mag[10] z.v[10].re z.v[10].im
 eq 176: laptop_adapter.V_mag[11] z.v[11].re z.v[11].im
 eq 177: laptop_adapter.V_mag[12] z.v[12].re z.v[12].im
 eq 178: laptop_adapter.V_mag[13] z.v[13].re z.v[13].im
 eq 179: laptop_adapter.V_arg[2] z.v[2].im z.v[2].re
 eq 180: laptop_adapter.V_arg[3] z.v[3].im z.v[3].re
 eq 181: laptop_adapter.V_arg[4] z.v[4].im z.v[4].re
 eq 182: laptop_adapter.V_arg[5] z.v[5].im z.v[5].re
 eq 183: laptop_adapter.V_arg[6] z.v[6].im z.v[6].re
 eq 184: laptop_adapter.V_arg[7] z.v[7].im z.v[7].re
 eq 185: laptop_adapter.V_arg[8] z.v[8].im z.v[8].re
 eq 186: laptop_adapter.V_arg[9] z.v[9].im z.v[9].re
 eq 187: laptop_adapter.V_arg[10] z.v[10].im z.v[10].re
 eq 188: laptop_adapter.V_arg[11] z.v[11].im z.v[11].re
 eq 189: laptop_adapter.V_arg[12] z.v[12].im z.v[12].re
 eq 190: laptop_adapter.V_arg[13] z.v[13].im z.v[13].re
 eq 191: laptop_adapter.magScale currentSensor.i[1].re currentSensor.i[1].im
 eq 192: laptop_adapter.argAdj[1] laptop_adapter.V_arg[1]
 eq 193: laptop_adapter.argAdj[2] laptop_adapter.V_arg[1]
 eq 194: laptop_adapter.argAdj[3] laptop_adapter.V_arg[1]
 eq 195: laptop_adapter.argAdj[4] laptop_adapter.V_arg[1]
 eq 196: laptop_adapter.argAdj[5] laptop_adapter.V_arg[1]
 eq 197: laptop_adapter.argAdj[6] laptop_adapter.V_arg[1]
 eq 198: laptop_adapter.argAdj[7] laptop_adapter.V_arg[1]
 eq 199: laptop_adapter.argAdj[8] laptop_adapter.V_arg[1]
 eq 200: laptop_adapter.argAdj[9] laptop_adapter.V_arg[1]
 eq 201: laptop_adapter.argAdj[10] laptop_adapter.V_arg[1]
 eq 202: laptop_adapter.argAdj[11] laptop_adapter.V_arg[1]
 eq 203: laptop_adapter.argAdj[12] laptop_adapter.V_arg[1]
 eq 204: laptop_adapter.a[1].re laptop_adapter.argAdj[1]
 eq 205: laptop_adapter.a[1].im laptop_adapter.argAdj[1]
 eq 206: laptop_adapter.a[2].re laptop_adapter.argAdj[2]
 eq 207: laptop_adapter.a[2].im laptop_adapter.argAdj[2]
 eq 208: laptop_adapter.a[3].re laptop_adapter.argAdj[3]
 eq 209: laptop_adapter.a[3].im laptop_adapter.argAdj[3]
 eq 210: laptop_adapter.a[4].re laptop_adapter.argAdj[4]
 eq 211: laptop_adapter.a[4].im laptop_adapter.argAdj[4]
 eq 212: laptop_adapter.a[5].re laptop_adapter.argAdj[5]
 eq 213: laptop_adapter.a[5].im laptop_adapter.argAdj[5]
 eq 214: laptop_adapter.a[6].re laptop_adapter.argAdj[6]
 eq 215: laptop_adapter.a[6].im laptop_adapter.argAdj[6]
 eq 216: laptop_adapter.a[7].re laptop_adapter.argAdj[7]
 eq 217: laptop_adapter.a[7].im laptop_adapter.argAdj[7]
 eq 218: laptop_adapter.a[8].re laptop_adapter.argAdj[8]
 eq 219: laptop_adapter.a[8].im laptop_adapter.argAdj[8]
 eq 220: laptop_adapter.a[9].re laptop_adapter.argAdj[9]
 eq 221: laptop_adapter.a[9].im laptop_adapter.argAdj[9]
 eq 222: laptop_adapter.a[10].re laptop_adapter.argAdj[10]
 eq 223: laptop_adapter.a[10].im laptop_adapter.argAdj[10]
 eq 224: laptop_adapter.a[11].re laptop_adapter.argAdj[11]
 eq 225: laptop_adapter.a[11].im laptop_adapter.argAdj[11]
 eq 226: laptop_adapter.a[12].re laptop_adapter.argAdj[12]
 eq 227: laptop_adapter.a[12].im laptop_adapter.argAdj[12]
 eq 228: laptop_adapter.c[1] laptop_adapter.magScale
 eq 229: laptop_adapter.c[2] laptop_adapter.magScale
 eq 230: laptop_adapter.c[3] laptop_adapter.magScale
 eq 231: laptop_adapter.c[4] laptop_adapter.magScale
 eq 232: laptop_adapter.c[5] laptop_adapter.magScale
 eq 233: laptop_adapter.c[6] laptop_adapter.magScale
 eq 234: laptop_adapter.c[7] laptop_adapter.magScale
 eq 235: laptop_adapter.c[8] laptop_adapter.magScale
 eq 236: laptop_adapter.c[9] laptop_adapter.magScale
 eq 237: laptop_adapter.c[10] laptop_adapter.magScale
 eq 238: laptop_adapter.c[11] laptop_adapter.magScale
 eq 239: laptop_adapter.c[12] laptop_adapter.magScale
 eq 240: z.vFundAbs z.v[1].re z.v[1].im
 eq 241: z.vFundArg z.v[1].im z.v[1].re
 eq 242: z.iFundAbs v.i[1].re v.i[1].im
 eq 243: z.iFundArg v.i[1].im v.i[1].re
 eq 244: z1.vFundAbs z1.v[1].re z.v[1].im
 eq 245: z1.iFundAbs z1.i[1].re z1.i[1].im
 eq 246: z1.iFundArg z1.i[1].im z1.i[1].re
 eq 247: currentSensor.iArg[1] currentSensor.i[1].im currentSensor.i[1].re
 eq 248: currentSensor.iArg[2] currentSensor.i[2].im currentSensor.i[2].re
 eq 249: currentSensor.iArg[3] currentSensor.i[3].im currentSensor.i[3].re
 eq 250: currentSensor.iArg[4] currentSensor.i[4].im currentSensor.i[4].re
 eq 251: currentSensor.iArg[5] currentSensor.i[5].im currentSensor.i[5].re
 eq 252: currentSensor.iArg[6] currentSensor.i[6].im currentSensor.i[6].re
 eq 253: currentSensor.iArg[7] currentSensor.i[7].im currentSensor.i[7].re
 eq 254: currentSensor.iArg[8] currentSensor.i[8].im currentSensor.i[8].re
 eq 255: currentSensor.iArg[9] currentSensor.i[9].im currentSensor.i[9].re
 eq 256: currentSensor.iArg[10] currentSensor.i[10].im currentSensor.i[10].re
 eq 257: currentSensor.iArg[11] currentSensor.i[11].im currentSensor.i[11].re
 eq 258: currentSensor.iArg[12] currentSensor.i[12].im currentSensor.i[12].re
 eq 259: currentSensor.iArg[13] currentSensor.i[13].im currentSensor.i[13].re
 eq 260: laptop_adapter.V_arg[1] z.v[1].im z1.v[1].re

Variable dependencies:
Oh dear, the model has way to many variables (606)!
Current limit is set to 500, you can change this by changing the option 'diagnostics_limit'.


Connection sets: 240 sets
Connection set (flow): {ground1.pin.iIm[1:13] (i), v.pin_n.iIm[1:13] (i)}
Connection set (flow): {ground1.pin.iRe[1:13] (i), v.pin_n.iRe[1:13] (i)}
Connection set (potential): {ground1.pin.v[1].im (i), v.pin_n.v[1].im (i)}
Connection set (potential): {ground1.pin.v[1].re (i), v.pin_n.v[1].re (i)}
Connection set (potential): {ground1.pin.v[2].im (i), v.pin_n.v[2].im (i)}
Connection set (potential): {ground1.pin.v[2].re (i), v.pin_n.v[2].re (i)}
Connection set (potential): {ground1.pin.v[3].im (i), v.pin_n.v[3].im (i)}
Connection set (potential): {ground1.pin.v[3].re (i), v.pin_n.v[3].re (i)}
Connection set (potential): {ground1.pin.v[4].im (i), v.pin_n.v[4].im (i)}
Connection set (potential): {ground1.pin.v[4].re (i), v.pin_n.v[4].re (i)}
Connection set (potential): {ground1.pin.v[5].im (i), v.pin_n.v[5].im (i)}
Connection set (potential): {ground1.pin.v[5].re (i), v.pin_n.v[5].re (i)}
Connection set (potential): {ground1.pin.v[6].im (i), v.pin_n.v[6].im (i)}
Connection set (potential): {ground1.pin.v[6].re (i), v.pin_n.v[6].re (i)}
Connection set (potential): {ground1.pin.v[7].im (i), v.pin_n.v[7].im (i)}
Connection set (potential): {ground1.pin.v[7].re (i), v.pin_n.v[7].re (i)}
Connection set (potential): {ground1.pin.v[8].im (i), v.pin_n.v[8].im (i)}
Connection set (potential): {ground1.pin.v[8].re (i), v.pin_n.v[8].re (i)}
Connection set (potential): {ground1.pin.v[9].im (i), v.pin_n.v[9].im (i)}
Connection set (potential): {ground1.pin.v[9].re (i), v.pin_n.v[9].re (i)}
Connection set (potential): {ground1.pin.v[10].im (i), v.pin_n.v[10].im (i)}
Connection set (potential): {ground1.pin.v[10].re (i), v.pin_n.v[10].re (i)}
Connection set (potential): {ground1.pin.v[11].im (i), v.pin_n.v[11].im (i)}
Connection set (potential): {ground1.pin.v[11].re (i), v.pin_n.v[11].re (i)}
Connection set (potential): {ground1.pin.v[12].im (i), v.pin_n.v[12].im (i)}
Connection set (potential): {ground1.pin.v[12].re (i), v.pin_n.v[12].re (i)}
Connection set (potential): {ground1.pin.v[13].im (i), v.pin_n.v[13].im (i)}
Connection set (potential): {ground1.pin.v[13].re (i), v.pin_n.v[13].re (i)}
Connection set (flow): {ground2.p.i (i), laptop.n.i (i), laptop_adapter.pin_n.i (i)}
Connection set (potential): {ground2.p.v (i), laptop.n.v (i), laptop_adapter.pin_n.v (i)}
Connection set (flow): {laptop.p.i (i), laptop_adapter.pin_p.i (i)}
Connection set (potential): {laptop.p.v (i), laptop_adapter.pin_p.v (i)}
Connection set (flow): {v.pin_p.iIm[1:13] (i), z.pin_p.iIm[1:13] (i)}
Connection set (flow): {v.pin_p.iRe[1:13] (i), z.pin_p.iRe[1:13] (i)}
Connection set (potential): {v.pin_p.v[1].im (i), z.pin_p.v[1].im (i)}
Connection set (potential): {v.pin_p.v[1].re (i), z.pin_p.v[1].re (i)}
Connection set (potential): {v.pin_p.v[2].im (i), z.pin_p.v[2].im (i)}
Connection set (potential): {v.pin_p.v[2].re (i), z.pin_p.v[2].re (i)}
Connection set (potential): {v.pin_p.v[3].im (i), z.pin_p.v[3].im (i)}
Connection set (potential): {v.pin_p.v[3].re (i), z.pin_p.v[3].re (i)}
Connection set (potential): {v.pin_p.v[4].im (i), z.pin_p.v[4].im (i)}
Connection set (potential): {v.pin_p.v[4].re (i), z.pin_p.v[4].re (i)}
Connection set (potential): {v.pin_p.v[5].im (i), z.pin_p.v[5].im (i)}
Connection set (potential): {v.pin_p.v[5].re (i), z.pin_p.v[5].re (i)}
Connection set (potential): {v.pin_p.v[6].im (i), z.pin_p.v[6].im (i)}
Connection set (potential): {v.pin_p.v[6].re (i), z.pin_p.v[6].re (i)}
Connection set (potential): {v.pin_p.v[7].im (i), z.pin_p.v[7].im (i)}
Connection set (potential): {v.pin_p.v[7].re (i), z.pin_p.v[7].re (i)}
Connection set (potential): {v.pin_p.v[8].im (i), z.pin_p.v[8].im (i)}
Connection set (potential): {v.pin_p.v[8].re (i), z.pin_p.v[8].re (i)}
Connection set (potential): {v.pin_p.v[9].im (i), z.pin_p.v[9].im (i)}
Connection set (potential): {v.pin_p.v[9].re (i), z.pin_p.v[9].re (i)}
Connection set (potential): {v.pin_p.v[10].im (i), z.pin_p.v[10].im (i)}
Connection set (potential): {v.pin_p.v[10].re (i), z.pin_p.v[10].re (i)}
Connection set (potential): {v.pin_p.v[11].im (i), z.pin_p.v[11].im (i)}
Connection set (potential): {v.pin_p.v[11].re (i), z.pin_p.v[11].re (i)}
Connection set (potential): {v.pin_p.v[12].im (i), z.pin_p.v[12].im (i)}
Connection set (potential): {v.pin_p.v[12].re (i), z.pin_p.v[12].re (i)}
Connection set (potential): {v.pin_p.v[13].im (i), z.pin_p.v[13].im (i)}
Connection set (potential): {v.pin_p.v[13].re (i), z.pin_p.v[13].re (i)}
Connection set (flow): {ground.pin.iIm[1:13] (i), laptop_adapter.hPin_N.iIm[1:13] (i)}
Connection set (flow): {ground.pin.iRe[1:13] (i), laptop_adapter.hPin_N.iRe[1:13] (i)}
Connection set (potential): {ground.pin.v[1].im (i), laptop_adapter.hPin_N.v[1].im (i)}
Connection set (potential): {ground.pin.v[1].re (i), laptop_adapter.hPin_N.v[1].re (i)}
Connection set (potential): {ground.pin.v[2].im (i), laptop_adapter.hPin_N.v[2].im (i)}
Connection set (potential): {ground.pin.v[2].re (i), laptop_adapter.hPin_N.v[2].re (i)}
Connection set (potential): {ground.pin.v[3].im (i), laptop_adapter.hPin_N.v[3].im (i)}
Connection set (potential): {ground.pin.v[3].re (i), laptop_adapter.hPin_N.v[3].re (i)}
Connection set (potential): {ground.pin.v[4].im (i), laptop_adapter.hPin_N.v[4].im (i)}
Connection set (potential): {ground.pin.v[4].re (i), laptop_adapter.hPin_N.v[4].re (i)}
Connection set (potential): {ground.pin.v[5].im (i), laptop_adapter.hPin_N.v[5].im (i)}
Connection set (potential): {ground.pin.v[5].re (i), laptop_adapter.hPin_N.v[5].re (i)}
Connection set (potential): {ground.pin.v[6].im (i), laptop_adapter.hPin_N.v[6].im (i)}
Connection set (potential): {ground.pin.v[6].re (i), laptop_adapter.hPin_N.v[6].re (i)}
Connection set (potential): {ground.pin.v[7].im (i), laptop_adapter.hPin_N.v[7].im (i)}
Connection set (potential): {ground.pin.v[7].re (i), laptop_adapter.hPin_N.v[7].re (i)}
Connection set (potential): {ground.pin.v[8].im (i), laptop_adapter.hPin_N.v[8].im (i)}
Connection set (potential): {ground.pin.v[8].re (i), laptop_adapter.hPin_N.v[8].re (i)}
Connection set (potential): {ground.pin.v[9].im (i), laptop_adapter.hPin_N.v[9].im (i)}
Connection set (potential): {ground.pin.v[9].re (i), laptop_adapter.hPin_N.v[9].re (i)}
Connection set (potential): {ground.pin.v[10].im (i), laptop_adapter.hPin_N.v[10].im (i)}
Connection set (potential): {ground.pin.v[10].re (i), laptop_adapter.hPin_N.v[10].re (i)}
Connection set (potential): {ground.pin.v[11].im (i), laptop_adapter.hPin_N.v[11].im (i)}
Connection set (potential): {ground.pin.v[11].re (i), laptop_adapter.hPin_N.v[11].re (i)}
Connection set (potential): {ground.pin.v[12].im (i), laptop_adapter.hPin_N.v[12].im (i)}
Connection set (potential): {ground.pin.v[12].re (i), laptop_adapter.hPin_N.v[12].re (i)}
Connection set (potential): {ground.pin.v[13].im (i), laptop_adapter.hPin_N.v[13].im (i)}
Connection set (potential): {ground.pin.v[13].re (i), laptop_adapter.hPin_N.v[13].re (i)}
Connection set (flow): {currentSensor.pin_p.iIm[1:13] (i), z.pin_n.iIm[1:13] (i), z1.pin_p.iIm[1:13] (i)}
Connection set (flow): {currentSensor.pin_p.iRe[1:13] (i), z.pin_n.iRe[1:13] (i), z1.pin_p.iRe[1:13] (i)}
Connection set (potential): {currentSensor.pin_p.v[1].im (i), z.pin_n.v[1].im (i), z1.pin_p.v[1].im (i)}
Connection set (potential): {currentSensor.pin_p.v[1].re (i), z.pin_n.v[1].re (i), z1.pin_p.v[1].re (i)}
Connection set (potential): {currentSensor.pin_p.v[2].im (i), z.pin_n.v[2].im (i), z1.pin_p.v[2].im (i)}
Connection set (potential): {currentSensor.pin_p.v[2].re (i), z.pin_n.v[2].re (i), z1.pin_p.v[2].re (i)}
Connection set (potential): {currentSensor.pin_p.v[3].im (i), z.pin_n.v[3].im (i), z1.pin_p.v[3].im (i)}
Connection set (potential): {currentSensor.pin_p.v[3].re (i), z.pin_n.v[3].re (i), z1.pin_p.v[3].re (i)}
Connection set (potential): {currentSensor.pin_p.v[4].im (i), z.pin_n.v[4].im (i), z1.pin_p.v[4].im (i)}
Connection set (potential): {currentSensor.pin_p.v[4].re (i), z.pin_n.v[4].re (i), z1.pin_p.v[4].re (i)}
Connection set (potential): {currentSensor.pin_p.v[5].im (i), z.pin_n.v[5].im (i), z1.pin_p.v[5].im (i)}
Connection set (potential): {currentSensor.pin_p.v[5].re (i), z.pin_n.v[5].re (i), z1.pin_p.v[5].re (i)}
Connection set (potential): {currentSensor.pin_p.v[6].im (i), z.pin_n.v[6].im (i), z1.pin_p.v[6].im (i)}
Connection set (potential): {currentSensor.pin_p.v[6].re (i), z.pin_n.v[6].re (i), z1.pin_p.v[6].re (i)}
Connection set (potential): {currentSensor.pin_p.v[7].im (i), z.pin_n.v[7].im (i), z1.pin_p.v[7].im (i)}
Connection set (potential): {currentSensor.pin_p.v[7].re (i), z.pin_n.v[7].re (i), z1.pin_p.v[7].re (i)}
Connection set (potential): {currentSensor.pin_p.v[8].im (i), z.pin_n.v[8].im (i), z1.pin_p.v[8].im (i)}
Connection set (potential): {currentSensor.pin_p.v[8].re (i), z.pin_n.v[8].re (i), z1.pin_p.v[8].re (i)}
Connection set (potential): {currentSensor.pin_p.v[9].im (i), z.pin_n.v[9].im (i), z1.pin_p.v[9].im (i)}
Connection set (potential): {currentSensor.pin_p.v[9].re (i), z.pin_n.v[9].re (i), z1.pin_p.v[9].re (i)}
Connection set (potential): {currentSensor.pin_p.v[10].im (i), z.pin_n.v[10].im (i), z1.pin_p.v[10].im (i)}
Connection set (potential): {currentSensor.pin_p.v[10].re (i), z.pin_n.v[10].re (i), z1.pin_p.v[10].re (i)}
Connection set (potential): {currentSensor.pin_p.v[11].im (i), z.pin_n.v[11].im (i), z1.pin_p.v[11].im (i)}
Connection set (potential): {currentSensor.pin_p.v[11].re (i), z.pin_n.v[11].re (i), z1.pin_p.v[11].re (i)}
Connection set (potential): {currentSensor.pin_p.v[12].im (i), z.pin_n.v[12].im (i), z1.pin_p.v[12].im (i)}
Connection set (potential): {currentSensor.pin_p.v[12].re (i), z.pin_n.v[12].re (i), z1.pin_p.v[12].re (i)}
Connection set (potential): {currentSensor.pin_p.v[13].im (i), z.pin_n.v[13].im (i), z1.pin_p.v[13].im (i)}
Connection set (potential): {currentSensor.pin_p.v[13].re (i), z.pin_n.v[13].re (i), z1.pin_p.v[13].re (i)}
Connection set (flow): {currentSensor.pin_n.iIm[1:13] (i), laptop_adapter.hPin_P.iIm[1:13] (i)}
Connection set (flow): {currentSensor.pin_n.iRe[1:13] (i), laptop_adapter.hPin_P.iRe[1:13] (i)}
Connection set (potential): {currentSensor.pin_n.v[1].im (i), laptop_adapter.hPin_P.v[1].im (i)}
Connection set (potential): {currentSensor.pin_n.v[1].re (i), laptop_adapter.hPin_P.v[1].re (i)}
Connection set (potential): {currentSensor.pin_n.v[2].im (i), laptop_adapter.hPin_P.v[2].im (i)}
Connection set (potential): {currentSensor.pin_n.v[2].re (i), laptop_adapter.hPin_P.v[2].re (i)}
Connection set (potential): {currentSensor.pin_n.v[3].im (i), laptop_adapter.hPin_P.v[3].im (i)}
Connection set (potential): {currentSensor.pin_n.v[3].re (i), laptop_adapter.hPin_P.v[3].re (i)}
Connection set (potential): {currentSensor.pin_n.v[4].im (i), laptop_adapter.hPin_P.v[4].im (i)}
Connection set (potential): {currentSensor.pin_n.v[4].re (i), laptop_adapter.hPin_P.v[4].re (i)}
Connection set (potential): {currentSensor.pin_n.v[5].im (i), laptop_adapter.hPin_P.v[5].im (i)}
Connection set (potential): {currentSensor.pin_n.v[5].re (i), laptop_adapter.hPin_P.v[5].re (i)}
Connection set (potential): {currentSensor.pin_n.v[6].im (i), laptop_adapter.hPin_P.v[6].im (i)}
Connection set (potential): {currentSensor.pin_n.v[6].re (i), laptop_adapter.hPin_P.v[6].re (i)}
Connection set (potential): {currentSensor.pin_n.v[7].im (i), laptop_adapter.hPin_P.v[7].im (i)}
Connection set (potential): {currentSensor.pin_n.v[7].re (i), laptop_adapter.hPin_P.v[7].re (i)}
Connection set (potential): {currentSensor.pin_n.v[8].im (i), laptop_adapter.hPin_P.v[8].im (i)}
Connection set (potential): {currentSensor.pin_n.v[8].re (i), laptop_adapter.hPin_P.v[8].re (i)}
Connection set (potential): {currentSensor.pin_n.v[9].im (i), laptop_adapter.hPin_P.v[9].im (i)}
Connection set (potential): {currentSensor.pin_n.v[9].re (i), laptop_adapter.hPin_P.v[9].re (i)}
Connection set (potential): {currentSensor.pin_n.v[10].im (i), laptop_adapter.hPin_P.v[10].im (i)}
Connection set (potential): {currentSensor.pin_n.v[10].re (i), laptop_adapter.hPin_P.v[10].re (i)}
Connection set (potential): {currentSensor.pin_n.v[11].im (i), laptop_adapter.hPin_P.v[11].im (i)}
Connection set (potential): {currentSensor.pin_n.v[11].re (i), laptop_adapter.hPin_P.v[11].re (i)}
Connection set (potential): {currentSensor.pin_n.v[12].im (i), laptop_adapter.hPin_P.v[12].im (i)}
Connection set (potential): {currentSensor.pin_n.v[12].re (i), laptop_adapter.hPin_P.v[12].re (i)}
Connection set (potential): {currentSensor.pin_n.v[13].im (i), laptop_adapter.hPin_P.v[13].im (i)}
Connection set (potential): {currentSensor.pin_n.v[13].re (i), laptop_adapter.hPin_P.v[13].re (i)}
Connection set (flow): {ground4.pin.iIm[1:13] (i), z1.pin_n.iIm[1:13] (i)}
Connection set (flow): {ground4.pin.iRe[1:13] (i), z1.pin_n.iRe[1:13] (i)}
Connection set (potential): {ground4.pin.v[1].im (i), z1.pin_n.v[1].im (i)}
Connection set (potential): {ground4.pin.v[1].re (i), z1.pin_n.v[1].re (i)}
Connection set (potential): {ground4.pin.v[2].im (i), z1.pin_n.v[2].im (i)}
Connection set (potential): {ground4.pin.v[2].re (i), z1.pin_n.v[2].re (i)}
Connection set (potential): {ground4.pin.v[3].im (i), z1.pin_n.v[3].im (i)}
Connection set (potential): {ground4.pin.v[3].re (i), z1.pin_n.v[3].re (i)}
Connection set (potential): {ground4.pin.v[4].im (i), z1.pin_n.v[4].im (i)}
Connection set (potential): {ground4.pin.v[4].re (i), z1.pin_n.v[4].re (i)}
Connection set (potential): {ground4.pin.v[5].im (i), z1.pin_n.v[5].im (i)}
Connection set (potential): {ground4.pin.v[5].re (i), z1.pin_n.v[5].re (i)}
Connection set (potential): {ground4.pin.v[6].im (i), z1.pin_n.v[6].im (i)}
Connection set (potential): {ground4.pin.v[6].re (i), z1.pin_n.v[6].re (i)}
Connection set (potential): {ground4.pin.v[7].im (i), z1.pin_n.v[7].im (i)}
Connection set (potential): {ground4.pin.v[7].re (i), z1.pin_n.v[7].re (i)}
Connection set (potential): {ground4.pin.v[8].im (i), z1.pin_n.v[8].im (i)}
Connection set (potential): {ground4.pin.v[8].re (i), z1.pin_n.v[8].re (i)}
Connection set (potential): {ground4.pin.v[9].im (i), z1.pin_n.v[9].im (i)}
Connection set (potential): {ground4.pin.v[9].re (i), z1.pin_n.v[9].re (i)}
Connection set (potential): {ground4.pin.v[10].im (i), z1.pin_n.v[10].im (i)}
Connection set (potential): {ground4.pin.v[10].re (i), z1.pin_n.v[10].re (i)}
Connection set (potential): {ground4.pin.v[11].im (i), z1.pin_n.v[11].im (i)}
Connection set (potential): {ground4.pin.v[11].re (i), z1.pin_n.v[11].re (i)}
Connection set (potential): {ground4.pin.v[12].im (i), z1.pin_n.v[12].im (i)}
Connection set (potential): {ground4.pin.v[12].re (i), z1.pin_n.v[12].re (i)}
Connection set (potential): {ground4.pin.v[13].im (i), z1.pin_n.v[13].im (i)}
Connection set (potential): {ground4.pin.v[13].re (i), z1.pin_n.v[13].re (i)}
Connection set (flow): {laptop_adapter.pin_p.i (o), laptop_adapter.vDC.p.i (i)}
Connection set (potential): {laptop_adapter.pin_p.v (o), laptop_adapter.vDC.p.v (i)}
Connection set (flow): {laptop_adapter.pin_n.i (o), laptop_adapter.vDC.n.i (i)}
Connection set (potential): {laptop_adapter.pin_n.v (o), laptop_adapter.vDC.n.v (i)}
Connection set (flow): {laptop_adapter.hPin_N.iIm[1:13] (o), laptop_adapter.loadBase.pin_n.iIm[1:13] (i)}
Connection set (flow): {laptop_adapter.hPin_N.iRe[1:13] (o), laptop_adapter.loadBase.pin_n.iRe[1:13] (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[1].im (o), laptop_adapter.loadBase.pin_n.v[1].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[1].re (o), laptop_adapter.loadBase.pin_n.v[1].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[2].im (o), laptop_adapter.loadBase.pin_n.v[2].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[2].re (o), laptop_adapter.loadBase.pin_n.v[2].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[3].im (o), laptop_adapter.loadBase.pin_n.v[3].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[3].re (o), laptop_adapter.loadBase.pin_n.v[3].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[4].im (o), laptop_adapter.loadBase.pin_n.v[4].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[4].re (o), laptop_adapter.loadBase.pin_n.v[4].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[5].im (o), laptop_adapter.loadBase.pin_n.v[5].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[5].re (o), laptop_adapter.loadBase.pin_n.v[5].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[6].im (o), laptop_adapter.loadBase.pin_n.v[6].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[6].re (o), laptop_adapter.loadBase.pin_n.v[6].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[7].im (o), laptop_adapter.loadBase.pin_n.v[7].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[7].re (o), laptop_adapter.loadBase.pin_n.v[7].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[8].im (o), laptop_adapter.loadBase.pin_n.v[8].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[8].re (o), laptop_adapter.loadBase.pin_n.v[8].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[9].im (o), laptop_adapter.loadBase.pin_n.v[9].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[9].re (o), laptop_adapter.loadBase.pin_n.v[9].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[10].im (o), laptop_adapter.loadBase.pin_n.v[10].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[10].re (o), laptop_adapter.loadBase.pin_n.v[10].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[11].im (o), laptop_adapter.loadBase.pin_n.v[11].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[11].re (o), laptop_adapter.loadBase.pin_n.v[11].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[12].im (o), laptop_adapter.loadBase.pin_n.v[12].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[12].re (o), laptop_adapter.loadBase.pin_n.v[12].re (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[13].im (o), laptop_adapter.loadBase.pin_n.v[13].im (i)}
Connection set (potential): {laptop_adapter.hPin_N.v[13].re (o), laptop_adapter.loadBase.pin_n.v[13].re (i)}
Connection set (flow): {laptop_adapter.hPin_P.iIm[1:13] (o), laptop_adapter.loadBase.pin_p.iIm[1:13] (i)}
Connection set (flow): {laptop_adapter.hPin_P.iRe[1:13] (o), laptop_adapter.loadBase.pin_p.iRe[1:13] (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[1].im (o), laptop_adapter.loadBase.pin_p.v[1].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[1].re (o), laptop_adapter.loadBase.pin_p.v[1].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[2].im (o), laptop_adapter.loadBase.pin_p.v[2].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[2].re (o), laptop_adapter.loadBase.pin_p.v[2].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[3].im (o), laptop_adapter.loadBase.pin_p.v[3].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[3].re (o), laptop_adapter.loadBase.pin_p.v[3].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[4].im (o), laptop_adapter.loadBase.pin_p.v[4].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[4].re (o), laptop_adapter.loadBase.pin_p.v[4].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[5].im (o), laptop_adapter.loadBase.pin_p.v[5].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[5].re (o), laptop_adapter.loadBase.pin_p.v[5].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[6].im (o), laptop_adapter.loadBase.pin_p.v[6].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[6].re (o), laptop_adapter.loadBase.pin_p.v[6].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[7].im (o), laptop_adapter.loadBase.pin_p.v[7].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[7].re (o), laptop_adapter.loadBase.pin_p.v[7].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[8].im (o), laptop_adapter.loadBase.pin_p.v[8].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[8].re (o), laptop_adapter.loadBase.pin_p.v[8].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[9].im (o), laptop_adapter.loadBase.pin_p.v[9].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[9].re (o), laptop_adapter.loadBase.pin_p.v[9].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[10].im (o), laptop_adapter.loadBase.pin_p.v[10].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[10].re (o), laptop_adapter.loadBase.pin_p.v[10].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[11].im (o), laptop_adapter.loadBase.pin_p.v[11].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[11].re (o), laptop_adapter.loadBase.pin_p.v[11].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[12].im (o), laptop_adapter.loadBase.pin_p.v[12].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[12].re (o), laptop_adapter.loadBase.pin_p.v[12].re (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[13].im (o), laptop_adapter.loadBase.pin_p.v[13].im (i)}
Connection set (potential): {laptop_adapter.hPin_P.v[13].re (o), laptop_adapter.loadBase.pin_p.v[13].re (i)}
Connection set (potential): {v.pin_p.reference.theta (i), z.pin_p.reference.theta (i)}
Connection set (potential): {currentSensor.pin_p.reference.theta (i), z.pin_n.reference.theta (i), z1.pin_p.reference.theta (i)}
Connection set (potential): {ground1.pin.reference.theta (i), v.pin_n.reference.theta (i)}
Connection set (potential): {currentSensor.pin_n.reference.theta (i), laptop_adapter.hPin_P.reference.theta (i)}
Connection set (potential): {ground4.pin.reference.theta (i), z1.pin_n.reference.theta (i)}
Connection set (potential): {laptop_adapter.hPin_P.reference.theta (o), laptop_adapter.loadBase.pin_p.reference.theta (i)}
Connection set (potential): {laptop_adapter.hPin_N.reference.theta (o), laptop_adapter.loadBase.pin_n.reference.theta (i)}
Connection set (potential): {ground.pin.reference.theta (i), laptop_adapter.hPin_N.reference.theta (i)}

Transformed flattened model:
fclass HPF.Test.Test_Rectifier
 parameter Integer systemDef.hrms[1] = 1 "Harmonics to simulate" /* 1 */;
 parameter Integer systemDef.hrms[2] = 3 "Harmonics to simulate" /* 3 */;
 parameter Integer systemDef.hrms[3] = 5 "Harmonics to simulate" /* 5 */;
 parameter Integer systemDef.hrms[4] = 7 "Harmonics to simulate" /* 7 */;
 parameter Integer systemDef.hrms[5] = 9 "Harmonics to simulate" /* 9 */;
 parameter Integer systemDef.hrms[6] = 11 "Harmonics to simulate" /* 11 */;
 parameter Integer systemDef.hrms[7] = 13 "Harmonics to simulate" /* 13 */;
 parameter Integer systemDef.hrms[8] = 15 "Harmonics to simulate" /* 15 */;
 parameter Integer systemDef.hrms[9] = 17 "Harmonics to simulate" /* 17 */;
 parameter Integer systemDef.hrms[10] = 19 "Harmonics to simulate" /* 19 */;
 parameter Integer systemDef.hrms[11] = 21 "Harmonics to simulate" /* 21 */;
 parameter Integer systemDef.hrms[12] = 23 "Harmonics to simulate" /* 23 */;
 parameter Integer systemDef.hrms[13] = 25 "Harmonics to simulate" /* 25 */;
 structural parameter Integer systemDef.numHrm = 13 "Number of harmonics. (Automatically generated from hrms.)" /* 13 */;
 parameter Modelica.SIunits.Frequency systemDef.fFund = 60 "Fundamental frequency (Hz)" /* 60 */;
 parameter Modelica.SIunits.Frequency systemDef.fs = 10000.0 "Sampling frequency (Hz)" /* 10000.0 */;
 parameter Integer temp_117[1];
 parameter Integer systemDef.numPh = 3 "Number of phases" /* 3 */;
 constant String v.properties.ComponentType = "VoltageSource" "Type of the component";
 structural parameter Real v.vMag[1] = 120 "Voltage Magnitude (Volts rms)" /* 120 */;
 Real v.P1;
 Real v.iMag[1];
 Real v.iMag[2];
 Real v.iMag[3];
 Real v.iMag[4];
 Real v.iMag[5];
 Real v.iMag[6];
 Real v.iMag[7];
 Real v.iMag[8];
 Real v.iMag[9];
 Real v.iMag[10];
 Real v.iMag[11];
 Real v.iMag[12];
 Real v.iMag[13];
 Real v.iArg[1];
 Real v.iArg[2];
 Real v.iArg[3];
 Real v.iArg[4];
 Real v.iArg[5];
 Real v.iArg[6];
 Real v.iArg[7];
 Real v.iArg[8];
 Real v.iArg[9];
 Real v.iArg[10];
 Real v.iArg[11];
 Real v.iArg[12];
 Real v.iArg[13];
 Modelica.SIunits.Angle v.theta(start = 0);
 constant Real v.v[1].re(start = 100) = 120.0 "Real part of complex number";
 constant Real v.v[1].im(start = 100) = 0.0 "Imaginary part of complex number";
 constant Real v.v[2].re(start = 100) = 0 "Real part of complex number";
 Real v.i[1].re(start = 1) "Real part of complex number";
 Real v.i[1].im(start = -1) "Imaginary part of complex number";
 Real v.i[2].re(start = 1) "Real part of complex number";
 Real v.i[2].im(start = -1) "Imaginary part of complex number";
 Real v.i[3].re(start = 1) "Real part of complex number";
 Real v.i[3].im(start = -1) "Imaginary part of complex number";
 Real v.i[4].re(start = 1) "Real part of complex number";
 Real v.i[4].im(start = -1) "Imaginary part of complex number";
 Real v.i[5].re(start = 1) "Real part of complex number";
 Real v.i[5].im(start = -1) "Imaginary part of complex number";
 Real v.i[6].re(start = 1) "Real part of complex number";
 Real v.i[6].im(start = -1) "Imaginary part of complex number";
 Real v.i[7].re(start = 1) "Real part of complex number";
 Real v.i[7].im(start = -1) "Imaginary part of complex number";
 Real v.i[8].re(start = 1) "Real part of complex number";
 Real v.i[8].im(start = -1) "Imaginary part of complex number";
 Real v.i[9].re(start = 1) "Real part of complex number";
 Real v.i[9].im(start = -1) "Imaginary part of complex number";
 Real v.i[10].re(start = 1) "Real part of complex number";
 Real v.i[10].im(start = -1) "Imaginary part of complex number";
 Real v.i[11].re(start = 1) "Real part of complex number";
 Real v.i[11].im(start = -1) "Imaginary part of complex number";
 Real v.i[12].re(start = 1) "Real part of complex number";
 Real v.i[12].im(start = -1) "Imaginary part of complex number";
 Real v.i[13].re(start = 1) "Real part of complex number";
 Real v.i[13].im(start = -1) "Imaginary part of complex number";
 Real v.omega;
 constant String ground1.properties.ComponentType = "Ground" "Type of the component";
 parameter Integer temp_117[2];
 constant String laptop_adapter.properties.ComponentType = "NonlinearLoad" "Type of the component";
 parameter Real temp_118[1,1];
 parameter Real laptop_adapter.V_Rect(start = 0) = 24 "Rectifier DC output" /* 24 */;
 parameter Real temp_118[2,1];
 Real laptop_adapter.loadBase.omega;
 parameter Real temp_118[3,1];
 parameter Real temp_118[4,1];
 Real laptop_adapter.I_mag[1];
 Real laptop_adapter.I_mag[2];
 Real laptop_adapter.I_mag[3];
 Real laptop_adapter.I_mag[4];
 Real laptop_adapter.I_mag[5];
 Real laptop_adapter.I_mag[6];
 Real laptop_adapter.I_mag[7];
 Real laptop_adapter.I_mag[8];
 Real laptop_adapter.I_mag[9];
 Real laptop_adapter.I_mag[10];
 Real laptop_adapter.I_mag[11];
 Real laptop_adapter.I_mag[12];
 Real laptop_adapter.I_mag[13];
 Real laptop_adapter.V_mag[1];
 Real laptop_adapter.V_mag[2];
 Real laptop_adapter.V_mag[3];
 Real laptop_adapter.V_mag[4];
 Real laptop_adapter.V_mag[5];
 Real laptop_adapter.V_mag[6];
 Real laptop_adapter.V_mag[7];
 Real laptop_adapter.V_mag[8];
 Real laptop_adapter.V_mag[9];
 Real laptop_adapter.V_mag[10];
 Real laptop_adapter.V_mag[11];
 Real laptop_adapter.V_mag[12];
 Real laptop_adapter.V_mag[13];
 Real laptop_adapter.V_arg[1];
 Real laptop_adapter.V_arg[2];
 Real laptop_adapter.V_arg[3];
 Real laptop_adapter.V_arg[4];
 Real laptop_adapter.V_arg[5];
 Real laptop_adapter.V_arg[6];
 Real laptop_adapter.V_arg[7];
 Real laptop_adapter.V_arg[8];
 Real laptop_adapter.V_arg[9];
 Real laptop_adapter.V_arg[10];
 Real laptop_adapter.V_arg[11];
 Real laptop_adapter.V_arg[12];
 Real laptop_adapter.V_arg[13];
 parameter Real temp_118[5,1];
 parameter Real temp_118[6,1];
 structural (loadResource) parameter String laptop_adapter.modelFileName = "HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" "Rectifier harmonic model mat file" /* "HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" */;
 structural parameter String laptop_adapter.resourceRetValue = "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" /* "/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat" */;
 structural parameter Integer laptop_adapter.matDim[1] = 64 /* 64 */;
 structural parameter Integer laptop_adapter.matDim[2] = 1 /* 1 */;
 structural parameter Real laptop_adapter.magDataMat[1,1] = 1.0 /* 1.0 */;
 structural parameter Real laptop_adapter.magDataMat[2,1] = 0.9421865565594479 /* 0.9421865565594479 */;
 structural parameter Real laptop_adapter.magDataMat[3,1] = 0.846418595204449 /* 0.846418595204449 */;
 structural parameter Real laptop_adapter.magDataMat[4,1] = 0.7174634219299512 /* 0.7174634219299512 */;
 structural parameter Real laptop_adapter.magDataMat[5,1] = 0.568269396387493 /* 0.568269396387493 */;
 structural parameter Real laptop_adapter.magDataMat[6,1] = 0.4142504288040016 /* 0.4142504288040016 */;
 structural parameter Real laptop_adapter.magDataMat[7,1] = 0.2722289795439818 /* 0.2722289795439818 */;
 structural parameter Real laptop_adapter.magDataMat[8,1] = 0.1499700094183941 /* 0.1499700094183941 */;
 structural parameter Real laptop_adapter.magDataMat[9,1] = 0.060532358446546 /* 0.060532358446546 */;
 structural parameter Real laptop_adapter.magDataMat[10,1] = 0.0286742846032879 /* 0.0286742846032879 */;
 structural parameter Real laptop_adapter.magDataMat[11,1] = 0.0500554183998412 /* 0.0500554183998412 */;
 structural parameter Real laptop_adapter.magDataMat[12,1] = 0.0574038038345626 /* 0.0574038038345626 */;
 structural parameter Real laptop_adapter.magDataMat[13,1] = 0.0490634253296239 /* 0.0490634253296239 */;
 structural parameter Real laptop_adapter.magDataMat[14,1] = 0.0324675024798272 /* 0.0324675024798272 */;
 structural parameter Real laptop_adapter.magDataMat[15,1] = 0.0146979293649181 /* 0.0146979293649181 */;
 structural parameter Real laptop_adapter.magDataMat[16,1] = 0.0073091525847841 /* 0.0073091525847841 */;
 structural parameter Real laptop_adapter.magDataMat[17,1] = 0.0133897682494032 /* 0.0133897682494032 */;
 structural parameter Real laptop_adapter.magDataMat[18,1] = 0.0149525422599743 /* 0.0149525422599743 */;
 structural parameter Real laptop_adapter.magDataMat[19,1] = 0.0124074456883277 /* 0.0124074456883277 */;
 structural parameter Real laptop_adapter.magDataMat[20,1] = 0.0064342667493201 /* 0.0064342667493201 */;
 structural parameter Real laptop_adapter.magDataMat[21,1] = 0.0042631791151444 /* 0.0042631791151444 */;
 structural parameter Real laptop_adapter.magDataMat[22,1] = 0.0071677605312837 /* 0.0071677605312837 */;
 structural parameter Real laptop_adapter.magDataMat[23,1] = 0.0091300920177219 /* 0.0091300920177219 */;
 structural parameter Real laptop_adapter.magDataMat[24,1] = 0.0082848764712874 /* 0.0082848764712874 */;
 structural parameter Real laptop_adapter.magDataMat[25,1] = 0.0048054384993071 /* 0.0048054384993071 */;
 structural parameter Real laptop_adapter.magDataMat[26,1] = 0.0012086520647777 /* 0.0012086520647777 */;
 structural parameter Real laptop_adapter.magDataMat[27,1] = 0.0027696713010395 /* 0.0027696713010395 */;
 structural parameter Real laptop_adapter.magDataMat[28,1] = 0.0055623203060336 /* 0.0055623203060336 */;
 structural parameter Real laptop_adapter.magDataMat[29,1] = 0.0055763163700916 /* 0.0055763163700916 */;
 structural parameter Real laptop_adapter.magDataMat[30,1] = 0.0037301558865152 /* 0.0037301558865152 */;
 structural parameter Real laptop_adapter.magDataMat[31,1] = 0.0024556766113934 /* 0.0024556766113934 */;
 structural parameter Real laptop_adapter.magDataMat[32,1] = 0.0012570089195559 /* 0.0012570089195559 */;
 structural parameter Real laptop_adapter.magDataMat[33,1] = 0.003770235713609 /* 0.003770235713609 */;
 structural parameter Real laptop_adapter.magDataMat[34,1] = 0.0039951909704598 /* 0.0039951909704598 */;
 structural parameter Real laptop_adapter.magDataMat[35,1] = 0.003979236913258 /* 0.003979236913258 */;
 structural parameter Real laptop_adapter.magDataMat[36,1] = 0.0028266732141967 /* 0.0028266732141967 */;
 structural parameter Real laptop_adapter.magDataMat[37,1] = 0.001264556073809 /* 0.001264556073809 */;
 structural parameter Real laptop_adapter.magDataMat[38,1] = 0.0014301712599034 /* 0.0014301712599034 */;
 structural parameter Real laptop_adapter.magDataMat[39,1] = 0.0026235911913337 /* 0.0026235911913337 */;
 structural parameter Real laptop_adapter.magDataMat[40,1] = 0.0030745379143357 /* 0.0030745379143357 */;
 structural parameter Real laptop_adapter.magDataMat[41,1] = 0.0026371048002209 /* 0.0026371048002209 */;
 structural parameter Real laptop_adapter.magDataMat[42,1] = 0.0018785812678715 /* 0.0018785812678715 */;
 structural parameter Real laptop_adapter.magDataMat[43,1] = 0.001366164653877 /* 0.001366164653877 */;
 structural parameter Real laptop_adapter.magDataMat[44,1] = 0.0017315154435983 /* 0.0017315154435983 */;
 structural parameter Real laptop_adapter.magDataMat[45,1] = 0.0021186936112594 /* 0.0021186936112594 */;
 structural parameter Real laptop_adapter.magDataMat[46,1] = 0.0020698341543364 /* 0.0020698341543364 */;
 structural parameter Real laptop_adapter.magDataMat[47,1] = 0.0015827909180839 /* 0.0015827909180839 */;
 structural parameter Real laptop_adapter.magDataMat[48,1] = 0.0014207653497698 /* 0.0014207653497698 */;
 structural parameter Real laptop_adapter.magDataMat[49,1] = 0.0011044947826996 /* 0.0011044947826996 */;
 structural parameter Real laptop_adapter.magDataMat[50,1] = 0.0016983251721508 /* 0.0016983251721508 */;
 structural parameter Real laptop_adapter.magDataMat[51,1] = 0.001561470455193 /* 0.001561470455193 */;
 structural parameter Real laptop_adapter.magDataMat[52,1] = 0.0015551892377107 /* 0.0015551892377107 */;
 structural parameter Real laptop_adapter.magDataMat[53,1] = 0.0010806576917404 /* 0.0010806576917404 */;
 structural parameter Real laptop_adapter.magDataMat[54,1] = 0.0010324284223161 /* 0.0010324284223161 */;
 structural parameter Real laptop_adapter.magDataMat[55,1] = 0.0010316250408048 /* 0.0010316250408048 */;
 structural parameter Real laptop_adapter.magDataMat[56,1] = 0.0013704444558566 /* 0.0013704444558566 */;
 structural parameter Real laptop_adapter.magDataMat[57,1] = 0.0012887373861165 /* 0.0012887373861165 */;
 structural parameter Real laptop_adapter.magDataMat[58,1] = 0.001046804766309 /* 0.001046804766309 */;
 structural parameter Real laptop_adapter.magDataMat[59,1] = 8.397154504633E-4 /* 8.397154504633E-4 */;
 structural parameter Real laptop_adapter.magDataMat[60,1] = 8.443247596072E-4 /* 8.443247596072E-4 */;
 structural parameter Real laptop_adapter.magDataMat[61,1] = 0.0010482447031368 /* 0.0010482447031368 */;
 structural parameter Real laptop_adapter.magDataMat[62,1] = 0.0010834317712761 /* 0.0010834317712761 */;
 structural parameter Real laptop_adapter.magDataMat[63,1] = 0.0010717313423612 /* 0.0010717313423612 */;
 structural parameter Real laptop_adapter.magDataMat[64,1] = 7.336011041168E-4 /* 7.336011041168E-4 */;
 structural parameter Real laptop_adapter.argDataMat[1,1] = 0.3127770854783603 /* 0.3127770854783603 */;
 structural parameter Real laptop_adapter.argDataMat[2,1] = 4.011174689529625 /* 4.011174689529625 */;
 structural parameter Real laptop_adapter.argDataMat[3,1] = 1.450168565960499 /* 1.450168565960499 */;
 structural parameter Real laptop_adapter.argDataMat[4,1] = -1.1075502226650735 /* -1.1075502226650735 */;
 structural parameter Real laptop_adapter.argDataMat[5,1] = 2.6203684023114735 /* 2.6203684023114735 */;
 structural parameter Real laptop_adapter.argDataMat[6,1] = 0.0753120963493918 /* 0.0753120963493918 */;
 structural parameter Real laptop_adapter.argDataMat[7,1] = 3.827672644040883 /* 3.827672644040883 */;
 structural parameter Real laptop_adapter.argDataMat[8,1] = 1.3488113399227557 /* 1.3488113399227557 */;
 structural parameter Real laptop_adapter.argDataMat[9,1] = -0.9361140777472652 /* -0.9361140777472652 */;
 structural parameter Real laptop_adapter.argDataMat[10,1] = 4.21514766462882 /* 4.21514766462882 */;
 structural parameter Real laptop_adapter.argDataMat[11,1] = 2.355077880795469 /* 2.355077880795469 */;
 structural parameter Real laptop_adapter.argDataMat[12,1] = -0.0788148364525277 /* -0.0788148364525277 */;
 structural parameter Real laptop_adapter.argDataMat[13,1] = 3.630875802098702 /* 3.630875802098702 */;
 structural parameter Real laptop_adapter.argDataMat[14,1] = 0.9927328953061971 /* 0.9927328953061971 */;
 structural parameter Real laptop_adapter.argDataMat[15,1] = 4.441522037499742 /* 4.441522037499742 */;
 structural parameter Real laptop_adapter.argDataMat[16,1] = 0.3468512749946424 /* 0.3468512749946424 */;
 structural parameter Real laptop_adapter.argDataMat[17,1] = 3.309703112235414 /* 3.309703112235414 */;
 structural parameter Real laptop_adapter.argDataMat[18,1] = 0.507820696333874 /* 0.507820696333874 */;
 structural parameter Real laptop_adapter.argDataMat[19,1] = 4.07225325999216 /* 4.07225325999216 */;
 structural parameter Real laptop_adapter.argDataMat[20,1] = 1.125957866606311 /* 1.125957866606311 */;
 structural parameter Real laptop_adapter.argDataMat[21,1] = 3.387549006743685 /* 3.387549006743685 */;
 structural parameter Real laptop_adapter.argDataMat[22,1] = 0.0888214916736243 /* 0.0888214916736243 */;
 structural parameter Real laptop_adapter.argDataMat[23,1] = 3.5804813791252355 /* 3.5804813791252355 */;
 structural parameter Real laptop_adapter.argDataMat[24,1] = 0.8850851115756876 /* 0.8850851115756876 */;
 structural parameter Real laptop_adapter.argDataMat[25,1] = 4.508705061667298 /* 4.508705061667298 */;
 structural parameter Real laptop_adapter.argDataMat[26,1] = 1.333205530719895 /* 1.333205530719895 */;
 structural parameter Real laptop_adapter.argDataMat[27,1] = 2.838653112336029 /* 2.838653112336029 */;
 structural parameter Real laptop_adapter.argDataMat[28,1] = -0.0432835109945579 /* -0.0432835109945579 */;
 structural parameter Real laptop_adapter.argDataMat[29,1] = 3.5796675079179767 /* 3.5796675079179767 */;
 structural parameter Real laptop_adapter.argDataMat[30,1] = 0.8886624228751261 /* 0.8886624228751261 */;
 structural parameter Real laptop_adapter.argDataMat[31,1] = 4.322397183880533 /* 4.322397183880533 */;
 structural parameter Real laptop_adapter.argDataMat[32,1] = -0.1413429189228533 /* -0.1413429189228533 */;
 structural parameter Real laptop_adapter.argDataMat[33,1] = 2.9447237027794717 /* 2.9447237027794717 */;
 structural parameter Real laptop_adapter.argDataMat[34,1] = 0.1859626520117329 /* 0.1859626520117329 */;
 structural parameter Real laptop_adapter.argDataMat[35,1] = 3.7067555487786406 /* 3.7067555487786406 */;
 structural parameter Real laptop_adapter.argDataMat[36,1] = 1.0115866895784416 /* 1.0115866895784416 */;
 structural parameter Real laptop_adapter.argDataMat[37,1] = 4.0692014348202035 /* 4.0692014348202035 */;
 structural parameter Real laptop_adapter.argDataMat[38,1] = -0.0024077524125743 /* -0.0024077524125743 */;
 structural parameter Real laptop_adapter.argDataMat[39,1] = 3.0652063567780674 /* 3.0652063567780674 */;
 structural parameter Real laptop_adapter.argDataMat[40,1] = 0.2653273947161821 /* 0.2653273947161821 */;
 structural parameter Real laptop_adapter.argDataMat[41,1] = 3.7889601388042937 /* 3.7889601388042937 */;
 structural parameter Real laptop_adapter.argDataMat[42,1] = 0.8887383696249729 /* 0.8887383696249729 */;
 structural parameter Real laptop_adapter.argDataMat[43,1] = 3.773875593167732 /* 3.773875593167732 */;
 structural parameter Real laptop_adapter.argDataMat[44,1] = 0.2280500334845815 /* 0.2280500334845815 */;
 structural parameter Real laptop_adapter.argDataMat[45,1] = 3.3217592983561017 /* 3.3217592983561017 */;
 structural parameter Real laptop_adapter.argDataMat[46,1] = 0.520752728593681 /* 0.520752728593681 */;
 structural parameter Real laptop_adapter.argDataMat[47,1] = 3.9273528368650745 /* 3.9273528368650745 */;
 structural parameter Real laptop_adapter.argDataMat[48,1] = 0.8614853143189236 /* 0.8614853143189236 */;
 structural parameter Real laptop_adapter.argDataMat[49,1] = 3.5850098696099186 /* 3.5850098696099186 */;
 structural parameter Real laptop_adapter.argDataMat[50,1] = 0.2783322398316583 /* 0.2783322398316583 */;
 structural parameter Real laptop_adapter.argDataMat[51,1] = 3.4761184892641808 /* 3.4761184892641808 */;
 structural parameter Real laptop_adapter.argDataMat[52,1] = 0.5249082917156735 /* 0.5249082917156735 */;
 structural parameter Real laptop_adapter.argDataMat[53,1] = 4.1162792410645075 /* 4.1162792410645075 */;
 structural parameter Real laptop_adapter.argDataMat[54,1] = 0.5750851928849768 /* 0.5750851928849768 */;
 structural parameter Real laptop_adapter.argDataMat[55,1] = 3.6130535171919336 /* 3.6130535171919336 */;
 structural parameter Real laptop_adapter.argDataMat[56,1] = 0.2438187166602324 /* 0.2438187166602324 */;
 structural parameter Real laptop_adapter.argDataMat[57,1] = 3.591573823283689 /* 3.591573823283689 */;
 structural parameter Real laptop_adapter.argDataMat[58,1] = 0.3884444678214555 /* 0.3884444678214555 */;
 structural parameter Real laptop_adapter.argDataMat[59,1] = 3.8049056626874496 /* 3.8049056626874496 */;
 structural parameter Real laptop_adapter.argDataMat[60,1] = 0.4536424332042123 /* 0.4536424332042123 */;
 structural parameter Real laptop_adapter.argDataMat[61,1] = 3.589644373975073 /* 3.589644373975073 */;
 structural parameter Real laptop_adapter.argDataMat[62,1] = 0.2244991938468375 /* 0.2244991938468375 */;
 structural parameter Real laptop_adapter.argDataMat[63,1] = 3.37684736761545 /* 3.37684736761545 */;
 structural parameter Real laptop_adapter.argDataMat[64,1] = 0.2594769189504608 /* 0.2594769189504608 */;
 parameter Real temp_118[7,1];
 parameter Real temp_118[8,1];
 parameter Real temp_118[9,1];
 constant Real laptop_adapter.argS = -0.3127770854783603 "Phase angle for fundamental apparent power";
 Real laptop_adapter.magScale;
 Real laptop_adapter.argAdj[1];
 Real laptop_adapter.argAdj[2];
 Real laptop_adapter.argAdj[3];
 Real laptop_adapter.argAdj[4];
 Real laptop_adapter.argAdj[5];
 Real laptop_adapter.argAdj[6];
 Real laptop_adapter.argAdj[7];
 Real laptop_adapter.argAdj[8];
 Real laptop_adapter.argAdj[9];
 Real laptop_adapter.argAdj[10];
 Real laptop_adapter.argAdj[11];
 Real laptop_adapter.argAdj[12];
 Real laptop_adapter.a[1].re "Real part of complex number";
 Real laptop_adapter.a[1].im "Imaginary part of complex number";
 Real laptop_adapter.a[2].re "Real part of complex number";
 Real laptop_adapter.a[2].im "Imaginary part of complex number";
 Real laptop_adapter.a[3].re "Real part of complex number";
 Real laptop_adapter.a[3].im "Imaginary part of complex number";
 Real laptop_adapter.a[4].re "Real part of complex number";
 Real laptop_adapter.a[4].im "Imaginary part of complex number";
 Real laptop_adapter.a[5].re "Real part of complex number";
 Real laptop_adapter.a[5].im "Imaginary part of complex number";
 Real laptop_adapter.a[6].re "Real part of complex number";
 Real laptop_adapter.a[6].im "Imaginary part of complex number";
 Real laptop_adapter.a[7].re "Real part of complex number";
 Real laptop_adapter.a[7].im "Imaginary part of complex number";
 Real laptop_adapter.a[8].re "Real part of complex number";
 Real laptop_adapter.a[8].im "Imaginary part of complex number";
 Real laptop_adapter.a[9].re "Real part of complex number";
 Real laptop_adapter.a[9].im "Imaginary part of complex number";
 Real laptop_adapter.a[10].re "Real part of complex number";
 Real laptop_adapter.a[10].im "Imaginary part of complex number";
 Real laptop_adapter.a[11].re "Real part of complex number";
 Real laptop_adapter.a[11].im "Imaginary part of complex number";
 Real laptop_adapter.a[12].re "Real part of complex number";
 Real laptop_adapter.a[12].im "Imaginary part of complex number";
 Real laptop_adapter.c[1];
 Real laptop_adapter.c[2];
 Real laptop_adapter.c[3];
 Real laptop_adapter.c[4];
 Real laptop_adapter.c[5];
 Real laptop_adapter.c[6];
 Real laptop_adapter.c[7];
 Real laptop_adapter.c[8];
 Real laptop_adapter.c[9];
 Real laptop_adapter.c[10];
 Real laptop_adapter.c[11];
 Real laptop_adapter.c[12];
 constant String laptop.properties.ComponentType = "DC_Load" "Type of the component";
 parameter Modelica.SIunits.Power laptop.pwr(start = 1) = 10 "Power (watts)" /* 10 */;
 parameter Real temp_118[10,1];
 constant String z.properties.ComponentType = "Impedance" "Type of the component";
 parameter Real z.z.re(start = 1) = 0.1 "Real part of complex number" /* 0.1 */;
 parameter Real z.z.im(start = 0) = 5.0 "Imaginary part of complex number" /* 5.0 */;
 Real z.vFundAbs;
 Real z.vFundArg;
 Real z.iFundAbs;
 Real z.iFundArg;
 Real z.v[1].re(start = 100) "Real part of complex number";
 Real z.v[1].im(start = 100) "Imaginary part of complex number";
 Real z.v[2].re(start = 100) "Real part of complex number";
 Real z.v[2].im(start = 100) "Imaginary part of complex number";
 Real z.v[3].re(start = 100) "Real part of complex number";
 Real z.v[3].im(start = 100) "Imaginary part of complex number";
 Real z.v[4].re(start = 100) "Real part of complex number";
 Real z.v[4].im(start = 100) "Imaginary part of complex number";
 Real z.v[5].re(start = 100) "Real part of complex number";
 Real z.v[5].im(start = 100) "Imaginary part of complex number";
 Real z.v[6].re(start = 100) "Real part of complex number";
 Real z.v[6].im(start = 100) "Imaginary part of complex number";
 Real z.v[7].re(start = 100) "Real part of complex number";
 Real z.v[7].im(start = 100) "Imaginary part of complex number";
 Real z.v[8].re(start = 100) "Real part of complex number";
 Real z.v[8].im(start = 100) "Imaginary part of complex number";
 Real z.v[9].re(start = 100) "Real part of complex number";
 Real z.v[9].im(start = 100) "Imaginary part of complex number";
 Real z.v[10].re(start = 100) "Real part of complex number";
 Real z.v[10].im(start = 100) "Imaginary part of complex number";
 Real z.v[11].re(start = 100) "Real part of complex number";
 Real z.v[11].im(start = 100) "Imaginary part of complex number";
 Real z.v[12].re(start = 100) "Real part of complex number";
 Real z.v[12].im(start = 100) "Imaginary part of complex number";
 Real z.v[13].re(start = 100) "Real part of complex number";
 Real z.v[13].im(start = 100) "Imaginary part of complex number";
 Real z.omega;
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[1](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[2](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[3](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[4](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[5](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[6](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[7](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[8](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[9](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[10](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[11](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[12](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iMag[13](unit = "A");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[1](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[2](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[3](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[4](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[5](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[6](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[7](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[8](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[9](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[10](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[11](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[12](unit = "rad");
 Modelica.Blocks.Interfaces.RealOutput currentSensor.iArg[13](unit = "rad");
 Real currentSensor.i[1].re(start = -1) "Real part of complex number";
 Real currentSensor.i[1].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[2].re(start = -1) "Real part of complex number";
 Real currentSensor.i[2].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[3].re(start = -1) "Real part of complex number";
 Real currentSensor.i[3].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[4].re(start = -1) "Real part of complex number";
 Real currentSensor.i[4].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[5].re(start = -1) "Real part of complex number";
 Real currentSensor.i[5].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[6].re(start = -1) "Real part of complex number";
 Real currentSensor.i[6].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[7].re(start = -1) "Real part of complex number";
 Real currentSensor.i[7].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[8].re(start = -1) "Real part of complex number";
 Real currentSensor.i[8].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[9].re(start = -1) "Real part of complex number";
 Real currentSensor.i[9].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[10].re(start = -1) "Real part of complex number";
 Real currentSensor.i[10].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[11].re(start = -1) "Real part of complex number";
 Real currentSensor.i[11].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[12].re(start = -1) "Real part of complex number";
 Real currentSensor.i[12].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.i[13].re(start = -1) "Real part of complex number";
 Real currentSensor.i[13].im(start = 1) "Imaginary part of complex number";
 Real currentSensor.omega;
 parameter Real z1.z.re(start = 1) = 20.0 "Real part of complex number" /* 20.0 */;
 parameter Real z1.z.im(start = 0) = 60.0 "Imaginary part of complex number" /* 60.0 */;
 Real z1.vFundAbs;
 Real z1.iFundAbs;
 Real z1.iFundArg;
 Real z1.v[1].re(start = 100) "Real part of complex number";
 Real z1.i[1].re(start = -1) "Real part of complex number";
 Real z1.i[1].im(start = 1) "Imaginary part of complex number";
 Real z1.i[2].re(start = -1) "Real part of complex number";
 Real z1.i[2].im(start = 1) "Imaginary part of complex number";
 Real z1.i[3].re(start = -1) "Real part of complex number";
 Real z1.i[3].im(start = 1) "Imaginary part of complex number";
 Real z1.i[4].re(start = -1) "Real part of complex number";
 Real z1.i[4].im(start = 1) "Imaginary part of complex number";
 Real z1.i[5].re(start = -1) "Real part of complex number";
 Real z1.i[5].im(start = 1) "Imaginary part of complex number";
 Real z1.i[6].re(start = -1) "Real part of complex number";
 Real z1.i[6].im(start = 1) "Imaginary part of complex number";
 Real z1.i[7].re(start = -1) "Real part of complex number";
 Real z1.i[7].im(start = 1) "Imaginary part of complex number";
 Real z1.i[8].re(start = -1) "Real part of complex number";
 Real z1.i[8].im(start = 1) "Imaginary part of complex number";
 Real z1.i[9].re(start = -1) "Real part of complex number";
 Real z1.i[9].im(start = 1) "Imaginary part of complex number";
 Real z1.i[10].re(start = -1) "Real part of complex number";
 Real z1.i[10].im(start = 1) "Imaginary part of complex number";
 Real z1.i[11].re(start = -1) "Real part of complex number";
 Real z1.i[11].im(start = 1) "Imaginary part of complex number";
 Real z1.i[12].re(start = -1) "Real part of complex number";
 Real z1.i[12].im(start = 1) "Imaginary part of complex number";
 Real z1.i[13].re(start = -1) "Real part of complex number";
 Real z1.i[13].im(start = 1) "Imaginary part of complex number";
 Real z1.omega;
 parameter Real temp_118[11,1];
 parameter Real temp_118[12,1];
 parameter Real temp_118[13,1];
 parameter Real temp_118[14,1];
 parameter Real temp_118[15,1];
 parameter Real temp_118[16,1];
 parameter Real temp_118[17,1];
 parameter Real temp_118[18,1];
 parameter Real temp_118[19,1];
 parameter Real temp_118[20,1];
 parameter Real temp_118[21,1];
 parameter Real temp_118[22,1];
 parameter Real temp_118[23,1];
 parameter Real temp_118[24,1];
 parameter Real temp_118[25,1];
 parameter Real temp_118[26,1];
 parameter Real temp_118[27,1];
 parameter Real temp_118[28,1];
 parameter Real temp_118[29,1];
 parameter Real temp_118[30,1];
 parameter Real temp_118[31,1];
 parameter Real temp_118[32,1];
 parameter Real temp_118[33,1];
 parameter Real temp_118[34,1];
 parameter Real temp_118[35,1];
 parameter Real temp_118[36,1];
 parameter Real temp_118[37,1];
 parameter Real temp_118[38,1];
 parameter Real temp_118[39,1];
 parameter Real temp_118[40,1];
 parameter Real temp_118[41,1];
 parameter Real temp_118[42,1];
 parameter Real temp_118[43,1];
 parameter Real temp_118[44,1];
 parameter Real temp_118[45,1];
 parameter Real temp_118[46,1];
 parameter Real temp_118[47,1];
 parameter Real temp_118[48,1];
 parameter Real temp_118[49,1];
 parameter Real temp_118[50,1];
 parameter Real temp_118[51,1];
 parameter Real temp_118[52,1];
 parameter Real temp_118[53,1];
 parameter Real temp_118[54,1];
 parameter Real temp_118[55,1];
 parameter Real temp_118[56,1];
 parameter Real temp_118[57,1];
 parameter Real temp_118[58,1];
 parameter Real temp_118[59,1];
 parameter Real temp_118[60,1];
 parameter Real temp_118[61,1];
 parameter Real temp_118[62,1];
 parameter Real temp_118[63,1];
 parameter Real temp_118[64,1];
 parameter Real temp_119[1,1];
 parameter Real temp_119[2,1];
 parameter Real temp_119[3,1];
 parameter Real temp_119[4,1];
 parameter Real temp_119[5,1];
 parameter Real temp_119[6,1];
 parameter Real temp_119[7,1];
 parameter Real temp_119[8,1];
 parameter Real temp_119[9,1];
 parameter Real temp_119[10,1];
 parameter Real temp_119[11,1];
 parameter Real temp_119[12,1];
 parameter Real temp_119[13,1];
 parameter Real temp_119[14,1];
 parameter Real temp_119[15,1];
 parameter Real temp_119[16,1];
 parameter Real temp_119[17,1];
 parameter Real temp_119[18,1];
 parameter Real temp_119[19,1];
 parameter Real temp_119[20,1];
 parameter Real temp_119[21,1];
 parameter Real temp_119[22,1];
 parameter Real temp_119[23,1];
 parameter Real temp_119[24,1];
 parameter Real temp_119[25,1];
 parameter Real temp_119[26,1];
 parameter Real temp_119[27,1];
 parameter Real temp_119[28,1];
 parameter Real temp_119[29,1];
 parameter Real temp_119[30,1];
 parameter Real temp_119[31,1];
 parameter Real temp_119[32,1];
 parameter Real temp_119[33,1];
 parameter Real temp_119[34,1];
 parameter Real temp_119[35,1];
 parameter Real temp_119[36,1];
 parameter Real temp_119[37,1];
 parameter Real temp_119[38,1];
 parameter Real temp_119[39,1];
 parameter Real temp_119[40,1];
 parameter Real temp_119[41,1];
 parameter Real temp_119[42,1];
 parameter Real temp_119[43,1];
 parameter Real temp_119[44,1];
 parameter Real temp_119[45,1];
 parameter Real temp_119[46,1];
 parameter Real temp_119[47,1];
 parameter Real temp_119[48,1];
 parameter Real temp_119[49,1];
 parameter Real temp_119[50,1];
 parameter Real temp_119[51,1];
 parameter Real temp_119[52,1];
 parameter Real temp_119[53,1];
 parameter Real temp_119[54,1];
 parameter Real temp_119[55,1];
 parameter Real temp_119[56,1];
 parameter Real temp_119[57,1];
 parameter Real temp_119[58,1];
 parameter Real temp_119[59,1];
 parameter Real temp_119[60,1];
 parameter Real temp_119[61,1];
 parameter Real temp_119[62,1];
 parameter Real temp_119[63,1];
 parameter Real temp_119[64,1];
 parameter Integer systemDef.N "Size of FFT";
 parameter Modelica.SIunits.ElectricPotential laptop_adapter.vDC.V(start = 1) "Value of constant voltage";
 parameter Real laptop_adapter.alpha[1,1];
 parameter Real laptop_adapter.beta[1,1];
 parameter Real laptop_adapter.gamma[1,1];
 parameter Modelica.SIunits.ElectricCurrent laptop.i "Current flowing from pin p to pin n";
 parameter Modelica.SIunits.ElectricCurrent ground2.p.i "Current flowing into the pin";
 parameter Real laptop_adapter.P_DC;
 parameter Real laptop_adapter.P;
 parameter Real laptop_adapter.S(start = 1) "Apparent power at fundamental";
 parameter Modelica.Blocks.Interfaces.RealOutput laptop_adapter.PLoss;
 parameter Real laptop_adapter.Q(start = 1) "Imaginary power at fundamental";
initial equation
 algorithm
;
 v.theta = 0;
parameter equation
 ({temp_117[1], temp_117[2]}) = Modelica.Utilities.Streams.readMatrixSize("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "mag");
 ({{temp_118[1,1]}, {temp_118[2,1]}, {temp_118[3,1]}, {temp_118[4,1]}, {temp_118[5,1]}, {temp_118[6,1]}, {temp_118[7,1]}, {temp_118[8,1]}, {temp_118[9,1]}, {temp_118[10,1]}, {temp_118[11,1]}, {temp_118[12,1]}, {temp_118[13,1]}, {temp_118[14,1]}, {temp_118[15,1]}, {temp_118[16,1]}, {temp_118[17,1]}, {temp_118[18,1]}, {temp_118[19,1]}, {temp_118[20,1]}, {temp_118[21,1]}, {temp_118[22,1]}, {temp_118[23,1]}, {temp_118[24,1]}, {temp_118[25,1]}, {temp_118[26,1]}, {temp_118[27,1]}, {temp_118[28,1]}, {temp_118[29,1]}, {temp_118[30,1]}, {temp_118[31,1]}, {temp_118[32,1]}, {temp_118[33,1]}, {temp_118[34,1]}, {temp_118[35,1]}, {temp_118[36,1]}, {temp_118[37,1]}, {temp_118[38,1]}, {temp_118[39,1]}, {temp_118[40,1]}, {temp_118[41,1]}, {temp_118[42,1]}, {temp_118[43,1]}, {temp_118[44,1]}, {temp_118[45,1]}, {temp_118[46,1]}, {temp_118[47,1]}, {temp_118[48,1]}, {temp_118[49,1]}, {temp_118[50,1]}, {temp_118[51,1]}, {temp_118[52,1]}, {temp_118[53,1]}, {temp_118[54,1]}, {temp_118[55,1]}, {temp_118[56,1]}, {temp_118[57,1]}, {temp_118[58,1]}, {temp_118[59,1]}, {temp_118[60,1]}, {temp_118[61,1]}, {temp_118[62,1]}, {temp_118[63,1]}, {temp_118[64,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "mag", 64, 1, true);
 ({{temp_119[1,1]}, {temp_119[2,1]}, {temp_119[3,1]}, {temp_119[4,1]}, {temp_119[5,1]}, {temp_119[6,1]}, {temp_119[7,1]}, {temp_119[8,1]}, {temp_119[9,1]}, {temp_119[10,1]}, {temp_119[11,1]}, {temp_119[12,1]}, {temp_119[13,1]}, {temp_119[14,1]}, {temp_119[15,1]}, {temp_119[16,1]}, {temp_119[17,1]}, {temp_119[18,1]}, {temp_119[19,1]}, {temp_119[20,1]}, {temp_119[21,1]}, {temp_119[22,1]}, {temp_119[23,1]}, {temp_119[24,1]}, {temp_119[25,1]}, {temp_119[26,1]}, {temp_119[27,1]}, {temp_119[28,1]}, {temp_119[29,1]}, {temp_119[30,1]}, {temp_119[31,1]}, {temp_119[32,1]}, {temp_119[33,1]}, {temp_119[34,1]}, {temp_119[35,1]}, {temp_119[36,1]}, {temp_119[37,1]}, {temp_119[38,1]}, {temp_119[39,1]}, {temp_119[40,1]}, {temp_119[41,1]}, {temp_119[42,1]}, {temp_119[43,1]}, {temp_119[44,1]}, {temp_119[45,1]}, {temp_119[46,1]}, {temp_119[47,1]}, {temp_119[48,1]}, {temp_119[49,1]}, {temp_119[50,1]}, {temp_119[51,1]}, {temp_119[52,1]}, {temp_119[53,1]}, {temp_119[54,1]}, {temp_119[55,1]}, {temp_119[56,1]}, {temp_119[57,1]}, {temp_119[58,1]}, {temp_119[59,1]}, {temp_119[60,1]}, {temp_119[61,1]}, {temp_119[62,1]}, {temp_119[63,1]}, {temp_119[64,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "arg", 64, 1, true);
 systemDef.N = integer(floor(systemDef.fs / systemDef.fFund));
 laptop_adapter.vDC.V = laptop_adapter.V_Rect;
 ({{laptop_adapter.alpha[1,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "alpha", 1, 1, true);
 ({{laptop_adapter.beta[1,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "beta", 1, 1, true);
 ({{laptop_adapter.gamma[1,1]}}) = Modelica.Utilities.Streams.readRealMatrix("/media/linuxdev/Documents/Research/DC Design Tool/Workspace/Modelica_HPF/DC-Design/HPF/PowerElectronicsConverters/AC2DC_ConverterModels/AC2DC_Laptop_Charger_4.mat", "gamma", 1, 1, true);
 assert(64 == temp_117[1], "Error Error at line 49, column 39, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readMatrixSize' did not evaluate to same result as during compilation");
 assert(1 == temp_117[2], "Error Error at line 49, column 39, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readMatrixSize' did not evaluate to same result as during compilation");
 assert(1.0 == temp_118[1,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.9421865565594479 == temp_118[2,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.846418595204449 == temp_118[3,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.7174634219299512 == temp_118[4,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.568269396387493 == temp_118[5,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.4142504288040016 == temp_118[6,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2722289795439818 == temp_118[7,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.1499700094183941 == temp_118[8,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.060532358446546 == temp_118[9,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0286742846032879 == temp_118[10,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0500554183998412 == temp_118[11,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0574038038345626 == temp_118[12,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0490634253296239 == temp_118[13,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0324675024798272 == temp_118[14,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0146979293649181 == temp_118[15,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0073091525847841 == temp_118[16,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0133897682494032 == temp_118[17,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0149525422599743 == temp_118[18,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0124074456883277 == temp_118[19,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0064342667493201 == temp_118[20,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0042631791151444 == temp_118[21,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0071677605312837 == temp_118[22,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0091300920177219 == temp_118[23,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0082848764712874 == temp_118[24,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0048054384993071 == temp_118[25,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0012086520647777 == temp_118[26,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0027696713010395 == temp_118[27,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0055623203060336 == temp_118[28,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0055763163700916 == temp_118[29,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0037301558865152 == temp_118[30,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0024556766113934 == temp_118[31,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0012570089195559 == temp_118[32,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.003770235713609 == temp_118[33,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0039951909704598 == temp_118[34,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.003979236913258 == temp_118[35,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0028266732141967 == temp_118[36,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001264556073809 == temp_118[37,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0014301712599034 == temp_118[38,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0026235911913337 == temp_118[39,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0030745379143357 == temp_118[40,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0026371048002209 == temp_118[41,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0018785812678715 == temp_118[42,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001366164653877 == temp_118[43,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0017315154435983 == temp_118[44,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0021186936112594 == temp_118[45,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0020698341543364 == temp_118[46,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0015827909180839 == temp_118[47,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0014207653497698 == temp_118[48,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0011044947826996 == temp_118[49,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0016983251721508 == temp_118[50,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001561470455193 == temp_118[51,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0015551892377107 == temp_118[52,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010806576917404 == temp_118[53,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010324284223161 == temp_118[54,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010316250408048 == temp_118[55,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0013704444558566 == temp_118[56,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0012887373861165 == temp_118[57,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.001046804766309 == temp_118[58,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(8.397154504633E-4 == temp_118[59,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(8.443247596072E-4 == temp_118[60,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010482447031368 == temp_118[61,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010834317712761 == temp_118[62,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0010717313423612 == temp_118[63,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(7.336011041168E-4 == temp_118[64,1], "Error Error at line 51, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.3127770854783603 == temp_119[1,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.011174689529625 == temp_119[2,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.450168565960499 == temp_119[3,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-1.1075502226650735 == temp_119[4,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.6203684023114735 == temp_119[5,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0753120963493918 == temp_119[6,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.827672644040883 == temp_119[7,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.3488113399227557 == temp_119[8,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.9361140777472652 == temp_119[9,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.21514766462882 == temp_119[10,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.355077880795469 == temp_119[11,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.0788148364525277 == temp_119[12,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.630875802098702 == temp_119[13,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.9927328953061971 == temp_119[14,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.441522037499742 == temp_119[15,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.3468512749946424 == temp_119[16,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.309703112235414 == temp_119[17,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.507820696333874 == temp_119[18,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.07225325999216 == temp_119[19,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.125957866606311 == temp_119[20,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.387549006743685 == temp_119[21,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.0888214916736243 == temp_119[22,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.5804813791252355 == temp_119[23,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8850851115756876 == temp_119[24,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.508705061667298 == temp_119[25,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.333205530719895 == temp_119[26,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.838653112336029 == temp_119[27,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.0432835109945579 == temp_119[28,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.5796675079179767 == temp_119[29,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8886624228751261 == temp_119[30,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.322397183880533 == temp_119[31,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.1413429189228533 == temp_119[32,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(2.9447237027794717 == temp_119[33,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.1859626520117329 == temp_119[34,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.7067555487786406 == temp_119[35,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(1.0115866895784416 == temp_119[36,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.0692014348202035 == temp_119[37,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(-0.0024077524125743 == temp_119[38,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.0652063567780674 == temp_119[39,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2653273947161821 == temp_119[40,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.7889601388042937 == temp_119[41,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8887383696249729 == temp_119[42,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.773875593167732 == temp_119[43,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2280500334845815 == temp_119[44,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.3217592983561017 == temp_119[45,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.520752728593681 == temp_119[46,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.9273528368650745 == temp_119[47,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.8614853143189236 == temp_119[48,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.5850098696099186 == temp_119[49,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2783322398316583 == temp_119[50,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.4761184892641808 == temp_119[51,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.5249082917156735 == temp_119[52,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(4.1162792410645075 == temp_119[53,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.5750851928849768 == temp_119[54,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.6130535171919336 == temp_119[55,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2438187166602324 == temp_119[56,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.591573823283689 == temp_119[57,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.3884444678214555 == temp_119[58,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.8049056626874496 == temp_119[59,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.4536424332042123 == temp_119[60,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.589644373975073 == temp_119[61,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2244991938468375 == temp_119[62,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(3.37684736761545 == temp_119[63,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 assert(0.2594769189504608 == temp_119[64,1], "Error Error at line 52, column 43, in file '../../../../HPF/PowerElectronicsConverters/AC2DC_SinglePhase.mo'': Structural parameter external function call 'Modelica.Utilities.Streams.readRealMatrix' did not evaluate to same result as during compilation");
 laptop.i = laptop.pwr / laptop_adapter.vDC.V;
 ground2.p.i = laptop.i + (- laptop.i);
 laptop_adapter.P_DC = abs(laptop_adapter.vDC.V * (- laptop.i));
 laptop_adapter.P = laptop_adapter.P_DC + laptop_adapter.alpha[1,1] + (laptop_adapter.beta[1,1] * laptop_adapter.P_DC + laptop_adapter.gamma[1,1] * laptop_adapter.P_DC ^ 2);
 laptop_adapter.S = (- laptop_adapter.P) / -0.9514827247724208;
 laptop_adapter.PLoss = laptop_adapter.P + (- laptop_adapter.P_DC);
 laptop_adapter.Q = laptop_adapter.S * -0.3077021684350789;
algorithm
equation
 der(v.theta) = 6.283185307179586 * systemDef.fFund;
 v.omega = der(v.theta);
 currentSensor.i[1].re = (laptop_adapter.P * z1.v[1].re + laptop_adapter.Q * (- z.v[1].im)) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2);
 currentSensor.i[1].im = (laptop_adapter.P * (- z.v[1].im) - laptop_adapter.Q * z1.v[1].re) / (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2);
 currentSensor.i[2].re = laptop_adapter.c[1] * laptop_adapter.a[1].re;
 currentSensor.i[2].im = laptop_adapter.c[1] * laptop_adapter.a[1].im;
 currentSensor.i[3].re = laptop_adapter.c[2] * laptop_adapter.a[2].re;
 currentSensor.i[3].im = laptop_adapter.c[2] * laptop_adapter.a[2].im;
 currentSensor.i[4].re = laptop_adapter.c[3] * laptop_adapter.a[3].re;
 currentSensor.i[4].im = laptop_adapter.c[3] * laptop_adapter.a[3].im;
 currentSensor.i[5].re = laptop_adapter.c[4] * laptop_adapter.a[4].re;
 currentSensor.i[5].im = laptop_adapter.c[4] * laptop_adapter.a[4].im;
 currentSensor.i[6].re = laptop_adapter.c[5] * laptop_adapter.a[5].re;
 currentSensor.i[6].im = laptop_adapter.c[5] * laptop_adapter.a[5].im;
 currentSensor.i[7].re = laptop_adapter.c[6] * laptop_adapter.a[6].re;
 currentSensor.i[7].im = laptop_adapter.c[6] * laptop_adapter.a[6].im;
 currentSensor.i[8].re = laptop_adapter.c[7] * laptop_adapter.a[7].re;
 currentSensor.i[8].im = laptop_adapter.c[7] * laptop_adapter.a[7].im;
 currentSensor.i[9].re = laptop_adapter.c[8] * laptop_adapter.a[8].re;
 currentSensor.i[9].im = laptop_adapter.c[8] * laptop_adapter.a[8].im;
 currentSensor.i[10].re = laptop_adapter.c[9] * laptop_adapter.a[9].re;
 currentSensor.i[10].im = laptop_adapter.c[9] * laptop_adapter.a[9].im;
 currentSensor.i[11].re = laptop_adapter.c[10] * laptop_adapter.a[10].re;
 currentSensor.i[11].im = laptop_adapter.c[10] * laptop_adapter.a[10].im;
 currentSensor.i[12].re = laptop_adapter.c[11] * laptop_adapter.a[11].re;
 currentSensor.i[12].im = laptop_adapter.c[11] * laptop_adapter.a[11].im;
 currentSensor.i[13].re = laptop_adapter.c[12] * laptop_adapter.a[12].re;
 currentSensor.i[13].im = laptop_adapter.c[12] * laptop_adapter.a[12].im;
algorithm
equation
 laptop_adapter.loadBase.omega = der(v.theta);
 z.v[1].re = z.z.re .* (- v.i[1].re) - z.z.im .* systemDef.hrms[1] .* (- v.i[1].im);
 z.v[2].re = z.z.re .* (- v.i[2].re) - z.z.im .* systemDef.hrms[2] .* (- v.i[2].im);
 z.v[3].re = z.z.re .* (- v.i[3].re) - z.z.im .* systemDef.hrms[3] .* (- v.i[3].im);
 z.v[4].re = z.z.re .* (- v.i[4].re) - z.z.im .* systemDef.hrms[4] .* (- v.i[4].im);
 z.v[5].re = z.z.re .* (- v.i[5].re) - z.z.im .* systemDef.hrms[5] .* (- v.i[5].im);
 z.v[6].re = z.z.re .* (- v.i[6].re) - z.z.im .* systemDef.hrms[6] .* (- v.i[6].im);
 z.v[7].re = z.z.re .* (- v.i[7].re) - z.z.im .* systemDef.hrms[7] .* (- v.i[7].im);
 z.v[8].re = z.z.re .* (- v.i[8].re) - z.z.im .* systemDef.hrms[8] .* (- v.i[8].im);
 z.v[9].re = z.z.re .* (- v.i[9].re) - z.z.im .* systemDef.hrms[9] .* (- v.i[9].im);
 z.v[10].re = z.z.re .* (- v.i[10].re) - z.z.im .* systemDef.hrms[10] .* (- v.i[10].im);
 z.v[11].re = z.z.re .* (- v.i[11].re) - z.z.im .* systemDef.hrms[11] .* (- v.i[11].im);
 z.v[12].re = z.z.re .* (- v.i[12].re) - z.z.im .* systemDef.hrms[12] .* (- v.i[12].im);
 z.v[13].re = z.z.re .* (- v.i[13].re) - z.z.im .* systemDef.hrms[13] .* (- v.i[13].im);
 z.v[1].im = z.z.re .* (- v.i[1].im) + z.z.im .* systemDef.hrms[1] .* (- v.i[1].re);
 z.v[2].im = z.z.re .* (- v.i[2].im) + z.z.im .* systemDef.hrms[2] .* (- v.i[2].re);
 z.v[3].im = z.z.re .* (- v.i[3].im) + z.z.im .* systemDef.hrms[3] .* (- v.i[3].re);
 z.v[4].im = z.z.re .* (- v.i[4].im) + z.z.im .* systemDef.hrms[4] .* (- v.i[4].re);
 z.v[5].im = z.z.re .* (- v.i[5].im) + z.z.im .* systemDef.hrms[5] .* (- v.i[5].re);
 z.v[6].im = z.z.re .* (- v.i[6].im) + z.z.im .* systemDef.hrms[6] .* (- v.i[6].re);
 z.v[7].im = z.z.re .* (- v.i[7].im) + z.z.im .* systemDef.hrms[7] .* (- v.i[7].re);
 z.v[8].im = z.z.re .* (- v.i[8].im) + z.z.im .* systemDef.hrms[8] .* (- v.i[8].re);
 z.v[9].im = z.z.re .* (- v.i[9].im) + z.z.im .* systemDef.hrms[9] .* (- v.i[9].re);
 z.v[10].im = z.z.re .* (- v.i[10].im) + z.z.im .* systemDef.hrms[10] .* (- v.i[10].re);
 z.v[11].im = z.z.re .* (- v.i[11].im) + z.z.im .* systemDef.hrms[11] .* (- v.i[11].re);
 z.v[12].im = z.z.re .* (- v.i[12].im) + z.z.im .* systemDef.hrms[12] .* (- v.i[12].re);
 z.v[13].im = z.z.re .* (- v.i[13].im) + z.z.im .* systemDef.hrms[13] .* (- v.i[13].re);
 z.omega = der(v.theta);
 z.v[1].re = 120.0 - z1.v[1].re;
 currentSensor.iMag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5;
 currentSensor.iMag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5;
 currentSensor.iMag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5;
 currentSensor.iMag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5;
 currentSensor.iMag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5;
 currentSensor.iMag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5;
 currentSensor.iMag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5;
 currentSensor.iMag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5;
 currentSensor.iMag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5;
 currentSensor.iMag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5;
 currentSensor.iMag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5;
 currentSensor.iMag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5;
 currentSensor.iMag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5;
 currentSensor.omega = der(v.theta);
 z1.v[1].re = z1.z.re .* z1.i[1].re - z1.z.im .* systemDef.hrms[1] .* z1.i[1].im;
 - z.v[2].re = z1.z.re .* z1.i[2].re - z1.z.im .* systemDef.hrms[2] .* z1.i[2].im;
 - z.v[3].re = z1.z.re .* z1.i[3].re - z1.z.im .* systemDef.hrms[3] .* z1.i[3].im;
 - z.v[4].re = z1.z.re .* z1.i[4].re - z1.z.im .* systemDef.hrms[4] .* z1.i[4].im;
 - z.v[5].re = z1.z.re .* z1.i[5].re - z1.z.im .* systemDef.hrms[5] .* z1.i[5].im;
 - z.v[6].re = z1.z.re .* z1.i[6].re - z1.z.im .* systemDef.hrms[6] .* z1.i[6].im;
 - z.v[7].re = z1.z.re .* z1.i[7].re - z1.z.im .* systemDef.hrms[7] .* z1.i[7].im;
 - z.v[8].re = z1.z.re .* z1.i[8].re - z1.z.im .* systemDef.hrms[8] .* z1.i[8].im;
 - z.v[9].re = z1.z.re .* z1.i[9].re - z1.z.im .* systemDef.hrms[9] .* z1.i[9].im;
 - z.v[10].re = z1.z.re .* z1.i[10].re - z1.z.im .* systemDef.hrms[10] .* z1.i[10].im;
 - z.v[11].re = z1.z.re .* z1.i[11].re - z1.z.im .* systemDef.hrms[11] .* z1.i[11].im;
 - z.v[12].re = z1.z.re .* z1.i[12].re - z1.z.im .* systemDef.hrms[12] .* z1.i[12].im;
 - z.v[13].re = z1.z.re .* z1.i[13].re - z1.z.im .* systemDef.hrms[13] .* z1.i[13].im;
 - z.v[1].im = z1.z.re .* z1.i[1].im + z1.z.im .* systemDef.hrms[1] .* z1.i[1].re;
 - z.v[2].im = z1.z.re .* z1.i[2].im + z1.z.im .* systemDef.hrms[2] .* z1.i[2].re;
 - z.v[3].im = z1.z.re .* z1.i[3].im + z1.z.im .* systemDef.hrms[3] .* z1.i[3].re;
 - z.v[4].im = z1.z.re .* z1.i[4].im + z1.z.im .* systemDef.hrms[4] .* z1.i[4].re;
 - z.v[5].im = z1.z.re .* z1.i[5].im + z1.z.im .* systemDef.hrms[5] .* z1.i[5].re;
 - z.v[6].im = z1.z.re .* z1.i[6].im + z1.z.im .* systemDef.hrms[6] .* z1.i[6].re;
 - z.v[7].im = z1.z.re .* z1.i[7].im + z1.z.im .* systemDef.hrms[7] .* z1.i[7].re;
 - z.v[8].im = z1.z.re .* z1.i[8].im + z1.z.im .* systemDef.hrms[8] .* z1.i[8].re;
 - z.v[9].im = z1.z.re .* z1.i[9].im + z1.z.im .* systemDef.hrms[9] .* z1.i[9].re;
 - z.v[10].im = z1.z.re .* z1.i[10].im + z1.z.im .* systemDef.hrms[10] .* z1.i[10].re;
 - z.v[11].im = z1.z.re .* z1.i[11].im + z1.z.im .* systemDef.hrms[11] .* z1.i[11].re;
 - z.v[12].im = z1.z.re .* z1.i[12].im + z1.z.im .* systemDef.hrms[12] .* z1.i[12].re;
 - z.v[13].im = z1.z.re .* z1.i[13].im + z1.z.im .* systemDef.hrms[13] .* z1.i[13].re;
 z1.omega = der(v.theta);
 currentSensor.i[1].im + v.i[1].im + z1.i[1].im = 0;
 currentSensor.i[2].im + v.i[2].im + z1.i[2].im = 0;
 currentSensor.i[3].im + v.i[3].im + z1.i[3].im = 0;
 currentSensor.i[4].im + v.i[4].im + z1.i[4].im = 0;
 currentSensor.i[5].im + v.i[5].im + z1.i[5].im = 0;
 currentSensor.i[6].im + v.i[6].im + z1.i[6].im = 0;
 currentSensor.i[7].im + v.i[7].im + z1.i[7].im = 0;
 currentSensor.i[8].im + v.i[8].im + z1.i[8].im = 0;
 currentSensor.i[9].im + v.i[9].im + z1.i[9].im = 0;
 currentSensor.i[10].im + v.i[10].im + z1.i[10].im = 0;
 currentSensor.i[11].im + v.i[11].im + z1.i[11].im = 0;
 currentSensor.i[12].im + v.i[12].im + z1.i[12].im = 0;
 currentSensor.i[13].im + v.i[13].im + z1.i[13].im = 0;
 currentSensor.i[1].re + v.i[1].re + z1.i[1].re = 0;
 currentSensor.i[2].re + v.i[2].re + z1.i[2].re = 0;
 currentSensor.i[3].re + v.i[3].re + z1.i[3].re = 0;
 currentSensor.i[4].re + v.i[4].re + z1.i[4].re = 0;
 currentSensor.i[5].re + v.i[5].re + z1.i[5].re = 0;
 currentSensor.i[6].re + v.i[6].re + z1.i[6].re = 0;
 currentSensor.i[7].re + v.i[7].re + z1.i[7].re = 0;
 currentSensor.i[8].re + v.i[8].re + z1.i[8].re = 0;
 currentSensor.i[9].re + v.i[9].re + z1.i[9].re = 0;
 currentSensor.i[10].re + v.i[10].re + z1.i[10].re = 0;
 currentSensor.i[11].re + v.i[11].re + z1.i[11].re = 0;
 currentSensor.i[12].re + v.i[12].re + z1.i[12].re = 0;
 currentSensor.i[13].re + v.i[13].re + z1.i[13].re = 0;
 v.P1 = 120.0 * v.i[1].re;
 v.iMag[1] = (v.i[1].re ^ 2 + v.i[1].im ^ 2) ^ 0.5;
 v.iMag[2] = (v.i[2].re ^ 2 + v.i[2].im ^ 2) ^ 0.5;
 v.iMag[3] = (v.i[3].re ^ 2 + v.i[3].im ^ 2) ^ 0.5;
 v.iMag[4] = (v.i[4].re ^ 2 + v.i[4].im ^ 2) ^ 0.5;
 v.iMag[5] = (v.i[5].re ^ 2 + v.i[5].im ^ 2) ^ 0.5;
 v.iMag[6] = (v.i[6].re ^ 2 + v.i[6].im ^ 2) ^ 0.5;
 v.iMag[7] = (v.i[7].re ^ 2 + v.i[7].im ^ 2) ^ 0.5;
 v.iMag[8] = (v.i[8].re ^ 2 + v.i[8].im ^ 2) ^ 0.5;
 v.iMag[9] = (v.i[9].re ^ 2 + v.i[9].im ^ 2) ^ 0.5;
 v.iMag[10] = (v.i[10].re ^ 2 + v.i[10].im ^ 2) ^ 0.5;
 v.iMag[11] = (v.i[11].re ^ 2 + v.i[11].im ^ 2) ^ 0.5;
 v.iMag[12] = (v.i[12].re ^ 2 + v.i[12].im ^ 2) ^ 0.5;
 v.iMag[13] = (v.i[13].re ^ 2 + v.i[13].im ^ 2) ^ 0.5;
 v.iArg[1] = Modelica.Math.atan3(v.i[1].im, v.i[1].re, 0);
 v.iArg[2] = Modelica.Math.atan3(v.i[2].im, v.i[2].re, 0);
 v.iArg[3] = Modelica.Math.atan3(v.i[3].im, v.i[3].re, 0);
 v.iArg[4] = Modelica.Math.atan3(v.i[4].im, v.i[4].re, 0);
 v.iArg[5] = Modelica.Math.atan3(v.i[5].im, v.i[5].re, 0);
 v.iArg[6] = Modelica.Math.atan3(v.i[6].im, v.i[6].re, 0);
 v.iArg[7] = Modelica.Math.atan3(v.i[7].im, v.i[7].re, 0);
 v.iArg[8] = Modelica.Math.atan3(v.i[8].im, v.i[8].re, 0);
 v.iArg[9] = Modelica.Math.atan3(v.i[9].im, v.i[9].re, 0);
 v.iArg[10] = Modelica.Math.atan3(v.i[10].im, v.i[10].re, 0);
 v.iArg[11] = Modelica.Math.atan3(v.i[11].im, v.i[11].re, 0);
 v.iArg[12] = Modelica.Math.atan3(v.i[12].im, v.i[12].re, 0);
 v.iArg[13] = Modelica.Math.atan3(v.i[13].im, v.i[13].re, 0);
 laptop_adapter.I_mag[1] = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[2] = (currentSensor.i[2].re ^ 2 + currentSensor.i[2].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[3] = (currentSensor.i[3].re ^ 2 + currentSensor.i[3].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[4] = (currentSensor.i[4].re ^ 2 + currentSensor.i[4].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[5] = (currentSensor.i[5].re ^ 2 + currentSensor.i[5].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[6] = (currentSensor.i[6].re ^ 2 + currentSensor.i[6].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[7] = (currentSensor.i[7].re ^ 2 + currentSensor.i[7].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[8] = (currentSensor.i[8].re ^ 2 + currentSensor.i[8].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[9] = (currentSensor.i[9].re ^ 2 + currentSensor.i[9].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[10] = (currentSensor.i[10].re ^ 2 + currentSensor.i[10].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[11] = (currentSensor.i[11].re ^ 2 + currentSensor.i[11].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[12] = (currentSensor.i[12].re ^ 2 + currentSensor.i[12].im ^ 2) ^ 0.5;
 laptop_adapter.I_mag[13] = (currentSensor.i[13].re ^ 2 + currentSensor.i[13].im ^ 2) ^ 0.5;
 laptop_adapter.V_mag[1] = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[2] = ((- z.v[2].re) ^ 2 + (- z.v[2].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[3] = ((- z.v[3].re) ^ 2 + (- z.v[3].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[4] = ((- z.v[4].re) ^ 2 + (- z.v[4].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[5] = ((- z.v[5].re) ^ 2 + (- z.v[5].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[6] = ((- z.v[6].re) ^ 2 + (- z.v[6].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[7] = ((- z.v[7].re) ^ 2 + (- z.v[7].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[8] = ((- z.v[8].re) ^ 2 + (- z.v[8].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[9] = ((- z.v[9].re) ^ 2 + (- z.v[9].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[10] = ((- z.v[10].re) ^ 2 + (- z.v[10].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[11] = ((- z.v[11].re) ^ 2 + (- z.v[11].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[12] = ((- z.v[12].re) ^ 2 + (- z.v[12].im) ^ 2) ^ 0.5;
 laptop_adapter.V_mag[13] = ((- z.v[13].re) ^ 2 + (- z.v[13].im) ^ 2) ^ 0.5;
 laptop_adapter.V_arg[2] = Modelica.Math.atan3(- z.v[2].im, - z.v[2].re, 0);
 laptop_adapter.V_arg[3] = Modelica.Math.atan3(- z.v[3].im, - z.v[3].re, 0);
 laptop_adapter.V_arg[4] = Modelica.Math.atan3(- z.v[4].im, - z.v[4].re, 0);
 laptop_adapter.V_arg[5] = Modelica.Math.atan3(- z.v[5].im, - z.v[5].re, 0);
 laptop_adapter.V_arg[6] = Modelica.Math.atan3(- z.v[6].im, - z.v[6].re, 0);
 laptop_adapter.V_arg[7] = Modelica.Math.atan3(- z.v[7].im, - z.v[7].re, 0);
 laptop_adapter.V_arg[8] = Modelica.Math.atan3(- z.v[8].im, - z.v[8].re, 0);
 laptop_adapter.V_arg[9] = Modelica.Math.atan3(- z.v[9].im, - z.v[9].re, 0);
 laptop_adapter.V_arg[10] = Modelica.Math.atan3(- z.v[10].im, - z.v[10].re, 0);
 laptop_adapter.V_arg[11] = Modelica.Math.atan3(- z.v[11].im, - z.v[11].re, 0);
 laptop_adapter.V_arg[12] = Modelica.Math.atan3(- z.v[12].im, - z.v[12].re, 0);
 laptop_adapter.V_arg[13] = Modelica.Math.atan3(- z.v[13].im, - z.v[13].re, 0);
 laptop_adapter.magScale = (currentSensor.i[1].re ^ 2 + currentSensor.i[1].im ^ 2) ^ 0.5;
 laptop_adapter.argAdj[1] = 4.011174689529625 + laptop_adapter.V_arg[1] .* systemDef.hrms[2];
 laptop_adapter.argAdj[2] = 1.450168565960499 + laptop_adapter.V_arg[1] .* systemDef.hrms[3];
 laptop_adapter.argAdj[3] = -1.1075502226650735 + laptop_adapter.V_arg[1] .* systemDef.hrms[4];
 laptop_adapter.argAdj[4] = 2.6203684023114735 + laptop_adapter.V_arg[1] .* systemDef.hrms[5];
 laptop_adapter.argAdj[5] = 0.0753120963493918 + laptop_adapter.V_arg[1] .* systemDef.hrms[6];
 laptop_adapter.argAdj[6] = 3.827672644040883 + laptop_adapter.V_arg[1] .* systemDef.hrms[7];
 laptop_adapter.argAdj[7] = 1.3488113399227557 + laptop_adapter.V_arg[1] .* systemDef.hrms[8];
 laptop_adapter.argAdj[8] = -0.9361140777472652 + laptop_adapter.V_arg[1] .* systemDef.hrms[9];
 laptop_adapter.argAdj[9] = 4.21514766462882 + laptop_adapter.V_arg[1] .* systemDef.hrms[10];
 laptop_adapter.argAdj[10] = 2.355077880795469 + laptop_adapter.V_arg[1] .* systemDef.hrms[11];
 laptop_adapter.argAdj[11] = -0.0788148364525277 + laptop_adapter.V_arg[1] .* systemDef.hrms[12];
 laptop_adapter.argAdj[12] = 3.630875802098702 + laptop_adapter.V_arg[1] .* systemDef.hrms[13];
 laptop_adapter.a[1].re = cos(laptop_adapter.argAdj[1]);
 laptop_adapter.a[1].im = sin(laptop_adapter.argAdj[1]);
 laptop_adapter.a[2].re = cos(laptop_adapter.argAdj[2]);
 laptop_adapter.a[2].im = sin(laptop_adapter.argAdj[2]);
 laptop_adapter.a[3].re = cos(laptop_adapter.argAdj[3]);
 laptop_adapter.a[3].im = sin(laptop_adapter.argAdj[3]);
 laptop_adapter.a[4].re = cos(laptop_adapter.argAdj[4]);
 laptop_adapter.a[4].im = sin(laptop_adapter.argAdj[4]);
 laptop_adapter.a[5].re = cos(laptop_adapter.argAdj[5]);
 laptop_adapter.a[5].im = sin(laptop_adapter.argAdj[5]);
 laptop_adapter.a[6].re = cos(laptop_adapter.argAdj[6]);
 laptop_adapter.a[6].im = sin(laptop_adapter.argAdj[6]);
 laptop_adapter.a[7].re = cos(laptop_adapter.argAdj[7]);
 laptop_adapter.a[7].im = sin(laptop_adapter.argAdj[7]);
 laptop_adapter.a[8].re = cos(laptop_adapter.argAdj[8]);
 laptop_adapter.a[8].im = sin(laptop_adapter.argAdj[8]);
 laptop_adapter.a[9].re = cos(laptop_adapter.argAdj[9]);
 laptop_adapter.a[9].im = sin(laptop_adapter.argAdj[9]);
 laptop_adapter.a[10].re = cos(laptop_adapter.argAdj[10]);
 laptop_adapter.a[10].im = sin(laptop_adapter.argAdj[10]);
 laptop_adapter.a[11].re = cos(laptop_adapter.argAdj[11]);
 laptop_adapter.a[11].im = sin(laptop_adapter.argAdj[11]);
 laptop_adapter.a[12].re = cos(laptop_adapter.argAdj[12]);
 laptop_adapter.a[12].im = sin(laptop_adapter.argAdj[12]);
 laptop_adapter.c[1] = laptop_adapter.magScale * 0.9421865565594479;
 laptop_adapter.c[2] = laptop_adapter.magScale * 0.846418595204449;
 laptop_adapter.c[3] = laptop_adapter.magScale * 0.7174634219299512;
 laptop_adapter.c[4] = laptop_adapter.magScale * 0.568269396387493;
 laptop_adapter.c[5] = laptop_adapter.magScale * 0.4142504288040016;
 laptop_adapter.c[6] = laptop_adapter.magScale * 0.2722289795439818;
 laptop_adapter.c[7] = laptop_adapter.magScale * 0.1499700094183941;
 laptop_adapter.c[8] = laptop_adapter.magScale * 0.060532358446546;
 laptop_adapter.c[9] = laptop_adapter.magScale * 0.0286742846032879;
 laptop_adapter.c[10] = laptop_adapter.magScale * 0.0500554183998412;
 laptop_adapter.c[11] = laptop_adapter.magScale * 0.0574038038345626;
 laptop_adapter.c[12] = laptop_adapter.magScale * 0.0490634253296239;
 z.vFundAbs = (z.v[1].re ^ 2 + z.v[1].im ^ 2) ^ 0.5;
 z.vFundArg = Modelica.Math.atan3(z.v[1].im, z.v[1].re, 0);
 z.iFundAbs = ((- v.i[1].re) ^ 2 + (- v.i[1].im) ^ 2) ^ 0.5;
 z.iFundArg = Modelica.Math.atan3(- v.i[1].im, - v.i[1].re, 0);
 z1.vFundAbs = (z1.v[1].re ^ 2 + (- z.v[1].im) ^ 2) ^ 0.5;
 z1.iFundAbs = (z1.i[1].re ^ 2 + z1.i[1].im ^ 2) ^ 0.5;
 z1.iFundArg = Modelica.Math.atan3(z1.i[1].im, z1.i[1].re, 0);
 currentSensor.iArg[1] = Modelica.Math.atan3(currentSensor.i[1].im, currentSensor.i[1].re, 0);
 currentSensor.iArg[2] = Modelica.Math.atan3(currentSensor.i[2].im, currentSensor.i[2].re, 0);
 currentSensor.iArg[3] = Modelica.Math.atan3(currentSensor.i[3].im, currentSensor.i[3].re, 0);
 currentSensor.iArg[4] = Modelica.Math.atan3(currentSensor.i[4].im, currentSensor.i[4].re, 0);
 currentSensor.iArg[5] = Modelica.Math.atan3(currentSensor.i[5].im, currentSensor.i[5].re, 0);
 currentSensor.iArg[6] = Modelica.Math.atan3(currentSensor.i[6].im, currentSensor.i[6].re, 0);
 currentSensor.iArg[7] = Modelica.Math.atan3(currentSensor.i[7].im, currentSensor.i[7].re, 0);
 currentSensor.iArg[8] = Modelica.Math.atan3(currentSensor.i[8].im, currentSensor.i[8].re, 0);
 currentSensor.iArg[9] = Modelica.Math.atan3(currentSensor.i[9].im, currentSensor.i[9].re, 0);
 currentSensor.iArg[10] = Modelica.Math.atan3(currentSensor.i[10].im, currentSensor.i[10].re, 0);
 currentSensor.iArg[11] = Modelica.Math.atan3(currentSensor.i[11].im, currentSensor.i[11].re, 0);
 currentSensor.iArg[12] = Modelica.Math.atan3(currentSensor.i[12].im, currentSensor.i[12].re, 0);
 currentSensor.iArg[13] = Modelica.Math.atan3(currentSensor.i[13].im, currentSensor.i[13].re, 0);
 laptop_adapter.V_arg[1] = Modelica.Math.atan3(- z.v[1].im, z1.v[1].re, 0);

public
 function Modelica.Math.atan3
  input Real u1;
  input Real u2;
  input Real y0;
  output Real y;
  Real w;
 algorithm
  w := atan2(u1, u2);
  if y0 == 0 then
   y := w;
  else
   y := w + 6.283185307179586 * integer((3.141592653589793 + y0 - w) / 6.283185307179586);
  end if;
  return;
 end Modelica.Math.atan3;

 function Modelica.Utilities.Streams.readMatrixSize
  input String fileName;
  input String matrixName;
  output Integer[:] dim;
 algorithm
  init dim as Integer[2];
  external "C" ModelicaIO_readMatrixSizes(fileName, matrixName, dim);
  return;
 end Modelica.Utilities.Streams.readMatrixSize;

 function Modelica.Utilities.Streams.readRealMatrix
  input String fileName;
  input String matrixName;
  input Integer nrow;
  input Integer ncol;
  input Boolean verboseRead;
  output Real[:,:] matrix;
 algorithm
  init matrix as Real[nrow, ncol];
  external "C" ModelicaIO_readRealMatrix(fileName, matrixName, matrix, size(matrix, 1), size(matrix, 2), verboseRead);
  return;
 end Modelica.Utilities.Streams.readRealMatrix;

 type Modelica.SIunits.Frequency = Real(final quantity = "Frequency",final unit = "Hz");
 type Modelica.SIunits.Angle = Real(final quantity = "Angle",final unit = "rad",displayUnit = "deg");
 type Modelica.SIunits.ElectricPotential = Real(final quantity = "ElectricPotential",final unit = "V");
 type Modelica.SIunits.ElectricCurrent = Real(final quantity = "ElectricCurrent",final unit = "A");
 type Modelica.Blocks.Interfaces.RealOutput = Real;
 type Modelica.SIunits.Power = Real(final quantity = "Power",final unit = "W");
end HPF.Test.Test_Rectifier;

Generating code...
====== Model compiled successfully =======
make -f /home/linuxdev/jmodelica/Makefiles/MakeFile fmume20_
make[1]: Entering directory '/tmp/jmc1425673908801391115out'
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Test_Test_Rectifier_equ.o sources/HPF_Test_Test_Rectifier_equ.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Test_Test_Rectifier_base.o sources/HPF_Test_Test_Rectifier_base.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Test_Test_Rectifier_init_dependent.o sources/HPF_Test_Test_Rectifier_init_dependent.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Test_Test_Rectifier_init_independent.o sources/HPF_Test_Test_Rectifier_init_independent.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -O1 -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Test_Test_Rectifier_funcs.o sources/HPF_Test_Test_Rectifier_funcs.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Test_Test_Rectifier.o sources/HPF_Test_Test_Rectifier.c
gcc -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -I/home/linuxdev/jmodelica/include/RuntimeLibrary -I/home/linuxdev/jmodelica/ThirdParty/FMI/2.0  -I/home/linuxdev/jmodelica/ThirdParty/Sundials/include -c -o HPF_Test_Test_Rectifier_equ_init.o sources/HPF_Test_Test_Rectifier_equ_init.c
mkdir -p binaries/linux64
g++ -shared -Wl,-rpath,'$ORIGIN',--no-undefined -pthread -std=c89 -pedantic -fPIC -msse2 -mfpmath=sse -o binaries/linux64/HPF_Test_Test_Rectifier.so  HPF_Test_Test_Rectifier_equ.o  HPF_Test_Test_Rectifier_base.o  HPF_Test_Test_Rectifier_init_dependent.o  HPF_Test_Test_Rectifier_init_independent.o  HPF_Test_Test_Rectifier_funcs.o  HPF_Test_Test_Rectifier.o  HPF_Test_Test_Rectifier_equ_init.o  -L/home/linuxdev/jmodelica/lib/RuntimeLibrary -lfmi2 -ljmi -ldl "-L/home/linuxdev/jmodelica/lib" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library/linux64/gcc921-9ubuntu2" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library/linux64" -L"/home/linuxdev/jmodelica/ThirdParty/MSL/Modelica/Resources/Library" -lModelicaIO -lModelicaMatIO -lzlib -ljmi_get_set_default -lModelicaIO -lModelicaMatIO -lzlib -ljmi_get_set_default -llapack -lblas -lgfortran -lModelicaExternalC -lzlib -ljmi -L/home/linuxdev/jmodelica/ThirdParty/Sundials/lib -l:libsundials_kinsol.a -l:libsundials_nvecserial.a -L/home/linuxdev/jmodelica/ThirdParty/Minpack/lib -l:libcminpack.a -lstdc++ -lm -l:libsundials_cvode.a
/usr/bin/ld: /home/linuxdev/jmodelica/lib/RuntimeLibrary/libModelicaMatIO.a(ModelicaMatIO.c.o): in function `Mat_VarDelete':
/home/linuxdev/tmp/JModelica.org/ThirdParty/MSL/Modelica/Resources/C-Sources/ModelicaMatIO.c:8521: warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
rm -f  HPF_Test_Test_Rectifier_equ.o  HPF_Test_Test_Rectifier_base.o  HPF_Test_Test_Rectifier_init_dependent.o  HPF_Test_Test_Rectifier_init_independent.o  HPF_Test_Test_Rectifier_funcs.o  HPF_Test_Test_Rectifier.o  HPF_Test_Test_Rectifier_equ_init.o 
make[1]: Leaving directory '/tmp/jmc1425673908801391115out'

